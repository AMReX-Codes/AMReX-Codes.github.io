<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceMOL" kind="namespace" language="C++">
    <compoundname>MOL</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceMOL_1a5faadc1a35e816f7acc88eb769edbb55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MOL::ComputeAofs</definition>
        <argsstring>(amrex::MultiFab &amp;aofs, int aofs_comp, int ncomp, amrex::MultiFab const &amp;state, int state_comp, AMREX_D_DECL(amrex::MultiFab const &amp;umac, amrex::MultiFab const &amp;vmac, amrex::MultiFab const &amp;wmac), AMREX_D_DECL(amrex::MultiFab &amp;xedge, amrex::MultiFab &amp;yedge, amrex::MultiFab &amp;zedge), int edge_comp, bool known_edgestate, AMREX_D_DECL(amrex::MultiFab &amp;xfluxes, amrex::MultiFab &amp;yfluxes, amrex::MultiFab &amp;zfluxes), int fluxes_comp, amrex::MultiFab const &amp;divu, amrex::Vector&lt; amrex::BCRec &gt; const &amp;bcs, amrex::BCRec const *d_bcrec_ptr, amrex::Gpu::DeviceVector&lt; int &gt; &amp;iconserv, amrex::Geometry const &amp;geom, bool is_velocity)</argsstring>
        <name>ComputeAofs</name>
        <param>
          <type>amrex::MultiFab &amp;</type>
          <declname>aofs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aofs_comp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>amrex::MultiFab const &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state_comp</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab const &amp;umac, amrex::MultiFab const &amp;vmac, amrex::MultiFab const &amp;wmac)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab &amp;xedge, amrex::MultiFab &amp;yedge, amrex::MultiFab &amp;zedge)</type>
        </param>
        <param>
          <type>int</type>
          <declname>edge_comp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>known_edgestate</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab &amp;xfluxes, amrex::MultiFab &amp;yfluxes, amrex::MultiFab &amp;zfluxes)</type>
        </param>
        <param>
          <type>int</type>
          <declname>fluxes_comp</declname>
        </param>
        <param>
          <type>amrex::MultiFab const &amp;</type>
          <declname>divu</declname>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type>amrex::BCRec const *</type>
          <declname>d_bcrec_ptr</declname>
        </param>
        <param>
          <type>amrex::Gpu::DeviceVector&lt; int &gt; &amp;</type>
          <declname>iconserv</declname>
        </param>
        <param>
          <type>amrex::Geometry const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MOL/hydro_mol.H" line="9" column="6" declfile="MOL/hydro_mol.H" declline="9" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceMOL_1a7d498da8117ccbcbb7860d0d0b8ecf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MOL::ComputeSyncAofs</definition>
        <argsstring>(amrex::MultiFab &amp;aofs, int aofs_comp, int ncomp, amrex::MultiFab const &amp;state, int state_comp, AMREX_D_DECL(amrex::MultiFab const &amp;umac, amrex::MultiFab const &amp;vmac, amrex::MultiFab const &amp;wmac), AMREX_D_DECL(amrex::MultiFab const &amp;ucorr, amrex::MultiFab const &amp;vcorr, amrex::MultiFab const &amp;wcorr), AMREX_D_DECL(amrex::MultiFab &amp;xedge, amrex::MultiFab &amp;yedge, amrex::MultiFab &amp;zedge), int edge_comp, bool known_edgestate, AMREX_D_DECL(amrex::MultiFab &amp;xfluxes, amrex::MultiFab &amp;yfluxes, amrex::MultiFab &amp;zfluxes), int fluxes_comp, amrex::Vector&lt; amrex::BCRec &gt; const &amp;bcs, amrex::BCRec const *d_bcrec_ptr, amrex::Geometry const &amp;geom, bool is_velocity)</argsstring>
        <name>ComputeSyncAofs</name>
        <param>
          <type>amrex::MultiFab &amp;</type>
          <declname>aofs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aofs_comp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>amrex::MultiFab const &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state_comp</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab const &amp;umac, amrex::MultiFab const &amp;vmac, amrex::MultiFab const &amp;wmac)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab const &amp;ucorr, amrex::MultiFab const &amp;vcorr, amrex::MultiFab const &amp;wcorr)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab &amp;xedge, amrex::MultiFab &amp;yedge, amrex::MultiFab &amp;zedge)</type>
        </param>
        <param>
          <type>int</type>
          <declname>edge_comp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>known_edgestate</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab &amp;xfluxes, amrex::MultiFab &amp;yfluxes, amrex::MultiFab &amp;zfluxes)</type>
        </param>
        <param>
          <type>int</type>
          <declname>fluxes_comp</declname>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type>amrex::BCRec const *</type>
          <declname>d_bcrec_ptr</declname>
        </param>
        <param>
          <type>amrex::Geometry const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MOL/hydro_mol.H" line="30" column="6" declfile="MOL/hydro_mol.H" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceMOL_1a52c37e57c6f658058bac4bc5232824fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MOL::ComputeEdgeState</definition>
        <argsstring>(amrex::Box const &amp;a_bx, AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;xedge, amrex::Array4&lt; amrex::Real &gt; const &amp;yedge, amrex::Array4&lt; amrex::Real &gt; const &amp;zedge), amrex::Array4&lt; amrex::Real const &gt; const &amp;q, const int ncomp, AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;umac, amrex::Array4&lt; amrex::Real const &gt; const &amp;vmac, amrex::Array4&lt; amrex::Real const &gt; const &amp;wmac), amrex::Box const &amp;domain, amrex::Vector&lt; amrex::BCRec &gt; const &amp;bcs, amrex::BCRec const *d_bcrec_ptr, bool is_velocity)</argsstring>
        <name>ComputeEdgeState</name>
        <param>
          <type>amrex::Box const &amp;</type>
          <declname>a_bx</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;xedge, amrex::Array4&lt; amrex::Real &gt; const &amp;yedge, amrex::Array4&lt; amrex::Real &gt; const &amp;zedge)</type>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real const &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;umac, amrex::Array4&lt; amrex::Real const &gt; const &amp;vmac, amrex::Array4&lt; amrex::Real const &gt; const &amp;wmac)</type>
        </param>
        <param>
          <type>amrex::Box const &amp;</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type>amrex::BCRec const *</type>
          <declname>d_bcrec_ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MOL/hydro_mol.H" line="52" column="6" declfile="MOL/hydro_mol.H" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceMOL_1acdde2acf756048b8ef0bca332e4bf748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MOL::ExtrapVelToFaces</definition>
        <argsstring>(const amrex::MultiFab &amp;vel, AMREX_D_DECL(amrex::MultiFab &amp;umac, amrex::MultiFab &amp;vmac, amrex::MultiFab &amp;wmac), const amrex::Geometry &amp;a_geom, amrex::Vector&lt; amrex::BCRec &gt; const &amp;h_bcrec, const amrex::BCRec *d_bcrec)</argsstring>
        <name>ExtrapVelToFaces</name>
        <param>
          <type>const amrex::MultiFab &amp;</type>
          <declname>vel</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab &amp;umac, amrex::MultiFab &amp;vmac, amrex::MultiFab &amp;wmac)</type>
        </param>
        <param>
          <type>const amrex::Geometry &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>h_bcrec</declname>
        </param>
        <param>
          <type>const amrex::BCRec *</type>
          <declname>d_bcrec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MOL/hydro_mol.H" line="67" column="6" declfile="MOL/hydro_mol.H" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceMOL_1acc57b4333f30b9e781ad5c8974b05aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MOL::ExtrapVelToFacesBox</definition>
        <argsstring>(AMREX_D_DECL(amrex::Box const &amp;ubx, amrex::Box const &amp;vbx, amrex::Box const &amp;wbx), AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;u, amrex::Array4&lt; amrex::Real &gt; const &amp;v, amrex::Array4&lt; amrex::Real &gt; const &amp;w), amrex::Array4&lt; amrex::Real const &gt; const &amp;vcc, const amrex::Geometry &amp;geom, amrex::Vector&lt; amrex::BCRec &gt; const &amp;h_bcrec, const amrex::BCRec *d_bcrec)</argsstring>
        <name>ExtrapVelToFacesBox</name>
        <param>
          <type>AMREX_D_DECL(amrex::Box const &amp;ubx, amrex::Box const &amp;vbx, amrex::Box const &amp;wbx)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;u, amrex::Array4&lt; amrex::Real &gt; const &amp;v, amrex::Array4&lt; amrex::Real &gt; const &amp;w)</type>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real const &gt; const &amp;</type>
          <declname>vcc</declname>
        </param>
        <param>
          <type>const amrex::Geometry &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>h_bcrec</declname>
        </param>
        <param>
          <type>const amrex::BCRec *</type>
          <declname>d_bcrec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MOL/hydro_mol.H" line="75" column="6" declfile="MOL/hydro_mol.H" declline="75" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="MOL/hydro_mol.H" line="7" column="1"/>
  </compounddef>
</doxygen>
