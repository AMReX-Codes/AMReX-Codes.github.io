<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceHydroUtils" kind="namespace" language="C++">
    <compoundname>HydroUtils</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceHydroUtils_1a7e89c7d05b0b38b2829c82c198cdf052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HydroUtils::ComputeFluxesOnBoxFromState</definition>
        <argsstring>(amrex::Box const &amp;bx, int ncomp, amrex::MFIter &amp;mfi, amrex::Array4&lt; amrex::Real const &gt; const &amp;q, AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;flux_x, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_y, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_z), AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;xface, amrex::Array4&lt; amrex::Real &gt; const &amp;yface, amrex::Array4&lt; amrex::Real &gt; const &amp;zface), AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;umac, amrex::Array4&lt; amrex::Real const &gt; const &amp;vmac, amrex::Array4&lt; amrex::Real const &gt; const &amp;wmac), amrex::Array4&lt; amrex::Real const &gt; const &amp;divu, amrex::Array4&lt; amrex::Real const &gt; const &amp;fq, amrex::Geometry geom, amrex::Real l_dt, amrex::Vector&lt; amrex::BCRec &gt; const &amp;h_bcrec, const amrex::BCRec *d_bcrec, int const *iconserv, bool godunov_use_ppm, bool godunov_use_forces_in_trans, bool is_velocity, bool fluxes_are_area_weighted, std::string &amp;advection_type)</argsstring>
        <name>ComputeFluxesOnBoxFromState</name>
        <param>
          <type>amrex::Box const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>amrex::MFIter &amp;</type>
          <declname>mfi</declname>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real const &gt; const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;flux_x, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_y, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_z)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;xface, amrex::Array4&lt; amrex::Real &gt; const &amp;yface, amrex::Array4&lt; amrex::Real &gt; const &amp;zface)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;umac, amrex::Array4&lt; amrex::Real const &gt; const &amp;vmac, amrex::Array4&lt; amrex::Real const &gt; const &amp;wmac)</type>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real const &gt; const &amp;</type>
          <declname>divu</declname>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real const &gt; const &amp;</type>
          <declname>fq</declname>
        </param>
        <param>
          <type>amrex::Geometry</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>l_dt</declname>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>h_bcrec</declname>
        </param>
        <param>
          <type>const amrex::BCRec *</type>
          <declname>d_bcrec</declname>
        </param>
        <param>
          <type>int const *</type>
          <declname>iconserv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>godunov_use_ppm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>godunov_use_forces_in_trans</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_velocity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fluxes_are_area_weighted</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>advection_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils.H" line="15" column="1" declfile="Utils/hydro_utils.H" declline="15" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHydroUtils_1a56e04be6f4744620d42f9f3bda0b4c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HydroUtils::ExtrapVelToFaces</definition>
        <argsstring>(amrex::MultiFab const &amp;vel, amrex::MultiFab const &amp;vel_forces, AMREX_D_DECL(amrex::MultiFab &amp;u_mac, amrex::MultiFab &amp;v_mac, amrex::MultiFab &amp;w_mac), amrex::Vector&lt; amrex::BCRec &gt; const &amp;h_bcrec, amrex::BCRec const *d_bcrec, amrex::Geometry &amp;geom, amrex::Real l_dt, bool godunov_use_ppm, bool godunov_use_forces_in_trans, std::string advection_type)</argsstring>
        <name>ExtrapVelToFaces</name>
        <param>
          <type>amrex::MultiFab const &amp;</type>
          <declname>vel</declname>
        </param>
        <param>
          <type>amrex::MultiFab const &amp;</type>
          <declname>vel_forces</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::MultiFab &amp;u_mac, amrex::MultiFab &amp;v_mac, amrex::MultiFab &amp;w_mac)</type>
        </param>
        <param>
          <type>amrex::Vector&lt; amrex::BCRec &gt; const &amp;</type>
          <declname>h_bcrec</declname>
        </param>
        <param>
          <type>amrex::BCRec const *</type>
          <declname>d_bcrec</declname>
        </param>
        <param>
          <type>amrex::Geometry &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>l_dt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>godunov_use_ppm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>godunov_use_forces_in_trans</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>advection_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils.H" line="41" column="1" bodyfile="Utils/hydro_extrap_vel_to_faces.cpp" bodystart="13" bodyend="52" declfile="Utils/hydro_utils.H" declline="41" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHydroUtils_1ab70f040557a658e70ba076c9d105bab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HydroUtils::ComputeFluxes</definition>
        <argsstring>(amrex::Box const &amp;bx, AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;flux_x, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_y, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_z), AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;umac, amrex::Array4&lt; amrex::Real const &gt; const &amp;vmac, amrex::Array4&lt; amrex::Real const &gt; const &amp;wmac), AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;xface, amrex::Array4&lt; amrex::Real const &gt; const &amp;yface, amrex::Array4&lt; amrex::Real const &gt; const &amp;zface), amrex::Geometry const &amp;geom, const int ncomp, bool fluxes_are_area_weighted)</argsstring>
        <name>ComputeFluxes</name>
        <param>
          <type>amrex::Box const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real &gt; const &amp;flux_x, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_y, amrex::Array4&lt; amrex::Real &gt; const &amp;flux_z)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;umac, amrex::Array4&lt; amrex::Real const &gt; const &amp;vmac, amrex::Array4&lt; amrex::Real const &gt; const &amp;wmac)</type>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;xface, amrex::Array4&lt; amrex::Real const &gt; const &amp;yface, amrex::Array4&lt; amrex::Real const &gt; const &amp;zface)</type>
        </param>
        <param>
          <type>amrex::Geometry const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fluxes_are_area_weighted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils.H" line="56" column="6" declfile="Utils/hydro_utils.H" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHydroUtils_1a0f59801cda64952e4b63910b1f42c455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HydroUtils::ComputeDivergence</definition>
        <argsstring>(amrex::Box const &amp;bx, amrex::Array4&lt; amrex::Real &gt; const &amp;div, AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;flux_x, amrex::Array4&lt; amrex::Real const &gt; const &amp;flux_y, amrex::Array4&lt; amrex::Real const &gt; const &amp;flux_z), const int ncomp, amrex::Geometry const &amp;geom, const amrex::Real mult, bool fluxes_are_area_weighted)</argsstring>
        <name>ComputeDivergence</name>
        <param>
          <type>amrex::Box const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real &gt; const &amp;</type>
          <declname>div</declname>
        </param>
        <param>
          <type>AMREX_D_DECL(amrex::Array4&lt; amrex::Real const &gt; const &amp;flux_x, amrex::Array4&lt; amrex::Real const &gt; const &amp;flux_y, amrex::Array4&lt; amrex::Real const &gt; const &amp;flux_z)</type>
        </param>
        <param>
          <type>const int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>amrex::Geometry const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>mult</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fluxes_are_area_weighted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils.H" line="69" column="6" declfile="Utils/hydro_utils.H" declline="69" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHydroUtils_1aca84dcab64939bcf8ebf0fc65a262f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HydroUtils::create_umac_grown</definition>
        <argsstring>(int lev, int nGrow, amrex::BoxArray &amp;fine_grids, const amrex::Geometry &amp;fine_geom, const amrex::Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt; u_mac_crse, const amrex::Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt; u_mac_fine, const amrex::IntVect &amp;crse_ratio)</argsstring>
        <name>create_umac_grown</name>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>amrex::BoxArray &amp;</type>
          <declname>fine_grids</declname>
        </param>
        <param>
          <type>const amrex::Geometry &amp;</type>
          <declname>fine_geom</declname>
        </param>
        <param>
          <type>const amrex::Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt;</type>
          <declname>u_mac_crse</declname>
        </param>
        <param>
          <type>const amrex::Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt;</type>
          <declname>u_mac_fine</declname>
        </param>
        <param>
          <type>const amrex::IntVect &amp;</type>
          <declname>crse_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils.H" line="137" column="1" declfile="Utils/hydro_utils.H" declline="137" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Utils/hydro_utils.H" line="12" column="1"/>
  </compounddef>
</doxygen>
