<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hydro__utils__K_8H" kind="file" language="C++">
    <compoundname>hydro_utils_K.H</compoundname>
    <includes local="no">AMReX_REAL.H</includes>
    <includes local="no">AMReX_FArrayBox.H</includes>
    <includes local="no">cmath</includes>
    <includedby refid="hydro__create__umac__grown_8cpp" local="no">Utils/hydro_create_umac_grown.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>AMReX_FArrayBox.H</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>Utils/hydro_utils_K.H</label>
        <link refid="hydro__utils__K_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_REAL.H</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Utils/hydro_create_umac_grown.cpp</label>
        <link refid="hydro__create__umac__grown_8cpp"/>
      </node>
      <node id="1">
        <label>Utils/hydro_utils_K.H</label>
        <link refid="hydro__utils__K_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="hydro__utils__K_8H_1acbea19e63a28a7c61e04f9df8346f045" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void face_interp_x</definition>
        <argsstring>(int i, int j, int k, int n, amrex::Array4&lt; amrex::Real &gt; const &amp;fine, amrex::GpuArray&lt; int, AMREX_SPACEDIM &gt; const &amp;ratio) noexcept</argsstring>
        <name>face_interp_x</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real &gt; const &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>amrex::GpuArray&lt; int, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils_K.H" line="14" column="1" bodyfile="Utils/hydro_utils_K.H" bodystart="14" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="hydro__utils__K_8H_1abc085031b177ff3d0cb2f30cb01550f4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void face_interp_y</definition>
        <argsstring>(int i, int j, int k, int n, amrex::Array4&lt; amrex::Real &gt; const &amp;fine, amrex::GpuArray&lt; int, AMREX_SPACEDIM &gt; const &amp;ratio) noexcept</argsstring>
        <name>face_interp_y</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real &gt; const &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>amrex::GpuArray&lt; int, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils_K.H" line="29" column="1" bodyfile="Utils/hydro_utils_K.H" bodystart="29" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="hydro__utils__K_8H_1a6c520093f23d14adc29724056ef6c600" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void face_interp_z</definition>
        <argsstring>(int i, int j, int k, int n, amrex::Array4&lt; amrex::Real &gt; const &amp;fine, amrex::GpuArray&lt; int, AMREX_SPACEDIM &gt; const &amp;ratio) noexcept</argsstring>
        <name>face_interp_z</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>amrex::Array4&lt; amrex::Real &gt; const &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>amrex::GpuArray&lt; int, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/hydro_utils_K.H" line="44" column="1" bodyfile="Utils/hydro_utils_K.H" bodystart="44" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>HYDRO_UTILS_K_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HYDRO_UTILS_K_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_REAL.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_FArrayBox.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>linear<sp/>in<sp/>dir,<sp/>pc<sp/>transverse<sp/>to<sp/>dir,<sp/>leave<sp/>alone<sp/>the<sp/>fine<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lining<sp/>up<sp/>with<sp/>coarse<sp/>edges--assume<sp/>these<sp/>have<sp/>been<sp/>set<sp/>to<sp/>hold<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>you<sp/>want<sp/>to<sp/>interpolate<sp/>to<sp/>the<sp/>rest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">AMREX_GPU_HOST_DEVICE<sp/>AMREX_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="hydro__utils__K_8H_1acbea19e63a28a7c61e04f9df8346f045" refkind="member"><highlight class="normal"><ref refid="hydro__utils__K_8H_1acbea19e63a28a7c61e04f9df8346f045" kindref="member">face_interp_x</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>amrex::Array4&lt;amrex::Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fine,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::GpuArray&lt;int,AMREX_SPACEDIM&gt;<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ratio)<sp/>noexcept</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rmod<sp/>=<sp/>i%ratio[0];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rmod<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>amrex::coarsen(i,ratio[0]);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>w<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">amrex::Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i-ii*ratio[0])<sp/>*<sp/>(amrex::Real(1.)/ratio[0]);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>i<sp/>&lt;<sp/>0<sp/>?<sp/>i-(ratio[0]+rmod)<sp/>:<sp/>i+(ratio[0]-rmod);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fine(i,j,k,n)<sp/>=<sp/>(amrex::Real(1.)-w)<sp/>*<sp/>fine(i-rmod,j,k,n)<sp/>+<sp/>w<sp/>*<sp/>fine(ii,j,k,n);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">AMREX_GPU_HOST_DEVICE<sp/>AMREX_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="hydro__utils__K_8H_1abc085031b177ff3d0cb2f30cb01550f4" refkind="member"><highlight class="normal"><ref refid="hydro__utils__K_8H_1abc085031b177ff3d0cb2f30cb01550f4" kindref="member">face_interp_y</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>amrex::Array4&lt;amrex::Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fine,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::GpuArray&lt;int,AMREX_SPACEDIM&gt;<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ratio)<sp/>noexcept</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rmod<sp/>=<sp/>j%ratio[1];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rmod<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>amrex::coarsen(j,ratio[1]);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>w<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">amrex::Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(j-jj*ratio[1])<sp/>*<sp/>(amrex::Real(1.)/ratio[1]);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>j<sp/>&lt;<sp/>0<sp/>?<sp/>j-(ratio[1]+rmod)<sp/>:<sp/>j+(ratio[1]-rmod);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fine(i,j,k,n)<sp/>=<sp/>(amrex::Real(1.)-w)<sp/>*<sp/>fine(i,j-rmod,k,n)<sp/>+<sp/>w<sp/>*<sp/>fine(i,jj,k,n);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">AMREX_GPU_HOST_DEVICE<sp/>AMREX_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="hydro__utils__K_8H_1a6c520093f23d14adc29724056ef6c600" refkind="member"><highlight class="normal"><ref refid="hydro__utils__K_8H_1a6c520093f23d14adc29724056ef6c600" kindref="member">face_interp_z</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>amrex::Array4&lt;amrex::Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fine,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::GpuArray&lt;int,AMREX_SPACEDIM&gt;<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ratio)<sp/>noexcept</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rmod<sp/>=<sp/>k%ratio[2];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rmod<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>amrex::coarsen(k,ratio[2]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>w<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">amrex::Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(k-kk*ratio[2])<sp/>*<sp/>(amrex::Real(1.)/ratio[2]);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kk<sp/>=<sp/>k<sp/>&lt;<sp/>0<sp/>?<sp/>k-(ratio[2]+rmod)<sp/>:<sp/>k+(ratio[2]-rmod);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fine(i,j,k,n)<sp/>=<sp/>(amrex::Real(1.)-w)<sp/>*<sp/>fine(i,j,k-rmod,n)<sp/>+<sp/>w<sp/>*<sp/>fine(i,j,kk,n);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Utils/hydro_utils_K.H"/>
  </compounddef>
</doxygen>
