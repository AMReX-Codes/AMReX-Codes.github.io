<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceamrex_1_1NonLocalBC" kind="namespace" language="C++">
    <compoundname>amrex::NonLocalBC</compoundname>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1CommHandler" prot="public">amrex::NonLocalBC::CommHandler</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1PolarFn" prot="public">amrex::NonLocalBC::PolarFn</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1PolarFn2" prot="public">amrex::NonLocalBC::PolarFn2</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1Rotate180Fn" prot="public">amrex::NonLocalBC::Rotate180Fn</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1Rotate90ClockWise" prot="public">amrex::NonLocalBC::Rotate90ClockWise</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1Rotate90CounterClockWise" prot="public">amrex::NonLocalBC::Rotate90CounterClockWise</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1Rotate90DstToSrc" prot="public">amrex::NonLocalBC::Rotate90DstToSrc</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1ac572ffb29de7038f4296072c1ecfb79d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; <ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab</ref>&lt; FAB &gt;::value &gt;</type>
        <definition>amrex::EnableIf_t&lt; IsBaseFab&lt; FAB &gt;::value &gt; amrex::NonLocalBC::Rotate90</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, int scomp, int ncomp, IntVect const &amp;nghost, Box const &amp;domain)</argsstring>
        <name>Rotate90</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="465" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1a5dcdf407a85926a26047bf2189852fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; <ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab</ref>&lt; FAB &gt;::value &gt;</type>
        <definition>amrex::EnableIf_t&lt; IsBaseFab&lt; FAB &gt;::value &gt; amrex::NonLocalBC::Rotate90</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, Box const &amp;domain)</argsstring>
        <name>Rotate90</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="506" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1ac1490f123094d9379d2b32e133c8a067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; <ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab</ref>&lt; FAB &gt;::value &gt;</type>
        <definition>amrex::EnableIf_t&lt; IsBaseFab&lt; FAB &gt;::value &gt; amrex::NonLocalBC::Rotate180</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, int scomp, int ncomp, IntVect const &amp;nghost, Box const &amp;domain)</argsstring>
        <name>Rotate180</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="513" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1a28488fd99dc045fee8caae1056997954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; <ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab</ref>&lt; FAB &gt;::value &gt;</type>
        <definition>amrex::EnableIf_t&lt; IsBaseFab&lt; FAB &gt;::value &gt; amrex::NonLocalBC::Rotate180</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, Box const &amp;domain)</argsstring>
        <name>Rotate180</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="539" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1a0a70c208adf8ed71ecbea53ddbbc8e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; <ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab</ref>&lt; FAB &gt;::value &gt;</type>
        <definition>amrex::EnableIf_t&lt; IsBaseFab&lt; FAB &gt;::value &gt; amrex::NonLocalBC::FillPolar</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, int scomp, int ncomp, IntVect const &amp;nghost, Box const &amp;domain)</argsstring>
        <name>FillPolar</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="39" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="546" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1a41dfffd972b20388e9e817fe9bda7b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; <ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab</ref>&lt; FAB &gt;::value &gt;</type>
        <definition>amrex::EnableIf_t&lt; IsBaseFab&lt; FAB &gt;::value &gt; amrex::NonLocalBC::FillPolar</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, Box const &amp;domain)</argsstring>
        <name>FillPolar</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="574" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1a16b77f1c78a9f5d6b9e6e1003f6fde83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
          <param>
            <type>class DTOS</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NonLocalBC::local_copy_cpu</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, int scomp, int ncomp, FabArrayBase::CommMetaData const &amp;cmd, DTOS dtos)</argsstring>
        <name>local_copy_cpu</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref> const &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>DTOS</type>
          <declname>dtos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" line="160" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="160" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1abe1696ed6489a881f0a7cfc4ef0e1ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
          <param>
            <type>class DTOS</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NonLocalBC::unpack_recv_buffer_cpu</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, int scomp, int ncomp, Vector&lt; char *&gt; const &amp;recv_data, Vector&lt; std::size_t &gt; const &amp;recv_size, Vector&lt; FabArrayBase::CopyComTagsContainer const *&gt; const &amp;recv_cctc, DTOS dtos)</argsstring>
        <name>unpack_recv_buffer_cpu</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char *&gt; const &amp;</type>
          <declname>recv_data</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt; const &amp;</type>
          <declname>recv_size</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FabArrayBase_1a1bb6a09ada00b5b7a900d8fecbf92e3c" kindref="member">FabArrayBase::CopyComTagsContainer</ref> const *&gt; const &amp;</type>
          <declname>recv_cctc</declname>
        </param>
        <param>
          <type>DTOS</type>
          <declname>dtos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" line="183" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="183" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1NonLocalBC_1a9ceb33878a763d9be662a21559d65463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FAB</type>
          </param>
          <param>
            <type>class DTOS</type>
          </param>
        </templateparamlist>
        <type><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler" kindref="compound">CommHandler</ref></type>
        <definition>CommHandler amrex::NonLocalBC::Comm_nowait</definition>
        <argsstring>(FabArray&lt; FAB &gt; &amp;mf, int scomp, int ncomp, FabArrayBase::CommMetaData const &amp;cmd, DTOS dtos)</argsstring>
        <name>Comm_nowait</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref> const &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>DTOS</type>
          <declname>dtos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" line="332" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H" bodystart="332" bodyend="412"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="7" column="1"/>
  </compounddef>
</doxygen>
