<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1ParticleCopyOp" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleCopyOp</compoundname>
    <includes refid="AMReX__ParticleCommunication_8H" local="no">AMReX_ParticleCommunication.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyOp_1a5fbf90399c57c4fb121c1aac5ac825d7" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::ParticleCopyOp::m_boxes</definition>
        <argsstring></argsstring>
        <name>m_boxes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="55" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyOp_1a6bcb299fb24ae49438d9aff35ff1fee5" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::ParticleCopyOp::m_levels</definition>
        <argsstring></argsstring>
        <name>m_levels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="56" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyOp_1a8f1e282c58e59fdc95a3343a81ff0517" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::ParticleCopyOp::m_src_indices</definition>
        <argsstring></argsstring>
        <name>m_src_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="57" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyOp_1a3486942c2721d9199b20c57461b5d31a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;IntVect&gt; &gt; &gt; amrex::ParticleCopyOp::m_periodic_shift</definition>
        <argsstring></argsstring>
        <name>m_periodic_shift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="58" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCopyOp_1a2a29dbb728926b7a93d64cfd79deae89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyOp::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="60" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="6" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyOp_1a069c7556dbda11100b395bd699005513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyOp::setNumLevels</definition>
        <argsstring>(const int num_levels)</argsstring>
        <name>setNumLevels</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="62" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyOp_1a735fac73ae176c6e53ed172b8d122774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyOp::resize</definition>
        <argsstring>(const int gid, const int lev, const int size)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="64" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="22" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyOp_1afe3bdec37638cdbf1a4ffbd2538bf03e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleCopyOp::numCopies</definition>
        <argsstring>(const int gid, const int lev) const</argsstring>
        <name>numCopies</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="66" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="66" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4134">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4132">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4133" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4133">
        <label>std::vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt;, std::allocator&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="4131">
        <label>amrex::ParticleCopyOp</label>
        <link refid="structamrex_1_1ParticleCopyOp"/>
        <childnode refid="4132" relation="usage">
          <edgelabel>m_levels</edgelabel>
          <edgelabel>m_boxes</edgelabel>
          <edgelabel>m_src_indices</edgelabel>
        </childnode>
        <childnode refid="4134" relation="usage">
          <edgelabel>m_periodic_shift</edgelabel>
        </childnode>
      </node>
      <node id="4135">
        <label>std::vector&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt;, std::allocator&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="54" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="53" bodyend="72"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleCopyOp_1a2a29dbb728926b7a93d64cfd79deae89" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>clear</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1a5fbf90399c57c4fb121c1aac5ac825d7" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>m_boxes</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1a6bcb299fb24ae49438d9aff35ff1fee5" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>m_levels</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1a3486942c2721d9199b20c57461b5d31a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>m_periodic_shift</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1a8f1e282c58e59fdc95a3343a81ff0517" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>m_src_indices</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1afe3bdec37638cdbf1a4ffbd2538bf03e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>numCopies</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1a735fac73ae176c6e53ed172b8d122774" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>resize</name></member>
      <member refid="structamrex_1_1ParticleCopyOp_1a069c7556dbda11100b395bd699005513" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyOp</scope><name>setNumLevels</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
