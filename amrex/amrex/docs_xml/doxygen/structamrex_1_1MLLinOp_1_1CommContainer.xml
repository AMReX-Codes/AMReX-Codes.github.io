<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1MLLinOp_1_1CommContainer" kind="struct" language="C++" prot="protected">
    <compoundname>amrex::MLLinOp::CommContainer</compoundname>
    <includes refid="AMReX__MLLinOp_8H" local="no">AMReX_MLLinOp.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1MLLinOp_1_1CommContainer_1a772c93e540a8c4a0e75b5874e09a0f60" prot="public" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::MLLinOp::CommContainer::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="309" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" bodystart="309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1MLLinOp_1_1CommContainer_1a8f1b7a4c500995611703e56e66931428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MLLinOp::CommContainer::CommContainer</definition>
        <argsstring>(MPI_Comm m) noexcept</argsstring>
        <name>CommContainer</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="310" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MLLinOp_1_1CommContainer_1a60804da348a4b69619286dc0867f39e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLLinOp::CommContainer::CommContainer</definition>
        <argsstring>(const CommContainer &amp;)=delete</argsstring>
        <name>CommContainer</name>
        <param>
          <type>const <ref refid="structamrex_1_1MLLinOp_1_1CommContainer" kindref="compound">CommContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MLLinOp_1_1CommContainer_1a186857eb564ead75427bed97573e3283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLLinOp::CommContainer::CommContainer</definition>
        <argsstring>(CommContainer &amp;&amp;)=delete</argsstring>
        <name>CommContainer</name>
        <param>
          <type><ref refid="structamrex_1_1MLLinOp_1_1CommContainer" kindref="compound">CommContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MLLinOp_1_1CommContainer_1a1dd9344cd7ef74f6a8715eb79ab4f32a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLLinOp::CommContainer::operator=</definition>
        <argsstring>(const CommContainer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1MLLinOp_1_1CommContainer" kindref="compound">CommContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MLLinOp_1_1CommContainer_1abd769793d1c4df11fa4dc6fa2e9e660f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLLinOp::CommContainer::operator=</definition>
        <argsstring>(CommContainer &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1MLLinOp_1_1CommContainer" kindref="compound">CommContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MLLinOp_1_1CommContainer_1a3cfdc93d63585946dd3a1aa9c1f47b1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MLLinOp::CommContainer::~CommContainer</definition>
        <argsstring>()</argsstring>
        <name>~CommContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="315" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" bodystart="315" bodyend="319"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" line="308" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H" bodystart="308" bodyend="320"/>
    <listofallmembers>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1a772c93e540a8c4a0e75b5874e09a0f60" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>comm</name></member>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1a8f1b7a4c500995611703e56e66931428" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>CommContainer</name></member>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1a60804da348a4b69619286dc0867f39e0" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>CommContainer</name></member>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1a186857eb564ead75427bed97573e3283" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>CommContainer</name></member>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1a1dd9344cd7ef74f6a8715eb79ab4f32a" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>operator=</name></member>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1abd769793d1c4df11fa4dc6fa2e9e660f" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>operator=</name></member>
      <member refid="structamrex_1_1MLLinOp_1_1CommContainer_1a3cfdc93d63585946dd3a1aa9c1f47b1e" prot="public" virt="non-virtual"><scope>amrex::MLLinOp::CommContainer</scope><name>~CommContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
