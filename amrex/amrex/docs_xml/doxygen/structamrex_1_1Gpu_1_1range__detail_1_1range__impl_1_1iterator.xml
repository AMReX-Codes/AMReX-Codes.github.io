<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Gpu::range_detail::range_impl::iterator</compoundname>
    <includes refid="AMReX__GpuRange_8H" local="no">AMReX_GpuRange.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a82d4fcf773cefe563a8c7e2ede1ffc27" prot="private" static="no" mutable="no">
        <type>T const  &amp;</type>
        <definition>T const&amp; amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::mi_b</definition>
        <argsstring></argsstring>
        <name>mi_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="88" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a50a86c9754189bac7fe0cc64355a3108" prot="private" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::mi_i</definition>
        <argsstring></argsstring>
        <name>mi_i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="89" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1ae307cb5aa95e90cc014fdaab70c82873" prot="private" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::mi_s</definition>
        <argsstring></argsstring>
        <name>mi_s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a7986f1b8dd09b767356976ae7bfa0d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(T const &amp;b, Long i, Long s) noexcept</argsstring>
        <name>iterator</name>
        <param>
          <type>T const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a2e2e9f92ab70561863bc24cc7453a46f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE void amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="79" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a8aabc0941165754bb046bcde35674e46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE bool amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::operator!=</definition>
        <argsstring>(iterator const &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator" kindref="compound">iterator</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="82" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a4fbe5d48fc816218c5458a3ca0bbce81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> T</type>
        <definition>AMREX_GPU_HOST_DEVICE T amrex::Gpu::range_detail::range_impl&lt; T &gt;::iterator::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="85" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="85" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="74" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="73" bodyend="91"/>
    <listofallmembers>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a7986f1b8dd09b767356976ae7bfa0d17" prot="public" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>iterator</name></member>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a82d4fcf773cefe563a8c7e2ede1ffc27" prot="private" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>mi_b</name></member>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a50a86c9754189bac7fe0cc64355a3108" prot="private" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>mi_i</name></member>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1ae307cb5aa95e90cc014fdaab70c82873" prot="private" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>mi_s</name></member>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a8aabc0941165754bb046bcde35674e46" prot="public" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a4fbe5d48fc816218c5458a3ca0bbce81" prot="public" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>operator*</name></member>
      <member refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl_1_1iterator_1a2e2e9f92ab70561863bc24cc7453a46f" prot="public" virt="non-virtual"><scope>amrex::Gpu::range_detail::range_impl::iterator</scope><name>operator++</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
