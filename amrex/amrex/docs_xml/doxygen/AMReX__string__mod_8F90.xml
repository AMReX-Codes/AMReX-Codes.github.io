<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__string__mod_8F90" kind="file" language="Fortran">
    <compoundname>AMReX_string_mod.F90</compoundname>
    <innerclass refid="structamrex__string__module_1_1amrex__string" prot="public">amrex_string_module::amrex_string</innerclass>
    <innernamespace refid="namespaceamrex__string__module">amrex_string_module</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="namespaceamrex__string__module" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">module</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__string__module" kindref="compound">amrex_string_module</ref></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal">iso_c_binding</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">character(kind=c_char)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/>::<sp/><ref refid="namespaceamrex__string__module_1a624a8f56ebfb3afaeb6658ef1c343616" kindref="member">amrex_c_null_char_array</ref>(1)<sp/>=<sp/>(/<sp/>c_null_char<sp/>/)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structamrex__string__module_1_1amrex__string" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::<sp/><ref refid="structamrex__string__module_1_1amrex__string" kindref="compound">amrex_string</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(kind=c_char)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/>::<sp/>data(:)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>end<sp/>type<sp/></highlight><highlight class="normal"><ref refid="structamrex__string__module_1_1amrex__string" kindref="compound">amrex_string</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/><ref refid="namespaceamrex__string__module_1a0bf8f20010cb63d36d70475cce439c7d" kindref="member">amrex_string_f_to_c</ref>,<sp/><ref refid="namespaceamrex__string__module_1a959bc74ecd938061a024fb0d210facad" kindref="member">amrex_string_c_to_f</ref>,<sp/><ref refid="namespaceamrex__string__module_1a8661803d88bd3264e542f0f1362406e1" kindref="member">amrex_string_build</ref>,<sp/><ref refid="namespaceamrex__string__module_1a4c4d4d30474688b40ff24d73c6d93073" kindref="member">amrex_string_f_to_lower</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>function<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a0bf8f20010cb63d36d70475cce439c7d" kindref="member">amrex_string_f_to_c</ref><sp/>(fstr)<sp/></highlight><highlight class="keyword">result</highlight><highlight class="normal">(cstr)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(*)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/>::<sp/>fstr</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(kind=c_char)</highlight><highlight class="normal"><sp/>::<sp/>cstr(len_trim(fstr)+1)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>::<sp/>i,<sp/>n</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len_trim(fstr)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1,<sp/>n</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstr(i)<sp/>=<sp/>fstr(i:i)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cstr(n+1)<sp/>=<sp/>c_null_char</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>end<sp/>function<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a0bf8f20010cb63d36d70475cce439c7d" kindref="member">amrex_string_f_to_c</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>function<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a959bc74ecd938061a024fb0d210facad" kindref="member">amrex_string_c_to_f</ref><sp/>(cstr)<sp/></highlight><highlight class="keyword">result</highlight><highlight class="normal">(fstr)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(kind=c_char)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/>::<sp/>cstr(:)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=size(cstr)-1)</highlight><highlight class="normal"><sp/>::<sp/>fstr</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>::<sp/>i,<sp/>n</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">size</highlight><highlight class="normal">(cstr)-1<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>skip<sp/>the<sp/>null<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>fstr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1,<sp/>n</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstr(i)<sp/>==<sp/>c_null_char)<sp/></highlight><highlight class="keywordflow">exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fstr(i:i)<sp/>=<sp/>cstr(i)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>end<sp/>function<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a959bc74ecd938061a024fb0d210facad" kindref="member">amrex_string_c_to_f</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a8661803d88bd3264e542f0f1362406e1" kindref="member">amrex_string_build</ref><sp/>(str,<sp/>fstr)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structamrex__string__module_1_1amrex__string" kindref="compound">amrex_string</ref>),<sp/></highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/>::<sp/>str</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(*)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/>::<sp/>fstr</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>::<sp/>i,<sp/>n</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(str%data))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(str%data)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len_trim(fstr)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(str%data(n+1))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1,<sp/>n</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str%data(i)<sp/>=<sp/>fstr(i:i)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>str%data(n+1)<sp/>=<sp/>c_null_char</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a8661803d88bd3264e542f0f1362406e1" kindref="member">amrex_string_build</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>function<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a4c4d4d30474688b40ff24d73c6d93073" kindref="member">amrex_string_f_to_lower</ref><sp/>(fstr)<sp/></highlight><highlight class="keyword">result</highlight><highlight class="normal">(flo)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=*)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/>::<sp/>fstr</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=len_trim(fstr))</highlight><highlight class="normal"><sp/>::<sp/>flo</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>::<sp/>i,<sp/>n</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len_trim(fstr)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1,<sp/>n</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">select<sp/>case</highlight><highlight class="normal">(fstr(i:i))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flo(i:i)<sp/>=<sp/>achar(iachar(fstr(i:i))+32)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flo(i:i)<sp/>=<sp/>fstr(i:i)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>select</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>end<sp/>function<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module_1a4c4d4d30474688b40ff24d73c6d93073" kindref="member">amrex_string_f_to_lower</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>module<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__string__module" kindref="compound">amrex_string_module</ref></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_string_mod.F90"/>
  </compounddef>
</doxygen>
