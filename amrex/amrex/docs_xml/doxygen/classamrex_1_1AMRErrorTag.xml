<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1AMRErrorTag" kind="class" language="C++" prot="public">
    <compoundname>amrex::AMRErrorTag</compoundname>
    <includes refid="AMReX__ErrorList_8H" local="no">AMReX_ErrorList.H</includes>
    <innerclass refid="structamrex_1_1AMRErrorTag_1_1UserFunc" prot="public">amrex::AMRErrorTag::UserFunc</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5" prot="public" static="no">
        <name>TEST</name>
        <enumvalue id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a7b0d9cc09c139a180df7015ea53e8690" prot="public">
          <name>GRAD</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a24a93bfed92dca16735a42fb83bd244f" prot="public">
          <name>LESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5ae1d7bebf58c0f94e82726c03448ef942" prot="public">
          <name>GREATER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a0d08f661e48e89e5120b9c9006c4b090" prot="public">
          <name>VORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5adfb583e59961c24f25757b0750fb66f9" prot="public">
          <name>BOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a95c0a22b378e1d0ee1d0e63f951e51d4" prot="public">
          <name>USER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="409" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="409" bodyend="409"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1AMRErrorTag_1a8f97d93ea970ab6a2deccc908df9a778" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AMRErrorTag::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="477" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AMRErrorTag_1aaf31df482ec4a1715c7364a12d4b0cc0" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5" kindref="member">TEST</ref></type>
        <definition>TEST amrex::AMRErrorTag::m_test</definition>
        <argsstring></argsstring>
        <name>m_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="478" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AMRErrorTag_1ab30d140ebc75fb6f346e8b519bc25f32" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1AMRErrorTag_1_1UserFunc" kindref="compound">UserFunc</ref> *</type>
        <definition>UserFunc* amrex::AMRErrorTag::m_userfunc</definition>
        <argsstring></argsstring>
        <name>m_userfunc</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="479" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AMRErrorTag_1a943620be7e3ff54ee46cba11ffb6c736" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::AMRErrorTag::m_field</definition>
        <argsstring></argsstring>
        <name>m_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="480" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AMRErrorTag_1a501d9971a3346526fae6093d6de95642" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref></type>
        <definition>AMRErrorTagInfo amrex::AMRErrorTag::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="481" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AMRErrorTag_1ab3c2e7a6fa7e1fb6b00450e34add430d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AMRErrorTag::m_ngrow</definition>
        <argsstring></argsstring>
        <name>m_ngrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="482" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="482" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1a6bdb6f405b8980271203a4dd7bbf66af" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AMRErrorTag::AMRErrorTag</definition>
        <argsstring>(const AMRErrorTagInfo &amp;info=AMRErrorTagInfo()) noexcept</argsstring>
        <name>AMRErrorTag</name>
        <param>
          <type>const <ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref> &amp;</type>
          <declname>info</declname>
          <defval><ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="422" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="422" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1aa4440ce8ce47afb4ffe1f9f1c5a213e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AMRErrorTag::AMRErrorTag</definition>
        <argsstring>(amrex::Real value, AMRErrorTag::TEST test, const std::string &amp;field, const AMRErrorTagInfo &amp;info=AMRErrorTagInfo()) noexcept</argsstring>
        <name>AMRErrorTag</name>
        <param>
          <type>amrex::Real</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5" kindref="member">AMRErrorTag::TEST</ref></type>
          <declname>test</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref> &amp;</type>
          <declname>info</declname>
          <defval><ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="425" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="425" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1ac7c6b81884c611796ce3136c75cf4c1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AMRErrorTag::AMRErrorTag</definition>
        <argsstring>(amrex::Vector&lt; amrex::Real &gt; value, AMRErrorTag::TEST test, const std::string &amp;field, const AMRErrorTagInfo &amp;info=AMRErrorTagInfo()) noexcept</argsstring>
        <name>AMRErrorTag</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; amrex::Real &gt;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5" kindref="member">AMRErrorTag::TEST</ref></type>
          <declname>test</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref> &amp;</type>
          <declname>info</declname>
          <defval><ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="438" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="438" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1a75ed74323d9b257efb86bc2acda5f48d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AMRErrorTag::AMRErrorTag</definition>
        <argsstring>(AMRErrorTag::UserFunc *userfunc, const std::string &amp;field, int ngrow, const AMRErrorTagInfo &amp;info=AMRErrorTagInfo()) noexcept</argsstring>
        <name>AMRErrorTag</name>
        <param>
          <type><ref refid="structamrex_1_1AMRErrorTag_1_1UserFunc" kindref="compound">AMRErrorTag::UserFunc</ref> *</type>
          <declname>userfunc</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref> &amp;</type>
          <declname>info</declname>
          <defval><ref refid="structamrex_1_1AMRErrorTagInfo" kindref="compound">AMRErrorTagInfo</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="457" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="457" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1a3f9d380346d4509d37eb8bde92fa184f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::AMRErrorTag::operator()</definition>
        <argsstring>(amrex::TagBoxArray &amp;tb, const amrex::MultiFab *mf, char clearval, char tagval, amrex::Real time, int level, const amrex::Geometry &amp;geom) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classamrex_1_1TagBoxArray" kindref="compound">amrex::TagBoxArray</ref> &amp;</type>
          <declname>tb</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref> *</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>char</type>
          <declname>clearval</declname>
        </param>
        <param>
          <type>char</type>
          <declname>tagval</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">amrex::Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="463" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="348" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1a2f6daf12771b72f61d675a618378fab6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AMRErrorTag::NGrow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NGrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="471" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="471" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1a8f18164eaa226a34be64abf48d9617ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; amrex::AMRErrorTag::Field</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="472" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="472" bodyend="472"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1AMRErrorTag_1a8e2bdc864ffe06bd8e43902689bb624a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AMRErrorTag::SetNGrow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>SetNGrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="475" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="261" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="121">
        <label>amrex::AMRErrorTag</label>
        <link refid="classamrex_1_1AMRErrorTag"/>
        <childnode refid="122" relation="usage">
          <edgelabel>m_value</edgelabel>
        </childnode>
        <childnode refid="124" relation="usage">
          <edgelabel>m_info</edgelabel>
        </childnode>
        <childnode refid="127" relation="usage">
          <edgelabel>m_field</edgelabel>
        </childnode>
        <childnode refid="128" relation="usage">
          <edgelabel>m_userfunc</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>Real</label>
      </node>
      <node id="127">
        <label>string</label>
      </node>
      <node id="123">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
      </node>
      <node id="128">
        <label>amrex::AMRErrorTag::UserFunc</label>
        <link refid="structamrex_1_1AMRErrorTag_1_1UserFunc"/>
      </node>
      <node id="125">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="126" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="124">
        <label>amrex::AMRErrorTagInfo</label>
        <link refid="structamrex_1_1AMRErrorTagInfo"/>
        <childnode refid="125" relation="usage">
          <edgelabel>m_realbox</edgelabel>
        </childnode>
        <childnode refid="126" relation="usage">
          <edgelabel>m_max_time</edgelabel>
          <edgelabel>m_min_time</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="406" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="405" bodyend="483"/>
    <listofallmembers>
      <member refid="classamrex_1_1AMRErrorTag_1a6bdb6f405b8980271203a4dd7bbf66af" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>AMRErrorTag</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1aa4440ce8ce47afb4ffe1f9f1c5a213e6" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>AMRErrorTag</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1ac7c6b81884c611796ce3136c75cf4c1d" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>AMRErrorTag</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a75ed74323d9b257efb86bc2acda5f48d" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>AMRErrorTag</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5adfb583e59961c24f25757b0750fb66f9" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>BOX</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a8f18164eaa226a34be64abf48d9617ba" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>Field</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a7b0d9cc09c139a180df7015ea53e8690" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>GRAD</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5ae1d7bebf58c0f94e82726c03448ef942" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>GREATER</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a24a93bfed92dca16735a42fb83bd244f" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>LESS</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a943620be7e3ff54ee46cba11ffb6c736" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>m_field</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a501d9971a3346526fae6093d6de95642" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>m_info</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1ab3c2e7a6fa7e1fb6b00450e34add430d" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1aaf31df482ec4a1715c7364a12d4b0cc0" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>m_test</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1ab30d140ebc75fb6f346e8b519bc25f32" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>m_userfunc</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a8f97d93ea970ab6a2deccc908df9a778" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>m_value</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a2f6daf12771b72f61d675a618378fab6" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>NGrow</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a3f9d380346d4509d37eb8bde92fa184f" prot="public" virt="virtual"><scope>amrex::AMRErrorTag</scope><name>operator()</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1a8e2bdc864ffe06bd8e43902689bb624a" prot="protected" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>SetNGrow</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>TEST</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a95c0a22b378e1d0ee1d0e63f951e51d4" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>USER</name></member>
      <member refid="classamrex_1_1AMRErrorTag_1addadf02bf9152fc1767831cd86b163d5a0d08f661e48e89e5120b9c9006c4b090" prot="public" virt="non-virtual"><scope>amrex::AMRErrorTag</scope><name>VORT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
