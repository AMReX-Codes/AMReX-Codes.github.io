<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParallelDescriptor::ProcessTeam</compoundname>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1aa8f4a38d26a8eb15889375e241e82ac6" prot="public" static="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>typedef MPI_Comm amrex::ParallelDescriptor::ProcessTeam::team_t</definition>
        <argsstring></argsstring>
        <name>team_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="150" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a665b0b12d8aadf1fe4050650f79c880f" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelDescriptor::ProcessTeam::m_numTeams</definition>
        <argsstring></argsstring>
        <name>m_numTeams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="197" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a3a15d388a4307d1a6af319e8244b7d1e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelDescriptor::ProcessTeam::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="198" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a0e84c360250692ebc2e6585a33e47d41" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelDescriptor::ProcessTeam::m_color</definition>
        <argsstring></argsstring>
        <name>m_color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="199" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1ac3aa97bce1863d762909aca16c65f13e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelDescriptor::ProcessTeam::m_lead</definition>
        <argsstring></argsstring>
        <name>m_lead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="200" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a7afcd50dc8308b36a3f92aa13686d7d1" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelDescriptor::ProcessTeam::m_rankInTeam</definition>
        <argsstring></argsstring>
        <name>m_rankInTeam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="201" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a5de8f1503fd9c3d7fac5aad2558a3a8b" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelDescriptor::ProcessTeam::m_do_team_reduce</definition>
        <argsstring></argsstring>
        <name>m_do_team_reduce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="202" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a69bbcf1d147ce2786b6c5c4f166b2b1e" prot="public" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelDescriptor::ProcessTeam::m_team_comm</definition>
        <argsstring></argsstring>
        <name>m_team_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="204" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1aa79a14d32c85df7c2912b7cac38f4416" prot="public" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelDescriptor::ProcessTeam::m_lead_comm</definition>
        <argsstring></argsstring>
        <name>m_lead_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="205" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a4347ef786e0e215ff18290a6d2e8a415" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelDescriptor::ProcessTeam::Barrier</definition>
        <argsstring>() const</argsstring>
        <name>Barrier</name>
        <briefdescription>
<para>synchronize processes within the team </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="153" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1adfbd525e82a309468044f350e3ece94e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelDescriptor::ProcessTeam::MemoryBarrier</definition>
        <argsstring>() const</argsstring>
        <name>MemoryBarrier</name>
        <briefdescription>
<para>memory fence </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="162" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="162" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a415ff6c2958d2b50d111d1a272749af6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelDescriptor::ProcessTeam::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>free a communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="181" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a5f44b55b81dc4217e138a7f78d95a1db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1aa8f4a38d26a8eb15889375e241e82ac6" kindref="member">team_t</ref> &amp;</type>
        <definition>const team_t&amp; amrex::ParallelDescriptor::ProcessTeam::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="190" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a7810499292a81bb8c40c0a2a9a0c2d06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref> &amp;</type>
        <definition>const MPI_Comm&amp; amrex::ParallelDescriptor::ProcessTeam::get_team_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_team_comm</name>
        <briefdescription>
<para>return the communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="194" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a428205afae6eb51671ee5b0d45de60b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref> &amp;</type>
        <definition>const MPI_Comm&amp; amrex::ParallelDescriptor::ProcessTeam::get_lead_comm</definition>
        <argsstring>() const</argsstring>
        <name>get_lead_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="195" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="195" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provide functionalities needed to construct a team of processes to perform a particular job. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" line="149" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.H" bodystart="148" bodyend="206"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a4347ef786e0e215ff18290a6d2e8a415" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>Barrier</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a415ff6c2958d2b50d111d1a272749af6" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>clear</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a5f44b55b81dc4217e138a7f78d95a1db" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>get</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a428205afae6eb51671ee5b0d45de60b8" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>get_lead_comm</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a7810499292a81bb8c40c0a2a9a0c2d06" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>get_team_comm</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a0e84c360250692ebc2e6585a33e47d41" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_color</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a5de8f1503fd9c3d7fac5aad2558a3a8b" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_do_team_reduce</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1ac3aa97bce1863d762909aca16c65f13e" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_lead</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1aa79a14d32c85df7c2912b7cac38f4416" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_lead_comm</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a665b0b12d8aadf1fe4050650f79c880f" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_numTeams</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a7afcd50dc8308b36a3f92aa13686d7d1" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_rankInTeam</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a3a15d388a4307d1a6af319e8244b7d1e" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_size</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1a69bbcf1d147ce2786b6c5c4f166b2b1e" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>m_team_comm</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1adfbd525e82a309468044f350e3ece94e" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>MemoryBarrier</name></member>
      <member refid="structamrex_1_1ParallelDescriptor_1_1ProcessTeam_1aa8f4a38d26a8eb15889375e241e82ac6" prot="public" virt="non-virtual"><scope>amrex::ParallelDescriptor::ProcessTeam</scope><name>team_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
