<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1ArrayOfStructs" kind="class" language="C++" prot="public">
    <compoundname>amrex::ArrayOfStructs</compoundname>
    <includes refid="AMReX__ArrayOfStructs_8H" local="no">AMReX_ArrayOfStructs.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NReal</declname>
        <defname>NReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NInt</declname>
        <defname>NInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1aa2b9c07eea8f0178a1973357cf04ea62" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; NReal, NInt &gt;</type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ParticleType =  Particle&lt;NReal, NInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">ParticleType::RealType</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::RealType =  typename ParticleType::RealType</definition>
        <argsstring></argsstring>
        <name>RealType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref>, Allocator&lt; <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &gt; &gt;</type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ParticleVector =  amrex::PODVector&lt;ParticleType, Allocator&lt;ParticleType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">ParticleVector::iterator</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::Iterator =  typename ParticleVector::iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ConstIterator =  typename ParticleVector::const_iterator</definition>
        <argsstring></argsstring>
        <name>ConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1aed93f37a99ede3b5df705cce1e7ca92c" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::SizeInReal</definition>
        <argsstring></argsstring>
        <name>SizeInReal</name>
        <initializer>= sizeof(<ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref>) / sizeof(<ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1a9ea585dd011f20723588e8161d0165a2" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::m_num_neighbor_particles</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="112" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1abf026bb176af595118df03fd00e2bc13" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">ParticleVector</ref></type>
        <definition>ParticleVector amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="115" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa8125d6563f3d6b885d0fa95d5d4b0b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ArrayOfStructs</definition>
        <argsstring>()</argsstring>
        <name>ArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="25" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aca90df559820dca991d840cdbb2d0065" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>const ParticleVector&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator()</definition>
        <argsstring>() const</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a81f3bcb36d422cd9639788892a72cf7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>ParticleVector&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a7a9b6970d5ac53fb7570233f3c2cd775" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a6941975c9fe7c6550e721a821ad74126" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numParticles</definition>
        <argsstring>() const</argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="41" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a6310988f0c7b51a1f5a6c8118ae6b50b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const</argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="47" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac7cc35718320929a366b86cfec00ec9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const</argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa92327fa3e4a245ab138fd50f6c26677" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const</argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="59" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ab6e880100a1eb14ff3e8947ed3ae3585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="61" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a65783d9bdd76147429b951340172a9aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="68" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a6c30c9355f65515df6db2c86aea1c854" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="70" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a10f767213e765b4181e266d54cf1ce25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>const RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="72" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad9567338fa6475300215e4ec70dac80d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="73" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1abd007454d443b9871abc0fdced9087b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>const RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::dataPtr</definition>
        <argsstring>() const</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="75" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a138bf451321239ddca61f471a3364b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ab74612f3b12fcb9e90a750545efd3149" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>std::pair&lt;int,int&gt; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::dataShape</definition>
        <argsstring>() const</argsstring>
        <name>dataShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="78" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a92ed68fdf4560419b02707461df781d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="82" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a948130cfb396aec89aa8963f3d067b03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="83" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac814687e5fd72d77a18498ab1833fe33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="84" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a37f92bf84821719d67fe814fddf6f700" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>const ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="86" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad36d2f8f9a2ad22b014bd31cdb9f4fed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="87" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a0aa7c75dec9e031f693caa2dd59d8b9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>const ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="89" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a560039040383714fc329a465afa041c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a5dc0c88b0bd97c248ca177a5cce313ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::swap</definition>
        <argsstring>(ArrayOfStructs&lt; NReal, NInt &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref>&lt; NReal, NInt &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="92" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac608a07a6864c8bfc21e33c7d74aee01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::resize</definition>
        <argsstring>(size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="97" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a63474a82cab53812bed4e70deba119d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" kindref="member">Iterator</ref></type>
        <definition>Iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::erase</definition>
        <argsstring>(ConstIterator first, ConstIterator second)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" kindref="member">ConstIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" kindref="member">ConstIterator</ref></type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="99" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1af03ace2eb869a046f8efdf546da14c7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIt</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::insert</definition>
        <argsstring>(Iterator pos, InputIt first, InputIt last)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" kindref="member">Iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="102" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad7d0aa7c4705b9bf580f66322d182d79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">ParticleVector::iterator</ref></type>
        <definition>ParticleVector::iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="104" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a9ba716870dcb26aecdb6a8ce761dd71a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="105" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1abcc5a37084868a1e0fa2ff5420ad9f20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="106" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a0b633d8f82b827347151560f4441e7ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">ParticleVector::iterator</ref></type>
        <definition>ParticleVector::iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="108" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a1a5fb8fe1cede3a3449eed49d15df709" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="109" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aedde9080a7be9f4da9bb3bae947477c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="110" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="477">
        <label>amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;</label>
        <link refid="classamrex_1_1ArrayOfStructs"/>
        <childnode refid="478" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="478">
        <label>amrex::PODVector&lt; ParticleType, Allocator&lt; ParticleType &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="479" relation="public-inheritance">
        </childnode>
        <childnode refid="480" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="480">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1Particle"/>
        <childnode refid="481" relation="public-inheritance">
        </childnode>
      </node>
      <node id="479">
        <label>Allocator&lt; ParticleType &gt;</label>
      </node>
      <node id="481">
        <label>amrex::ParticleBase&lt; ParticleReal, T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1ParticleBase"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="13" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="13" bodyend="116"/>
    <listofallmembers>
      <member refid="classamrex_1_1ArrayOfStructs_1aa8125d6563f3d6b885d0fa95d5d4b0b9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ArrayOfStructs</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a37f92bf84821719d67fe814fddf6f700" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad36d2f8f9a2ad22b014bd31cdb9f4fed" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad7d0aa7c4705b9bf580f66322d182d79" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>begin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a9ba716870dcb26aecdb6a8ce761dd71a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>begin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1abcc5a37084868a1e0fa2ff5420ad9f20" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>cbegin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aedde9080a7be9f4da9bb3bae947477c2" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>cend</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ConstIterator</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a10f767213e765b4181e266d54cf1ce25" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad9567338fa6475300215e4ec70dac80d" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1abd007454d443b9871abc0fdced9087b4" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a138bf451321239ddca61f471a3364b14" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ab74612f3b12fcb9e90a750545efd3149" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataShape</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a6c30c9355f65515df6db2c86aea1c854" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>empty</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac814687e5fd72d77a18498ab1833fe33" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>empty</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a0b633d8f82b827347151560f4441e7ec" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>end</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a1a5fb8fe1cede3a3449eed49d15df709" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>end</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a63474a82cab53812bed4e70deba119d9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>erase</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a65783d9bdd76147429b951340172a9aa" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>getNumNeighbors</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af03ace2eb869a046f8efdf546da14c7a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>insert</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>Iterator</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1abf026bb176af595118df03fd00e2bc13" prot="private" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>m_data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a9ea585dd011f20723588e8161d0165a2" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>m_num_neighbor_particles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac7cc35718320929a366b86cfec00ec9c" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numNeighborParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a6941975c9fe7c6550e721a821ad74126" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a6310988f0c7b51a1f5a6c8118ae6b50b" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numRealParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa92327fa3e4a245ab138fd50f6c26677" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numTotalParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aca90df559820dca991d840cdbb2d0065" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a81f3bcb36d422cd9639788892a72cf7a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a0aa7c75dec9e031f693caa2dd59d8b9d" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a560039040383714fc329a465afa041c9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a948130cfb396aec89aa8963f3d067b03" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>pop_back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a92ed68fdf4560419b02707461df781d5" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>push_back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac608a07a6864c8bfc21e33c7d74aee01" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>resize</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ab6e880100a1eb14ff3e8947ed3ae3585" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>setNumNeighbors</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a7a9b6970d5ac53fb7570233f3c2cd775" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>size</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aed93f37a99ede3b5df705cce1e7ca92c" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>SizeInReal</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a5dc0c88b0bd97c248ca177a5cce313ee" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
