<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1ParmParse_1_1PP__entry" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParmParse::PP_entry</compoundname>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParmParse_1_1PP__entry_1ac93da2afa686c7019ea7f023d2e40faf" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::ParmParse::PP_entry::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="979" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParmParse_1_1PP__entry_1a80de7e1a9dcbb00abab4cd08fbb5d395" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; amrex::ParmParse::PP_entry::m_vals</definition>
        <argsstring></argsstring>
        <name>m_vals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="980" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParmParse_1_1PP__entry_1a697f0d85384abdd0b6a8bdecd8a3756a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ParmParse_1a328b966e328a476f04a86c758c9bc6c1" kindref="member">Table</ref> *</type>
        <definition>Table* amrex::ParmParse::PP_entry::m_table</definition>
        <argsstring></argsstring>
        <name>m_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="981" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParmParse_1_1PP__entry_1a4bb1d8e308635fc45190ed25bf7983ee" prot="public" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool amrex::ParmParse::PP_entry::m_queried</definition>
        <argsstring></argsstring>
        <name>m_queried</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="982" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="982" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1ac0b1aa52010935a1abb2a13ed60c5018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::PP_entry::PP_entry</definition>
        <argsstring>(const std::string &amp;name, const std::list&lt; std::string &gt; &amp;vals)</argsstring>
        <name>PP_entry</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::list&lt; std::string &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="968" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1a4c8ccdb5008ed75a5d837d9b1322b4a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::PP_entry::PP_entry</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;vals)</argsstring>
        <name>PP_entry</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="970" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="49" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1a9c71ae9adf70e22a423ef2608e744cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::PP_entry::PP_entry</definition>
        <argsstring>(const std::string &amp;name, const Table &amp;table)</argsstring>
        <name>PP_entry</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1ParmParse_1a328b966e328a476f04a86c758c9bc6c1" kindref="member">Table</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="972" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1a9c761094b5fda88e50bc640709ce37e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::PP_entry::PP_entry</definition>
        <argsstring>(const PP_entry &amp;pe)</argsstring>
        <name>PP_entry</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParmParse_1_1PP__entry" kindref="compound">PP_entry</ref> &amp;</type>
          <declname>pe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="974" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="68" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1aea5dde0fd2f8f21af8b4b5816d9ff963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParmParse_1_1PP__entry" kindref="compound">PP_entry</ref> &amp;</type>
        <definition>ParmParse::PP_entry &amp; amrex::ParmParse::PP_entry::operator=</definition>
        <argsstring>(const PP_entry &amp;pe)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParmParse_1_1PP__entry" kindref="compound">PP_entry</ref> &amp;</type>
          <declname>pe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="975" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="86" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1a121320682d99b6520847915da1206ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::PP_entry::~PP_entry</definition>
        <argsstring>()</argsstring>
        <name>~PP_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="976" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParmParse_1_1PP__entry_1a77924f0e1052a734fc3ca67e70d118fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string amrex::ParmParse::PP_entry::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="977" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="101" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4353">
        <label>amrex::ParmParse::PP_entry</label>
        <link refid="structamrex_1_1ParmParse_1_1PP__entry"/>
        <childnode refid="4354" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="4354">
        <label>string</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="967" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="966" bodyend="983"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1ac93da2afa686c7019ea7f023d2e40faf" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>m_name</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a4bb1d8e308635fc45190ed25bf7983ee" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>m_queried</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a697f0d85384abdd0b6a8bdecd8a3756a" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>m_table</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a80de7e1a9dcbb00abab4cd08fbb5d395" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>m_vals</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1aea5dde0fd2f8f21af8b4b5816d9ff963" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1ac0b1aa52010935a1abb2a13ed60c5018" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>PP_entry</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a4c8ccdb5008ed75a5d837d9b1322b4a4" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>PP_entry</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a9c71ae9adf70e22a423ef2608e744cb8" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>PP_entry</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a9c761094b5fda88e50bc640709ce37e6" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>PP_entry</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a77924f0e1052a734fc3ca67e70d118fe" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>print</name></member>
      <member refid="structamrex_1_1ParmParse_1_1PP__entry_1a121320682d99b6520847915da1206ee2" prot="public" virt="non-virtual"><scope>amrex::ParmParse::PP_entry</scope><name>~PP_entry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
