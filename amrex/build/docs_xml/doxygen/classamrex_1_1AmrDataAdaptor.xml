<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1AmrDataAdaptor" kind="class" language="C++" prot="public">
    <compoundname>amrex::AmrDataAdaptor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DataAdaptor</basecompoundref>
    <includes refid="AMReX__AmrDataAdaptor_8H" local="no">AMReX_AmrDataAdaptor.H</includes>
    <innerclass refid="structamrex_1_1AmrDataAdaptor_1_1InternalsType" prot="public">amrex::AmrDataAdaptor::InternalsType</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1AmrDataAdaptor_1a7f3433a6470167d503b3fe0f0e7da3d4" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1AmrDataAdaptor_1_1InternalsType" kindref="compound">InternalsType</ref> *</type>
        <definition>InternalsType* amrex::AmrDataAdaptor::Internals</definition>
        <argsstring></argsstring>
        <name>Internals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a41f3c8b6a7d66e0b17a4e9869c8c9b40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1AmrDataAdaptor" kindref="compound">AmrDataAdaptor</ref> *</type>
        <definition>static AmrDataAdaptor* amrex::AmrDataAdaptor::New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="13" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a85b2b18fd182728955fa9cb13ef5bf30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrDataAdaptor::senseiTypeMacro</definition>
        <argsstring>(AmrDataAdaptor, sensei::DataAdaptor)</argsstring>
        <name>senseiTypeMacro</name>
        <param>
          <type><ref refid="classamrex_1_1AmrDataAdaptor" kindref="compound">AmrDataAdaptor</ref></type>
        </param>
        <param>
          <type>sensei::DataAdaptor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1ac8ab6353c41ea4880d2b5e68e2465564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::SetDataSource</definition>
        <argsstring>(amrex::Amr *amr)</argsstring>
        <name>SetDataSource</name>
        <param>
          <type><ref refid="classamrex_1_1Amr" kindref="compound">amrex::Amr</ref> *</type>
          <declname>amr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="180" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1aeb2aa16f7cb72eebdd278083cc8616ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrDataAdaptor::SetPinMesh</definition>
        <argsstring>(int val)</argsstring>
        <name>SetPinMesh</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a4b98d2d309d72218c0bc9f2d82781433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetNumberOfMeshes</definition>
        <argsstring>(unsigned int &amp;numMeshes) override</argsstring>
        <name>GetNumberOfMeshes</name>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>numMeshes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a56b023f943976c8cbc6868bc307d0e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetMeshName</definition>
        <argsstring>(unsigned int id, std::string &amp;meshName) override</argsstring>
        <name>GetMeshName</name>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a22ca8c6c58732a0c1e7006027bb85848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetMeshHasGhostNodes</definition>
        <argsstring>(const std::string &amp;meshName, int &amp;nLayers) override</argsstring>
        <name>GetMeshHasGhostNodes</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>nLayers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="511" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a4817b06fbf2b759ed29cb65e6b8944a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetMeshHasGhostCells</definition>
        <argsstring>(const std::string &amp;meshName, int &amp;nLayers) override</argsstring>
        <name>GetMeshHasGhostCells</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>nLayers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="525" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1aeb19ff64f67ce3d581833588cd8a362b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetNumberOfArrays</definition>
        <argsstring>(const std::string &amp;meshName, int association, unsigned int &amp;numberOfArrays) override</argsstring>
        <name>GetNumberOfArrays</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>association</declname>
        </param>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>numberOfArrays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="30" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="547" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1ac384e988016eac31074e99f36f7cd49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetArrayName</definition>
        <argsstring>(const std::string &amp;meshName, int association, unsigned int index, std::string &amp;arrayName) override</argsstring>
        <name>GetArrayName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>association</declname>
        </param>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>arrayName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="579" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a153894396c7877ce14d53f2319ec0049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::GetMesh</definition>
        <argsstring>(const std::string &amp;meshName, bool structureOnly, vtkDataObject *&amp;mesh) override</argsstring>
        <name>GetMesh</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>structureOnly</declname>
        </param>
        <param>
          <type>vtkDataObject *&amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="605" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a5a7d27b32862a00a20708bac7fbb9b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::AddGhostNodesArray</definition>
        <argsstring>(vtkDataObject *mesh, const std::string &amp;meshName) override</argsstring>
        <name>AddGhostNodesArray</name>
        <param>
          <type>vtkDataObject *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="817" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1ab6e63c3a1e551496c7939d1be99b2d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::AddGhostCellsArray</definition>
        <argsstring>(vtkDataObject *mesh, const std::string &amp;meshName) override</argsstring>
        <name>AddGhostCellsArray</name>
        <param>
          <type>vtkDataObject *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="723" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a9ff0ae0968afe3189251603485e983d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::AddArray</definition>
        <argsstring>(vtkDataObject *mesh, const std::string &amp;meshName, int association, const std::string &amp;arrayName) override</argsstring>
        <name>AddArray</name>
        <param>
          <type>vtkDataObject *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>association</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>arrayName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="36" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="832" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a7f983048f1e70348b58c381f0e104ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrDataAdaptor::ReleaseData</definition>
        <argsstring>() override</argsstring>
        <name>ReleaseData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="1001" bodyend="1029"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a3e22c77fccec5c37868f505251044032" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrDataAdaptor::AmrDataAdaptor</definition>
        <argsstring>()</argsstring>
        <name>AmrDataAdaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="40" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrDataAdaptor_1a9ae9a8df3d126eb7dd38d1288c85e25b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrDataAdaptor::~AmrDataAdaptor</definition>
        <argsstring>()</argsstring>
        <name>~AmrDataAdaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="41" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp" bodystart="174" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="88">
        <label>DataAdaptor</label>
      </node>
      <node id="87">
        <label>amrex::AmrDataAdaptor</label>
        <link refid="classamrex_1_1AmrDataAdaptor"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="115">
        <label>amrex::LevelBld</label>
        <link refid="classamrex_1_1LevelBld"/>
      </node>
      <node id="119">
        <label>amrex::InSituUtils::StateMap</label>
        <link refid="classamrex_1_1InSituUtils_1_1StateMap"/>
      </node>
      <node id="112">
        <label>std::vector&lt; std::unique_ptr&lt; std::fstream &gt;, std::allocator&lt; std::unique_ptr&lt; std::fstream &gt; &gt; &gt;</label>
      </node>
      <node id="108">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt; &gt;</label>
      </node>
      <node id="107">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>Real</label>
      </node>
      <node id="104">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="93">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="94" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>DataAdaptor</label>
      </node>
      <node id="110">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="101">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>string</label>
      </node>
      <node id="92">
        <label>amrex::Amr</label>
        <link refid="classamrex_1_1Amr"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>regrid_ba</edgelabel>
          <edgelabel>initial_ba</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>dt_min</edgelabel>
          <edgelabel>dt_level</edgelabel>
        </childnode>
        <childnode refid="107" relation="usage">
          <edgelabel>amr_level</edgelabel>
        </childnode>
        <childnode refid="109" relation="usage">
          <edgelabel>datalogname</edgelabel>
        </childnode>
        <childnode refid="111" relation="usage">
          <edgelabel>datalog</edgelabel>
        </childnode>
        <childnode refid="113" relation="usage">
          <edgelabel>n_cycle</edgelabel>
          <edgelabel>level_count</edgelabel>
          <edgelabel>regrid_int</edgelabel>
          <edgelabel>level_steps</edgelabel>
        </childnode>
        <childnode refid="115" relation="usage">
          <edgelabel>levelbld</edgelabel>
        </childnode>
        <childnode refid="116" relation="usage">
          <edgelabel>small_plot_file_root</edgelabel>
          <edgelabel>initial_grids_file</edgelabel>
          <edgelabel>check_file_root</edgelabel>
          <edgelabel>regrid_grids_file</edgelabel>
          <edgelabel>subcycling_mode</edgelabel>
          <edgelabel>plot_file_root</edgelabel>
          <edgelabel>restart_chkfile</edgelabel>
          <edgelabel>probin_file</edgelabel>
          <edgelabel>restart_pltfile</edgelabel>
        </childnode>
        <childnode refid="117" relation="usage">
          <edgelabel>gridlog</edgelabel>
          <edgelabel>runlog</edgelabel>
          <edgelabel>runlog_terse</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>check_per</edgelabel>
          <edgelabel>start_time</edgelabel>
          <edgelabel>small_plot_per</edgelabel>
          <edgelabel>plot_log_per</edgelabel>
          <edgelabel>cumtime</edgelabel>
          <edgelabel>plot_per</edgelabel>
          <edgelabel>small_plot_log_per</edgelabel>
          <edgelabel>loadbalance_max_fac</edgelabel>
        </childnode>
      </node>
      <node id="106">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
      </node>
      <node id="118">
        <label>amrex::InSituUtils::DescriptorMap</label>
        <link refid="classamrex_1_1InSituUtils_1_1DescriptorMap"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="96">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>amrex::Vector&lt; std::unique_ptr&lt; std::fstream &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="99">
        <label>amrex::Vector&lt; BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>ofstream</label>
      </node>
      <node id="95">
        <label>amrex::AmrInfo</label>
        <link refid="structamrex_1_1AmrInfo"/>
        <childnode refid="96" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>n_error_buf</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>std::vector&lt; BoxArray, std::allocator&lt; BoxArray &gt; &gt;</label>
      </node>
      <node id="97">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="105">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="103">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="104" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="95" relation="protected-inheritance">
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="103" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>amrex::AmrDataAdaptor</label>
        <link refid="classamrex_1_1AmrDataAdaptor"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
        <childnode refid="91" relation="usage">
          <edgelabel>Internals</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>amrex::AmrDataAdaptor::InternalsType</label>
        <link refid="structamrex_1_1AmrDataAdaptor_1_1InternalsType"/>
        <childnode refid="92" relation="usage">
          <edgelabel>SimData</edgelabel>
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>SimMetadata</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" line="11" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H" bodystart="10" bodyend="46"/>
    <listofallmembers>
      <member refid="classamrex_1_1AmrDataAdaptor_1a9ff0ae0968afe3189251603485e983d1" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>AddArray</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1ab6e63c3a1e551496c7939d1be99b2d3f" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>AddGhostCellsArray</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a5a7d27b32862a00a20708bac7fbb9b84" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>AddGhostNodesArray</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a3e22c77fccec5c37868f505251044032" prot="protected" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>AmrDataAdaptor</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1ac384e988016eac31074e99f36f7cd49a" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetArrayName</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a153894396c7877ce14d53f2319ec0049" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetMesh</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a4817b06fbf2b759ed29cb65e6b8944a9" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetMeshHasGhostCells</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a22ca8c6c58732a0c1e7006027bb85848" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetMeshHasGhostNodes</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a56b023f943976c8cbc6868bc307d0e22" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetMeshName</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1aeb19ff64f67ce3d581833588cd8a362b" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetNumberOfArrays</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a4b98d2d309d72218c0bc9f2d82781433" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>GetNumberOfMeshes</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a7f3433a6470167d503b3fe0f0e7da3d4" prot="private" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>Internals</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a41f3c8b6a7d66e0b17a4e9869c8c9b40" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>New</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a7f983048f1e70348b58c381f0e104ae3" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>ReleaseData</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a85b2b18fd182728955fa9cb13ef5bf30" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>senseiTypeMacro</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1ac8ab6353c41ea4880d2b5e68e2465564" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>SetDataSource</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1aeb2aa16f7cb72eebdd278083cc8616ef" prot="public" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>SetPinMesh</name></member>
      <member refid="classamrex_1_1AmrDataAdaptor_1a9ae9a8df3d126eb7dd38d1288c85e25b" prot="protected" virt="non-virtual"><scope>amrex::AmrDataAdaptor</scope><name>~AmrDataAdaptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
