<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1NFilesIter" kind="class" language="C++" prot="public">
    <compoundname>amrex::NFilesIter</compoundname>
    <includes refid="AMReX__NFiles_8H" local="no">AMReX_NFiles.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::myProc</definition>
        <argsstring></argsstring>
        <name>myProc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="204" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::nProcs</definition>
        <argsstring></argsstring>
        <name>nProcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="205" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::nOutFiles</definition>
        <argsstring></argsstring>
        <name>nOutFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="206" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::nSets</definition>
        <argsstring></argsstring>
        <name>nSets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="207" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::mySetPosition</definition>
        <argsstring></argsstring>
        <name>mySetPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="208" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::NFilesIter::fullFileName</definition>
        <argsstring></argsstring>
        <name>fullFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="209" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::NFilesIter::filePrefix</definition>
        <argsstring></argsstring>
        <name>filePrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="210" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1VisMF_1a0027a67a36ec8d1b6eca3e2377c9c050" kindref="member">VisMF::IO_Buffer</ref></type>
        <definition>VisMF::IO_Buffer amrex::NFilesIter::io_buffer</definition>
        <argsstring></argsstring>
        <name>io_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="211" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" prot="private" static="no" mutable="no">
        <type>std::fstream</type>
        <definition>std::fstream amrex::NFilesIter::fileStream</definition>
        <argsstring></argsstring>
        <name>fileStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="212" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::finishedWriting</definition>
        <argsstring></argsstring>
        <name>finishedWriting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="213" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::groupSets</definition>
        <argsstring></argsstring>
        <name>groupSets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="214" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::isReading</definition>
        <argsstring></argsstring>
        <name>isReading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="215" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::finishedReading</definition>
        <argsstring></argsstring>
        <name>finishedReading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="216" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::readRanks</definition>
        <argsstring></argsstring>
        <name>readRanks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="217" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt;int&gt; &gt; amrex::NFilesIter::fileNumbersWriteOrder</definition>
        <argsstring></argsstring>
        <name>fileNumbersWriteOrder</name>
        <briefdescription>
<para>[filenumber][ranks in order they wrote to filenumber] </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="218" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::myReadIndex</definition>
        <argsstring></argsstring>
        <name>myReadIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="219" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::useStaticSetSelection</definition>
        <argsstring></argsstring>
        <name>useStaticSetSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="220" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::fileNumber</definition>
        <argsstring></argsstring>
        <name>fileNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="221" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::remainingWriters</definition>
        <argsstring></argsstring>
        <name>remainingWriters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="221" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::deciderProc</definition>
        <argsstring></argsstring>
        <name>deciderProc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="221" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::coordinatorProc</definition>
        <argsstring></argsstring>
        <name>coordinatorProc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="221" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::deciderTag</definition>
        <argsstring></argsstring>
        <name>deciderTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::coordinatorTag</definition>
        <argsstring></argsstring>
        <name>coordinatorTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::doneTag</definition>
        <argsstring></argsstring>
        <name>doneTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::writeTag</definition>
        <argsstring></argsstring>
        <name>writeTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::stReadTag</definition>
        <argsstring></argsstring>
        <name>stReadTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::stWriteTag</definition>
        <argsstring></argsstring>
        <name>stWriteTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::availableDeciders</definition>
        <argsstring></argsstring>
        <name>availableDeciders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="223" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::setZeroProcs</definition>
        <argsstring></argsstring>
        <name>setZeroProcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="224" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::useSparseFPP</definition>
        <argsstring></argsstring>
        <name>useSparseFPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="225" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a7ea5dbf41c762d6e8e90def0b878ea8d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::sparseWritingRanks</definition>
        <argsstring></argsstring>
        <name>sparseWritingRanks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="226" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::mySparseFileNumber</definition>
        <argsstring></argsstring>
        <name>mySparseFileNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="227" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::pair&lt;int, int&gt; &gt; amrex::NFilesIter::unreadMessages</definition>
        <argsstring></argsstring>
        <name>unreadMessages</name>
        <briefdescription>
<para>these were ignored by the decider procs and need to be cleaned up </para>        </briefdescription>
        <detaileddescription>
<para>[](tag, nmessages) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="232" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::currentDeciderIndex</definition>
        <argsstring></argsstring>
        <name>currentDeciderIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="229" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" prot="private" static="yes" mutable="no">
        <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>const int amrex::NFilesIter::indexUndefined</definition>
        <argsstring></argsstring>
        <name>indexUndefined</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="234" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::minDigits</definition>
        <argsstring></argsstring>
        <name>minDigits</name>
        <briefdescription>
<para>for Concatenate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="236" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1ae897aacaf05af5ff9c575a345315be88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>(int noutfiles, const std::string &amp;fileprefix, bool groupsets, bool setBuf)</argsstring>
        <name>NFilesIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>noutfiles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileprefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupsets</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setBuf</declname>
        </param>
        <briefdescription>
<para>the nfiles will be named &quot;filePrefix&quot; + &quot;00000&quot; through &quot;filePrefix&quot; + &quot;noutfiles-1&quot; the range [1, nProcs] for noutfiles is enforced </para>        </briefdescription>
        <detaileddescription>
<para>constructor for writing with static set selection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noutfiles</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&amp;fileprefix</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groupsets</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setBuf</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="12" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1afaabf4f7bbf8f45e425237a5116fffda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NFilesIter::SetDynamic</definition>
        <argsstring>(int deciderproc=-1)</argsstring>
        <name>SetDynamic</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>deciderproc</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>call this to use dynamic set selection deciderproc defaults to nprocs - 1 if &lt; 0 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deciderproc</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="73" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a3d067784807ec260a253c8b4339fbab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::GetDynamic</definition>
        <argsstring>()</argsstring>
        <name>GetDynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="54" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a4502510b5b15f7e87226e43367e1923a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NFilesIter::SetSparseFPP</definition>
        <argsstring>(const Vector&lt; int &gt; &amp;ranksToWrite)</argsstring>
        <name>SetSparseFPP</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>ranksToWrite</declname>
        </param>
        <briefdescription>
<para>call this to use a file per process for a sparse set of writers. <ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">ranksToWrite.size()</ref> will set noutfiles rank ranksToWrite[n] will write to file_rank </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;ranksToWrite</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="64" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="114" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a201227cf338dfa1a032bc9018902204c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::GetSparseFPP</definition>
        <argsstring>() const</argsstring>
        <name>GetSparseFPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="65" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1add24fee333e89cdcbc0cd9890a6f2b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>(const std::string &amp;fileName, const Vector&lt; int &gt; &amp;readRanks, bool setBuf=false)</argsstring>
        <name>NFilesIter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>readRanks</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setBuf</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>constructor for reading </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;fileName</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&amp;readRanks</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setBuf</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="75" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="164" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a4f9a9917a9842e888fbdf9d45f5de52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::~NFilesIter</definition>
        <argsstring>()</argsstring>
        <name>~NFilesIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="79" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a6c012f15ef5b8e7438a88bc794766143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::ReadyToWrite</definition>
        <argsstring>(bool appendFirst=false)</argsstring>
        <name>ReadyToWrite</name>
        <param>
          <type>bool</type>
          <declname>appendFirst</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>if appendFirst is true, the first set for this iterator will open the files in append mode </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>appendFirst</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="88" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="206" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1af4f8ba9c90ecfcea92b6426df76049af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::ReadyToRead</definition>
        <argsstring>()</argsstring>
        <name>ReadyToRead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="327" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a47cb9c9c13164881e7cd69a7fd7bf455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> &amp;</type>
        <definition>NFilesIter &amp; amrex::NFilesIter::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="92" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="347" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::fstream &amp;</type>
        <definition>std::fstream&amp; amrex::NFilesIter::Stream</definition>
        <argsstring>()</argsstring>
        <name>Stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="94" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a66c78163b811ad78cb91330d0100cc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::streampos</type>
        <definition>std::streampos amrex::NFilesIter::SeekPos</definition>
        <argsstring>()</argsstring>
        <name>SeekPos</name>
        <briefdescription>
<para>get the current <ref refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" kindref="member">Stream()</ref>&apos;s seek position </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="100" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="497" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a9fad70f99318130bf5c883b3cbd20650" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; amrex::NFilesIter::FileName</definition>
        <argsstring>() const</argsstring>
        <name>FileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="156" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a971648481cfcbc77ebd0258b2ea03538" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::FileNumber</definition>
        <argsstring>() const</argsstring>
        <name>FileNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="157" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1ad05e5285d1e34ab3e64e20f5e87c32c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::CoordinatorProc</definition>
        <argsstring>() const</argsstring>
        <name>CoordinatorProc</name>
        <briefdescription>
<para>this is the processor coordinating dynamic set selection </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="180" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a071c4306e5a102244c1461684ab17cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt; int &gt; amrex::NFilesIter::FileNumbersWritten</definition>
        <argsstring>()</argsstring>
        <name>FileNumbersWritten</name>
        <briefdescription>
<para>these are the file numbers to which each rank wrote [rank] a rank only writes to one file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="187" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="521" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1ad9233c5996de29b80cfb5c0ac02e8214" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &amp;</type>
        <definition>const Vector&lt; Vector&lt;int&gt; &gt;&amp; amrex::NFilesIter::FileNumbersWriteOrder</definition>
        <argsstring>() const</argsstring>
        <name>FileNumbersWriteOrder</name>
        <briefdescription>
<para>these are the order of ranks which wrote to each file [filenumber][ranks in order they wrote to filenumber] </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="194" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1aa0c0e9a50f259bef6b3a1f2a932c65bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NFilesIter::CleanUpMessages</definition>
        <argsstring>()</argsstring>
        <name>CleanUpMessages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="196" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="556" bodyend="572"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a9138f1bb7d077d7d1cd043715ecb7d74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::LengthOfSet</definition>
        <argsstring>(int nProcs, int nOutFiles)</argsstring>
        <name>LengthOfSet</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nProcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="102" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::WhichSetPosition</definition>
        <argsstring>(int whichproc, int nprocs, int noutfiles, bool groupsets)</argsstring>
        <name>WhichSetPosition</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>whichproc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nprocs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>noutfiles</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="107" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a11b5dec9fc1e0865a1e59a896d8c2f8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::ActualNFiles</definition>
        <argsstring>(int nOutFiles)</argsstring>
        <name>ActualNFiles</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <briefdescription>
<para>this returns the actual number of files used the range [1, nProcs] is enforced </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nOutFiles</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="126" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a0a8de2ff506c69fd9d2165fe0f294100" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::CheckNFiles</definition>
        <argsstring>(int nProcs, int nOutFiles, bool groupSets)</argsstring>
        <name>CheckNFiles</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nProcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupSets</declname>
        </param>
        <briefdescription>
<para>this checks if nOutFiles equals the calculated number of files returns false if they do not match </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nProcs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nOutFiles</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groupSets</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="140" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="502" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1aee88f93815c534f75ecc51eda61c60c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::FileNumber</definition>
        <argsstring>(int nOutFiles, int whichProc, bool groupSets)</argsstring>
        <name>FileNumber</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>whichProc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupSets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="142" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="142" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a498f8a22acbe763c2df48062f3fe18bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string amrex::NFilesIter::FileName</definition>
        <argsstring>(int nOutFiles, const std::string &amp;filePrefix, int whichProc, bool groupSets)</argsstring>
        <name>FileName</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePrefix</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>whichProc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupSets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="159" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="159" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a56f719e4f91d3d0ffbe3ec791236585f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string amrex::NFilesIter::FileName</definition>
        <argsstring>(int fileNumber, const std::string &amp;filePrefix)</argsstring>
        <name>FileName</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fileNumber</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePrefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="170" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a3d957684f758d55f7060078a5f49b08f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::GetMinDigits</definition>
        <argsstring>()</argsstring>
        <name>GetMinDigits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="198" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a1ba8e895b17fe1e7c39d318b1e1ed9f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::NFilesIter::SetMinDigits</definition>
        <argsstring>(int md)</argsstring>
        <name>SetMinDigits</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="200" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="200" bodyend="200"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a0251784dab51b741e87189d342682354" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>()</argsstring>
        <name>NFilesIter</name>
        <briefdescription>
<para>disallow </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="238" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class encapsulates writing to nfiles. </para>    </briefdescription>
    <detaileddescription>
<para>an example:</para><para>for(<ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> nfi(nOutFiles, filePrefix); nfi.ReadyToWrite(); ++nfi) { // do your writing here nfi.Stream().write((const char *) data.dataPtr(), nChars); } </para>    </detaileddescription>
    <collaborationgraph>
      <node id="3899">
        <label>amrex::Vector&lt; Setbuf_Char_Type &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3900" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3904">
        <label>amrex::Vector&lt; amrex::Vector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3905" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3906">
        <label>amrex::Vector&lt; std::pair&lt; int, int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3907" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3901">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3902" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3903">
        <label>string</label>
      </node>
      <node id="3902">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3907">
        <label>std::vector&lt; std::pair&lt; int, int &gt;, std::allocator&lt; std::pair&lt; int, int &gt; &gt; &gt;</label>
      </node>
      <node id="3898">
        <label>amrex::NFilesIter</label>
        <link refid="classamrex_1_1NFilesIter"/>
        <childnode refid="3899" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
        <childnode refid="3901" relation="usage">
          <edgelabel>availableDeciders</edgelabel>
          <edgelabel>readRanks</edgelabel>
          <edgelabel>setZeroProcs</edgelabel>
          <edgelabel>sparseWritingRanks</edgelabel>
        </childnode>
        <childnode refid="3903" relation="usage">
          <edgelabel>fullFileName</edgelabel>
          <edgelabel>filePrefix</edgelabel>
        </childnode>
        <childnode refid="3904" relation="usage">
          <edgelabel>fileNumbersWriteOrder</edgelabel>
        </childnode>
        <childnode refid="3906" relation="usage">
          <edgelabel>unreadMessages</edgelabel>
        </childnode>
      </node>
      <node id="3900">
        <label>std::vector&lt; Setbuf_Char_Type, std::allocator&lt; Setbuf_Char_Type &gt; &gt;</label>
      </node>
      <node id="3905">
        <label>std::vector&lt; amrex::Vector&lt; int &gt;, std::allocator&lt; amrex::Vector&lt; int &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="26" bodyend="239"/>
    <listofallmembers>
      <member refid="classamrex_1_1NFilesIter_1a11b5dec9fc1e0865a1e59a896d8c2f8e" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>ActualNFiles</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>availableDeciders</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0a8de2ff506c69fd9d2165fe0f294100" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>CheckNFiles</name></member>
      <member refid="classamrex_1_1NFilesIter_1aa0c0e9a50f259bef6b3a1f2a932c65bc" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>CleanUpMessages</name></member>
      <member refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>coordinatorProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1ad05e5285d1e34ab3e64e20f5e87c32c6" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>CoordinatorProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>coordinatorTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>currentDeciderIndex</name></member>
      <member refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>deciderProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>deciderTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>doneTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9fad70f99318130bf5c883b3cbd20650" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1a498f8a22acbe763c2df48062f3fe18bf" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1a56f719e4f91d3d0ffbe3ec791236585f" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1aee88f93815c534f75ecc51eda61c60c5" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1a971648481cfcbc77ebd0258b2ea03538" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fileNumbersWriteOrder</name></member>
      <member refid="classamrex_1_1NFilesIter_1ad9233c5996de29b80cfb5c0ac02e8214" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumbersWriteOrder</name></member>
      <member refid="classamrex_1_1NFilesIter_1a071c4306e5a102244c1461684ab17cf5" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumbersWritten</name></member>
      <member refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>filePrefix</name></member>
      <member refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fileStream</name></member>
      <member refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>finishedReading</name></member>
      <member refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>finishedWriting</name></member>
      <member refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fullFileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1a3d067784807ec260a253c8b4339fbab4" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>GetDynamic</name></member>
      <member refid="classamrex_1_1NFilesIter_1a3d957684f758d55f7060078a5f49b08f" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>GetMinDigits</name></member>
      <member refid="classamrex_1_1NFilesIter_1a201227cf338dfa1a032bc9018902204c" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>GetSparseFPP</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>groupSets</name></member>
      <member refid="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>indexUndefined</name></member>
      <member refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>io_buffer</name></member>
      <member refid="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>isReading</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9138f1bb7d077d7d1cd043715ecb7d74" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>LengthOfSet</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>minDigits</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>myProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>myReadIndex</name></member>
      <member refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>mySetPosition</name></member>
      <member refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>mySparseFileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae897aacaf05af5ff9c575a345315be88" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1add24fee333e89cdcbc0cd9890a6f2b34" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0251784dab51b741e87189d342682354" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>nOutFiles</name></member>
      <member refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>nProcs</name></member>
      <member refid="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>nSets</name></member>
      <member refid="classamrex_1_1NFilesIter_1a47cb9c9c13164881e7cd69a7fd7bf455" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>readRanks</name></member>
      <member refid="classamrex_1_1NFilesIter_1af4f8ba9c90ecfcea92b6426df76049af" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>ReadyToRead</name></member>
      <member refid="classamrex_1_1NFilesIter_1a6c012f15ef5b8e7438a88bc794766143" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>ReadyToWrite</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>remainingWriters</name></member>
      <member refid="classamrex_1_1NFilesIter_1a66c78163b811ad78cb91330d0100cc54" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SeekPos</name></member>
      <member refid="classamrex_1_1NFilesIter_1afaabf4f7bbf8f45e425237a5116fffda" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SetDynamic</name></member>
      <member refid="classamrex_1_1NFilesIter_1a1ba8e895b17fe1e7c39d318b1e1ed9f8" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SetMinDigits</name></member>
      <member refid="classamrex_1_1NFilesIter_1a4502510b5b15f7e87226e43367e1923a" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SetSparseFPP</name></member>
      <member refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>setZeroProcs</name></member>
      <member refid="classamrex_1_1NFilesIter_1a7ea5dbf41c762d6e8e90def0b878ea8d" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>sparseWritingRanks</name></member>
      <member refid="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>stReadTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>Stream</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>stWriteTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>unreadMessages</name></member>
      <member refid="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>useSparseFPP</name></member>
      <member refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>useStaticSetSelection</name></member>
      <member refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>WhichSetPosition</name></member>
      <member refid="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>writeTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a4f9a9917a9842e888fbdf9d45f5de52e" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>~NFilesIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
