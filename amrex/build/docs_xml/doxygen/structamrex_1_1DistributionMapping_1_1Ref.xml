<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1DistributionMapping_1_1Ref" kind="struct" language="C++" prot="private">
    <compoundname>amrex::DistributionMapping::Ref</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1DistributionMapping_1_1Ref_1ad05bb174b684bf176574ad7d0a7b08c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class DistributionMapping</definition>
        <argsstring></argsstring>
        <name>DistributionMapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="329" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1DistributionMapping_1_1Ref_1a71bfe2565cefe2ceb8ad882db3ebabc3" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::DistributionMapping::Ref::m_pmap</definition>
        <argsstring></argsstring>
        <name>m_pmap</name>
        <briefdescription>
<para>index array for all boxes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="344" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1DistributionMapping_1_1Ref_1a89d87a77852f51756c34d02d92cf8656" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::DistributionMapping::Ref::m_index_array</definition>
        <argsstring></argsstring>
        <name>m_index_array</name>
        <briefdescription>
<para>index array for local boxes owned by the team </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="345" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1DistributionMapping_1_1Ref_1a2f337d4047cb7af6c2c86b6a56ff0523" prot="public" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; amrex::DistributionMapping::Ref::m_ownership</definition>
        <argsstring></argsstring>
        <name>m_ownership</name>
        <briefdescription>
<para>true ownership </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="346" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1Ref_1a0a613ada5fb3bf01a272b0f2607b14e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::Ref::Ref</definition>
        <argsstring>() noexcept</argsstring>
        <name>Ref</name>
        <briefdescription>
<para>Constructors to match those in <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> .... </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="332" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1Ref_1a8c0cd18f1293d7587f04cdfbe0282095" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::Ref::Ref</definition>
        <argsstring>(int len)</argsstring>
        <name>Ref</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="334" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1Ref_1a641af651d7da7e96317d1544a12caf7c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::Ref::Ref</definition>
        <argsstring>(const Vector&lt; int &gt; &amp;pmap)</argsstring>
        <name>Ref</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>pmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="336" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1Ref_1ae47a673a2d7c94e3483b90b58444be0c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::Ref::Ref</definition>
        <argsstring>(Vector&lt; int &gt; &amp;&amp;pmap) noexcept</argsstring>
        <name>Ref</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;&amp;</type>
          <declname>pmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="338" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="338" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1Ref_1ad219785df46e98d5f667c7e98b878baa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::DistributionMapping::Ref::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>dtor, copy-ctor, copy-op=, move-ctor, and move-op= are compiler generated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="342" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="342" bodyend="342"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4435">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4436">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="4434">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="4435" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="328" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="327" bodyend="347"/>
    <listofallmembers>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1ad219785df46e98d5f667c7e98b878baa" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>clear</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1ad05bb174b684bf176574ad7d0a7b08c3" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>DistributionMapping</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1a89d87a77852f51756c34d02d92cf8656" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>m_index_array</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1a2f337d4047cb7af6c2c86b6a56ff0523" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>m_ownership</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1a71bfe2565cefe2ceb8ad882db3ebabc3" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>m_pmap</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1a0a613ada5fb3bf01a272b0f2607b14e3" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>Ref</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1a8c0cd18f1293d7587f04cdfbe0282095" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>Ref</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1a641af651d7da7e96317d1544a12caf7c" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>Ref</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1Ref_1ae47a673a2d7c94e3483b90b58444be0c" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::Ref</scope><name>Ref</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
