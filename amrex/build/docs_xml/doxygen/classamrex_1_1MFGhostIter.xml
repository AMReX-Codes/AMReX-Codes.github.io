<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1MFGhostIter" kind="class" language="C++" prot="public">
    <compoundname>amrex::MFGhostIter</compoundname>
    <basecompoundref refid="classamrex_1_1MFIter" prot="public" virt="non-virtual">amrex::MFIter</basecompoundref>
    <includes refid="AMReX__MFIter_8H" local="no">AMReX_MFIter.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MFGhostIter_1ac0f73b4439a279cfaf8e200a2739abf4" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FabArrayBase_1_1TileArray" kindref="compound">FabArrayBase::TileArray</ref></type>
        <definition>FabArrayBase::TileArray amrex::MFGhostIter::lta</definition>
        <argsstring></argsstring>
        <name>lta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H" line="245" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MFGhostIter_1a2af23493d978ba121e15f39b9da67648" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MFGhostIter::MFGhostIter</definition>
        <argsstring>(const FabArrayBase &amp;fabarray)</argsstring>
        <name>MFGhostIter</name>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref> &amp;</type>
          <declname>fabarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H" line="242" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp" bodystart="652" bodyend="657"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MFGhostIter_1a991ab1e598e14f1172c2411d488a6d6b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MFGhostIter::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H" line="244" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp" bodystart="660" bodyend="727"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterate over ghost cells. Lots of <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> functions do not work. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2642">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
      </node>
      <node id="2641">
        <label>amrex::MFGhostIter</label>
        <link refid="classamrex_1_1MFGhostIter"/>
        <childnode refid="2642" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2644">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
        <childnode refid="2645" relation="usage">
          <edgelabel>fabArray</edgelabel>
        </childnode>
        <childnode refid="2649" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="2651" relation="usage">
          <edgelabel>index_map</edgelabel>
          <edgelabel>local_index_map</edgelabel>
          <edgelabel>local_tile_index_map</edgelabel>
          <edgelabel>num_local_tiles</edgelabel>
        </childnode>
        <childnode refid="2656" relation="usage">
          <edgelabel>tile_array</edgelabel>
        </childnode>
        <childnode refid="2658" relation="usage">
          <edgelabel>typ</edgelabel>
        </childnode>
      </node>
      <node id="2646">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="2647" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2650">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="2657">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
      </node>
      <node id="2649">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="2649" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="2651">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2652" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2647">
        <label>string</label>
      </node>
      <node id="2652">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="2654">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="2655" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="2659">
        <label>amrex::FabArrayBase::TileArray</label>
        <link refid="structamrex_1_1FabArrayBase_1_1TileArray"/>
        <childnode refid="2651" relation="usage">
          <edgelabel>indexMap</edgelabel>
          <edgelabel>localTileIndexMap</edgelabel>
          <edgelabel>numLocalTiles</edgelabel>
          <edgelabel>localIndexMap</edgelabel>
        </childnode>
        <childnode refid="2656" relation="usage">
          <edgelabel>tileArray</edgelabel>
        </childnode>
      </node>
      <node id="2643">
        <label>amrex::MFGhostIter</label>
        <link refid="classamrex_1_1MFGhostIter"/>
        <childnode refid="2644" relation="public-inheritance">
        </childnode>
        <childnode refid="2659" relation="usage">
          <edgelabel>lta</edgelabel>
        </childnode>
      </node>
      <node id="2658">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="2655">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="2651" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="2648">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="2653">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="2654" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="2656">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2657" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2645">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="2646" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="2648" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="2649" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="2650" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="2651" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="2653" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H" line="240" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H" bodystart="237" bodyend="246"/>
    <listofallmembers>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a96650cf6d7f0f21d0f4b118ae897d008" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>AllBoxes</name></member>
      <member refid="classamrex_1_1MFIter_1a65b335b52bc54d9eaf7030a4fce20cf8" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>beginIndex</name></member>
      <member refid="classamrex_1_1MFIter_1abfba09b9f27138141e9758d1a8ea2e4b" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>currentIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a46b0a938c3d5f41c379d0adc7bf19c0d" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>depth</name></member>
      <member refid="classamrex_1_1MFIter_1a8cc2207634fdad4304d0a46c1e0ea433" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>device_sync</name></member>
      <member refid="classamrex_1_1MFIter_1a47d2e159ed2d66cd78498ea5bea35a17" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MFIter_1a16fa2d144bcc71d665056de5938c4b32" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>dynamic</name></member>
      <member refid="classamrex_1_1MFIter_1a427faab13c7d1f9d72b476452df519e1" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>endIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a198baf9d7f4a208f217569a0c6f02183" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>fabArray</name></member>
      <member refid="classamrex_1_1MFIter_1a3290eb14472377e0118842344967a44c" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>fabbox</name></member>
      <member refid="classamrex_1_1MFIter_1a1184620f493f560be355cf02e5a0e619" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>flags</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>Flags</name></member>
      <member refid="classamrex_1_1MFIter_1ae59e3e67c7b94d6b15158d177dd8cdc8" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a972ba6223b0f4ccca81791b9510b3002" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a1e344ffd39d3dba95d582a7d93c1ad97" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1ac9653cce066f73c95c3ec89f46f38ba1" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aa69f73dbf7931e2d0a3889de2db4a42b" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>index</name></member>
      <member refid="classamrex_1_1MFIter_1ac482cbbf5ecee6f2593a3e4437623082" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>index_map</name></member>
      <member refid="classamrex_1_1MFGhostIter_1a991ab1e598e14f1172c2411d488a6d6b" prot="private" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>isValid</name></member>
      <member refid="classamrex_1_1MFIter_1a3658deeec368fbc6be8f9555ac37bab5" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>length</name></member>
      <member refid="classamrex_1_1MFIter_1a8a8cdb1fbae0dace9fcc0dc622c3409d" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>local_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1a72828c9a333be0dfff3e89e350fd0e11" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>local_tile_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1ab9afc4ebb6b729bcecdba6b22a317e88" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>LocalIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a02c0b04b49bf0116bc21ee53e3593225" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>LocalTileIndex</name></member>
      <member refid="classamrex_1_1MFGhostIter_1ac0f73b4439a279cfaf8e200a2739abf4" prot="private" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>lta</name></member>
      <member refid="classamrex_1_1MFIter_1ae0aa4364654842ee9aaba3d573fb6b01" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>m_fa</name></member>
      <member refid="classamrex_1_1MFGhostIter_1a2af23493d978ba121e15f39b9da67648" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFGhostIter</name></member>
      <member refid="classamrex_1_1MFIter_1aac055187a5b4d7200fc77827dc28a76c" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ae7623281ac9e772db1fc5085a64aeeca" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a1d9668de99635aa50096d0f091d8b9b0" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a830e42aee76ec9fe8dae8bdd262e0b2d" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ad7a19e95ba128febb94b27d2a9d97ef1" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a970e636bf6a2d744068483806ddb7944" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a2c0a016e1d5d69073f2cab81e7c6a095" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1aecfd3f3ef12e8703caad5794968ff06a" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a66b92b6dbfbe1a498ba614df28817709" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a07296b12634219c4a15337435852a67b" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>nextDynamicIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a7a17b4a775ec84d2987cb480c38ed271" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>nodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38af1e51da50b24860035a3665786fe9d14" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>NoTeamBarrier</name></member>
      <member refid="classamrex_1_1MFIter_1a967c3c48ccb4f316911d06fcaccb29fa" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>num_local_tiles</name></member>
      <member refid="classamrex_1_1MFIter_1afbbd9093cd125af3cebbc8f8231bb142" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>numLocalTiles</name></member>
      <member refid="classamrex_1_1MFIter_1aec727f262b8f91587f66613da26fcbbb" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a30a84aa6392dc4536c6761c0cf72b097" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>SkipInit</name></member>
      <member refid="classamrex_1_1MFIter_1a6387ff79e8fcfbfdcfbc7dd8d8e78621" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>streams</name></member>
      <member refid="classamrex_1_1MFIter_1a8a7f84508a19797af16e5f3f6b13523c" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>theFabArrayBase</name></member>
      <member refid="classamrex_1_1MFIter_1a10b2f0f6900d23295fe25fd526153f43" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>tile_array</name></member>
      <member refid="classamrex_1_1MFIter_1ae64d80e0b2d14e9209c426a0654e8a1f" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1MFIter_1a4633394eac1ff3355fe082b815ed7413" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aade25ad6c9b6b92a5dbe2e022fc77912" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3563f863ba15b874a9abd0dc338c0c72" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3d73098e8ef5205fc2bce58d5ed0f21b" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>tileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a1db74b1bbdeb756077e4bc33e25a2740" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>Tiling</name></member>
      <member refid="classamrex_1_1MFIter_1a1406cbb9152b357a39e877b78eb8ff0d" prot="protected" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>typ</name></member>
      <member refid="classamrex_1_1MFIter_1a77ae102619461dabde09c7801390b841" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>validbox</name></member>
      <member refid="classamrex_1_1MFIter_1aac3223d243bff8f86cbd227b8f1af866" prot="public" virt="non-virtual"><scope>amrex::MFGhostIter</scope><name>~MFIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
