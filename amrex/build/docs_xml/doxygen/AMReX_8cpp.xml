<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX_8cpp" kind="file" language="C++">
    <compoundname>AMReX.cpp</compoundname>
    <includes refid="AMReX__FileSystem_8H" local="no">AMReX_FileSystem.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <includes refid="AMReX__BaseFab_8H" local="no">AMReX_BaseFab.H</includes>
    <includes refid="AMReX__Box_8H" local="no">AMReX_Box.H</includes>
    <includes refid="AMReX__BLProfiler_8H" local="no">AMReX_BLProfiler.H</includes>
    <includes refid="AMReX__BLFort_8H" local="no">AMReX_BLFort.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__Random_8H" local="no">AMReX_Random.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <includes refid="AMReX__Arena_8H" local="no">AMReX_Arena.H</includes>
    <includes refid="AMReX__BLBackTrace_8H" local="no">AMReX_BLBackTrace.H</includes>
    <includes refid="AMReX__MemPool_8H" local="no">AMReX_MemPool.H</includes>
    <includes refid="AMReX__Geometry_8H" local="no">AMReX_Geometry.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__Machine_8H" local="no">AMReX_Machine.H</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__MultiFab_8H" local="no">AMReX_MultiFab.H</includes>
    <includes refid="AMReX__iMultiFab_8H" local="no">AMReX_iMultiFab.H</includes>
    <includes refid="AMReX__VisMF_8H" local="no">AMReX_VisMF.H</includes>
    <includes refid="AMReX__AsyncOut_8H" local="no">AMReX_AsyncOut.H</includes>
    <includes local="no">cfenv</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">csignal</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">new</includes>
    <includes local="no">stack</includes>
    <includes local="no">limits</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="5672">
        <label>list</label>
      </node>
      <node id="5663">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5598" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
      </node>
      <node id="5609">
        <label>atomic</label>
      </node>
      <node id="5671">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5584" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5672" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
      </node>
      <node id="5669">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
      </node>
      <node id="5594">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5595" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
      </node>
      <node id="5633">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5638">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5593">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5683">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="5657">
        <label>iomanip</label>
      </node>
      <node id="5582">
        <label>functional</label>
      </node>
      <node id="5690">
        <label>queue</label>
      </node>
      <node id="5600">
        <label>limits</label>
      </node>
      <node id="5587">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
      </node>
      <node id="5602">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
      </node>
      <node id="5646">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
      </node>
      <node id="5625">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5626" relation="include">
        </childnode>
        <childnode refid="5602" relation="include">
        </childnode>
        <childnode refid="5611" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
      </node>
      <node id="5674">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5608" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5675" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
      </node>
      <node id="5659">
        <label>iterator</label>
      </node>
      <node id="5577">
        <label>float.h</label>
      </node>
      <node id="5678">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5625" relation="include">
        </childnode>
        <childnode refid="5627" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5679" relation="include">
        </childnode>
        <childnode refid="5669" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
      </node>
      <node id="5652">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5564">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
      </node>
      <node id="5569">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5570" relation="include">
        </childnode>
      </node>
      <node id="5630">
        <label>cstdint</label>
      </node>
      <node id="5667">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5668" relation="include">
        </childnode>
      </node>
      <node id="5621">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5586" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5601" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5624" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5625" relation="include">
        </childnode>
        <childnode refid="5627" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5552" relation="include">
        </childnode>
      </node>
      <node id="5682">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="5683" relation="include">
        </childnode>
        <childnode refid="5684" relation="include">
        </childnode>
      </node>
      <node id="5655">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
      </node>
      <node id="5644">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5592" relation="include">
        </childnode>
        <childnode refid="5645" relation="include">
        </childnode>
        <childnode refid="5647" relation="include">
        </childnode>
        <childnode refid="5646" relation="include">
        </childnode>
      </node>
      <node id="5648">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5649" relation="include">
        </childnode>
        <childnode refid="5582" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5650" relation="include">
        </childnode>
        <childnode refid="5646" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
      </node>
      <node id="5561">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
      </node>
      <node id="5583">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5584" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5586" relation="include">
        </childnode>
        <childnode refid="5568" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
      </node>
      <node id="5592">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5673">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5674" relation="include">
        </childnode>
        <childnode refid="5676" relation="include">
        </childnode>
        <childnode refid="5685" relation="include">
        </childnode>
        <childnode refid="5669" relation="include">
        </childnode>
      </node>
      <node id="5579">
        <label>cmath</label>
      </node>
      <node id="5570">
        <label>cassert</label>
      </node>
      <node id="5576">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5577" relation="include">
        </childnode>
      </node>
      <node id="5572">
        <label>stdexcept</label>
      </node>
      <node id="5557">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5606">
        <label>numeric</label>
      </node>
      <node id="5685">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5676" relation="include">
        </childnode>
        <childnode refid="5681" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
      </node>
      <node id="5554">
        <label>string</label>
      </node>
      <node id="5636">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5592" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5638" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
      </node>
      <node id="5692">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5582" relation="include">
        </childnode>
      </node>
      <node id="5622">
        <label>map</label>
      </node>
      <node id="5618">
        <label>unordered_set</label>
      </node>
      <node id="5613">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
      </node>
      <node id="5637">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
      </node>
      <node id="5566">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5624">
        <label>cfloat</label>
      </node>
      <node id="5595">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
      </node>
      <node id="5558">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5560" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
      </node>
      <node id="5560">
        <label>fstream</label>
      </node>
      <node id="5611">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5602" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
      </node>
      <node id="5670">
        <label>AMReX_Machine.H</label>
        <link refid="AMReX__Machine_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
      </node>
      <node id="5688">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5560" relation="include">
        </childnode>
        <childnode refid="5689" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5690" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5676" relation="include">
        </childnode>
        <childnode refid="5674" relation="include">
        </childnode>
        <childnode refid="5691" relation="include">
        </childnode>
        <childnode refid="5692" relation="include">
        </childnode>
      </node>
      <node id="5642">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
      </node>
      <node id="5591">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5592" relation="include">
        </childnode>
      </node>
      <node id="5565">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5567" relation="include">
        </childnode>
        <childnode refid="5569" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5571" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5578" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5582" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5568" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
      </node>
      <node id="5628">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5629" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
      </node>
      <node id="5573">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5629">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
      </node>
      <node id="5555">
        <label>sys/types.h</label>
      </node>
      <node id="5653">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
      </node>
      <node id="5612">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
      </node>
      <node id="5664">
        <label>AMReX_MemPool.H</label>
        <link refid="AMReX__MemPool_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
      </node>
      <node id="5631">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
      </node>
      <node id="5605">
        <label>typeinfo</label>
      </node>
      <node id="5567">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5568" relation="include">
        </childnode>
      </node>
      <node id="5665">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5666" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5667" relation="include">
        </childnode>
        <childnode refid="5669" relation="include">
        </childnode>
      </node>
      <node id="5615">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5616" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5617" relation="include">
        </childnode>
        <childnode refid="5618" relation="include">
        </childnode>
        <childnode refid="5582" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
      </node>
      <node id="5553">
        <label>AMReX_Config.H</label>
      </node>
      <node id="5568">
        <label>cstdio</label>
      </node>
      <node id="5684">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="5649">
        <label>tuple</label>
      </node>
      <node id="5627">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
      </node>
      <node id="5604">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5567" relation="include">
        </childnode>
      </node>
      <node id="5603">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
      </node>
      <node id="5556">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5558" relation="include">
        </childnode>
        <childnode refid="5583" relation="include">
        </childnode>
        <childnode refid="5587" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5605" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5582" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5606" relation="include">
        </childnode>
        <childnode refid="5607" relation="include">
        </childnode>
      </node>
      <node id="5639">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
      </node>
      <node id="5668">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5578" relation="include">
        </childnode>
      </node>
      <node id="5584">
        <label>stack</label>
      </node>
      <node id="5563">
        <label>vector</label>
      </node>
      <node id="5610">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
      </node>
      <node id="5680">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5678" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5674" relation="include">
        </childnode>
        <childnode refid="5667" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
      </node>
      <node id="5694">
        <label>new</label>
      </node>
      <node id="5661">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
      </node>
      <node id="5585">
        <label>utility</label>
      </node>
      <node id="5596">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5594" relation="include">
        </childnode>
        <childnode refid="5598" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5602" relation="include">
        </childnode>
        <childnode refid="5603" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5604" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
      </node>
      <node id="5677">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5602" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
        <childnode refid="5611" relation="include">
        </childnode>
      </node>
      <node id="5589">
        <label>array</label>
      </node>
      <node id="5654">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
      </node>
      <node id="5586">
        <label>sstream</label>
      </node>
      <node id="5658">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5606" relation="include">
        </childnode>
        <childnode refid="5659" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5660" relation="include">
        </childnode>
        <childnode refid="5655" relation="include">
        </childnode>
        <childnode refid="5661" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
      </node>
      <node id="5574">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5575" relation="include">
        </childnode>
      </node>
      <node id="5641">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5633" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5592" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5643" relation="include">
        </childnode>
        <childnode refid="5644" relation="include">
        </childnode>
        <childnode refid="5634" relation="include">
        </childnode>
        <childnode refid="5648" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5610" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5639" relation="include">
        </childnode>
        <childnode refid="5629" relation="include">
        </childnode>
        <childnode refid="5594" relation="include">
        </childnode>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5651" relation="include">
        </childnode>
        <childnode refid="5652" relation="include">
        </childnode>
      </node>
      <node id="5651">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5645">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5646" relation="include">
        </childnode>
      </node>
      <node id="5681">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5678" relation="include">
        </childnode>
        <childnode refid="5680" relation="include">
        </childnode>
      </node>
      <node id="5597">
        <label>iosfwd</label>
      </node>
      <node id="5580">
        <label>cstdlib</label>
      </node>
      <node id="5686">
        <label>AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5687" relation="include">
        </childnode>
        <childnode refid="5676" relation="include">
        </childnode>
        <childnode refid="5685" relation="include">
        </childnode>
        <childnode refid="5665" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
      </node>
      <node id="5620">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5650">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
      </node>
      <node id="5608">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5601" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5609" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5610" relation="include">
        </childnode>
        <childnode refid="5611" relation="include">
        </childnode>
        <childnode refid="5612" relation="include">
        </childnode>
        <childnode refid="5615" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5587" relation="include">
        </childnode>
        <childnode refid="5619" relation="include">
        </childnode>
        <childnode refid="5620" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5631" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5578" relation="include">
        </childnode>
      </node>
      <node id="5693">
        <label>cfenv</label>
      </node>
      <node id="5581">
        <label>iostream</label>
      </node>
      <node id="5687">
        <label>AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5608" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
      </node>
      <node id="5588">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5586" relation="include">
        </childnode>
        <childnode refid="5568" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5594" relation="include">
        </childnode>
        <childnode refid="5595" relation="include">
        </childnode>
      </node>
      <node id="5614">
        <label>cstddef</label>
      </node>
      <node id="5551">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
        <childnode refid="5552" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5608" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5587" relation="include">
        </childnode>
        <childnode refid="5663" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5583" relation="include">
        </childnode>
        <childnode refid="5664" relation="include">
        </childnode>
        <childnode refid="5665" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5670" relation="include">
        </childnode>
        <childnode refid="5671" relation="include">
        </childnode>
        <childnode refid="5673" relation="include">
        </childnode>
        <childnode refid="5686" relation="include">
        </childnode>
        <childnode refid="5688" relation="include">
        </childnode>
        <childnode refid="5692" relation="include">
        </childnode>
        <childnode refid="5693" relation="include">
        </childnode>
        <childnode refid="5568" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5607" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5657" relation="include">
        </childnode>
        <childnode refid="5694" relation="include">
        </childnode>
        <childnode refid="5584" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
      </node>
      <node id="5647">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5592" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5604" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
      </node>
      <node id="5626">
        <label>unordered_map</label>
      </node>
      <node id="5601">
        <label>climits</label>
      </node>
      <node id="5599">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5595" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5578" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5601" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
      </node>
      <node id="5617">
        <label>mutex</label>
      </node>
      <node id="5660">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5655" relation="include">
        </childnode>
        <childnode refid="5658" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
      </node>
      <node id="5623">
        <label>chrono</label>
      </node>
      <node id="5691">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5597" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5574" relation="include">
        </childnode>
      </node>
      <node id="5607">
        <label>csignal</label>
      </node>
      <node id="5675">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5620" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
      </node>
      <node id="5634">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5639" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5559" relation="include">
        </childnode>
      </node>
      <node id="5689">
        <label>thread</label>
      </node>
      <node id="5679">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
      </node>
      <node id="5578">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
        <childnode refid="5579" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
      </node>
      <node id="5632">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5633" relation="include">
        </childnode>
        <childnode refid="5567" relation="include">
        </childnode>
        <childnode refid="5569" relation="include">
        </childnode>
        <childnode refid="5592" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5634" relation="include">
        </childnode>
        <childnode refid="5641" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5645" relation="include">
        </childnode>
        <childnode refid="5647" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5653" relation="include">
        </childnode>
        <childnode refid="5654" relation="include">
        </childnode>
        <childnode refid="5643" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5644" relation="include">
        </childnode>
        <childnode refid="5655" relation="include">
        </childnode>
        <childnode refid="5658" relation="include">
        </childnode>
        <childnode refid="5662" relation="include">
        </childnode>
      </node>
      <node id="5643">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5566" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5613" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
      </node>
      <node id="5598">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
      </node>
      <node id="5571">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5572" relation="include">
        </childnode>
      </node>
      <node id="5590">
        <label>type_traits</label>
      </node>
      <node id="5616">
        <label>set</label>
      </node>
      <node id="5666">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
      </node>
      <node id="5676">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5581" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5600" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5563" relation="include">
        </childnode>
        <childnode refid="5562" relation="include">
        </childnode>
        <childnode refid="5616" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5561" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5625" relation="include">
        </childnode>
        <childnode refid="5677" relation="include">
        </childnode>
        <childnode refid="5675" relation="include">
        </childnode>
        <childnode refid="5627" relation="include">
        </childnode>
        <childnode refid="5665" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5557" relation="include">
        </childnode>
        <childnode refid="5587" relation="include">
        </childnode>
        <childnode refid="5669" relation="include">
        </childnode>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5678" relation="include">
        </childnode>
        <childnode refid="5680" relation="include">
        </childnode>
        <childnode refid="5620" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5681" relation="include">
        </childnode>
        <childnode refid="5608" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5682" relation="include">
        </childnode>
      </node>
      <node id="5562">
        <label>algorithm</label>
      </node>
      <node id="5552">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5554" relation="include">
        </childnode>
        <childnode refid="5555" relation="include">
        </childnode>
      </node>
      <node id="5640">
        <label>cstring</label>
      </node>
      <node id="5662">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
      </node>
      <node id="5559">
        <label>memory</label>
      </node>
      <node id="5575">
        <label>inttypes.h</label>
      </node>
      <node id="5635">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5590" relation="include">
        </childnode>
        <childnode refid="5573" relation="include">
        </childnode>
      </node>
      <node id="5656">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5586" relation="include">
        </childnode>
        <childnode refid="5560" relation="include">
        </childnode>
        <childnode refid="5657" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
        <childnode refid="5565" relation="include">
        </childnode>
        <childnode refid="5558" relation="include">
        </childnode>
        <childnode refid="5556" relation="include">
        </childnode>
      </node>
      <node id="5619">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="5553" relation="include">
        </childnode>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5564" relation="include">
        </childnode>
        <childnode refid="5596" relation="include">
        </childnode>
        <childnode refid="5576" relation="include">
        </childnode>
        <childnode refid="5593" relation="include">
        </childnode>
        <childnode refid="5599" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1system">amrex::system</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FileSystem_8H" kindref="compound">AMReX_FileSystem.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BaseFab_8H" kindref="compound">AMReX_BaseFab.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Box_8H" kindref="compound">AMReX_Box.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLProfiler_8H" kindref="compound">AMReX_BLProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLFort_8H" kindref="compound">AMReX_BLFort.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Random_8H" kindref="compound">AMReX_Random.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Arena_8H" kindref="compound">AMReX_Arena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLBackTrace_8H" kindref="compound">AMReX_BLBackTrace.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MemPool_8H" kindref="compound">AMReX_MemPool.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Geometry_8H" kindref="compound">AMReX_Geometry.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUPTI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CuptiTrace_8H" kindref="compound">AMReX_CuptiTrace.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Machine_8H" kindref="compound">AMReX_Machine.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EB2_8H" kindref="compound">AMReX_EB2.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BL_AMRPROF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MultiFab_8H" kindref="compound">AMReX_MultiFab.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__iMultiFab_8H" kindref="compound">AMReX_iMultiFab.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__VisMF_8H" kindref="compound">AMReX_VisMF.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__AsyncOut_8H" kindref="compound">AMReX_AsyncOut.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_LAZY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Lazy_8H" kindref="compound">AMReX_Lazy.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MemProfiler_8H" kindref="compound">AMReX_MemProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xmmintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(__CUDACC__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//MSVC<sp/>can&apos;t<sp/>pre-processor<sp/>cfenv<sp/>with<sp/>`Zc:preprocessor`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//https://developercommunity.visualstudio.com/content/problem/1271183/zcpreprocessor-e-crashes-when-given.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfenv&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;new&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">std::vector&lt;std::unique_ptr&lt;AMReX&gt;<sp/>&gt;<sp/><ref refid="classamrex_1_1AMReX_1ad7909bf4e2448edc26489e346cb367ac" kindref="member">AMReX::m_instance</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="namespaceamrex_1_1system" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">system</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">exename</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">verbose</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1a795aa5887c4cdd0f1af9818d45442826" kindref="member">signal_handling</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1a1ed2a732c93fe26dfa4fbb63c2a698eb" kindref="member">call_addr2line</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1a265ce78715ba78abdae9a2c5238e5dda" kindref="member">throw_exception</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1af12338a7a6375c2c45658695baac797e" kindref="member">regtest_reduction</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1a8925c400a100a90a4e5affd59f97133c" kindref="member">abort_on_unused_inputs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream*<sp/><ref refid="namespaceamrex_1_1system_1a1a68bc2cdaf82ef2e9fa229a3ca8c978" kindref="member">osout</ref><sp/>=<sp/>&amp;std::cout;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream*<sp/><ref refid="namespaceamrex_1_1system_1a7ad609f085f43ffe0ff1bce4d12efb8f" kindref="member">oserr</ref><sp/>=<sp/>&amp;std::cerr;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa944154cc363fe5103f6638e3726d2ca" kindref="member">ErrorHandler</ref><sp/><ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">error_handler</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>command_line;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>command_arguments;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/><sp/>prev_out_precision;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/><sp/>prev_err_precision;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::new_handler<sp/>prev_new_handler;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*SignalHandler)(<ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>SignalHandler<sp/>prev_handler_sigsegv;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>SignalHandler<sp/>prev_handler_sigterm;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>SignalHandler<sp/>prev_handler_sigint;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>SignalHandler<sp/>prev_handler_sigabrt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>SignalHandler<sp/>prev_handler_sigfpe;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_fpe_excepts;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_fpe_excepts;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>prev_fpe_mask;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>curr_fpe_excepts;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">std::string<sp/><ref refid="namespaceamrex_1ad4158723bb78d3d5f19e396a20c0ce2d" kindref="member">amrex::Version</ref><sp/>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_GIT_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(AMREX_GIT_VERSION);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1acafd26c0f64d958aed9ee56043c4f10e" kindref="member">amrex::Verbose</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">amrex::system::verbose</ref>;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a125dcbb8afa7e676566242972a5b7757" kindref="member">amrex::SetVerbose</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">amrex::system::verbose</ref><sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae82a731c021b58a742101a3d5f803438" kindref="member">amrex::SetErrorHandler</ref><sp/>(<ref refid="namespaceamrex_1aa944154cc363fe5103f6638e3726d2ca" kindref="member">amrex::ErrorHandler</ref><sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">amrex::system::error_handler</ref><sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>by<sp/>amrex::Error(),<sp/>amrex::Abort(),<sp/>and<sp/>amrex::Assert()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>ensure<sp/>that<sp/>when<sp/>writing<sp/>the<sp/>message<sp/>to<sp/>stderr,<sp/>that<sp/>no<sp/>additional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>heap-based<sp/>memory<sp/>is<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="namespaceamrex_1a0c0dc9355722e150b88c6fc71422288e" kindref="member">amrex::write_to_stderr_without_buffering</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>all<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(NULL);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>procall;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>procall<sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>procall.str();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cprocall<sp/>=<sp/>tmp.c_str();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>!!!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(cprocall,<sp/>strlen(cprocall),<sp/>1,<sp/>stderr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(str,<sp/>strlen(str),<sp/>1,<sp/>stderr);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(end,<sp/>strlen(end),<sp/>1,<sp/>stderr);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">write_lib_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;amrex::&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(s,<sp/>strlen(s),<sp/>1,<sp/>stderr);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>msg<sp/>)<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(msg,<sp/>strlen(msg),<sp/>1,<sp/>stderr);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(</highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>1,<sp/>stderr);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">amrex::Error</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">Error</ref>(msg.c_str());</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">Abort</ref>(msg.c_str());</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="namespaceamrex_1ad1cc69bc2c0172148e82713abb30d2dd" kindref="member">amrex::Warning</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad1cc69bc2c0172148e82713abb30d2dd" kindref="member">Warning</ref>(msg.c_str());</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="namespaceamrex_1a4393d2710f894c8b161fa2ec1f57012c" kindref="member">amrex::Error_host</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref>(msg);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a265ce78715ba78abdae9a2c5238e5dda" kindref="member">system::throw_exception</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac3aaf3d47b0fc6e69f9405fcebcdc4fe" kindref="member">RuntimeError</ref>(msg);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_lib_id(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0c0dc9355722e150b88c6fc71422288e" kindref="member">write_to_stderr_without_buffering</ref>(msg);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(amrex_abort_omp_critical)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ae6927a6804e22fedb86c1fe19d6567fc" kindref="member">ParallelDescriptor::Abort</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)<sp/>&amp;&amp;<sp/>!defined(NDEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AMREX_DEVICE_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">amrex::Error_device<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)<sp/>AMREX_DEVICE_PRINTF(</highlight><highlight class="stringliteral">&quot;Error<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_DEVICE_ASSERT(0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="namespaceamrex_1ac1e74d5d4c035c4f129a0cbb28077cf9" kindref="member">amrex::Warning_host</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>(<ref refid="classamrex_1_1Print_1ac54860bd8ad68a5551e588ff8e01aa3b" kindref="member">Print::AllProcs</ref>,<ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>())<sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)<sp/>&amp;&amp;<sp/>!defined(NDEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AMREX_DEVICE_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">amrex::Warning_device<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)<sp/>AMREX_DEVICE_PRINTF(</highlight><highlight class="stringliteral">&quot;Warning<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="namespaceamrex_1a8398035908737ba94950398e8e449d4e" kindref="member">amrex::Abort_host</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref>(msg);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a265ce78715ba78abdae9a2c5238e5dda" kindref="member">system::throw_exception</ref>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac3aaf3d47b0fc6e69f9405fcebcdc4fe" kindref="member">RuntimeError</ref>(msg);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_lib_id(</highlight><highlight class="stringliteral">&quot;Abort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0c0dc9355722e150b88c6fc71422288e" kindref="member">write_to_stderr_without_buffering</ref>(msg);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(amrex_abort_omp_critical)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ae6927a6804e22fedb86c1fe19d6567fc" kindref="member">ParallelDescriptor::Abort</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)<sp/>&amp;&amp;<sp/>!defined(NDEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AMREX_DEVICE_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">amrex::Abort_device<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)<sp/>AMREX_DEVICE_PRINTF(</highlight><highlight class="stringliteral">&quot;Abort<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_DEVICE_ASSERT(0);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="namespaceamrex_1a7316f24daca402f64791688d4c49148e" kindref="member">amrex::Assert_host</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>EX,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[N];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>`%s&apos;<sp/>failed,<sp/>file<sp/>\&quot;%s\&quot;,<sp/>line<sp/>%d,<sp/>Msg:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EX,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>`%s&apos;<sp/>failed,<sp/>file<sp/>\&quot;%s\&quot;,<sp/>line<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EX,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref>)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref>(buf);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a265ce78715ba78abdae9a2c5238e5dda" kindref="member">system::throw_exception</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac3aaf3d47b0fc6e69f9405fcebcdc4fe" kindref="member">RuntimeError</ref>(buf);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0c0dc9355722e150b88c6fc71422288e" kindref="member">write_to_stderr_without_buffering</ref>(buf);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(amrex_abort_omp_critical)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ae6927a6804e22fedb86c1fe19d6567fc" kindref="member">ParallelDescriptor::Abort</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)<sp/>&amp;&amp;<sp/>!defined(NDEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AMREX_DEVICE_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">amrex::Assert_device<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>EX,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_DEVICE_PRINTF(</highlight><highlight class="stringliteral">&quot;Assertion<sp/>`%s&apos;<sp/>failed,<sp/>file<sp/>\&quot;%s\&quot;,<sp/>line<sp/>%d,<sp/>Msg:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EX,<sp/>file,<sp/>line,<sp/>msg);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_DEVICE_PRINTF(</highlight><highlight class="stringliteral">&quot;Assertion<sp/>`%s&apos;<sp/>failed,<sp/>file<sp/>\&quot;%s\&quot;,<sp/>line<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EX,<sp/>file,<sp/>line);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_DEVICE_ASSERT(0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stack&lt;amrex::PTR_TO_VOID_FUNC&gt;<sp/>The_Finalize_Function_Stack;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stack&lt;amrex::PTR_TO_VOID_FUNC&gt;<sp/>The_Initialize_Function_Stack;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref><sp/>(<ref refid="namespaceamrex_1a436b95e95cc4994a7c179e3cebe42ea6" kindref="member">PTR_TO_VOID_FUNC</ref><sp/>fp)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>The_Finalize_Function_Stack.push(fp);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="namespaceamrex_1a6911748ceb0d88bf5b6bf7f3f0402e97" kindref="member">amrex::ExecOnInitialize</ref><sp/>(<ref refid="namespaceamrex_1a436b95e95cc4994a7c179e3cebe42ea6" kindref="member">PTR_TO_VOID_FUNC</ref><sp/>fp)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>The_Initialize_Function_Stack.push(fp);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="classamrex_1_1AMReX" kindref="compound">amrex::AMReX</ref>*</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">amrex::Initialize</ref><sp/>(<ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>mpi_comm,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>a_osout,<sp/>std::ostream&amp;<sp/>a_oserr,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa944154cc363fe5103f6638e3726d2ca" kindref="member">ErrorHandler</ref><sp/>a_errhandler)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">Initialize</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>mpi_comm,<sp/>{},<sp/>a_osout,<sp/>a_oserr,<sp/>a_errhandler);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="classamrex_1_1AMReX" kindref="compound">amrex::AMReX</ref>*</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">amrex::Initialize</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**&amp;<sp/>argv,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>build_parm_parse,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>mpi_comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;&amp;<sp/>func_parm_parse,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>a_osout,<sp/>std::ostream&amp;<sp/>a_oserr,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa944154cc363fe5103f6638e3726d2ca" kindref="member">ErrorHandler</ref><sp/>a_errhandler)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">system::exename</ref>.clear();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>system::verbose<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1af12338a7a6375c2c45658695baac797e" kindref="member">system::regtest_reduction</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a795aa5887c4cdd0f1af9818d45442826" kindref="member">system::signal_handling</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a1ed2a732c93fe26dfa4fbb63c2a698eb" kindref="member">system::call_addr2line</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a265ce78715ba78abdae9a2c5238e5dda" kindref="member">system::throw_exception</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a1a68bc2cdaf82ef2e9fa229a3ca8c978" kindref="member">system::osout</ref><sp/>=<sp/>&amp;a_osout;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a7ad609f085f43ffe0ff1bce4d12efb8f" kindref="member">system::oserr</ref><sp/>=<sp/>&amp;a_oserr;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1a9f39fba69f46fa4e82418736d4fbdd9b" kindref="member">system::error_handler</ref><sp/>=<sp/>a_errhandler;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1adc667e1643fbfe75b057369aed1ca519" kindref="member">ParallelDescriptor::StartParallel</ref>(&amp;argc,<sp/>&amp;argv,<sp/>mpi_comm);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_out_precision<sp/>=<sp/><ref refid="namespaceamrex_1_1system_1a1a68bc2cdaf82ef2e9fa229a3ca8c978" kindref="member">system::osout</ref>-&gt;precision(10);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_err_precision<sp/>=<sp/><ref refid="namespaceamrex_1_1system_1a7ad609f085f43ffe0ff1bce4d12efb8f" kindref="member">system::oserr</ref>-&gt;precision(10);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_PMI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>ParallelDescriptor::PMI_Initialize();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>catch<sp/>new<sp/>failures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_new_handler<sp/>=<sp/>std::set_new_handler(<ref refid="namespaceamrex_1afe890be0bd82650235456eabcf50e309" kindref="member">amrex::OutOfMemory</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>command_line.clear();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>command_arguments.clear();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[0][0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">system::exename</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1FileSystem_1aabdade8ca72598b4b02073e1d72c8afe" kindref="member">FileSystem::CurrentPath</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">system::exename</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">system::exename</ref><sp/>+=<sp/>argv[0];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/>command_line.append(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_line.append(argv[i]);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_arguments.push_back(std::string(argv[i]));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_UPCXX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>upcxx::init();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>The_Initialize_Function_Stack.empty())</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>registered<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*The_Initialize_Function_Stack.top())();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>then<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The_Initialize_Function_Stack.pop();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1af4a614227ddc7bbdb956a6f28dce1786" kindref="member">BL_PROFILE_INITIALIZE</ref>();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BL_AMRPROF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(build_parm_parse)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse_1a302162fcd495ffd22ab0ebb8d8f36a05" kindref="member">ParmParse::Initialize</ref>(0,0,0);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ppargc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>ppargc<sp/>&lt;<sp/>argc;<sp/>++ppargc)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[ppargc],<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ppargc<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(argv[1],</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse_1a302162fcd495ffd22ab0ebb8d8f36a05" kindref="member">ParmParse::Initialize</ref>(ppargc-1,argv+1,0);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse_1a302162fcd495ffd22ab0ebb8d8f36a05" kindref="member">ParmParse::Initialize</ref>(ppargc-2,argv+2,argv[1]);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse_1a302162fcd495ffd22ab0ebb8d8f36a05" kindref="member">ParmParse::Initialize</ref>(0,0,0);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(func_parm_parse)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_parm_parse();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref><sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>(</highlight><highlight class="stringliteral">&quot;amrex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">system::verbose</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">system::verbose</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>after<sp/>ParmParse<sp/>so<sp/>that<sp/>we<sp/>can<sp/>read<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1Device_1aea19aa89a556ee88fe67f6067c0abacd" kindref="member">Gpu::Device::Initialize</ref>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUPTI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>CuptiInitialize();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref><sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>(</highlight><highlight class="stringliteral">&quot;amrex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;regtest_reduction&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1af12338a7a6375c2c45658695baac797e" kindref="member">system::regtest_reduction</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;signal_handling&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1a795aa5887c4cdd0f1af9818d45442826" kindref="member">system::signal_handling</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;throw_exception&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1a265ce78715ba78abdae9a2c5238e5dda" kindref="member">system::throw_exception</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;call_addr2line&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1a1ed2a732c93fe26dfa4fbb63c2a698eb" kindref="member">system::call_addr2line</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;abort_on_unused_inputs&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceamrex_1_1system_1a8925c400a100a90a4e5affd59f97133c" kindref="member">system::abort_on_unused_inputs</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a795aa5887c4cdd0f1af9818d45442826" kindref="member">system::signal_handling</ref>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>save<sp/>the<sp/>singal<sp/>handlers<sp/>and<sp/>restore<sp/>them<sp/>in<sp/>Finalize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigsegv<sp/>=<sp/>signal(SIGSEGV,<sp/><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>);<sp/></highlight><highlight class="comment">//<sp/>catch<sp/>seg<sp/>fault</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigint<sp/>=<sp/>signal(SIGINT,<sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigabrt<sp/>=<sp/>signal(SIGABRT,<sp/><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>term<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;handle_sigterm&quot;</highlight><highlight class="normal">,<sp/>term);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(term)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigterm<sp/>=<sp/>signal(SIGTERM,<sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigterm<sp/>=<sp/>SIG_ERR;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigfpe<sp/>=<sp/>SIG_ERR;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invalid<sp/>=<sp/>0,<sp/>divbyzero=0,<sp/>overflow=0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;fpe_trap_invalid&quot;</highlight><highlight class="normal">,<sp/>invalid);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;fpe_trap_zero&quot;</highlight><highlight class="normal">,<sp/>divbyzero);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;fpe_trap_overflow&quot;</highlight><highlight class="normal">,<sp/>overflow);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_fpe_excepts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invalid)<sp/><sp/><sp/>curr_fpe_excepts<sp/>|=<sp/>FE_INVALID;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(divbyzero)<sp/>curr_fpe_excepts<sp/>|=<sp/>FE_DIVBYZERO;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overflow)<sp/><sp/>curr_fpe_excepts<sp/>|=<sp/>FE_OVERFLOW;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(AMREX_USE_DPCPP)<sp/>&amp;&amp;<sp/>(!defined(__PGI)<sp/>||<sp/>(__PGIC__<sp/>&gt;=<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>fpe<sp/>trap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_fpe_excepts<sp/>=<sp/>fegetexcept();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_fpe_excepts<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feenableexcept(curr_fpe_excepts);<sp/><sp/></highlight><highlight class="comment">//<sp/>trap<sp/>floating<sp/>point<sp/>exceptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigfpe<sp/>=<sp/>signal(SIGFPE,<sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_fpe_mask<sp/>=<sp/>_MM_GET_EXCEPTION_MASK();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_fpe_excepts<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invalid)<sp/><sp/><sp/>curr_fpe_excepts<sp/>|=<sp/>_MM_MASK_INVALID;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(divbyzero)<sp/>curr_fpe_excepts<sp/>|=<sp/>_MM_MASK_DIV_ZERO;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overflow)<sp/><sp/>curr_fpe_excepts<sp/>|=<sp/>_MM_MASK_OVERFLOW;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_fpe_excepts<sp/>!=<sp/>0u)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MM_SET_EXCEPTION_MASK(prev_fpe_mask<sp/>&amp;<sp/>~curr_fpe_excepts);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_handler_sigfpe<sp/>=<sp/>signal(SIGFPE,<sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a916170832821539e49f051409018ffcb" kindref="member">ParallelDescriptor::Initialize</ref>();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena_1a9f40990a545f4d280e905117fc6a0786" kindref="member">Arena::Initialize</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__MemPool_8cpp_1a0c81aff9a077e415a6dba72b2b8b8e6a" kindref="member">amrex_mempool_init</ref>();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>random<sp/>seed<sp/>after<sp/>we&apos;re<sp/>running<sp/>in<sp/>parallel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae9f820f5a65928568f3751fd584fa5ed" kindref="member">amrex::InitRandom</ref>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()+1,<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>thread<sp/>safety,<sp/>we<sp/>should<sp/>do<sp/>these<sp/>initializations<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a652bd22fb8cfcdfeaa4ac62e81a41fe6" kindref="member">BaseFab_Initialize</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">BoxArray::Initialize</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DistributionMapping_1a03ecb8f0d75887ecef410b64566586bc" kindref="member">DistributionMapping::Initialize</ref>();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FArrayBox_1a35b1135bdf17ab4f4022cf60745ade37" kindref="member">FArrayBox::Initialize</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IArrayBox_1aff085ec8097788fc08d663f81062154e" kindref="member">IArrayBox::Initialize</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ab9d1477fa7e20518ac22fdb03574a4b2" kindref="member">FabArrayBase::Initialize</ref>();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1a7d869f54f3d6f4e3ede7eb0103954a9e" kindref="member">MultiFab::Initialize</ref>();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1iMultiFab_1a04e68d07c0aae11be5946e24023b17d3" kindref="member">iMultiFab::Initialize</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1aca0f6fbf4458284d275ca2f0625c2303" kindref="member">VisMF::Initialize</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1AsyncOut_1ad322c4e7eab6b75bf9448b5b7d464ee1" kindref="member">AsyncOut::Initialize</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1EB2_1a44d269eae8c3bc0c9c0aff8961ed61be" kindref="member">EB2::Initialize</ref>();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a33f560858981005fca770549cfb9a2a0" kindref="member">BL_PROFILE_INITPARAMS</ref>();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1machine_1a42a34e9b2688dfa4616c06781fe06d83" kindref="member">machine::Initialize</ref>();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">Gpu::Fuser::Initialize</ref>();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">system::verbose</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MPI<sp/>initialized<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>()</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MPI<sp/>processes\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>provided<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Query_thread(&amp;provided);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MPI<sp/>initialized<sp/>with<sp/>thread<sp/>support<sp/>level<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>provided<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>static_assert(_OPENMP<sp/>&gt;=<sp/>201107,<sp/>&quot;OpenMP<sp/>&gt;=<sp/>3.1<sp/>is<sp/>required.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OMP<sp/>initialized<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex__omp__module_1a88c4536a09e2cc9d9edff5cd040814db" kindref="member">omp_get_max_threads</ref>()</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>OMP<sp/>threads\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AMReX<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1ad4158723bb78d3d5f19e396a20c0ce2d" kindref="member">amrex::Version</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>initialized&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a59a81bf1a35877d4daec58bc653cc4a7" kindref="member">BL_TINY_PROFILE_INITIALIZE</ref>();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AMReX_1aacd757c228bab84f39dc148cc5777624" kindref="member">AMReX::push</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref>());</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AMReX_1a961f4d4e88be70b0f922d93122c5f0ca" kindref="member">AMReX::top</ref>();</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">amrex::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">amrex::Finalize</ref>(<ref refid="classamrex_1_1AMReX_1a961f4d4e88be70b0f922d93122c5f0ca" kindref="member">AMReX::top</ref>());</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">amrex::Finalize</ref><sp/>(<ref refid="classamrex_1_1AMReX" kindref="compound">amrex::AMReX</ref>*<sp/>pamrex)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AMReX_1a745d2d5f1157d1c3cb6b620f5544e01d" kindref="member">AMReX::erase</ref>(pamrex);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a373794716931c07a8349cfaf1072fd65" kindref="member">BL_TINY_PROFILE_FINALIZE</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1af6e6a59876ea1cd91a6c98ca7490f915" kindref="member">BL_PROFILE_FINALIZE</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1abce0125a244f443854b1c4a2709c5990" kindref="member">amrex::DeallocateRandomSeedDevArray</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_LAZY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Lazy_1a01ac7d4ed0bfab3839b45995cf260a05" kindref="member">Lazy::Finalize</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!The_Finalize_Function_Stack.empty())</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>registered<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*The_Finalize_Function_Stack.top())();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>then<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The_Finalize_Function_Stack.pop();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>MemPool<sp/>stuff<sp/>is<sp/>not<sp/>using<sp/>The_Finalize_Function_Stack<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>can<sp/>be<sp/>used<sp/>in<sp/>Fortran<sp/>BoxLib.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BL_AMRPROF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">amrex::system::verbose</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp_min,<sp/>mp_max,<sp/>mp_tot;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__MemPool_8cpp_1a29cdf545f17f50c622ecaf176189d29f" kindref="member">amrex_mempool_get_stats</ref>(mp_min,<sp/>mp_max,<sp/>mp_tot);<sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>MB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_tot<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MemPool:<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;min<sp/>used<sp/>in<sp/>a<sp/>thread:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mp_min<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MB,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;max<sp/>used<sp/>in<sp/>a<sp/>thread:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mp_max<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MB,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tot<sp/>used:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mp_tot<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MB.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_max<sp/>=<sp/>mp_tot;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_min<sp/>=<sp/>mp_tot;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a709e52679c5ca426b23c887ffe1b4ab9" kindref="member">ParallelDescriptor::ReduceIntMax</ref>(global_max);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(global_max<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aff32fd8c6e4cd30f666fab624fc4ee86" kindref="member">ParallelDescriptor::ReduceIntMin</ref>(global_min);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MemPool:<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;min<sp/>used<sp/>in<sp/>a<sp/>rank:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>global_min<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MB,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;max<sp/>used<sp/>in<sp/>a<sp/>rank:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>global_max<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MB.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a63001e27552e159e32b2ed48fc39bb1f" kindref="member">MemProfiler::report</ref>(</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a68cb3cd35ae7cc4bc40b4f9cfd44d016" kindref="member">MemProfiler::Finalize</ref>();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__MemPool_8cpp_1a4dd49892147e767c1b44ffb5be366739" kindref="member">amrex_mempool_finalize</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena_1a06dd6197d2081d7dd4c1bed308edd387" kindref="member">Arena::Finalize</ref>();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BL_AMRPROF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a795aa5887c4cdd0f1af9818d45442826" kindref="member">system::signal_handling</ref>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_handler_sigsegv<sp/>!=<sp/>SIG_ERR)<sp/>signal(SIGSEGV,<sp/>prev_handler_sigsegv);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_handler_sigterm<sp/>!=<sp/>SIG_ERR)<sp/>signal(SIGTERM,<sp/>prev_handler_sigterm);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_handler_sigint<sp/>!=<sp/>SIG_ERR)<sp/>signal(SIGINT,<sp/>prev_handler_sigint);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_handler_sigabrt<sp/>!=<sp/>SIG_ERR)<sp/>signal(SIGABRT,<sp/>prev_handler_sigabrt);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_handler_sigfpe<sp/>!=<sp/>SIG_ERR)<sp/>signal(SIGFPE,<sp/>prev_handler_sigfpe);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__PGI)<sp/>||<sp/>(__PGIC__<sp/>&gt;=<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_fpe_excepts<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fedisableexcept(curr_fpe_excepts);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feenableexcept(prev_fpe_excepts);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_fpe_excepts<sp/>!=<sp/>0u)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MM_SET_EXCEPTION_MASK(prev_fpe_mask);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1Device_1a5bf574c7d8adff1fc0593e06d9007078" kindref="member">Gpu::Device::Finalize</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_UPCXX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>upcxx::finalize();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set_new_handler(prev_new_handler);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>().precision(prev_out_precision);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>().precision(prev_err_precision);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_ioproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>shut<sp/>down<sp/>MPI<sp/>if<sp/>GASNet<sp/>is<sp/>still<sp/>using<sp/>MPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GASNET_CONDUIT_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a990d0a17b08dcd68a0d77a7b35cfebaf" kindref="member">ParallelDescriptor::EndParallel</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">amrex::system::verbose</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>is_ioproc)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AMReX<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1ad4158723bb78d3d5f19e396a20c0ce2d" kindref="member">amrex::Version</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>finalized&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref><sp/>()</highlight></codeline>
<codeline lineno="702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="namespaceamrex_1_1system_1a1a68bc2cdaf82ef2e9fa229a3ca8c978" kindref="member">system::osout</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref><sp/>()</highlight></codeline>
<codeline lineno="708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="namespaceamrex_1_1system_1a7ad609f085f43ffe0ff1bce4d12efb8f" kindref="member">system::oserr</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><ref refid="namespaceamrex_1a0b2451baea738a8717530466c13f37fe" kindref="member">amrex::get_command</ref><sp/>()</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command_line;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><ref refid="namespaceamrex_1a0f3d8f755663a93f3953f7cda5590cac" kindref="member">amrex::command_argument_count</ref><sp/>()</highlight></codeline>
<codeline lineno="720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command_arguments.size()-1;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><ref refid="namespaceamrex_1a566544464dedd2d70fe9969fc79658cd" kindref="member">amrex::get_command_argument</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>static_cast&lt;int&gt;(command_arguments.size()))<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command_arguments[number];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="classamrex_1_1AMReX_1ac0662c8a56afbc04493004cebe490826" kindref="member">AMReX::AMReX</ref><sp/>()</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_geom(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>())</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><ref refid="classamrex_1_1AMReX_1aadaaabd7881bbce62f2b282789482259" kindref="member">AMReX::~AMReX</ref><sp/>()</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_geom;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><ref refid="classamrex_1_1AMReX_1aacd757c228bab84f39dc148cc5777624" kindref="member">AMReX::push</ref><sp/>(<ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref>*<sp/>pamrex)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>std::find_if(m_instance.begin(),<sp/>m_instance.end(),</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;AMReX&gt;&amp;<sp/>x)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.get()<sp/>==<sp/>pamrex;<sp/>});</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>m_instance.end())<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_instance.emplace_back(pamrex);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r+1<sp/>!=<sp/>m_instance.end())<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1EB2_1adeed62ac81d87a16c489f15eb4b9e214" kindref="member">std::rotate</ref>(r,<sp/>r+1,<sp/>m_instance.end());</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><ref refid="classamrex_1_1AMReX_1a745d2d5f1157d1c3cb6b620f5544e01d" kindref="member">AMReX::erase</ref><sp/>(<ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref>*<sp/>pamrex)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>std::find_if(m_instance.begin(),<sp/>m_instance.end(),</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;AMReX&gt;&amp;<sp/>x)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.get()<sp/>==<sp/>pamrex;<sp/>});</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>m_instance.end())<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_instance.erase(r);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp"/>
  </compounddef>
</doxygen>
