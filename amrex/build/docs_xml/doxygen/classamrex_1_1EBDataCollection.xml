<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EBDataCollection" kind="class" language="C++" prot="public">
    <compoundname>amrex::EBDataCollection</compoundname>
    <includes refid="AMReX__EBDataCollection_8H" local="no">AMReX_EBDataCollection.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8c1e66f34abde299d2379f0261cfcb53" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::EBDataCollection::m_ngrow</definition>
        <argsstring></argsstring>
        <name>m_ngrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a9d7fc23809662b01ce10290962d272e8" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a7de82761ed632e5ee0b9f912c856aebc" kindref="member">EBSupport</ref></type>
        <definition>EBSupport amrex::EBDataCollection::m_support</definition>
        <argsstring></argsstring>
        <name>m_support</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="44" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a4e9d5ca2618309d4445ac8fa75fafc1f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::EBDataCollection::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a3f3aed898f6ec10c9f141be194499cac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; *</type>
        <definition>FabArray&lt;EBCellFlagFab&gt;* amrex::EBDataCollection::m_cellflags</definition>
        <argsstring></argsstring>
        <name>m_cellflags</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="50" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1ab87f9babcf2b30b23ea7a36ee621538e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
        <definition>MultiFab* amrex::EBDataCollection::m_volfrac</definition>
        <argsstring></argsstring>
        <name>m_volfrac</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1af218d8cf84d1ad47414a36663b2c1b36" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_centroid</definition>
        <argsstring></argsstring>
        <name>m_centroid</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="54" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8a3dfc8b1b1cf5d19c7538d630a4b44b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_bndrycent</definition>
        <argsstring></argsstring>
        <name>m_bndrycent</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="57" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8d677f5c06ce1520cd23addf9d22d5ef" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_bndryarea</definition>
        <argsstring></argsstring>
        <name>m_bndryarea</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="58" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a586018b239d0fd75d2a920b4e7d8fa40" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_bndrynorm</definition>
        <argsstring></argsstring>
        <name>m_bndrynorm</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="59" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1aca26ce33e69ffb0b4314fc8df4074d80" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiCutFab*,AMREX_SPACEDIM&gt; amrex::EBDataCollection::m_areafrac</definition>
        <argsstring></argsstring>
        <name>m_areafrac</name>
        <initializer>{{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(nullptr, nullptr, nullptr)}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="60" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a214bc0754b038960bcc1f574a448671d" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiCutFab*,AMREX_SPACEDIM&gt; amrex::EBDataCollection::m_facecent</definition>
        <argsstring></argsstring>
        <name>m_facecent</name>
        <initializer>{{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(nullptr, nullptr, nullptr)}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="61" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1abf1aacd2cc985798378776af54fd8503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::EBDataCollection</definition>
        <argsstring>(const EB2::Level &amp;a_level, const Geometry &amp;a_geom, const BoxArray &amp;a_ba, const DistributionMapping &amp;a_dm, const Vector&lt; int &gt; &amp;a_ngrow, EBSupport a_support)</argsstring>
        <name>EBDataCollection</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">EB2::Level</ref> &amp;</type>
          <declname>a_level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>a_ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>a_dm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>a_ngrow</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a7de82761ed632e5ee0b9f912c856aebc" kindref="member">EBSupport</ref></type>
          <declname>a_support</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="10" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ac0a68c8f5a6914b596f4c47f43d2f6aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::~EBDataCollection</definition>
        <argsstring>()</argsstring>
        <name>~EBDataCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="25" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="62" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ac8cfe908c7bcdc5b940444e767ceb37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::EBDataCollection</definition>
        <argsstring>(const EBDataCollection &amp;)=delete</argsstring>
        <name>EBDataCollection</name>
        <param>
          <type>const <ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a37fa70dac3bcfbd63a096961c0a97899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::EBDataCollection</definition>
        <argsstring>(EBDataCollection &amp;&amp;)=delete</argsstring>
        <name>EBDataCollection</name>
        <param>
          <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1aab5a65341ff21329cc732af1bfb4f004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        <definition>EBDataCollection&amp; amrex::EBDataCollection::operator=</definition>
        <argsstring>(const EBDataCollection &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ab9f91f646f1ca0f33d5d2d3e14ffec77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        <definition>EBDataCollection&amp; amrex::EBDataCollection::operator=</definition>
        <argsstring>(EBDataCollection &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1acce2adceaba115a5c56167ec8cf3eb79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
        <definition>const FabArray&lt; EBCellFlagFab &gt; &amp; amrex::EBDataCollection::getMultiEBCellFlagFab</definition>
        <argsstring>() const</argsstring>
        <name>getMultiEBCellFlagFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="32" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a9cfca800c4df32f884205e7b0cfa5b4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>const MultiFab &amp; amrex::EBDataCollection::getVolFrac</definition>
        <argsstring>() const</argsstring>
        <name>getVolFrac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a1607508139d564d5f6293d6c68f4a953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getCentroid</definition>
        <argsstring>() const</argsstring>
        <name>getCentroid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a79f870b65936034e5471d628fbd6d9fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getBndryCent</definition>
        <argsstring>() const</argsstring>
        <name>getBndryCent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a8f2facb9d8f388bd34a905d3249dec3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getBndryArea</definition>
        <argsstring>() const</argsstring>
        <name>getBndryArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="36" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ad138261bbea936bf83d44dcca15df02c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getBndryNormal</definition>
        <argsstring>() const</argsstring>
        <name>getBndryNormal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1adb2dec585ef401908ca3e596eb62e851" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt; const MultiCutFab *, AMREX_SPACEDIM &gt; amrex::EBDataCollection::getAreaFrac</definition>
        <argsstring>() const</argsstring>
        <name>getAreaFrac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ad0ed659e56764e900bd11fa12ec33eeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt; const MultiCutFab *, AMREX_SPACEDIM &gt; amrex::EBDataCollection::getFaceCent</definition>
        <argsstring>() const</argsstring>
        <name>getFaceCent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="39" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="119" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1082">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="1062">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="1063" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1065">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="1077">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1057">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="1057" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="1054">
        <label>Real</label>
      </node>
      <node id="1083">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1084" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1075">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="1076" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="1074">
        <label>std::vector&lt; char *, std::allocator&lt; char *&gt; &gt;</label>
      </node>
      <node id="1079">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="1076">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="1077" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="1066">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1067" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1063">
        <label>string</label>
      </node>
      <node id="1051">
        <label>amrex::EBDataCollection</label>
        <link refid="classamrex_1_1EBDataCollection"/>
        <childnode refid="1052" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="1059" relation="usage">
          <edgelabel>m_volfrac</edgelabel>
        </childnode>
        <childnode refid="1086" relation="usage">
          <edgelabel>m_bndryarea</edgelabel>
          <edgelabel>m_bndrycent</edgelabel>
          <edgelabel>m_centroid</edgelabel>
          <edgelabel>m_bndrynorm</edgelabel>
        </childnode>
        <childnode refid="1066" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="1087" relation="usage">
          <edgelabel>m_cellflags</edgelabel>
        </childnode>
      </node>
      <node id="1086">
        <label>amrex::MultiCutFab</label>
        <link refid="classamrex_1_1MultiCutFab"/>
        <childnode refid="1087" relation="usage">
          <edgelabel>m_cellflags</edgelabel>
        </childnode>
        <childnode refid="1088" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="1085">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="1057" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="1080">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="1087">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="1061" relation="public-inheritance">
        </childnode>
        <childnode refid="1071" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="1073" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="1057" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="1075" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="1066" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="1078" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="1080" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="1081" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="1083" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="1085" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="1073">
        <label>amrex::Vector&lt; char *&gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1084">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="1067">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="1055">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="1054" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="1056">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="1057" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="1058" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="1069">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="1070" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="1081">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1082" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1053">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="1054" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="1088">
        <label>amrex::FabArray&lt; amrex::CutFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="1061" relation="public-inheritance">
        </childnode>
        <childnode refid="1071" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="1073" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="1057" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="1075" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="1066" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="1078" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="1080" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="1081" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="1083" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="1085" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="1058">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="1070">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="1066" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="1078">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1064">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="1068">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="1069" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="1059">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="1060" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1052">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="1053" relation="public-inheritance">
        </childnode>
        <childnode refid="1055" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="1056" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="1060">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="1061" relation="public-inheritance">
        </childnode>
        <childnode refid="1071" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="1073" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="1057" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="1075" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="1066" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="1078" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="1080" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="1081" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="1083" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="1085" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="1071">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1061">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="1062" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="1064" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="1057" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="1065" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="1066" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="1068" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="1072">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="17" bodyend="62"/>
    <listofallmembers>
      <member refid="classamrex_1_1EBDataCollection_1abf1aacd2cc985798378776af54fd8503" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBDataCollection</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ac8cfe908c7bcdc5b940444e767ceb37b" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBDataCollection</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a37fa70dac3bcfbd63a096961c0a97899" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBDataCollection</name></member>
      <member refid="classamrex_1_1EBDataCollection_1adb2dec585ef401908ca3e596eb62e851" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getAreaFrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8f2facb9d8f388bd34a905d3249dec3f" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getBndryArea</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a79f870b65936034e5471d628fbd6d9fb" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getBndryCent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ad138261bbea936bf83d44dcca15df02c" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getBndryNormal</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a1607508139d564d5f6293d6c68f4a953" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getCentroid</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ad0ed659e56764e900bd11fa12ec33eeb" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getFaceCent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1acce2adceaba115a5c56167ec8cf3eb79" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getMultiEBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a9cfca800c4df32f884205e7b0cfa5b4f" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getVolFrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1aca26ce33e69ffb0b4314fc8df4074d80" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_areafrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8d677f5c06ce1520cd23addf9d22d5ef" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_bndryarea</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8a3dfc8b1b1cf5d19c7538d630a4b44b" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_bndrycent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a586018b239d0fd75d2a920b4e7d8fa40" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_bndrynorm</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a3f3aed898f6ec10c9f141be194499cac" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_cellflags</name></member>
      <member refid="classamrex_1_1EBDataCollection_1af218d8cf84d1ad47414a36663b2c1b36" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_centroid</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a214bc0754b038960bcc1f574a448671d" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_facecent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a4e9d5ca2618309d4445ac8fa75fafc1f" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8c1e66f34abde299d2379f0261cfcb53" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a9d7fc23809662b01ce10290962d272e8" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_support</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ab87f9babcf2b30b23ea7a36ee621538e" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_volfrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1aab5a65341ff21329cc732af1bfb4f004" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ab9f91f646f1ca0f33d5d2d3e14ffec77" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ac0a68c8f5a6914b596f4c47f43d2f6aa" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>~EBDataCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
