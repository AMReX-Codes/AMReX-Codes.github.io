<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__PODVector_8H" kind="file" language="C++">
    <compoundname>AMReX_PODVector.H</compoundname>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__GpuAllocators_8H" local="no">AMReX_GpuAllocators.H</includes>
    <includes refid="AMReX__GpuContainers_8H" local="no">AMReX_GpuContainers.H</includes>
    <includes refid="AMReX__GpuDevice_8H" local="no">AMReX_GpuDevice.H</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">memory</includes>
    <includes local="no">cstring</includes>
    <includedby refid="AMReX__GpuContainers_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuContainers.H</includedby>
    <incdepgraph>
      <node id="42961">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
      </node>
      <node id="42982">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="42955" relation="include">
        </childnode>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42888" relation="include">
        </childnode>
        <childnode refid="42979" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
      </node>
      <node id="42949">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42950" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42905" relation="include">
        </childnode>
      </node>
      <node id="42981">
        <label>iomanip</label>
      </node>
      <node id="42916">
        <label>functional</label>
      </node>
      <node id="42944">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42920" relation="include">
        </childnode>
        <childnode refid="42941" relation="include">
        </childnode>
        <childnode refid="42945" relation="include">
        </childnode>
        <childnode refid="42936" relation="include">
        </childnode>
        <childnode refid="42946" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
      </node>
      <node id="42934">
        <label>limits</label>
      </node>
      <node id="42953">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
      </node>
      <node id="42983">
        <label>iterator</label>
      </node>
      <node id="42923">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="42924" relation="include">
        </childnode>
        <childnode refid="42925" relation="include">
        </childnode>
        <childnode refid="42927" relation="include">
        </childnode>
        <childnode refid="42905" relation="include">
        </childnode>
        <childnode refid="42928" relation="include">
        </childnode>
        <childnode refid="42936" relation="include">
        </childnode>
        <childnode refid="42937" relation="include">
        </childnode>
        <childnode refid="42929" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42938" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
      </node>
      <node id="42911">
        <label>float.h</label>
      </node>
      <node id="42970">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42899" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42908" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42938" relation="include">
        </childnode>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42913" relation="include">
        </childnode>
      </node>
      <node id="42985">
        <label>cstdint</label>
      </node>
      <node id="42947">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="42941" relation="include">
        </childnode>
        <childnode refid="42934" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42920" relation="include">
        </childnode>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42904" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42948" relation="include">
        </childnode>
      </node>
      <node id="42969">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
      </node>
      <node id="42928">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="42908" relation="include">
        </childnode>
        <childnode refid="42905" relation="include">
        </childnode>
        <childnode refid="42929" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42926" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42912" relation="include">
        </childnode>
        <childnode refid="42924" relation="include">
        </childnode>
        <childnode refid="42914" relation="include">
        </childnode>
        <childnode refid="42913" relation="include">
        </childnode>
        <childnode refid="42934" relation="include">
        </childnode>
        <childnode refid="42935" relation="include">
        </childnode>
        <childnode refid="42922" relation="include">
        </childnode>
      </node>
      <node id="42904">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42895" relation="include">
        </childnode>
        <childnode refid="42897" relation="include">
        </childnode>
        <childnode refid="42905" relation="include">
        </childnode>
        <childnode refid="42906" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42908" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42912" relation="include">
        </childnode>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42916" relation="include">
        </childnode>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42896" relation="include">
        </childnode>
        <childnode refid="42918" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
      </node>
      <node id="42895">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="42896" relation="include">
        </childnode>
      </node>
      <node id="42976">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="42960">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="42940" relation="include">
        </childnode>
        <childnode refid="42917" relation="include">
        </childnode>
      </node>
      <node id="42921">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="42922" relation="include">
        </childnode>
        <childnode refid="42918" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42908" relation="include">
        </childnode>
      </node>
      <node id="42980">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="42933" relation="include">
        </childnode>
        <childnode refid="42950" relation="include">
        </childnode>
        <childnode refid="42981" relation="include">
        </childnode>
        <childnode refid="42932" relation="include">
        </childnode>
        <childnode refid="42904" relation="include">
        </childnode>
        <childnode refid="42949" relation="include">
        </childnode>
        <childnode refid="42948" relation="include">
        </childnode>
      </node>
      <node id="42913">
        <label>cmath</label>
      </node>
      <node id="42898">
        <label>cassert</label>
      </node>
      <node id="42907">
        <label>stdexcept</label>
      </node>
      <node id="42955">
        <label>numeric</label>
      </node>
      <node id="42971">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="42931" relation="include">
        </childnode>
        <childnode refid="42972" relation="include">
        </childnode>
        <childnode refid="42916" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
        <childnode refid="42932" relation="include">
        </childnode>
        <childnode refid="42889" relation="include">
        </childnode>
        <childnode refid="42973" relation="include">
        </childnode>
        <childnode refid="42969" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
      </node>
      <node id="42946">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="42924" relation="include">
        </childnode>
        <childnode refid="42928" relation="include">
        </childnode>
        <childnode refid="42936" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
      </node>
      <node id="42917">
        <label>string</label>
      </node>
      <node id="42974">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="42923" relation="include">
        </childnode>
      </node>
      <node id="42941">
        <label>map</label>
      </node>
      <node id="42957">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42948" relation="include">
        </childnode>
      </node>
      <node id="42973">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="42932" relation="include">
        </childnode>
      </node>
      <node id="42943">
        <label>cfloat</label>
      </node>
      <node id="42950">
        <label>fstream</label>
      </node>
      <node id="42927">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="42910" relation="include">
        </childnode>
      </node>
      <node id="42930">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="42931" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42932" relation="include">
        </childnode>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42933" relation="include">
        </childnode>
        <childnode refid="42896" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
        <childnode refid="42904" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42929" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42925" relation="include">
        </childnode>
        <childnode refid="42926" relation="include">
        </childnode>
      </node>
      <node id="42967">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42899" relation="include">
        </childnode>
        <childnode refid="42968" relation="include">
        </childnode>
        <childnode refid="42970" relation="include">
        </childnode>
        <childnode refid="42969" relation="include">
        </childnode>
      </node>
      <node id="42929">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="42899">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="42891">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="42979">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="42941" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42934" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
        <childnode refid="42980" relation="include">
        </childnode>
        <childnode refid="42902" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
      </node>
      <node id="42964">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42894" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42899" relation="include">
        </childnode>
        <childnode refid="42960" relation="include">
        </childnode>
        <childnode refid="42965" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
        <childnode refid="42966" relation="include">
        </childnode>
        <childnode refid="42967" relation="include">
        </childnode>
        <childnode refid="42901" relation="include">
        </childnode>
        <childnode refid="42971" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42974" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42889" relation="include">
        </childnode>
        <childnode refid="42962" relation="include">
        </childnode>
        <childnode refid="42920" relation="include">
        </childnode>
        <childnode refid="42934" relation="include">
        </childnode>
        <childnode refid="42922" relation="include">
        </childnode>
        <childnode refid="42932" relation="include">
        </childnode>
        <childnode refid="42975" relation="include">
        </childnode>
        <childnode refid="42976" relation="include">
        </childnode>
      </node>
      <node id="42959">
        <label>sys/types.h</label>
      </node>
      <node id="42954">
        <label>typeinfo</label>
      </node>
      <node id="42896">
        <label>cstdio</label>
      </node>
      <node id="42889">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="42890" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
      </node>
      <node id="42900">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42899" relation="include">
        </childnode>
      </node>
      <node id="42972">
        <label>tuple</label>
      </node>
      <node id="42951">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="42952" relation="include">
        </childnode>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42932" relation="include">
        </childnode>
        <childnode refid="42933" relation="include">
        </childnode>
        <childnode refid="42896" relation="include">
        </childnode>
        <childnode refid="42914" relation="include">
        </childnode>
      </node>
      <node id="42984">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="42892" relation="include">
        </childnode>
        <childnode refid="42902" relation="include">
        </childnode>
        <childnode refid="42985" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
      </node>
      <node id="42958">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42959" relation="include">
        </childnode>
      </node>
      <node id="42952">
        <label>stack</label>
      </node>
      <node id="42918">
        <label>vector</label>
      </node>
      <node id="42903">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="42904" relation="include">
        </childnode>
      </node>
      <node id="42912">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42913" relation="include">
        </childnode>
        <childnode refid="42914" relation="include">
        </childnode>
      </node>
      <node id="42893">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="42932">
        <label>utility</label>
      </node>
      <node id="42931">
        <label>array</label>
      </node>
      <node id="42933">
        <label>sstream</label>
      </node>
      <node id="42906">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="42907" relation="include">
        </childnode>
      </node>
      <node id="42925">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="42922" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42926" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
      </node>
      <node id="42908">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="42909" relation="include">
        </childnode>
      </node>
      <node id="42894">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
      </node>
      <node id="42965">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42960" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42889" relation="include">
        </childnode>
      </node>
      <node id="42948">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="42905" relation="include">
        </childnode>
        <childnode refid="42949" relation="include">
        </childnode>
        <childnode refid="42951" relation="include">
        </childnode>
        <childnode refid="42953" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42908" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42918" relation="include">
        </childnode>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42954" relation="include">
        </childnode>
        <childnode refid="42922" relation="include">
        </childnode>
        <childnode refid="42916" relation="include">
        </childnode>
        <childnode refid="42934" relation="include">
        </childnode>
        <childnode refid="42955" relation="include">
        </childnode>
        <childnode refid="42956" relation="include">
        </childnode>
      </node>
      <node id="42940">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="42914" relation="include">
        </childnode>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42933" relation="include">
        </childnode>
        <childnode refid="42917" relation="include">
        </childnode>
        <childnode refid="42941" relation="include">
        </childnode>
        <childnode refid="42942" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
        <childnode refid="42935" relation="include">
        </childnode>
        <childnode refid="42934" relation="include">
        </childnode>
        <childnode refid="42943" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42908" relation="include">
        </childnode>
        <childnode refid="42930" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42944" relation="include">
        </childnode>
        <childnode refid="42947" relation="include">
        </childnode>
        <childnode refid="42948" relation="include">
        </childnode>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42958" relation="include">
        </childnode>
      </node>
      <node id="42902">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42920" relation="include">
        </childnode>
        <childnode refid="42914" relation="include">
        </childnode>
      </node>
      <node id="42937">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="42924" relation="include">
        </childnode>
        <childnode refid="42903" relation="include">
        </childnode>
        <childnode refid="42929" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
      </node>
      <node id="42926">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="42915" relation="include">
        </childnode>
        <childnode refid="42910" relation="include">
        </childnode>
        <childnode refid="42893" relation="include">
        </childnode>
      </node>
      <node id="42924">
        <label>iosfwd</label>
      </node>
      <node id="42914">
        <label>cstdlib</label>
      </node>
      <node id="42915">
        <label>iostream</label>
      </node>
      <node id="42936">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="42924" relation="include">
        </childnode>
        <childnode refid="42905" relation="include">
        </childnode>
        <childnode refid="42928" relation="include">
        </childnode>
        <childnode refid="42929" relation="include">
        </childnode>
      </node>
      <node id="42938">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="42928" relation="include">
        </childnode>
        <childnode refid="42895" relation="include">
        </childnode>
      </node>
      <node id="42920">
        <label>cstddef</label>
      </node>
      <node id="42945">
        <label>unordered_map</label>
      </node>
      <node id="42888">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX_PODVector.H"/>
        <childnode refid="42889" relation="include">
        </childnode>
        <childnode refid="42892" relation="include">
        </childnode>
        <childnode refid="42979" relation="include">
        </childnode>
        <childnode refid="42982" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
        <childnode refid="42890" relation="include">
        </childnode>
        <childnode refid="42932" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42963" relation="include">
        </childnode>
      </node>
      <node id="42892">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42894" relation="include">
        </childnode>
        <childnode refid="42895" relation="include">
        </childnode>
        <childnode refid="42897" relation="include">
        </childnode>
        <childnode refid="42899" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42901" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
        <childnode refid="42960" relation="include">
        </childnode>
        <childnode refid="42968" relation="include">
        </childnode>
        <childnode refid="42970" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="42978" relation="include">
        </childnode>
        <childnode refid="42966" relation="include">
        </childnode>
        <childnode refid="42965" relation="include">
        </childnode>
        <childnode refid="42967" relation="include">
        </childnode>
        <childnode refid="42979" relation="include">
        </childnode>
        <childnode refid="42982" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
      </node>
      <node id="42935">
        <label>climits</label>
      </node>
      <node id="42986">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="42942">
        <label>chrono</label>
      </node>
      <node id="42975">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="42956">
        <label>csignal</label>
      </node>
      <node id="42901">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="42902" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
        <childnode refid="42923" relation="include">
        </childnode>
        <childnode refid="42889" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
        <childnode refid="42962" relation="include">
        </childnode>
        <childnode refid="42963" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
      </node>
      <node id="42962">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
      </node>
      <node id="42890">
        <label>type_traits</label>
      </node>
      <node id="42905">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="42978">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="42902" relation="include">
        </childnode>
      </node>
      <node id="42922">
        <label>algorithm</label>
      </node>
      <node id="42939">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="42914" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42931" relation="include">
        </childnode>
        <childnode refid="42904" relation="include">
        </childnode>
        <childnode refid="42940" relation="include">
        </childnode>
        <childnode refid="42899" relation="include">
        </childnode>
        <childnode refid="42960" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42961" relation="include">
        </childnode>
        <childnode refid="42921" relation="include">
        </childnode>
      </node>
      <node id="42897">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="42898" relation="include">
        </childnode>
      </node>
      <node id="42968">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42969" relation="include">
        </childnode>
      </node>
      <node id="42963">
        <label>cstring</label>
      </node>
      <node id="42919">
        <label>memory</label>
      </node>
      <node id="42977">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="42920" relation="include">
        </childnode>
        <childnode refid="42963" relation="include">
        </childnode>
        <childnode refid="42914" relation="include">
        </childnode>
        <childnode refid="42919" relation="include">
        </childnode>
        <childnode refid="42902" relation="include">
        </childnode>
        <childnode refid="42889" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
      </node>
      <node id="42909">
        <label>inttypes.h</label>
      </node>
      <node id="42966">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="42893" relation="include">
        </childnode>
        <childnode refid="42900" relation="include">
        </childnode>
        <childnode refid="42939" relation="include">
        </childnode>
        <childnode refid="42889" relation="include">
        </childnode>
        <childnode refid="42902" relation="include">
        </childnode>
        <childnode refid="42914" relation="include">
        </childnode>
      </node>
      <node id="42910">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="42891" relation="include">
        </childnode>
        <childnode refid="42911" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="43017">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="43018" relation="include">
        </childnode>
      </node>
      <node id="43003">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="43300">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="42990">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_extrapolater_K.H</label>
        <link refid="AMReX__extrapolater__K_8H"/>
        <childnode refid="42991" relation="include">
        </childnode>
      </node>
      <node id="43050">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="43051" relation="include">
        </childnode>
      </node>
      <node id="43240">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="43037">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="43135">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="43255">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="43172">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="43058">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="43205">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="43241">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="43035">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="43272">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BlockMutex.cpp</label>
        <link refid="AMReX__BlockMutex_8cpp"/>
      </node>
      <node id="42988">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="42989" relation="include">
        </childnode>
        <childnode refid="42987" relation="include">
        </childnode>
        <childnode refid="43261" relation="include">
        </childnode>
        <childnode refid="43047" relation="include">
        </childnode>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43177" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43306" relation="include">
        </childnode>
      </node>
      <node id="43212">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="43298">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43045">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="43124">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="43087" relation="include">
        </childnode>
        <childnode refid="43125" relation="include">
        </childnode>
      </node>
      <node id="43287">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43129">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="43087" relation="include">
        </childnode>
        <childnode refid="43124" relation="include">
        </childnode>
        <childnode refid="43130" relation="include">
        </childnode>
        <childnode refid="43086" relation="include">
        </childnode>
      </node>
      <node id="43072">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="43094">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="43060">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="43061" relation="include">
        </childnode>
        <childnode refid="43062" relation="include">
        </childnode>
        <childnode refid="43064" relation="include">
        </childnode>
      </node>
      <node id="43273">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Random.cpp</label>
        <link refid="AMReX__Random_8cpp"/>
      </node>
      <node id="43012">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.H</label>
        <link refid="AMReX__EB__LSCoreBase_8H"/>
        <childnode refid="43009" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
      </node>
      <node id="43005">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="43179">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="43180" relation="include">
        </childnode>
      </node>
      <node id="43148">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="43195">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="43133">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="43306">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H</label>
        <link refid="AMReX__StructOfArrays_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43262" relation="include">
        </childnode>
      </node>
      <node id="43236">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="43237" relation="include">
        </childnode>
      </node>
      <node id="43304">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H</label>
        <link refid="AMReX__SparseBins_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43039">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="43223">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="43224" relation="include">
        </childnode>
      </node>
      <node id="43070">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="43034" relation="include">
        </childnode>
        <childnode refid="43071" relation="include">
        </childnode>
      </node>
      <node id="43097">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="43098" relation="include">
        </childnode>
      </node>
      <node id="43279">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Partition.H</label>
        <link refid="AMReX__Partition_8H"/>
      </node>
      <node id="43076">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="43302">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_BinIterator.H</label>
        <link refid="AMReX__BinIterator_8H"/>
        <childnode refid="43303" relation="include">
        </childnode>
        <childnode refid="43304" relation="include">
        </childnode>
      </node>
      <node id="43209">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="43277">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="43205" relation="include">
        </childnode>
        <childnode refid="43217" relation="include">
        </childnode>
        <childnode refid="43216" relation="include">
        </childnode>
        <childnode refid="43215" relation="include">
        </childnode>
      </node>
      <node id="43112">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="43077">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="43078" relation="include">
        </childnode>
        <childnode refid="43079" relation="include">
        </childnode>
      </node>
      <node id="43261">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43262" relation="include">
        </childnode>
      </node>
      <node id="43114">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="43253">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="43122">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="43123" relation="include">
        </childnode>
        <childnode refid="43124" relation="include">
        </childnode>
      </node>
      <node id="43117">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="43058" relation="include">
        </childnode>
        <childnode refid="43009" relation="include">
        </childnode>
      </node>
      <node id="43237">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="43061" relation="include">
        </childnode>
        <childnode refid="43238" relation="include">
        </childnode>
      </node>
      <node id="43130">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="43087" relation="include">
        </childnode>
        <childnode refid="43131" relation="include">
        </childnode>
      </node>
      <node id="43184">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="43185" relation="include">
        </childnode>
        <childnode refid="43099" relation="include">
        </childnode>
        <childnode refid="43186" relation="include">
        </childnode>
        <childnode refid="43112" relation="include">
        </childnode>
        <childnode refid="43111" relation="include">
        </childnode>
        <childnode refid="43114" relation="include">
        </childnode>
        <childnode refid="43181" relation="include">
        </childnode>
        <childnode refid="43136" relation="include">
        </childnode>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43105" relation="include">
        </childnode>
        <childnode refid="43152" relation="include">
        </childnode>
        <childnode refid="43088" relation="include">
        </childnode>
        <childnode refid="43032" relation="include">
        </childnode>
        <childnode refid="43078" relation="include">
        </childnode>
        <childnode refid="43064" relation="include">
        </childnode>
        <childnode refid="43038" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43064">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="43065" relation="include">
        </childnode>
        <childnode refid="43077" relation="include">
        </childnode>
        <childnode refid="43076" relation="include">
        </childnode>
        <childnode refid="43079" relation="include">
        </childnode>
        <childnode refid="43081" relation="include">
        </childnode>
      </node>
      <node id="43015">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="43283">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="43010">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="43242">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43148" relation="include">
        </childnode>
        <childnode refid="43021" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
        <childnode refid="43243" relation="include">
        </childnode>
        <childnode refid="43063" relation="include">
        </childnode>
        <childnode refid="43244" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
      </node>
      <node id="43260">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="43261" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43262" relation="include">
        </childnode>
      </node>
      <node id="43225">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="43224" relation="include">
        </childnode>
      </node>
      <node id="43079">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="43078" relation="include">
        </childnode>
        <childnode refid="43038" relation="include">
        </childnode>
        <childnode refid="43039" relation="include">
        </childnode>
        <childnode refid="43069" relation="include">
        </childnode>
        <childnode refid="43044" relation="include">
        </childnode>
        <childnode refid="43080" relation="include">
        </childnode>
      </node>
      <node id="43127">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="43233">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="43290">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43029">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Habec_2D_K.H</label>
        <link refid="AMReX__Habec__2D__K_8H"/>
      </node>
      <node id="43019">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="43095">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="43008" relation="include">
        </childnode>
        <childnode refid="43096" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
      </node>
      <node id="43119">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="43301">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43155">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="43156" relation="include">
        </childnode>
      </node>
      <node id="43288">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43282">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="43266" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43284" relation="include">
        </childnode>
        <childnode refid="43285" relation="include">
        </childnode>
        <childnode refid="43286" relation="include">
        </childnode>
        <childnode refid="43287" relation="include">
        </childnode>
        <childnode refid="43288" relation="include">
        </childnode>
        <childnode refid="43289" relation="include">
        </childnode>
        <childnode refid="43290" relation="include">
        </childnode>
        <childnode refid="43291" relation="include">
        </childnode>
        <childnode refid="43292" relation="include">
        </childnode>
        <childnode refid="43293" relation="include">
        </childnode>
        <childnode refid="43294" relation="include">
        </childnode>
        <childnode refid="43295" relation="include">
        </childnode>
        <childnode refid="43296" relation="include">
        </childnode>
        <childnode refid="43297" relation="include">
        </childnode>
        <childnode refid="43298" relation="include">
        </childnode>
        <childnode refid="43299" relation="include">
        </childnode>
        <childnode refid="43300" relation="include">
        </childnode>
        <childnode refid="43301" relation="include">
        </childnode>
      </node>
      <node id="43169">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="43163" relation="include">
        </childnode>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43165" relation="include">
        </childnode>
        <childnode refid="43167" relation="include">
        </childnode>
      </node>
      <node id="43092">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="42991" relation="include">
        </childnode>
      </node>
      <node id="43083">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="43084" relation="include">
        </childnode>
        <childnode refid="43041" relation="include">
        </childnode>
      </node>
      <node id="43065">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="43066" relation="include">
        </childnode>
        <childnode refid="43035" relation="include">
        </childnode>
        <childnode refid="43076" relation="include">
        </childnode>
      </node>
      <node id="43204">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="43200" relation="include">
        </childnode>
      </node>
      <node id="43174">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="43224">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="43024" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
      </node>
      <node id="43126">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="43064" relation="include">
        </childnode>
        <childnode refid="43127" relation="include">
        </childnode>
      </node>
      <node id="43194">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="43058" relation="include">
        </childnode>
      </node>
      <node id="43173">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="43174" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43200">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="43062">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="43063" relation="include">
        </childnode>
      </node>
      <node id="43008">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="43189">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43148" relation="include">
        </childnode>
        <childnode refid="43145" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43150" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43066">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="43067" relation="include">
        </childnode>
        <childnode refid="43070" relation="include">
        </childnode>
        <childnode refid="43072" relation="include">
        </childnode>
        <childnode refid="43073" relation="include">
        </childnode>
        <childnode refid="43075" relation="include">
        </childnode>
      </node>
      <node id="42994">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="42995" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="43022" relation="include">
        </childnode>
        <childnode refid="43023" relation="include">
        </childnode>
        <childnode refid="43054" relation="include">
        </childnode>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="43190" relation="include">
        </childnode>
        <childnode refid="43264" relation="include">
        </childnode>
        <childnode refid="43232" relation="include">
        </childnode>
        <childnode refid="43266" relation="include">
        </childnode>
        <childnode refid="43267" relation="include">
        </childnode>
      </node>
      <node id="43250">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="43037" relation="include">
        </childnode>
      </node>
      <node id="43296">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43125">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="43181">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="43258">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="43039" relation="include">
        </childnode>
        <childnode refid="43040" relation="include">
        </childnode>
        <childnode refid="43041" relation="include">
        </childnode>
      </node>
      <node id="43286">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43074">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="43037" relation="include">
        </childnode>
      </node>
      <node id="43090">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="43091" relation="include">
        </childnode>
      </node>
      <node id="42997">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="42998" relation="include">
        </childnode>
        <childnode refid="43013" relation="include">
        </childnode>
        <childnode refid="43014" relation="include">
        </childnode>
        <childnode refid="43016" relation="include">
        </childnode>
      </node>
      <node id="43227">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_slopes_K.H</label>
        <link refid="AMReX__EB__slopes__K_8H"/>
      </node>
      <node id="43291">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43087">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="43047">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="43045" relation="include">
        </childnode>
      </node>
      <node id="43161">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="43108">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="43226">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Slopes_K.H</label>
        <link refid="AMReX__Slopes__K_8H"/>
        <childnode refid="43227" relation="include">
        </childnode>
      </node>
      <node id="43196">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="43152">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="43105" relation="include">
        </childnode>
        <childnode refid="43153" relation="include">
        </childnode>
      </node>
      <node id="43089">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43090" relation="include">
        </childnode>
        <childnode refid="43092" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43017" relation="include">
        </childnode>
        <childnode refid="43095" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="43097" relation="include">
        </childnode>
        <childnode refid="43099" relation="include">
        </childnode>
        <childnode refid="43100" relation="include">
        </childnode>
        <childnode refid="43102" relation="include">
        </childnode>
        <childnode refid="43103" relation="include">
        </childnode>
        <childnode refid="43059" relation="include">
        </childnode>
        <childnode refid="43024" relation="include">
        </childnode>
        <childnode refid="43106" relation="include">
        </childnode>
        <childnode refid="43111" relation="include">
        </childnode>
        <childnode refid="43113" relation="include">
        </childnode>
        <childnode refid="43115" relation="include">
        </childnode>
        <childnode refid="43060" relation="include">
        </childnode>
        <childnode refid="43137" relation="include">
        </childnode>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43146" relation="include">
        </childnode>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43148" relation="include">
        </childnode>
        <childnode refid="43020" relation="include">
        </childnode>
        <childnode refid="43145" relation="include">
        </childnode>
        <childnode refid="43149" relation="include">
        </childnode>
        <childnode refid="43150" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
        <childnode refid="43151" relation="include">
        </childnode>
        <childnode refid="43152" relation="include">
        </childnode>
        <childnode refid="43158" relation="include">
        </childnode>
        <childnode refid="43160" relation="include">
        </childnode>
        <childnode refid="43129" relation="include">
        </childnode>
        <childnode refid="43124" relation="include">
        </childnode>
        <childnode refid="43031" relation="include">
        </childnode>
        <childnode refid="43132" relation="include">
        </childnode>
        <childnode refid="43162" relation="include">
        </childnode>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43155" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43014" relation="include">
        </childnode>
        <childnode refid="43016" relation="include">
        </childnode>
        <childnode refid="43077" relation="include">
        </childnode>
        <childnode refid="43064" relation="include">
        </childnode>
        <childnode refid="43044" relation="include">
        </childnode>
        <childnode refid="43080" relation="include">
        </childnode>
        <childnode refid="43045" relation="include">
        </childnode>
        <childnode refid="43170" relation="include">
        </childnode>
        <childnode refid="43178" relation="include">
        </childnode>
        <childnode refid="43179" relation="include">
        </childnode>
      </node>
      <node id="43246">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="43154" relation="include">
        </childnode>
        <childnode refid="43247" relation="include">
        </childnode>
      </node>
      <node id="43157">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="43235">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="43026">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="43239">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="43240" relation="include">
        </childnode>
        <childnode refid="43241" relation="include">
        </childnode>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43147" relation="include">
        </childnode>
      </node>
      <node id="43222">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="43118">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="43119" relation="include">
        </childnode>
        <childnode refid="43120" relation="include">
        </childnode>
        <childnode refid="43128" relation="include">
        </childnode>
        <childnode refid="43129" relation="include">
        </childnode>
        <childnode refid="43031" relation="include">
        </childnode>
        <childnode refid="43132" relation="include">
        </childnode>
        <childnode refid="43134" relation="include">
        </childnode>
      </node>
      <node id="43231">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="43121" relation="include">
        </childnode>
      </node>
      <node id="43305">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43289">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43171">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="43172" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
      </node>
      <node id="43071">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="43208">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="43078">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="43303">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_DenseBins.H</label>
        <link refid="AMReX__DenseBins_8H"/>
        <childnode refid="43047" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43016">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="43044">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="43105">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="43280">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="42994" relation="include">
        </childnode>
        <childnode refid="43268" relation="include">
        </childnode>
      </node>
      <node id="43216">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="43056" relation="include">
        </childnode>
        <childnode refid="43217" relation="include">
        </childnode>
        <childnode refid="43024" relation="include">
        </childnode>
        <childnode refid="43118" relation="include">
        </childnode>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43146" relation="include">
        </childnode>
        <childnode refid="43086" relation="include">
        </childnode>
        <childnode refid="43031" relation="include">
        </childnode>
        <childnode refid="43132" relation="include">
        </childnode>
      </node>
      <node id="43177">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43154">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="43143">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="43271">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BlockMutex.H</label>
        <link refid="AMReX__BlockMutex_8H"/>
        <childnode refid="43272" relation="include">
        </childnode>
        <childnode refid="43273" relation="include">
        </childnode>
      </node>
      <node id="43163">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="43215">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="43054" relation="include">
        </childnode>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="43216" relation="include">
        </childnode>
        <childnode refid="43183" relation="include">
        </childnode>
        <childnode refid="43024" relation="include">
        </childnode>
        <childnode refid="43003" relation="include">
        </childnode>
        <childnode refid="43015" relation="include">
        </childnode>
        <childnode refid="43218" relation="include">
        </childnode>
        <childnode refid="43220" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
      </node>
      <node id="43011">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.cpp</label>
        <link refid="AMReX__EB__LSCoreBase_8cpp"/>
      </node>
      <node id="43203">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="43204" relation="include">
        </childnode>
      </node>
      <node id="43038">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="43248">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="43033" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43042" relation="include">
        </childnode>
      </node>
      <node id="43228">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="43191">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="43146">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43147" relation="include">
        </childnode>
      </node>
      <node id="43207">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="43063">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="43175">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="43045" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43176" relation="include">
        </childnode>
      </node>
      <node id="43219">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="43086">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="43087" relation="include">
        </childnode>
        <childnode refid="43088" relation="include">
        </childnode>
      </node>
      <node id="43144">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="43120">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="43121" relation="include">
        </childnode>
        <childnode refid="43122" relation="include">
        </childnode>
        <childnode refid="43126" relation="include">
        </childnode>
      </node>
      <node id="43104">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="43042">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="43268">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="43030">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Habec_3D_K.H</label>
        <link refid="AMReX__Habec__3D__K_8H"/>
      </node>
      <node id="43164">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="43102">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="43022">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="43013">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="43024">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43019" relation="include">
        </childnode>
        <childnode refid="43025" relation="include">
        </childnode>
        <childnode refid="43026" relation="include">
        </childnode>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43029" relation="include">
        </childnode>
        <childnode refid="43030" relation="include">
        </childnode>
        <childnode refid="43031" relation="include">
        </childnode>
        <childnode refid="43033" relation="include">
        </childnode>
        <childnode refid="43034" relation="include">
        </childnode>
        <childnode refid="43035" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43037" relation="include">
        </childnode>
        <childnode refid="43038" relation="include">
        </childnode>
        <childnode refid="43039" relation="include">
        </childnode>
        <childnode refid="43040" relation="include">
        </childnode>
        <childnode refid="43041" relation="include">
        </childnode>
        <childnode refid="43042" relation="include">
        </childnode>
        <childnode refid="43043" relation="include">
        </childnode>
        <childnode refid="43044" relation="include">
        </childnode>
        <childnode refid="43045" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43295">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="42995">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="42997" relation="include">
        </childnode>
        <childnode refid="43017" relation="include">
        </childnode>
        <childnode refid="43019" relation="include">
        </childnode>
        <childnode refid="43012" relation="include">
        </childnode>
        <childnode refid="43020" relation="include">
        </childnode>
      </node>
      <node id="42991">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="43274">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="43057">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="42991" relation="include">
        </childnode>
        <childnode refid="43058" relation="include">
        </childnode>
        <childnode refid="43019" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="43025" relation="include">
        </childnode>
        <childnode refid="43059" relation="include">
        </childnode>
        <childnode refid="43024" relation="include">
        </childnode>
        <childnode refid="43060" relation="include">
        </childnode>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43086" relation="include">
        </childnode>
        <childnode refid="43031" relation="include">
        </childnode>
        <childnode refid="43079" relation="include">
        </childnode>
        <childnode refid="43081" relation="include">
        </childnode>
      </node>
      <node id="43168">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43165" relation="include">
        </childnode>
        <childnode refid="43166" relation="include">
        </childnode>
      </node>
      <node id="43006">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="43244">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="43142">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="43033">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="43180">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="43109">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="43270">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43148" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
        <childnode refid="43073" relation="include">
        </childnode>
      </node>
      <node id="43040">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="43080">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="43044" relation="include">
        </childnode>
      </node>
      <node id="43082">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="43032" relation="include">
        </childnode>
        <childnode refid="43039" relation="include">
        </childnode>
        <childnode refid="43044" relation="include">
        </childnode>
        <childnode refid="43080" relation="include">
        </childnode>
      </node>
      <node id="43027">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.cpp</label>
        <link refid="AMReX__EB__levelset_8cpp"/>
      </node>
      <node id="43009">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H</label>
        <link refid="AMReX__EB__LSCore_8H"/>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43284">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43140" relation="include">
        </childnode>
      </node>
      <node id="43048">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43197">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="43198" relation="include">
        </childnode>
      </node>
      <node id="43069">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="43043" relation="include">
        </childnode>
      </node>
      <node id="43028">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="43160">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="43161" relation="include">
        </childnode>
      </node>
      <node id="43234">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="43293">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43134">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="43037" relation="include">
        </childnode>
        <childnode refid="43042" relation="include">
        </childnode>
      </node>
      <node id="43153">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="43154" relation="include">
        </childnode>
        <childnode refid="43155" relation="include">
        </childnode>
        <childnode refid="43157" relation="include">
        </childnode>
      </node>
      <node id="43221">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="43002">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
      </node>
      <node id="43145">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="43111">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="43112" relation="include">
        </childnode>
        <childnode refid="43113" relation="include">
        </childnode>
      </node>
      <node id="43128">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="43115">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="43116" relation="include">
        </childnode>
        <childnode refid="43136" relation="include">
        </childnode>
      </node>
      <node id="42992">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="43281">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="42988" relation="include">
        </childnode>
        <childnode refid="43279" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
      </node>
      <node id="43088">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="43147">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="43061">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="43278">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuFuse.cpp</label>
        <link refid="AMReX__GpuFuse_8cpp"/>
      </node>
      <node id="43202">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="43150">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="43229">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="43093">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43094" relation="include">
        </childnode>
        <childnode refid="43003" relation="include">
        </childnode>
      </node>
      <node id="43131">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="43252">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43253" relation="include">
        </childnode>
        <childnode refid="43254" relation="include">
        </childnode>
      </node>
      <node id="43138">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="43299">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43294">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43101">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="43068">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="43042" relation="include">
        </childnode>
      </node>
      <node id="43055">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="42995" relation="include">
        </childnode>
        <childnode refid="43056" relation="include">
        </childnode>
        <childnode refid="43182" relation="include">
        </childnode>
        <childnode refid="43057" relation="include">
        </childnode>
        <childnode refid="43183" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43184" relation="include">
        </childnode>
        <childnode refid="43188" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
        <childnode refid="43189" relation="include">
        </childnode>
      </node>
      <node id="43190">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="43191" relation="include">
        </childnode>
        <childnode refid="43192" relation="include">
        </childnode>
        <childnode refid="43193" relation="include">
        </childnode>
        <childnode refid="43195" relation="include">
        </childnode>
        <childnode refid="43196" relation="include">
        </childnode>
        <childnode refid="43197" relation="include">
        </childnode>
        <childnode refid="43199" relation="include">
        </childnode>
        <childnode refid="43200" relation="include">
        </childnode>
        <childnode refid="43201" relation="include">
        </childnode>
        <childnode refid="43202" relation="include">
        </childnode>
        <childnode refid="43203" relation="include">
        </childnode>
        <childnode refid="43099" relation="include">
        </childnode>
        <childnode refid="43205" relation="include">
        </childnode>
        <childnode refid="43206" relation="include">
        </childnode>
        <childnode refid="43207" relation="include">
        </childnode>
        <childnode refid="43208" relation="include">
        </childnode>
        <childnode refid="43209" relation="include">
        </childnode>
        <childnode refid="43210" relation="include">
        </childnode>
        <childnode refid="43213" relation="include">
        </childnode>
        <childnode refid="43183" relation="include">
        </childnode>
        <childnode refid="43215" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43221" relation="include">
        </childnode>
        <childnode refid="43222" relation="include">
        </childnode>
        <childnode refid="43223" relation="include">
        </childnode>
        <childnode refid="43225" relation="include">
        </childnode>
        <childnode refid="43226" relation="include">
        </childnode>
        <childnode refid="43184" relation="include">
        </childnode>
        <childnode refid="43118" relation="include">
        </childnode>
        <childnode refid="43120" relation="include">
        </childnode>
        <childnode refid="43228" relation="include">
        </childnode>
        <childnode refid="43229" relation="include">
        </childnode>
        <childnode refid="43230" relation="include">
        </childnode>
        <childnode refid="43232" relation="include">
        </childnode>
        <childnode refid="43234" relation="include">
        </childnode>
        <childnode refid="43235" relation="include">
        </childnode>
        <childnode refid="43236" relation="include">
        </childnode>
        <childnode refid="43239" relation="include">
        </childnode>
        <childnode refid="43227" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
        <childnode refid="43242" relation="include">
        </childnode>
        <childnode refid="43238" relation="include">
        </childnode>
        <childnode refid="43245" relation="include">
        </childnode>
        <childnode refid="43246" relation="include">
        </childnode>
        <childnode refid="43163" relation="include">
        </childnode>
        <childnode refid="43162" relation="include">
        </childnode>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43155" relation="include">
        </childnode>
        <childnode refid="43166" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43169" relation="include">
        </childnode>
        <childnode refid="43248" relation="include">
        </childnode>
        <childnode refid="43249" relation="include">
        </childnode>
        <childnode refid="43250" relation="include">
        </childnode>
        <childnode refid="43251" relation="include">
        </childnode>
        <childnode refid="43257" relation="include">
        </childnode>
        <childnode refid="43258" relation="include">
        </childnode>
        <childnode refid="43259" relation="include">
        </childnode>
        <childnode refid="43134" relation="include">
        </childnode>
        <childnode refid="43260" relation="include">
        </childnode>
        <childnode refid="43048" relation="include">
        </childnode>
        <childnode refid="43050" relation="include">
        </childnode>
      </node>
      <node id="43056">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="43057" relation="include">
        </childnode>
        <childnode refid="43059" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43181" relation="include">
        </childnode>
      </node>
      <node id="43032">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="43025">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="43023">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="43024" relation="include">
        </childnode>
      </node>
      <node id="43243">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="43075">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="43071" relation="include">
        </childnode>
      </node>
      <node id="43073">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43037" relation="include">
        </childnode>
        <childnode refid="43074" relation="include">
        </childnode>
      </node>
      <node id="43021">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="43162">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="43163" relation="include">
        </childnode>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43165" relation="include">
        </childnode>
        <childnode refid="43168" relation="include">
        </childnode>
        <childnode refid="43169" relation="include">
        </childnode>
      </node>
      <node id="43004">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="43003" relation="include">
        </childnode>
      </node>
      <node id="43187">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="43043">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="43213">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="43214" relation="include">
        </childnode>
        <childnode refid="43106" relation="include">
        </childnode>
      </node>
      <node id="43265">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="43245">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="43028" relation="include">
        </childnode>
      </node>
      <node id="43166">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="43297">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43220">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43167">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="43121">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="43192">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="43000">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="43002" relation="include">
        </childnode>
        <childnode refid="43003" relation="include">
        </childnode>
      </node>
      <node id="43139">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="43138" relation="include">
        </childnode>
      </node>
      <node id="43185">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="43059">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="43081">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="43082" relation="include">
        </childnode>
        <childnode refid="43040" relation="include">
        </childnode>
        <childnode refid="43083" relation="include">
        </childnode>
      </node>
      <node id="43107">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43108" relation="include">
        </childnode>
        <childnode refid="43094" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43109" relation="include">
        </childnode>
      </node>
      <node id="43211">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="43212" relation="include">
        </childnode>
        <childnode refid="43106" relation="include">
        </childnode>
      </node>
      <node id="43116">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="43117" relation="include">
        </childnode>
        <childnode refid="43118" relation="include">
        </childnode>
        <childnode refid="43135" relation="include">
        </childnode>
        <childnode refid="43064" relation="include">
        </childnode>
      </node>
      <node id="43036">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="43137">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="43138" relation="include">
        </childnode>
        <childnode refid="43139" relation="include">
        </childnode>
      </node>
      <node id="43020">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="43011" relation="include">
        </childnode>
        <childnode refid="43021" relation="include">
        </childnode>
      </node>
      <node id="43014">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="43015" relation="include">
        </childnode>
      </node>
      <node id="43103">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43104" relation="include">
        </childnode>
        <childnode refid="43105" relation="include">
        </childnode>
      </node>
      <node id="43257">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="43038" relation="include">
        </childnode>
      </node>
      <node id="43176">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="43214">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="43084">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="43041" relation="include">
        </childnode>
      </node>
      <node id="42987">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX_PODVector.H"/>
        <childnode refid="42988" relation="include">
        </childnode>
      </node>
      <node id="42998">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="42999" relation="include">
        </childnode>
        <childnode refid="43006" relation="include">
        </childnode>
        <childnode refid="43007" relation="include">
        </childnode>
        <childnode refid="43009" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
        <childnode refid="43012" relation="include">
        </childnode>
      </node>
      <node id="42989">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="42993" relation="include">
        </childnode>
        <childnode refid="42994" relation="include">
        </childnode>
        <childnode refid="43271" relation="include">
        </childnode>
        <childnode refid="43274" relation="include">
        </childnode>
        <childnode refid="43201" relation="include">
        </childnode>
        <childnode refid="43202" relation="include">
        </childnode>
        <childnode refid="43203" relation="include">
        </childnode>
        <childnode refid="43275" relation="include">
        </childnode>
        <childnode refid="43276" relation="include">
        </childnode>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="43277" relation="include">
        </childnode>
        <childnode refid="43278" relation="include">
        </childnode>
        <childnode refid="43215" relation="include">
        </childnode>
        <childnode refid="43221" relation="include">
        </childnode>
        <childnode refid="43222" relation="include">
        </childnode>
        <childnode refid="43223" relation="include">
        </childnode>
        <childnode refid="43225" relation="include">
        </childnode>
        <childnode refid="43279" relation="include">
        </childnode>
        <childnode refid="42987" relation="include">
        </childnode>
        <childnode refid="43280" relation="include">
        </childnode>
        <childnode refid="43281" relation="include">
        </childnode>
        <childnode refid="43282" relation="include">
        </childnode>
        <childnode refid="43302" relation="include">
        </childnode>
        <childnode refid="43303" relation="include">
        </childnode>
        <childnode refid="43220" relation="include">
        </childnode>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43173" relation="include">
        </childnode>
        <childnode refid="43305" relation="include">
        </childnode>
        <childnode refid="43263" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
        <childnode refid="43304" relation="include">
        </childnode>
        <childnode refid="43050" relation="include">
        </childnode>
      </node>
      <node id="43159">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="43099">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="43264">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="43265" relation="include">
        </childnode>
        <childnode refid="43057" relation="include">
        </childnode>
        <childnode refid="43221" relation="include">
        </childnode>
        <childnode refid="43222" relation="include">
        </childnode>
        <childnode refid="43223" relation="include">
        </childnode>
        <childnode refid="43225" relation="include">
        </childnode>
        <childnode refid="43228" relation="include">
        </childnode>
        <childnode refid="43229" relation="include">
        </childnode>
        <childnode refid="43230" relation="include">
        </childnode>
        <childnode refid="43144" relation="include">
        </childnode>
      </node>
      <node id="43156">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="43256">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="43134" relation="include">
        </childnode>
      </node>
      <node id="43049">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="43008" relation="include">
        </childnode>
        <childnode refid="43050" relation="include">
        </childnode>
        <childnode refid="43051" relation="include">
        </childnode>
      </node>
      <node id="43267">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="43239" relation="include">
        </childnode>
        <childnode refid="43140" relation="include">
        </childnode>
        <childnode refid="43146" relation="include">
        </childnode>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43021" relation="include">
        </childnode>
        <childnode refid="43268" relation="include">
        </childnode>
        <childnode refid="43269" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
        <childnode refid="43243" relation="include">
        </childnode>
        <childnode refid="43062" relation="include">
        </childnode>
        <childnode refid="43238" relation="include">
        </childnode>
        <childnode refid="43244" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43245" relation="include">
        </childnode>
        <childnode refid="43189" relation="include">
        </childnode>
        <childnode refid="43252" relation="include">
        </childnode>
      </node>
      <node id="43067">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="43033" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43038" relation="include">
        </childnode>
        <childnode refid="43068" relation="include">
        </childnode>
        <childnode refid="43069" relation="include">
        </childnode>
      </node>
      <node id="43186">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="43187" relation="include">
        </childnode>
        <childnode refid="43181" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43113">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="43114" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
      </node>
      <node id="43269">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="43145" relation="include">
        </childnode>
        <childnode refid="43270" relation="include">
        </childnode>
      </node>
      <node id="43096">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="43276">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="43085">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.H</label>
        <link refid="AMReX__EB__levelset_8H"/>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43009" relation="include">
        </childnode>
        <childnode refid="43012" relation="include">
        </childnode>
      </node>
      <node id="43018">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="43251">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="43072" relation="include">
        </childnode>
        <childnode refid="43035" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43252" relation="include">
        </childnode>
        <childnode refid="43255" relation="include">
        </childnode>
        <childnode refid="43256" relation="include">
        </childnode>
      </node>
      <node id="43123">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="43198">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="43199" relation="include">
        </childnode>
      </node>
      <node id="43230">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="43231" relation="include">
        </childnode>
      </node>
      <node id="43238">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="43063" relation="include">
        </childnode>
      </node>
      <node id="43218">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="43003" relation="include">
        </childnode>
        <childnode refid="43015" relation="include">
        </childnode>
        <childnode refid="43219" relation="include">
        </childnode>
      </node>
      <node id="43188">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="43118" relation="include">
        </childnode>
        <childnode refid="43128" relation="include">
        </childnode>
      </node>
      <node id="43178">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="43158">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="43159" relation="include">
        </childnode>
      </node>
      <node id="43140">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="43141" relation="include">
        </childnode>
        <childnode refid="43144" relation="include">
        </childnode>
        <childnode refid="43145" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
      </node>
      <node id="43110">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="43132">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="43133" relation="include">
        </childnode>
      </node>
      <node id="43054">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="43031">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="43032" relation="include">
        </childnode>
      </node>
      <node id="43285">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43232">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="43233" relation="include">
        </childnode>
        <childnode refid="43188" relation="include">
        </childnode>
      </node>
      <node id="43151">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43007">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="43008" relation="include">
        </childnode>
      </node>
      <node id="43034">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="43275">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DArena.cpp</label>
        <link refid="AMReX__DArena_8cpp"/>
      </node>
      <node id="43053">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43046">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="43008" relation="include">
        </childnode>
        <childnode refid="43047" relation="include">
        </childnode>
        <childnode refid="43045" relation="include">
        </childnode>
        <childnode refid="43048" relation="include">
        </childnode>
        <childnode refid="43049" relation="include">
        </childnode>
        <childnode refid="43052" relation="include">
        </childnode>
      </node>
      <node id="43001">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="43217">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuLaunch.cpp</label>
        <link refid="AMReX__GpuLaunch_8cpp"/>
      </node>
      <node id="43292">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="43283" relation="include">
        </childnode>
      </node>
      <node id="43263">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
      </node>
      <node id="43183">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="43259">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="43071" relation="include">
        </childnode>
      </node>
      <node id="43210">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="43211" relation="include">
        </childnode>
      </node>
      <node id="43052">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="43053" relation="include">
        </childnode>
      </node>
      <node id="43249">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="43034" relation="include">
        </childnode>
      </node>
      <node id="43149">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43037" relation="include">
        </childnode>
      </node>
      <node id="43254">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="43250" relation="include">
        </childnode>
      </node>
      <node id="43266">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43141" relation="include">
        </childnode>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43182">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="43103" relation="include">
        </childnode>
      </node>
      <node id="43106">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43107" relation="include">
        </childnode>
        <childnode refid="43095" relation="include">
        </childnode>
        <childnode refid="43098" relation="include">
        </childnode>
        <childnode refid="43110" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
      </node>
      <node id="43098">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="43051">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="43201">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="43193">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="43194" relation="include">
        </childnode>
      </node>
      <node id="42996">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="43165">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="43163" relation="include">
        </childnode>
        <childnode refid="43164" relation="include">
        </childnode>
        <childnode refid="43166" relation="include">
        </childnode>
        <childnode refid="43167" relation="include">
        </childnode>
      </node>
      <node id="42993">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="43247">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="42999">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="43000" relation="include">
        </childnode>
        <childnode refid="43002" relation="include">
        </childnode>
        <childnode refid="43004" relation="include">
        </childnode>
        <childnode refid="43005" relation="include">
        </childnode>
      </node>
      <node id="43262">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43263" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
      </node>
      <node id="43136">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="43100">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="43101" relation="include">
        </childnode>
      </node>
      <node id="43041">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="43141">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="43138" relation="include">
        </childnode>
        <childnode refid="43142" relation="include">
        </childnode>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="43143" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
      </node>
      <node id="43199">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="43206">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="43170">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="43007" relation="include">
        </childnode>
        <childnode refid="43171" relation="include">
        </childnode>
        <childnode refid="43177" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43175" relation="include">
        </childnode>
      </node>
      <node id="43091">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1PODVector" prot="public">amrex::PODVector</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1detail">amrex::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PODVECTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PODVECTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuAllocators_8H" kindref="compound">AMReX_GpuAllocators.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuContainers_8H" kindref="compound">AMReX_GpuContainers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuDevice_8H" kindref="compound">AMReX_GpuDevice.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="21" refid="namespaceamrex_1_1detail_1a5bcec00259aa287e4fa1c57ed626d4e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a5bcec00259aa287e4fa1c57ed626d4e7" kindref="member">uninitializedFillNImpl</ref><sp/>(U*<sp/>data,<sp/>Size<sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value&amp;<sp/>value)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(count,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Size<sp/>i)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1Device_1a67c55a7d25eb5f5fdec62ffcc9c0dccf" kindref="member">Gpu::Device::streamSynchronize</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="31" refid="namespaceamrex_1_1detail_1a2bc955e71a20bceeaed3cc8333eb0398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a5bcec00259aa287e4fa1c57ed626d4e7" kindref="member">uninitializedFillNImpl</ref><sp/>(U*<sp/>data,<sp/>Size<sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value&amp;<sp/>value)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_fill_n&lt;U*,<sp/>U&gt;(data,<sp/>count,<sp/>value);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="38" refid="namespaceamrex_1_1detail_1aa59349c2dc230fb4a0c79fd80154b201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa59349c2dc230fb4a0c79fd80154b201" kindref="member">memCopyImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::dtod_memcpy(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="49" refid="namespaceamrex_1_1detail_1a5eae9e79bcaf47cc572db8a613117788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa59349c2dc230fb4a0c79fd80154b201" kindref="member">memCopyImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="56" refid="namespaceamrex_1_1detail_1a4ad48aa99f6648fea787451a974dda26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a4ad48aa99f6648fea787451a974dda26" kindref="member">memMoveImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count,<sp/>T&amp;<sp/>allocator)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(count<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::value_type)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>count<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::value_type);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>allocator.allocate(N);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::dtod_memcpy(tmp,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::dtod_memcpy(dst,<sp/>tmp,<sp/>count);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator.deallocate(tmp,<sp/>N);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(allocator);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="76" refid="namespaceamrex_1_1detail_1a1470b94793e6b77a8735c66329069612" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a4ad48aa99f6648fea787451a974dda26" kindref="member">memMoveImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count,<sp/>T&amp;<sp/></highlight><highlight class="comment">/*allocator*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="83" refid="namespaceamrex_1_1detail_1a0a1833caa214a1cb642c80afe8c49bc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a0a1833caa214a1cb642c80afe8c49bc7" kindref="member">initFromListImpl</ref><sp/>(U*<sp/>data,<sp/>std::initializer_list&lt;U&gt;<sp/>list)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">Gpu::htod_memcpy</ref>(data,<sp/>&amp;(*list.begin()),<sp/>list.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(data,<sp/>&amp;(*list.begin()),<sp/>list.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="94" refid="namespaceamrex_1_1detail_1a2eed1c648c543a4917823d6a12dc9135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a0a1833caa214a1cb642c80afe8c49bc7" kindref="member">initFromListImpl</ref><sp/>(U*<sp/>data,<sp/>std::initializer_list&lt;U&gt;<sp/>list)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>list)<sp/>{<sp/>*(data++)<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>std::allocator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="101" refid="classamrex_1_1PODVector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Allocator</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_standard_layout&lt;T&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;PODVector<sp/>can<sp/>only<sp/>hold<sp/>standard<sp/>layout<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(T),<sp/></highlight><highlight class="stringliteral">&quot;PODVector<sp/>can<sp/>only<sp/>hold<sp/>trivially<sp/>copyable<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Allocator::allocate;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Allocator::deallocate;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="classamrex_1_1PODVector_1a845a40f6549798e6ddf2079f1882f1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classamrex_1_1PODVector_1a845a40f6549798e6ddf2079f1882f1a6" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="111" refid="classamrex_1_1PODVector_1af2658f7c6d69faf4cd927d908802b41c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Allocator<sp/><ref refid="classamrex_1_1PODVector_1af2658f7c6d69faf4cd927d908802b41c" kindref="member">allocator_type</ref>;</highlight></codeline>
<codeline lineno="112" refid="classamrex_1_1PODVector_1a483f82ea685a6b6fecca53afe15d558d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="classamrex_1_1PODVector_1a483f82ea685a6b6fecca53afe15d558d" kindref="member">size_t</ref>;</highlight></codeline>
<codeline lineno="113" refid="classamrex_1_1PODVector_1a60a84d612f4b351d147ba1bb934758c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="classamrex_1_1PODVector_1a60a84d612f4b351d147ba1bb934758c1" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="114" refid="classamrex_1_1PODVector_1af184326386f1d1a678a4bf3247d45d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::ptrdiff_t<sp/><ref refid="classamrex_1_1PODVector_1af184326386f1d1a678a4bf3247d45d42" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="classamrex_1_1PODVector_1a9581fd4380a515628518d666d00e9d49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a9581fd4380a515628518d666d00e9d49" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="117" refid="classamrex_1_1PODVector_1ac45bc075fc9a1f60362dea58a71bf4c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1ac45bc075fc9a1f60362dea58a71bf4c0" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="118" refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="119" refid="classamrex_1_1PODVector_1a49a0b4c89f35668f99101cfae2905fd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;iterator&gt;<sp/><ref refid="classamrex_1_1PODVector_1a49a0b4c89f35668f99101cfae2905fd2" kindref="member">reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="classamrex_1_1PODVector_1a4d6e9668f39b13b37a58ca6be438bbfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a4d6e9668f39b13b37a58ca6be438bbfa" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="122" refid="classamrex_1_1PODVector_1a92c3b41f9015529103a077d83ea9fd3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a92c3b41f9015529103a077d83ea9fd3b" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="123" refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="124" refid="classamrex_1_1PODVector_1a956bb5cb593c90c5767dab45cdb827d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;const_iterator&gt;<sp/><ref refid="classamrex_1_1PODVector_1a956bb5cb593c90c5767dab45cdb827d5" kindref="member">const_reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/><ref refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="128" refid="classamrex_1_1PODVector_1a9ff96f69373c71e0ce54cae0b724c374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1a9ff96f69373c71e0ce54cae0b724c374" kindref="member">m_size</ref>,<sp/>m_capacity;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="classamrex_1_1PODVector_1a76f461b88f855afac15b08881216c5d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a76f461b88f855afac15b08881216c5d1" kindref="member">PODVector</ref><sp/>()<sp/>noexcept<sp/>:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator(),<sp/>m_data(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="classamrex_1_1PODVector_1ad7b0f629ddd6623ad965cc468bfda35b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1ad7b0f629ddd6623ad965cc468bfda35b" kindref="member">PODVector</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator)<sp/>noexcept</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),<sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="classamrex_1_1PODVector_1a79ee46b90b91bcc831c81e7ad43b3219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a79ee46b90b91bcc831c81e7ad43b3219" kindref="member">PODVector</ref><sp/>(size_type<sp/>a_size)<sp/>noexcept</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(a_size));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_size;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="classamrex_1_1PODVector_1aa826f3cebc8fcc8912101481e36e0b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1aa826f3cebc8fcc8912101481e36e0b52" kindref="member">PODVector</ref><sp/>(size_type<sp/>a_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type&amp;<sp/>a_value,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator<sp/>=<sp/>Allocator())<sp/>noexcept</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),<sp/>m_data(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(a_size));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_size;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(m_data,<sp/>a_size,<sp/>a_value);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155" refid="classamrex_1_1PODVector_1a6b8ab8f7ddc2372349a59abfbd06ceab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1a6b8ab8f7ddc2372349a59abfbd06ceab" kindref="member">PODVector</ref><sp/>(std::initializer_list&lt;T&gt;<sp/>a_initializer_list,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator<sp/>=<sp/>Allocator())<sp/>noexcept</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),<sp/>m_data(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref><sp/>=<sp/>a_initializer_list.size();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(size));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::initFromListImpl&lt;Allocator&gt;(m_data,<sp/>a_initializer_list);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165" refid="classamrex_1_1PODVector_1a5c85faa4ccae07e9e904c516cfd1ef49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1a5c85faa4ccae07e9e904c516cfd1ef49" kindref="member">PODVector</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_vector),<sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(a_vector.capacity());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_vector.size();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memCopyImpl&lt;Allocator&gt;(m_data,<sp/>a_vector.m_data,<sp/>a_vector.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174" refid="classamrex_1_1PODVector_1abac5cd6b7981b06fe091b1cea5b54579" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1abac5cd6b7981b06fe091b1cea5b54579" kindref="member">PODVector</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(std::move(a_vector)),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data(a_vector.m_data),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size(a_vector.m_size),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity(a_vector.m_capacity)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="classamrex_1_1PODVector_1afe47db5bea52ba4e76c92c5f4e185c46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1afe47db5bea52ba4e76c92c5f4e185c46" kindref="member">PODVector</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator)<sp/>noexcept</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data(a_vector.m_data),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size(a_vector.m_size),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity(a_vector.m_capacity)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196" refid="classamrex_1_1PODVector_1a4b55d119990bf8f5038348b29aa996c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1a4b55d119990bf8f5038348b29aa996c8" kindref="member">~PODVector</ref><sp/>()<sp/>noexcept<sp/>{<sp/>deallocate(m_data,<sp/>capacity());<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198" refid="classamrex_1_1PODVector_1a463a93331c5e5a8658ce9bd9fac52a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/>operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CopyAssignmentDoIt(a_vector,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::allocator_traits&lt;Allocator&gt;::</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagate_on_container_copy_assignment());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204" refid="classamrex_1_1PODVector_1a08d60f3cf95329c999bc991ebd4b1df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/>operator=<sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::allocator_traits&lt;Allocator&gt;::propagate_on_container_move_assignment::value)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MoveAssignmentDoIt(std::move(a_vector),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::allocator_traits&lt;Allocator&gt;::</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagate_on_container_move_assignment());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="classamrex_1_1PODVector_1ada4716396d1c5faae81c327d1ac44e81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1ada4716396d1c5faae81c327d1ac44e81" kindref="member">erase</ref><sp/>(const_iterator<sp/>a_pos)<sp/>noexcept</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--m_size;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos),<sp/>a_pos+1,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218" refid="classamrex_1_1PODVector_1a6aec62620d673d5bfd290bfa35cdd0d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a6aec62620d673d5bfd290bfa35cdd0d6" kindref="member">erase</ref><sp/>(const_iterator<sp/>a_first,<sp/>const_iterator<sp/>a_last)<sp/>noexcept</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>num_to_erase<sp/>=<sp/>a_last<sp/>-<sp/>a_first;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_to_erase<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_first);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>-=<sp/>num_to_erase;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_first),<sp/>a_first+num_to_erase,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_first)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_first);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="classamrex_1_1PODVector_1a07a01dfd32b00e67c3c65e9ecb7da432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a07a01dfd32b00e67c3c65e9ecb7da432" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_item)<sp/>noexcept</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_size<sp/>==<sp/>m_capacity)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(1),<sp/>insert_index,<sp/>1);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+1,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)<sp/>=<sp/>a_item;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="classamrex_1_1PODVector_1ae26665c45117a553ccdf7c2a216c11e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1ae26665c45117a553ccdf7c2a216c11e6" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>size_type<sp/>a_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_count<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capacity()<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>a_count)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(a_count),<sp/>insert_index,<sp/>a_count);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+a_count,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>+=<sp/>a_count;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos),<sp/>a_count,<sp/>a_value);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268" refid="classamrex_1_1PODVector_1a3b5964595821a3c3e9c261b40ec53e58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a3b5964595821a3c3e9c261b40ec53e58" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>T&amp;&amp;<sp/>a_item)<sp/>noexcept</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_size<sp/>==<sp/>m_capacity)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(1),<sp/>insert_index,<sp/>1);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+1,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)<sp/>=<sp/>a_item;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="classamrex_1_1PODVector_1ad50d4bf1013274e31a7efbb856407372" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1ad50d4bf1013274e31a7efbb856407372" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>std::initializer_list&lt;T&gt;<sp/>a_initializer_list)<sp/>noexcept</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>count<sp/>=<sp/>a_initializer_list.size();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capacity()<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>count)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(count),<sp/>insert_index,<sp/>count);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+count,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>initializer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>a_initializer_list)<sp/>{<sp/>*(dst++)<sp/>=<sp/>value;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>InputIt,<sp/>class<sp/>bar<sp/>=<sp/>typename<sp/>std::iterator_traits&lt;InputIt&gt;::difference_type&gt;</highlight></codeline>
<codeline lineno="309" refid="classamrex_1_1PODVector_1af372ba330714bf4ec696aad95e1f4dfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1af372ba330714bf4ec696aad95e1f4dfc" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>InputIt<sp/>a_first,<sp/>InputIt<sp/>a_last)<sp/>noexcept</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>count<sp/>=<sp/>std::distance(a_first,<sp/>a_last);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capacity()<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>count)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(count),<sp/>insert_index,<sp/>count);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+count,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(a_first<sp/>!=<sp/>a_last)<sp/>{<sp/>*(dst++)<sp/>=<sp/>*(a_first++);<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329" refid="classamrex_1_1PODVector_1a4e20e83accd80a92cd1a01b1c3242d25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a4e20e83accd80a92cd1a01b1c3242d25" kindref="member">assign</ref><sp/>(size_type<sp/>a_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a_count<sp/>&gt;<sp/>capacity()<sp/>)<sp/>AllocateBuffer(GetNewCapacity(a_count));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_count;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(m_data,<sp/>a_count,<sp/>a_value);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336" refid="classamrex_1_1PODVector_1a55288145cc1dcb67bfd58a5b85fac727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a55288145cc1dcb67bfd58a5b85fac727" kindref="member">assign</ref><sp/>(std::initializer_list&lt;T&gt;<sp/>a_initializer_list)<sp/>noexcept</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a_initializer_list.size()<sp/>&gt;<sp/>capacity())</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(a_initializer_list.size()));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_initializer_list.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>initializer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_data);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>a_initializer_list)<sp/>{<sp/>*(dst++)<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>InputIt,<sp/>class<sp/>bar<sp/>=<sp/>typename<sp/>std::iterator_traits&lt;InputIt&gt;::difference_type&gt;</highlight></codeline>
<codeline lineno="346" refid="classamrex_1_1PODVector_1a1afe8d2f8a93c4feb056c2214878fd0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a1afe8d2f8a93c4feb056c2214878fd0a" kindref="member">assign</ref><sp/>(InputIt<sp/>a_first,<sp/>InputIt<sp/>a_last)<sp/>noexcept</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>std::distance(a_first,<sp/>a_last);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>capacity())<sp/>AllocateBuffer(GetNewCapacity(count));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_data);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(a_first<sp/>!=<sp/>a_last)<sp/>{<sp/>*(dst++)<sp/>=<sp/>*(a_first++);<sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>have<sp/>the<sp/>emplace<sp/>methods,<sp/>but<sp/>not<sp/>sure<sp/>how<sp/>often<sp/>we<sp/>use<sp/>those.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classamrex_1_1PODVector_1a67de98b5efe335d818e6bc91911418ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/><ref refid="classamrex_1_1PODVector_1a67de98b5efe335d818e6bc91911418ff" kindref="member">get_allocator</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357" refid="classamrex_1_1PODVector_1adb9df25b399f75fae646206ecd6706cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1adb9df25b399f75fae646206ecd6706cc" kindref="member">push_back</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_size<sp/>==<sp/>m_capacity)<sp/>AllocateBuffer(GetNewCapacity(1));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[m_size]<sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364" refid="classamrex_1_1PODVector_1a30ce7699c5a5620cad90ce01e827092c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a30ce7699c5a5620cad90ce01e827092c" kindref="member">push_back</ref><sp/>(T&amp;&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_size<sp/>==<sp/>m_capacity)<sp/>AllocateBuffer(GetNewCapacity(1));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[m_size]<sp/>=<sp/>std::move(a_value);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371" refid="classamrex_1_1PODVector_1a437b046dcdfcfe81a587846c4068c95a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a437b046dcdfcfe81a587846c4068c95a" kindref="member">pop_back</ref><sp/>()<sp/>noexcept<sp/>{<sp/>--m_size;<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373" refid="classamrex_1_1PODVector_1aab4feefd754fb80185d22c9a6708caea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1aab4feefd754fb80185d22c9a6708caea" kindref="member">clear</ref><sp/>()<sp/>noexcept<sp/>{<sp/>m_size<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375" refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" kindref="member">size</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377" refid="classamrex_1_1PODVector_1abf630d0bfa81c94458b031d299c5d6ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1abf630d0bfa81c94458b031d299c5d6ef" kindref="member">max_size</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Allocator::max_size();<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379" refid="classamrex_1_1PODVector_1ab0c66f33cd2db51d1c4d142e175eefd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1ab0c66f33cd2db51d1c4d142e175eefd3" kindref="member">capacity</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_capacity;<sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381" refid="classamrex_1_1PODVector_1af46775770f6ac9e8696c8e8fd80da03e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1af46775770f6ac9e8696c8e8fd80da03e" kindref="member">empty</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_size<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383" refid="classamrex_1_1PODVector_1a553df993568cf65c1252d805c7cfcd8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/>operator[]<sp/>(size_type<sp/>a_index)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data[a_index];<sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385" refid="classamrex_1_1PODVector_1a57c5c0338de67e3329a4e33e0500527b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator[]<sp/>(size_type<sp/>a_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data[a_index];<sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387" refid="classamrex_1_1PODVector_1ae35d54db01ac368409bd57f8e2f91941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1ae35d54db01ac368409bd57f8e2f91941" kindref="member">front</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_data;<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389" refid="classamrex_1_1PODVector_1a24668b130567e7b47b01a5342ac943a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a24668b130567e7b47b01a5342ac943a2" kindref="member">front</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_data;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391" refid="classamrex_1_1PODVector_1a2f7b499a6deaa9062f42552e90766de6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a2f7b499a6deaa9062f42552e90766de6" kindref="member">back</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(m_data<sp/>+<sp/>m_size<sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393" refid="classamrex_1_1PODVector_1a94624aaa5b0a5c99b6a6e755fcb39120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a94624aaa5b0a5c99b6a6e755fcb39120" kindref="member">back</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(m_data<sp/>+<sp/>m_size<sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395" refid="classamrex_1_1PODVector_1a52a678e008fab2346394fcad18bc90c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a52a678e008fab2346394fcad18bc90c4" kindref="member">data</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397" refid="classamrex_1_1PODVector_1a7915ebc269c31e0ca4dd52ea91b782ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a7915ebc269c31e0ca4dd52ea91b782ad" kindref="member">data</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399" refid="classamrex_1_1PODVector_1aed3e37de016bb3a5bdeef31fe0f8b4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1aed3e37de016bb3a5bdeef31fe0f8b4e0" kindref="member">dataPtr</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401" refid="classamrex_1_1PODVector_1ae1c2484fecf96587fdb95ba7fffc55ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1ae1c2484fecf96587fdb95ba7fffc55ad" kindref="member">dataPtr</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403" refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" kindref="member">begin</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405" refid="classamrex_1_1PODVector_1a0d45a6981becc1c5a1185029a91d47f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1a0d45a6981becc1c5a1185029a91d47f6" kindref="member">begin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407" refid="classamrex_1_1PODVector_1a834016620c6c540a3af5cbe7a2637bed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a834016620c6c540a3af5cbe7a2637bed" kindref="member">end</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data<sp/>+<sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409" refid="classamrex_1_1PODVector_1acd98b753ad23f8ace8640192eaf907e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1acd98b753ad23f8ace8640192eaf907e2" kindref="member">end</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data<sp/>+<sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411" refid="classamrex_1_1PODVector_1aa95b5d33b04423ffc385e2c8f2096876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1aa95b5d33b04423ffc385e2c8f2096876" kindref="member">rbegin</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverse_iterator(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>());<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413" refid="classamrex_1_1PODVector_1a8dc6a6dec2668ff14d083905ed5b128a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a8dc6a6dec2668ff14d083905ed5b128a" kindref="member">rbegin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>());<sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415" refid="classamrex_1_1PODVector_1a62f0bd74d3b57e02621753ca0892e892" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a62f0bd74d3b57e02621753ca0892e892" kindref="member">rend</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverse_iterator(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>());<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417" refid="classamrex_1_1PODVector_1a951939815fe8ce7a68fd156df98d76e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a951939815fe8ce7a68fd156df98d76e9" kindref="member">rend</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>());<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419" refid="classamrex_1_1PODVector_1a0def3f145344eccc86425f242f188ac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1a0def3f145344eccc86425f242f188ac8" kindref="member">cbegin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421" refid="classamrex_1_1PODVector_1ab181f05f4a962b1a5f6092ba124bc9a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1ab181f05f4a962b1a5f6092ba124bc9a6" kindref="member">cend</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data<sp/>+<sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423" refid="classamrex_1_1PODVector_1a2c68dc479595f1cfeb16dc8c5e3a8c81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a2c68dc479595f1cfeb16dc8c5e3a8c81" kindref="member">crbegin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>());<sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425" refid="classamrex_1_1PODVector_1aa4c942fc07ff0e247a2857deeaa773ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1aa4c942fc07ff0e247a2857deeaa773ae" kindref="member">crend</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>());<sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" kindref="member">resize</ref><sp/>(size_type<sp/>a_new_size)<sp/>noexcept</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capacity()<sp/>&lt;<sp/>a_new_size)<sp/>AllocateBuffer(GetNewCapacity(a_new_size<sp/>-<sp/>capacity()));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_new_size;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433" refid="classamrex_1_1PODVector_1a250601ff5e9d9c82bf48202f062fec41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a250601ff5e9d9c82bf48202f062fec41" kindref="member">resize</ref><sp/>(size_type<sp/>a_new_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_val)<sp/>noexcept</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>old_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resize(a_new_size);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_size<sp/>&lt;<sp/>a_new_size)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(m_data<sp/>+<sp/>old_size,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>-<sp/>old_size,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_val);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445" refid="classamrex_1_1PODVector_1a0710d10af50a121adb47fd3982774d8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a0710d10af50a121adb47fd3982774d8c" kindref="member">reserve</ref><sp/>(size_type<sp/>a_capacity)<sp/>noexcept<sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capacity()<sp/>&lt;<sp/>a_capacity)<sp/>AllocateBuffer(a_capacity);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450" refid="classamrex_1_1PODVector_1ad57142666bd78b62d509821a0e0f2e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1ad57142666bd78b62d509821a0e0f2e6a" kindref="member">shrink_to_fit</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>current_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>current_size<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>current_size<sp/>&lt;<sp/>capacity()<sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(current_size);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466" refid="classamrex_1_1PODVector_1a20b9cc552a434d343fd01e5c62b39ef2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a20b9cc552a434d343fd01e5c62b39ef2" kindref="member">swap</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(m_data,<sp/>a_vector.m_data);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(m_size,<sp/>a_vector.m_size);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(m_capacity,<sp/>a_vector.m_capacity);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(static_cast&lt;Allocator&amp;&gt;(a_vector),<sp/>static_cast&lt;Allocator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>where<sp/>we<sp/>would<sp/>change<sp/>the<sp/>growth<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classamrex_1_1PODVector_1aef1641f59137b10682b3c6a6e563fecc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1aef1641f59137b10682b3c6a6e563fecc" kindref="member">GetNewCapacity</ref><sp/>(size_type<sp/>a_num_to_be_added)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>new_capacity<sp/>=<sp/>capacity();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capacity()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_capacity<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(64<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>size_type(1));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(new_capacity<sp/>&lt;<sp/>(capacity()<sp/>+<sp/>a_num_to_be_added))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_capacity<sp/>=<sp/>(3<sp/>*<sp/>new_capacity<sp/>+<sp/>1)/2;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_capacity;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>where<sp/>we<sp/>would<sp/>play<sp/>games<sp/>with<sp/>the<sp/>allocator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="classamrex_1_1PODVector_1a9952bc77943ea3370be5fad878b97e03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a9952bc77943ea3370be5fad878b97e03" kindref="member">AllocateBuffer</ref><sp/>(size_type<sp/>a_capacity)<sp/>noexcept</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>new_data<sp/>=<sp/>allocate(a_capacity);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_data)<sp/>detail::memCopyImpl&lt;Allocator&gt;(new_data,<sp/>m_data,<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_capacity;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>have<sp/>this<sp/>version<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="classamrex_1_1PODVector_1a8249332ae009a83e8b0b6600032d05a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a8249332ae009a83e8b0b6600032d05a3" kindref="member">AllocateBufferForInsert</ref>(size_type<sp/>a_capacity,<sp/>size_type<sp/>a_index,<sp/>size_type<sp/>a_count)<sp/>noexcept</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>new_data<sp/>=<sp/>allocate(a_capacity);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_data)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memCopyImpl&lt;Allocator&gt;(new_data,<sp/>m_data,<sp/>a_index<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memCopyImpl&lt;Allocator&gt;(new_data<sp/>+<sp/>a_index<sp/>+<sp/>a_count,<sp/>m_data<sp/>+<sp/>a_index,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>-<sp/>a_index)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>a_count;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_capacity;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521" refid="classamrex_1_1PODVector_1a5a460930ffbde164303d6fb956a2990e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1a5a460930ffbde164303d6fb956a2990e" kindref="member">CopyAssignmentDoIt</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector,<sp/>std::true_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>other_size<sp/>=<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" kindref="member">size</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_size<sp/>&gt;<sp/>capacity()<sp/>)<sp/>{<sp/>AllocateBuffer(other_size);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>other_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memCopyImpl&lt;Allocator&gt;(m_data,<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" kindref="member">m_data</ref>,<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530" refid="classamrex_1_1PODVector_1a1cc18735213c97b7fb64e2ce42a83cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1a1cc18735213c97b7fb64e2ce42a83cc2" kindref="member">CopyAssignmentDoIt</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector,<sp/>std::false_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;Allocator<sp/>const&amp;&gt;(a_vector)<sp/>==<sp/>static_cast&lt;Allocator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CopyAssignmentDoIt(a_vector,<sp/>std::true_type());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>other_size<sp/>=<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" kindref="member">size</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_size<sp/>&gt;<sp/>capacity()<sp/>)<sp/>{<sp/>AllocateBuffer(other_size);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>other_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memCopyImpl&lt;Allocator&gt;(m_data,<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" kindref="member">m_data</ref>,<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::operator=(static_cast&lt;Allocator<sp/>const&amp;&gt;(a_vector));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="547" refid="classamrex_1_1PODVector_1af344a2609581e4d8a2150493765c89fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1af344a2609581e4d8a2150493765c89fb" kindref="member">MoveAssignmentDoIt</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector,<sp/>std::false_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;Allocator&amp;&gt;(a_vector)<sp/>==<sp/>static_cast&lt;Allocator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>a_vector.m_data;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_vector.m_size;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_vector.m_capacity;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>allocators<sp/>are<sp/>not<sp/>the<sp/>same<sp/>we<sp/>give<sp/>up<sp/>and<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyAssignmentDoIt(a_vector,<sp/>std::false_type());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570" refid="classamrex_1_1PODVector_1a5deceff5843ae30c88913841d64ce001" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1a5deceff5843ae30c88913841d64ce001" kindref="member">MoveAssignmentDoIt</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector,<sp/>std::true_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::operator=(std::move(static_cast&lt;Allocator<sp/>const&amp;&gt;(a_vector)));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>a_vector.m_data;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_vector.m_size;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_vector.m_capacity;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PODVector.H"/>
  </compounddef>
</doxygen>
