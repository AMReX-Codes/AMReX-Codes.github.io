<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__PODVector_8H" kind="file" language="C++">
    <compoundname>AMReX_PODVector.H</compoundname>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__GpuAllocators_8H" local="no">AMReX_GpuAllocators.H</includes>
    <includes refid="AMReX__GpuContainers_8H" local="no">AMReX_GpuContainers.H</includes>
    <includes refid="AMReX__GpuDevice_8H" local="no">AMReX_GpuDevice.H</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">memory</includes>
    <includes local="no">cstring</includes>
    <includedby refid="AMReX__GpuContainers_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuContainers.H</includedby>
    <incdepgraph>
      <node id="41545">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="41523" relation="include">
        </childnode>
        <childnode refid="41546" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41452" relation="include">
        </childnode>
        <childnode refid="41542" relation="include">
        </childnode>
        <childnode refid="41547" relation="include">
        </childnode>
        <childnode refid="41454" relation="include">
        </childnode>
      </node>
      <node id="41514">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41515" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41481" relation="include">
        </childnode>
      </node>
      <node id="41544">
        <label>iomanip</label>
      </node>
      <node id="41488">
        <label>functional</label>
      </node>
      <node id="41508">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41509" relation="include">
        </childnode>
        <childnode refid="41471" relation="include">
        </childnode>
        <childnode refid="41510" relation="include">
        </childnode>
        <childnode refid="41505" relation="include">
        </childnode>
        <childnode refid="41511" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
      </node>
      <node id="41474">
        <label>limits</label>
      </node>
      <node id="41521">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="41470" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
      </node>
      <node id="41546">
        <label>iterator</label>
      </node>
      <node id="41501">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="41502" relation="include">
        </childnode>
        <childnode refid="41497" relation="include">
        </childnode>
        <childnode refid="41503" relation="include">
        </childnode>
        <childnode refid="41481" relation="include">
        </childnode>
        <childnode refid="41504" relation="include">
        </childnode>
        <childnode refid="41505" relation="include">
        </childnode>
        <childnode refid="41506" relation="include">
        </childnode>
        <childnode refid="41496" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41507" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
      </node>
      <node id="41492">
        <label>float.h</label>
      </node>
      <node id="41532">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41462" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
        <childnode refid="41455" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
        <childnode refid="41484" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41507" relation="include">
        </childnode>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41487" relation="include">
        </childnode>
      </node>
      <node id="41548">
        <label>cstdint</label>
      </node>
      <node id="41512">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="41471" relation="include">
        </childnode>
        <childnode refid="41474" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41509" relation="include">
        </childnode>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41480" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41501" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
        <childnode refid="41513" relation="include">
        </childnode>
      </node>
      <node id="41531">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
      </node>
      <node id="41504">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="41484" relation="include">
        </childnode>
        <childnode refid="41481" relation="include">
        </childnode>
        <childnode refid="41496" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41499" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41455" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41486" relation="include">
        </childnode>
        <childnode refid="41502" relation="include">
        </childnode>
        <childnode refid="41467" relation="include">
        </childnode>
        <childnode refid="41487" relation="include">
        </childnode>
        <childnode refid="41474" relation="include">
        </childnode>
        <childnode refid="41473" relation="include">
        </childnode>
        <childnode refid="41498" relation="include">
        </childnode>
      </node>
      <node id="41480">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41458" relation="include">
        </childnode>
        <childnode refid="41460" relation="include">
        </childnode>
        <childnode refid="41481" relation="include">
        </childnode>
        <childnode refid="41482" relation="include">
        </childnode>
        <childnode refid="41484" relation="include">
        </childnode>
        <childnode refid="41486" relation="include">
        </childnode>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41488" relation="include">
        </childnode>
        <childnode refid="41470" relation="include">
        </childnode>
        <childnode refid="41459" relation="include">
        </childnode>
        <childnode refid="41489" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
      </node>
      <node id="41458">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="41459" relation="include">
        </childnode>
      </node>
      <node id="41538">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="41465">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="41466" relation="include">
        </childnode>
        <childnode refid="41470" relation="include">
        </childnode>
      </node>
      <node id="41500">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="41498" relation="include">
        </childnode>
        <childnode refid="41489" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41484" relation="include">
        </childnode>
      </node>
      <node id="41543">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="41469" relation="include">
        </childnode>
        <childnode refid="41515" relation="include">
        </childnode>
        <childnode refid="41544" relation="include">
        </childnode>
        <childnode refid="41495" relation="include">
        </childnode>
        <childnode refid="41480" relation="include">
        </childnode>
        <childnode refid="41514" relation="include">
        </childnode>
        <childnode refid="41513" relation="include">
        </childnode>
      </node>
      <node id="41487">
        <label>cmath</label>
      </node>
      <node id="41461">
        <label>cassert</label>
      </node>
      <node id="41483">
        <label>stdexcept</label>
      </node>
      <node id="41523">
        <label>numeric</label>
      </node>
      <node id="41533">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="41494" relation="include">
        </childnode>
        <childnode refid="41534" relation="include">
        </childnode>
        <childnode refid="41488" relation="include">
        </childnode>
        <childnode refid="41454" relation="include">
        </childnode>
        <childnode refid="41495" relation="include">
        </childnode>
        <childnode refid="41453" relation="include">
        </childnode>
        <childnode refid="41535" relation="include">
        </childnode>
        <childnode refid="41531" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
      </node>
      <node id="41511">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="41502" relation="include">
        </childnode>
        <childnode refid="41504" relation="include">
        </childnode>
        <childnode refid="41505" relation="include">
        </childnode>
        <childnode refid="41501" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
      </node>
      <node id="41470">
        <label>string</label>
      </node>
      <node id="41536">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="41501" relation="include">
        </childnode>
      </node>
      <node id="41471">
        <label>map</label>
      </node>
      <node id="41524">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41513" relation="include">
        </childnode>
      </node>
      <node id="41535">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="41495" relation="include">
        </childnode>
      </node>
      <node id="41475">
        <label>cfloat</label>
      </node>
      <node id="41515">
        <label>fstream</label>
      </node>
      <node id="41503">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="41491" relation="include">
        </childnode>
      </node>
      <node id="41493">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="41494" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41495" relation="include">
        </childnode>
        <childnode refid="41470" relation="include">
        </childnode>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41469" relation="include">
        </childnode>
        <childnode refid="41459" relation="include">
        </childnode>
        <childnode refid="41480" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41496" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
        <childnode refid="41497" relation="include">
        </childnode>
        <childnode refid="41499" relation="include">
        </childnode>
      </node>
      <node id="41529">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41462" relation="include">
        </childnode>
        <childnode refid="41530" relation="include">
        </childnode>
        <childnode refid="41532" relation="include">
        </childnode>
        <childnode refid="41531" relation="include">
        </childnode>
      </node>
      <node id="41496">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="41462">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="41455">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="41542">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="41471" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41474" relation="include">
        </childnode>
        <childnode refid="41543" relation="include">
        </childnode>
        <childnode refid="41528" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
      </node>
      <node id="41464">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41462" relation="include">
        </childnode>
        <childnode refid="41465" relation="include">
        </childnode>
        <childnode refid="41525" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
        <childnode refid="41527" relation="include">
        </childnode>
        <childnode refid="41529" relation="include">
        </childnode>
        <childnode refid="41533" relation="include">
        </childnode>
        <childnode refid="41501" relation="include">
        </childnode>
        <childnode refid="41536" relation="include">
        </childnode>
        <childnode refid="41455" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41453" relation="include">
        </childnode>
        <childnode refid="41509" relation="include">
        </childnode>
        <childnode refid="41474" relation="include">
        </childnode>
        <childnode refid="41498" relation="include">
        </childnode>
        <childnode refid="41495" relation="include">
        </childnode>
        <childnode refid="41537" relation="include">
        </childnode>
        <childnode refid="41538" relation="include">
        </childnode>
      </node>
      <node id="41476">
        <label>sys/types.h</label>
      </node>
      <node id="41522">
        <label>typeinfo</label>
      </node>
      <node id="41459">
        <label>cstdio</label>
      </node>
      <node id="41453">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="41454" relation="include">
        </childnode>
        <childnode refid="41455" relation="include">
        </childnode>
      </node>
      <node id="41463">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41462" relation="include">
        </childnode>
      </node>
      <node id="41534">
        <label>tuple</label>
      </node>
      <node id="41516">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="41517" relation="include">
        </childnode>
        <childnode refid="41470" relation="include">
        </childnode>
        <childnode refid="41495" relation="include">
        </childnode>
        <childnode refid="41469" relation="include">
        </childnode>
        <childnode refid="41459" relation="include">
        </childnode>
        <childnode refid="41467" relation="include">
        </childnode>
        <childnode refid="41518" relation="include">
        </childnode>
        <childnode refid="41519" relation="include">
        </childnode>
        <childnode refid="41520" relation="include">
        </childnode>
      </node>
      <node id="41547">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="41456" relation="include">
        </childnode>
        <childnode refid="41528" relation="include">
        </childnode>
        <childnode refid="41548" relation="include">
        </childnode>
        <childnode refid="41454" relation="include">
        </childnode>
      </node>
      <node id="41477">
        <label>unistd.h</label>
      </node>
      <node id="41517">
        <label>stack</label>
      </node>
      <node id="41489">
        <label>vector</label>
      </node>
      <node id="41479">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="41480" relation="include">
        </childnode>
      </node>
      <node id="41486">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41455" relation="include">
        </childnode>
        <childnode refid="41487" relation="include">
        </childnode>
      </node>
      <node id="41457">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="41495">
        <label>utility</label>
      </node>
      <node id="41494">
        <label>array</label>
      </node>
      <node id="41469">
        <label>sstream</label>
      </node>
      <node id="41482">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="41483" relation="include">
        </childnode>
      </node>
      <node id="41497">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="41498" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41455" relation="include">
        </childnode>
        <childnode refid="41499" relation="include">
        </childnode>
      </node>
      <node id="41484">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="41485" relation="include">
        </childnode>
      </node>
      <node id="41525">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41465" relation="include">
        </childnode>
        <childnode refid="41501" relation="include">
        </childnode>
        <childnode refid="41453" relation="include">
        </childnode>
      </node>
      <node id="41513">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="41481" relation="include">
        </childnode>
        <childnode refid="41514" relation="include">
        </childnode>
        <childnode refid="41516" relation="include">
        </childnode>
        <childnode refid="41521" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41484" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41501" relation="include">
        </childnode>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41489" relation="include">
        </childnode>
        <childnode refid="41470" relation="include">
        </childnode>
        <childnode refid="41522" relation="include">
        </childnode>
        <childnode refid="41498" relation="include">
        </childnode>
        <childnode refid="41488" relation="include">
        </childnode>
        <childnode refid="41474" relation="include">
        </childnode>
        <childnode refid="41523" relation="include">
        </childnode>
      </node>
      <node id="41466">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="41467" relation="include">
        </childnode>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41469" relation="include">
        </childnode>
        <childnode refid="41470" relation="include">
        </childnode>
        <childnode refid="41471" relation="include">
        </childnode>
        <childnode refid="41472" relation="include">
        </childnode>
        <childnode refid="41454" relation="include">
        </childnode>
        <childnode refid="41473" relation="include">
        </childnode>
        <childnode refid="41474" relation="include">
        </childnode>
        <childnode refid="41475" relation="include">
        </childnode>
        <childnode refid="41476" relation="include">
        </childnode>
        <childnode refid="41477" relation="include">
        </childnode>
        <childnode refid="41478" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
        <childnode refid="41484" relation="include">
        </childnode>
        <childnode refid="41493" relation="include">
        </childnode>
        <childnode refid="41500" relation="include">
        </childnode>
        <childnode refid="41501" relation="include">
        </childnode>
        <childnode refid="41508" relation="include">
        </childnode>
        <childnode refid="41512" relation="include">
        </childnode>
        <childnode refid="41513" relation="include">
        </childnode>
        <childnode refid="41524" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
      </node>
      <node id="41528">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41509" relation="include">
        </childnode>
        <childnode refid="41467" relation="include">
        </childnode>
      </node>
      <node id="41506">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="41502" relation="include">
        </childnode>
        <childnode refid="41479" relation="include">
        </childnode>
        <childnode refid="41496" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
      </node>
      <node id="41499">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="41468" relation="include">
        </childnode>
        <childnode refid="41491" relation="include">
        </childnode>
        <childnode refid="41457" relation="include">
        </childnode>
      </node>
      <node id="41502">
        <label>iosfwd</label>
      </node>
      <node id="41478">
        <label>sys/wait.h</label>
      </node>
      <node id="41467">
        <label>cstdlib</label>
      </node>
      <node id="41520">
        <label>cfenv</label>
      </node>
      <node id="41468">
        <label>iostream</label>
      </node>
      <node id="41505">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="41502" relation="include">
        </childnode>
        <childnode refid="41481" relation="include">
        </childnode>
        <childnode refid="41504" relation="include">
        </childnode>
        <childnode refid="41496" relation="include">
        </childnode>
      </node>
      <node id="41507">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="41504" relation="include">
        </childnode>
        <childnode refid="41458" relation="include">
        </childnode>
      </node>
      <node id="41509">
        <label>cstddef</label>
      </node>
      <node id="41510">
        <label>unordered_map</label>
      </node>
      <node id="41452">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX_PODVector.H"/>
        <childnode refid="41453" relation="include">
        </childnode>
        <childnode refid="41456" relation="include">
        </childnode>
        <childnode refid="41542" relation="include">
        </childnode>
        <childnode refid="41545" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
        <childnode refid="41454" relation="include">
        </childnode>
        <childnode refid="41495" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41540" relation="include">
        </childnode>
      </node>
      <node id="41456">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41458" relation="include">
        </childnode>
        <childnode refid="41460" relation="include">
        </childnode>
        <childnode refid="41462" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41464" relation="include">
        </childnode>
        <childnode refid="41465" relation="include">
        </childnode>
        <childnode refid="41530" relation="include">
        </childnode>
        <childnode refid="41532" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
        <childnode refid="41539" relation="include">
        </childnode>
        <childnode refid="41541" relation="include">
        </childnode>
        <childnode refid="41527" relation="include">
        </childnode>
        <childnode refid="41525" relation="include">
        </childnode>
        <childnode refid="41529" relation="include">
        </childnode>
        <childnode refid="41542" relation="include">
        </childnode>
        <childnode refid="41545" relation="include">
        </childnode>
        <childnode refid="41549" relation="include">
        </childnode>
      </node>
      <node id="41473">
        <label>climits</label>
      </node>
      <node id="41549">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="41472">
        <label>chrono</label>
      </node>
      <node id="41537">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="41519">
        <label>csignal</label>
      </node>
      <node id="41454">
        <label>type_traits</label>
      </node>
      <node id="41481">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="41541">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="41528" relation="include">
        </childnode>
      </node>
      <node id="41498">
        <label>algorithm</label>
      </node>
      <node id="41526">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="41467" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41494" relation="include">
        </childnode>
        <childnode refid="41480" relation="include">
        </childnode>
        <childnode refid="41466" relation="include">
        </childnode>
        <childnode refid="41462" relation="include">
        </childnode>
        <childnode refid="41465" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
      </node>
      <node id="41460">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="41461" relation="include">
        </childnode>
      </node>
      <node id="41530">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41531" relation="include">
        </childnode>
      </node>
      <node id="41518">
        <label>execinfo.h</label>
      </node>
      <node id="41540">
        <label>cstring</label>
      </node>
      <node id="41490">
        <label>memory</label>
      </node>
      <node id="41539">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="41509" relation="include">
        </childnode>
        <childnode refid="41540" relation="include">
        </childnode>
        <childnode refid="41467" relation="include">
        </childnode>
        <childnode refid="41490" relation="include">
        </childnode>
        <childnode refid="41528" relation="include">
        </childnode>
        <childnode refid="41453" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
      </node>
      <node id="41485">
        <label>inttypes.h</label>
      </node>
      <node id="41527">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="41457" relation="include">
        </childnode>
        <childnode refid="41463" relation="include">
        </childnode>
        <childnode refid="41526" relation="include">
        </childnode>
        <childnode refid="41453" relation="include">
        </childnode>
        <childnode refid="41528" relation="include">
        </childnode>
        <childnode refid="41467" relation="include">
        </childnode>
      </node>
      <node id="41491">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="41455" relation="include">
        </childnode>
        <childnode refid="41492" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="41703">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.cpp</label>
        <link refid="AMReX__Laplacian_8cpp"/>
      </node>
      <node id="41693">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.cpp</label>
        <link refid="AMReX__ABecLaplacian_8cpp"/>
      </node>
      <node id="41565">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="41876">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41608">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="41609" relation="include">
        </childnode>
      </node>
      <node id="41817">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="41595">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="41716">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="41832">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="41753">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="41615">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="41786">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="41818">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="41593">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="41849">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BlockMutex.cpp</label>
        <link refid="AMReX__BlockMutex_8cpp"/>
      </node>
      <node id="41551">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="41552" relation="include">
        </childnode>
        <childnode refid="41550" relation="include">
        </childnode>
        <childnode refid="41838" relation="include">
        </childnode>
        <childnode refid="41605" relation="include">
        </childnode>
        <childnode refid="41752" relation="include">
        </childnode>
        <childnode refid="41754" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41882" relation="include">
        </childnode>
      </node>
      <node id="41793">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="41874">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41603">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="41681">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="41644" relation="include">
        </childnode>
        <childnode refid="41682" relation="include">
        </childnode>
      </node>
      <node id="41863">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41704">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.cpp</label>
        <link refid="AMReX__LinOp_8cpp"/>
      </node>
      <node id="41686">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="41644" relation="include">
        </childnode>
        <childnode refid="41681" relation="include">
        </childnode>
        <childnode refid="41687" relation="include">
        </childnode>
        <childnode refid="41643" relation="include">
        </childnode>
      </node>
      <node id="41629">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="41651">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="41617">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="41618" relation="include">
        </childnode>
        <childnode refid="41619" relation="include">
        </childnode>
        <childnode refid="41621" relation="include">
        </childnode>
      </node>
      <node id="41702">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.H</label>
        <link refid="AMReX__Laplacian_8H"/>
        <childnode refid="41703" relation="include">
        </childnode>
      </node>
      <node id="41850">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Random.cpp</label>
        <link refid="AMReX__Random_8cpp"/>
      </node>
      <node id="41574">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.H</label>
        <link refid="AMReX__EB__LSCoreBase_8H"/>
        <childnode refid="41571" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
      </node>
      <node id="41567">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="41760">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="41761" relation="include">
        </childnode>
      </node>
      <node id="41729">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="41776">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="41690">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="41882">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H</label>
        <link refid="AMReX__StructOfArrays_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41839" relation="include">
        </childnode>
      </node>
      <node id="41813">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="41814" relation="include">
        </childnode>
      </node>
      <node id="41880">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H</label>
        <link refid="AMReX__SparseBins_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41597">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="41802">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="41803" relation="include">
        </childnode>
      </node>
      <node id="41627">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="41592" relation="include">
        </childnode>
        <childnode refid="41628" relation="include">
        </childnode>
      </node>
      <node id="41654">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="41655" relation="include">
        </childnode>
      </node>
      <node id="41709">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.cpp</label>
        <link refid="AMReX__DivVis_8cpp"/>
      </node>
      <node id="41855">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Partition.H</label>
        <link refid="AMReX__Partition_8H"/>
      </node>
      <node id="41633">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="41711">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.cpp</label>
        <link refid="AMReX__MCCGSolver_8cpp"/>
      </node>
      <node id="41878">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_BinIterator.H</label>
        <link refid="AMReX__BinIterator_8H"/>
        <childnode refid="41879" relation="include">
        </childnode>
        <childnode refid="41880" relation="include">
        </childnode>
      </node>
      <node id="41710">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.H</label>
        <link refid="AMReX__MCCGSolver_8H"/>
        <childnode refid="41711" relation="include">
        </childnode>
        <childnode refid="41712" relation="include">
        </childnode>
      </node>
      <node id="41790">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="41854">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="41611" relation="include">
        </childnode>
        <childnode refid="41786" relation="include">
        </childnode>
        <childnode refid="41796" relation="include">
        </childnode>
        <childnode refid="41795" relation="include">
        </childnode>
        <childnode refid="41794" relation="include">
        </childnode>
      </node>
      <node id="41669">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="41697">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.H</label>
        <link refid="AMReX__MultiGrid_8H"/>
        <childnode refid="41695" relation="include">
        </childnode>
        <childnode refid="41696" relation="include">
        </childnode>
      </node>
      <node id="41634">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
      </node>
      <node id="41838">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41839" relation="include">
        </childnode>
      </node>
      <node id="41671">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="41830">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="41679">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="41680" relation="include">
        </childnode>
        <childnode refid="41681" relation="include">
        </childnode>
      </node>
      <node id="41674">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="41615" relation="include">
        </childnode>
        <childnode refid="41571" relation="include">
        </childnode>
      </node>
      <node id="41814">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="41618" relation="include">
        </childnode>
        <childnode refid="41815" relation="include">
        </childnode>
      </node>
      <node id="41687">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="41644" relation="include">
        </childnode>
        <childnode refid="41688" relation="include">
        </childnode>
      </node>
      <node id="41765">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="41562" relation="include">
        </childnode>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41563" relation="include">
        </childnode>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41553" relation="include">
        </childnode>
        <childnode refid="41766" relation="include">
        </childnode>
        <childnode refid="41656" relation="include">
        </childnode>
        <childnode refid="41767" relation="include">
        </childnode>
        <childnode refid="41669" relation="include">
        </childnode>
        <childnode refid="41668" relation="include">
        </childnode>
        <childnode refid="41671" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41717" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41662" relation="include">
        </childnode>
        <childnode refid="41733" relation="include">
        </childnode>
        <childnode refid="41645" relation="include">
        </childnode>
        <childnode refid="41590" relation="include">
        </childnode>
        <childnode refid="41695" relation="include">
        </childnode>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41621" relation="include">
        </childnode>
        <childnode refid="41596" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41621">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="41622" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41638" relation="include">
        </childnode>
      </node>
      <node id="41577">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="41859">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="41572">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="41819">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41581" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
        <childnode refid="41820" relation="include">
        </childnode>
        <childnode refid="41620" relation="include">
        </childnode>
        <childnode refid="41821" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
        <childnode refid="41594" relation="include">
        </childnode>
      </node>
      <node id="41837">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="41838" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41839" relation="include">
        </childnode>
      </node>
      <node id="41804">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="41803" relation="include">
        </childnode>
      </node>
      <node id="41636">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="41635" relation="include">
        </childnode>
        <childnode refid="41596" relation="include">
        </childnode>
        <childnode refid="41597" relation="include">
        </childnode>
        <childnode refid="41626" relation="include">
        </childnode>
        <childnode refid="41602" relation="include">
        </childnode>
        <childnode refid="41637" relation="include">
        </childnode>
      </node>
      <node id="41684">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="41810">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="41866">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41707">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="41708" relation="include">
        </childnode>
        <childnode refid="41710" relation="include">
        </childnode>
        <childnode refid="41706" relation="include">
        </childnode>
        <childnode refid="41713" relation="include">
        </childnode>
        <childnode refid="41714" relation="include">
        </childnode>
      </node>
      <node id="41579">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="41652">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="41562" relation="include">
        </childnode>
        <childnode refid="41563" relation="include">
        </childnode>
        <childnode refid="41570" relation="include">
        </childnode>
        <childnode refid="41653" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
      </node>
      <node id="41695">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.cpp</label>
        <link refid="AMReX__CGSolver_8cpp"/>
      </node>
      <node id="41676">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="41877">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41736">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="41737" relation="include">
        </childnode>
      </node>
      <node id="41864">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41858">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="41843" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41860" relation="include">
        </childnode>
        <childnode refid="41861" relation="include">
        </childnode>
        <childnode refid="41862" relation="include">
        </childnode>
        <childnode refid="41863" relation="include">
        </childnode>
        <childnode refid="41864" relation="include">
        </childnode>
        <childnode refid="41865" relation="include">
        </childnode>
        <childnode refid="41866" relation="include">
        </childnode>
        <childnode refid="41867" relation="include">
        </childnode>
        <childnode refid="41868" relation="include">
        </childnode>
        <childnode refid="41869" relation="include">
        </childnode>
        <childnode refid="41870" relation="include">
        </childnode>
        <childnode refid="41871" relation="include">
        </childnode>
        <childnode refid="41872" relation="include">
        </childnode>
        <childnode refid="41873" relation="include">
        </childnode>
        <childnode refid="41874" relation="include">
        </childnode>
        <childnode refid="41875" relation="include">
        </childnode>
        <childnode refid="41876" relation="include">
        </childnode>
        <childnode refid="41877" relation="include">
        </childnode>
      </node>
      <node id="41750">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="41744" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41746" relation="include">
        </childnode>
        <childnode refid="41748" relation="include">
        </childnode>
      </node>
      <node id="41649">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="41614" relation="include">
        </childnode>
      </node>
      <node id="41640">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="41641" relation="include">
        </childnode>
        <childnode refid="41599" relation="include">
        </childnode>
      </node>
      <node id="41622">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="41623" relation="include">
        </childnode>
        <childnode refid="41593" relation="include">
        </childnode>
        <childnode refid="41633" relation="include">
        </childnode>
      </node>
      <node id="41785">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="41781" relation="include">
        </childnode>
      </node>
      <node id="41755">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="41803">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="41584" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
      </node>
      <node id="41683">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="41621" relation="include">
        </childnode>
        <childnode refid="41684" relation="include">
        </childnode>
      </node>
      <node id="41775">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="41615" relation="include">
        </childnode>
      </node>
      <node id="41754">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41781">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="41619">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="41620" relation="include">
        </childnode>
      </node>
      <node id="41570">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="41770">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41726" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41731" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41623">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="41624" relation="include">
        </childnode>
        <childnode refid="41627" relation="include">
        </childnode>
        <childnode refid="41629" relation="include">
        </childnode>
        <childnode refid="41630" relation="include">
        </childnode>
        <childnode refid="41632" relation="include">
        </childnode>
      </node>
      <node id="41555">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="41556" relation="include">
        </childnode>
        <childnode refid="41553" relation="include">
        </childnode>
        <childnode refid="41582" relation="include">
        </childnode>
        <childnode refid="41583" relation="include">
        </childnode>
        <childnode refid="41610" relation="include">
        </childnode>
        <childnode refid="41611" relation="include">
        </childnode>
        <childnode refid="41771" relation="include">
        </childnode>
        <childnode refid="41841" relation="include">
        </childnode>
        <childnode refid="41809" relation="include">
        </childnode>
        <childnode refid="41843" relation="include">
        </childnode>
        <childnode refid="41844" relation="include">
        </childnode>
      </node>
      <node id="41827">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="41595" relation="include">
        </childnode>
      </node>
      <node id="41872">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41682">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="41762">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="41835">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="41597" relation="include">
        </childnode>
        <childnode refid="41598" relation="include">
        </childnode>
        <childnode refid="41599" relation="include">
        </childnode>
      </node>
      <node id="41862">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41631">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="41595" relation="include">
        </childnode>
      </node>
      <node id="41647">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="41648" relation="include">
        </childnode>
      </node>
      <node id="41714">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H</label>
        <link refid="AMReX__MCMultiGrid_8H"/>
        <childnode refid="41710" relation="include">
        </childnode>
        <childnode refid="41712" relation="include">
        </childnode>
      </node>
      <node id="41558">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="41559" relation="include">
        </childnode>
        <childnode refid="41575" relation="include">
        </childnode>
        <childnode refid="41576" relation="include">
        </childnode>
        <childnode refid="41578" relation="include">
        </childnode>
      </node>
      <node id="41867">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41644">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="41605">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="41603" relation="include">
        </childnode>
      </node>
      <node id="41742">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="41665">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="41777">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="41733">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="41662" relation="include">
        </childnode>
        <childnode refid="41734" relation="include">
        </childnode>
      </node>
      <node id="41646">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41647" relation="include">
        </childnode>
        <childnode refid="41649" relation="include">
        </childnode>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41652" relation="include">
        </childnode>
        <childnode refid="41553" relation="include">
        </childnode>
        <childnode refid="41654" relation="include">
        </childnode>
        <childnode refid="41656" relation="include">
        </childnode>
        <childnode refid="41657" relation="include">
        </childnode>
        <childnode refid="41659" relation="include">
        </childnode>
        <childnode refid="41660" relation="include">
        </childnode>
        <childnode refid="41616" relation="include">
        </childnode>
        <childnode refid="41584" relation="include">
        </childnode>
        <childnode refid="41663" relation="include">
        </childnode>
        <childnode refid="41668" relation="include">
        </childnode>
        <childnode refid="41670" relation="include">
        </childnode>
        <childnode refid="41672" relation="include">
        </childnode>
        <childnode refid="41617" relation="include">
        </childnode>
        <childnode refid="41718" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41580" relation="include">
        </childnode>
        <childnode refid="41726" relation="include">
        </childnode>
        <childnode refid="41730" relation="include">
        </childnode>
        <childnode refid="41731" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
        <childnode refid="41732" relation="include">
        </childnode>
        <childnode refid="41733" relation="include">
        </childnode>
        <childnode refid="41739" relation="include">
        </childnode>
        <childnode refid="41741" relation="include">
        </childnode>
        <childnode refid="41686" relation="include">
        </childnode>
        <childnode refid="41681" relation="include">
        </childnode>
        <childnode refid="41589" relation="include">
        </childnode>
        <childnode refid="41689" relation="include">
        </childnode>
        <childnode refid="41743" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41736" relation="include">
        </childnode>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41576" relation="include">
        </childnode>
        <childnode refid="41578" relation="include">
        </childnode>
        <childnode refid="41694" relation="include">
        </childnode>
        <childnode refid="41691" relation="include">
        </childnode>
        <childnode refid="41697" relation="include">
        </childnode>
        <childnode refid="41710" relation="include">
        </childnode>
        <childnode refid="41707" relation="include">
        </childnode>
        <childnode refid="41714" relation="include">
        </childnode>
        <childnode refid="41634" relation="include">
        </childnode>
        <childnode refid="41621" relation="include">
        </childnode>
        <childnode refid="41602" relation="include">
        </childnode>
        <childnode refid="41637" relation="include">
        </childnode>
        <childnode refid="41603" relation="include">
        </childnode>
        <childnode refid="41751" relation="include">
        </childnode>
        <childnode refid="41759" relation="include">
        </childnode>
        <childnode refid="41760" relation="include">
        </childnode>
      </node>
      <node id="41823">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="41735" relation="include">
        </childnode>
        <childnode refid="41824" relation="include">
        </childnode>
      </node>
      <node id="41738">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="41812">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="41586">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="41816">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="41817" relation="include">
        </childnode>
        <childnode refid="41818" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
      </node>
      <node id="41801">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="41675">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="41676" relation="include">
        </childnode>
        <childnode refid="41677" relation="include">
        </childnode>
        <childnode refid="41685" relation="include">
        </childnode>
        <childnode refid="41686" relation="include">
        </childnode>
        <childnode refid="41589" relation="include">
        </childnode>
        <childnode refid="41689" relation="include">
        </childnode>
        <childnode refid="41691" relation="include">
        </childnode>
        <childnode refid="41697" relation="include">
        </childnode>
        <childnode refid="41705" relation="include">
        </childnode>
        <childnode refid="41707" relation="include">
        </childnode>
        <childnode refid="41715" relation="include">
        </childnode>
      </node>
      <node id="41808">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="41678" relation="include">
        </childnode>
      </node>
      <node id="41881">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41865">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41752">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="41753" relation="include">
        </childnode>
        <childnode refid="41754" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
      </node>
      <node id="41628">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="41789">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="41635">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="41879">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_DenseBins.H</label>
        <link refid="AMReX__DenseBins_8H"/>
        <childnode refid="41605" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41578">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="41602">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="41662">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="41856">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="41555" relation="include">
        </childnode>
        <childnode refid="41845" relation="include">
        </childnode>
      </node>
      <node id="41795">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41611" relation="include">
        </childnode>
        <childnode refid="41612" relation="include">
        </childnode>
        <childnode refid="41796" relation="include">
        </childnode>
        <childnode refid="41584" relation="include">
        </childnode>
        <childnode refid="41675" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41643" relation="include">
        </childnode>
        <childnode refid="41589" relation="include">
        </childnode>
        <childnode refid="41689" relation="include">
        </childnode>
      </node>
      <node id="41758">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41698">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.H</label>
        <link refid="AMReX__ABec2_8H"/>
        <childnode refid="41699" relation="include">
        </childnode>
        <childnode refid="41700" relation="include">
        </childnode>
      </node>
      <node id="41735">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="41724">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="41848">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BlockMutex.H</label>
        <link refid="AMReX__BlockMutex_8H"/>
        <childnode refid="41849" relation="include">
        </childnode>
        <childnode refid="41850" relation="include">
        </childnode>
      </node>
      <node id="41744">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="41794">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="41610" relation="include">
        </childnode>
        <childnode refid="41611" relation="include">
        </childnode>
        <childnode refid="41795" relation="include">
        </childnode>
        <childnode refid="41764" relation="include">
        </childnode>
        <childnode refid="41584" relation="include">
        </childnode>
        <childnode refid="41565" relation="include">
        </childnode>
        <childnode refid="41577" relation="include">
        </childnode>
        <childnode refid="41797" relation="include">
        </childnode>
        <childnode refid="41799" relation="include">
        </childnode>
        <childnode refid="41754" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
      </node>
      <node id="41573">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.cpp</label>
        <link refid="AMReX__EB__LSCoreBase_8cpp"/>
      </node>
      <node id="41784">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="41785" relation="include">
        </childnode>
      </node>
      <node id="41596">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="41825">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="41591" relation="include">
        </childnode>
        <childnode refid="41594" relation="include">
        </childnode>
      </node>
      <node id="41805">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="41772">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="41727">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41728" relation="include">
        </childnode>
      </node>
      <node id="41788">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="41620">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="41756">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="41603" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
      </node>
      <node id="41798">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="41643">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="41644" relation="include">
        </childnode>
        <childnode refid="41645" relation="include">
        </childnode>
      </node>
      <node id="41725">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="41677">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="41678" relation="include">
        </childnode>
        <childnode refid="41679" relation="include">
        </childnode>
        <childnode refid="41683" relation="include">
        </childnode>
      </node>
      <node id="41661">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="41600">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="41845">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="41745">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="41659">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="41582">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="41575">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="41584">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41585" relation="include">
        </childnode>
        <childnode refid="41586" relation="include">
        </childnode>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41589" relation="include">
        </childnode>
        <childnode refid="41591" relation="include">
        </childnode>
        <childnode refid="41592" relation="include">
        </childnode>
        <childnode refid="41593" relation="include">
        </childnode>
        <childnode refid="41594" relation="include">
        </childnode>
        <childnode refid="41595" relation="include">
        </childnode>
        <childnode refid="41596" relation="include">
        </childnode>
        <childnode refid="41597" relation="include">
        </childnode>
        <childnode refid="41598" relation="include">
        </childnode>
        <childnode refid="41599" relation="include">
        </childnode>
        <childnode refid="41600" relation="include">
        </childnode>
        <childnode refid="41601" relation="include">
        </childnode>
        <childnode refid="41602" relation="include">
        </childnode>
        <childnode refid="41603" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41871">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41556">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
        <childnode refid="41558" relation="include">
        </childnode>
        <childnode refid="41579" relation="include">
        </childnode>
        <childnode refid="41574" relation="include">
        </childnode>
        <childnode refid="41580" relation="include">
        </childnode>
      </node>
      <node id="41614">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="41851">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="41613">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="41614" relation="include">
        </childnode>
        <childnode refid="41615" relation="include">
        </childnode>
        <childnode refid="41553" relation="include">
        </childnode>
        <childnode refid="41585" relation="include">
        </childnode>
        <childnode refid="41616" relation="include">
        </childnode>
        <childnode refid="41584" relation="include">
        </childnode>
        <childnode refid="41617" relation="include">
        </childnode>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41643" relation="include">
        </childnode>
        <childnode refid="41589" relation="include">
        </childnode>
        <childnode refid="41636" relation="include">
        </childnode>
        <childnode refid="41638" relation="include">
        </childnode>
      </node>
      <node id="41749">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41746" relation="include">
        </childnode>
        <childnode refid="41747" relation="include">
        </childnode>
      </node>
      <node id="41568">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="41821">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="41723">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="41591">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="41761">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="41666">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="41847">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41729" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
        <childnode refid="41630" relation="include">
        </childnode>
      </node>
      <node id="41598">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="41637">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="41602" relation="include">
        </childnode>
      </node>
      <node id="41639">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="41590" relation="include">
        </childnode>
        <childnode refid="41597" relation="include">
        </childnode>
        <childnode refid="41602" relation="include">
        </childnode>
        <childnode refid="41637" relation="include">
        </childnode>
      </node>
      <node id="41587">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.cpp</label>
        <link refid="AMReX__EB__levelset_8cpp"/>
      </node>
      <node id="41571">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H</label>
        <link refid="AMReX__EB__LSCore_8H"/>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41860">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
      </node>
      <node id="41606">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41778">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="41779" relation="include">
        </childnode>
      </node>
      <node id="41626">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="41601" relation="include">
        </childnode>
      </node>
      <node id="41588">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="41741">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="41742" relation="include">
        </childnode>
      </node>
      <node id="41811">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="41869">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41715">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="41595" relation="include">
        </childnode>
        <childnode refid="41600" relation="include">
        </childnode>
      </node>
      <node id="41734">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="41735" relation="include">
        </childnode>
        <childnode refid="41736" relation="include">
        </childnode>
        <childnode refid="41738" relation="include">
        </childnode>
      </node>
      <node id="41800">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="41564">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
      </node>
      <node id="41726">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="41668">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="41669" relation="include">
        </childnode>
        <childnode refid="41670" relation="include">
        </childnode>
      </node>
      <node id="41685">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="41672">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
        <childnode refid="41673" relation="include">
        </childnode>
        <childnode refid="41717" relation="include">
        </childnode>
      </node>
      <node id="41553">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="41857">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="41551" relation="include">
        </childnode>
        <childnode refid="41855" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
      </node>
      <node id="41645">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="41728">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="41618">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="41783">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="41731">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="41806">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="41650">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41651" relation="include">
        </childnode>
        <childnode refid="41565" relation="include">
        </childnode>
      </node>
      <node id="41694">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.H</label>
        <link refid="AMReX__CGSolver_8H"/>
        <childnode refid="41695" relation="include">
        </childnode>
        <childnode refid="41696" relation="include">
        </childnode>
        <childnode refid="41697" relation="include">
        </childnode>
      </node>
      <node id="41688">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="41829">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="41594" relation="include">
        </childnode>
        <childnode refid="41830" relation="include">
        </childnode>
        <childnode refid="41831" relation="include">
        </childnode>
      </node>
      <node id="41719">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="41875">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41870">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41658">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="41625">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="41600" relation="include">
        </childnode>
      </node>
      <node id="41611">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="41556" relation="include">
        </childnode>
        <childnode refid="41612" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41613" relation="include">
        </childnode>
        <childnode refid="41764" relation="include">
        </childnode>
        <childnode refid="41646" relation="include">
        </childnode>
        <childnode refid="41765" relation="include">
        </childnode>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
      </node>
      <node id="41771">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="41772" relation="include">
        </childnode>
        <childnode refid="41773" relation="include">
        </childnode>
        <childnode refid="41774" relation="include">
        </childnode>
        <childnode refid="41776" relation="include">
        </childnode>
        <childnode refid="41777" relation="include">
        </childnode>
        <childnode refid="41778" relation="include">
        </childnode>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41781" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
        <childnode refid="41784" relation="include">
        </childnode>
        <childnode refid="41656" relation="include">
        </childnode>
        <childnode refid="41786" relation="include">
        </childnode>
        <childnode refid="41787" relation="include">
        </childnode>
        <childnode refid="41788" relation="include">
        </childnode>
        <childnode refid="41789" relation="include">
        </childnode>
        <childnode refid="41790" relation="include">
        </childnode>
        <childnode refid="41791" relation="include">
        </childnode>
        <childnode refid="41764" relation="include">
        </childnode>
        <childnode refid="41794" relation="include">
        </childnode>
        <childnode refid="41646" relation="include">
        </childnode>
        <childnode refid="41800" relation="include">
        </childnode>
        <childnode refid="41801" relation="include">
        </childnode>
        <childnode refid="41802" relation="include">
        </childnode>
        <childnode refid="41804" relation="include">
        </childnode>
        <childnode refid="41765" relation="include">
        </childnode>
        <childnode refid="41675" relation="include">
        </childnode>
        <childnode refid="41677" relation="include">
        </childnode>
        <childnode refid="41805" relation="include">
        </childnode>
        <childnode refid="41806" relation="include">
        </childnode>
        <childnode refid="41807" relation="include">
        </childnode>
        <childnode refid="41809" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41812" relation="include">
        </childnode>
        <childnode refid="41813" relation="include">
        </childnode>
        <childnode refid="41816" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
        <childnode refid="41819" relation="include">
        </childnode>
        <childnode refid="41815" relation="include">
        </childnode>
        <childnode refid="41822" relation="include">
        </childnode>
        <childnode refid="41823" relation="include">
        </childnode>
        <childnode refid="41744" relation="include">
        </childnode>
        <childnode refid="41743" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41736" relation="include">
        </childnode>
        <childnode refid="41747" relation="include">
        </childnode>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41750" relation="include">
        </childnode>
        <childnode refid="41705" relation="include">
        </childnode>
        <childnode refid="41825" relation="include">
        </childnode>
        <childnode refid="41826" relation="include">
        </childnode>
        <childnode refid="41827" relation="include">
        </childnode>
        <childnode refid="41828" relation="include">
        </childnode>
        <childnode refid="41834" relation="include">
        </childnode>
        <childnode refid="41835" relation="include">
        </childnode>
        <childnode refid="41836" relation="include">
        </childnode>
        <childnode refid="41715" relation="include">
        </childnode>
        <childnode refid="41837" relation="include">
        </childnode>
        <childnode refid="41606" relation="include">
        </childnode>
        <childnode refid="41608" relation="include">
        </childnode>
      </node>
      <node id="41612">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="41613" relation="include">
        </childnode>
        <childnode refid="41616" relation="include">
        </childnode>
        <childnode refid="41646" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
      </node>
      <node id="41590">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="41585">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="41583">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="41584" relation="include">
        </childnode>
      </node>
      <node id="41820">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="41632">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="41628" relation="include">
        </childnode>
      </node>
      <node id="41630">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="41594" relation="include">
        </childnode>
        <childnode refid="41595" relation="include">
        </childnode>
        <childnode refid="41631" relation="include">
        </childnode>
      </node>
      <node id="41581">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="41743">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="41744" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41746" relation="include">
        </childnode>
        <childnode refid="41749" relation="include">
        </childnode>
        <childnode refid="41750" relation="include">
        </childnode>
      </node>
      <node id="41566">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="41565" relation="include">
        </childnode>
      </node>
      <node id="41768">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="41601">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="41699">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.cpp</label>
        <link refid="AMReX__ABec2_8cpp"/>
      </node>
      <node id="41712">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp</label>
        <link refid="AMReX__MCMultiGrid_8cpp"/>
      </node>
      <node id="41842">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="41822">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="41588" relation="include">
        </childnode>
      </node>
      <node id="41747">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="41873">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41799">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41748">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="41678">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="41773">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="41561">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
        <childnode refid="41562" relation="include">
        </childnode>
        <childnode refid="41563" relation="include">
        </childnode>
        <childnode refid="41564" relation="include">
        </childnode>
        <childnode refid="41565" relation="include">
        </childnode>
      </node>
      <node id="41720">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="41719" relation="include">
        </childnode>
      </node>
      <node id="41766">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="41616">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="41708">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.H</label>
        <link refid="AMReX__DivVis_8H"/>
        <childnode refid="41709" relation="include">
        </childnode>
      </node>
      <node id="41638">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="41639" relation="include">
        </childnode>
        <childnode refid="41598" relation="include">
        </childnode>
        <childnode refid="41640" relation="include">
        </childnode>
      </node>
      <node id="41664">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41665" relation="include">
        </childnode>
        <childnode refid="41651" relation="include">
        </childnode>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41666" relation="include">
        </childnode>
      </node>
      <node id="41792">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="41793" relation="include">
        </childnode>
        <childnode refid="41663" relation="include">
        </childnode>
      </node>
      <node id="41673">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="41674" relation="include">
        </childnode>
        <childnode refid="41675" relation="include">
        </childnode>
        <childnode refid="41716" relation="include">
        </childnode>
        <childnode refid="41621" relation="include">
        </childnode>
      </node>
      <node id="41594">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="41718">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="41719" relation="include">
        </childnode>
        <childnode refid="41720" relation="include">
        </childnode>
      </node>
      <node id="41580">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="41573" relation="include">
        </childnode>
        <childnode refid="41581" relation="include">
        </childnode>
      </node>
      <node id="41576">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="41577" relation="include">
        </childnode>
      </node>
      <node id="41660">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41661" relation="include">
        </childnode>
        <childnode refid="41662" relation="include">
        </childnode>
      </node>
      <node id="41713">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.cpp</label>
        <link refid="AMReX__MCLinOp_8cpp"/>
      </node>
      <node id="41834">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="41596" relation="include">
        </childnode>
      </node>
      <node id="41757">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="41701">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.cpp</label>
        <link refid="AMReX__ABec4_8cpp"/>
      </node>
      <node id="41641">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="41599" relation="include">
        </childnode>
      </node>
      <node id="41706">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.cpp</label>
        <link refid="AMReX__MCInterpBndryData_8cpp"/>
      </node>
      <node id="41550">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX_PODVector.H"/>
        <childnode refid="41551" relation="include">
        </childnode>
      </node>
      <node id="41559">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="41560" relation="include">
        </childnode>
        <childnode refid="41568" relation="include">
        </childnode>
        <childnode refid="41569" relation="include">
        </childnode>
        <childnode refid="41571" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
        <childnode refid="41574" relation="include">
        </childnode>
      </node>
      <node id="41552">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="41553" relation="include">
        </childnode>
        <childnode refid="41554" relation="include">
        </childnode>
        <childnode refid="41555" relation="include">
        </childnode>
        <childnode refid="41848" relation="include">
        </childnode>
        <childnode refid="41851" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
        <childnode refid="41784" relation="include">
        </childnode>
        <childnode refid="41852" relation="include">
        </childnode>
        <childnode refid="41853" relation="include">
        </childnode>
        <childnode refid="41611" relation="include">
        </childnode>
        <childnode refid="41854" relation="include">
        </childnode>
        <childnode refid="41794" relation="include">
        </childnode>
        <childnode refid="41800" relation="include">
        </childnode>
        <childnode refid="41801" relation="include">
        </childnode>
        <childnode refid="41802" relation="include">
        </childnode>
        <childnode refid="41804" relation="include">
        </childnode>
        <childnode refid="41855" relation="include">
        </childnode>
        <childnode refid="41550" relation="include">
        </childnode>
        <childnode refid="41856" relation="include">
        </childnode>
        <childnode refid="41857" relation="include">
        </childnode>
        <childnode refid="41858" relation="include">
        </childnode>
        <childnode refid="41878" relation="include">
        </childnode>
        <childnode refid="41879" relation="include">
        </childnode>
        <childnode refid="41799" relation="include">
        </childnode>
        <childnode refid="41752" relation="include">
        </childnode>
        <childnode refid="41754" relation="include">
        </childnode>
        <childnode refid="41881" relation="include">
        </childnode>
        <childnode refid="41840" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
        <childnode refid="41880" relation="include">
        </childnode>
        <childnode refid="41608" relation="include">
        </childnode>
      </node>
      <node id="41740">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="41656">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="41841">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="41842" relation="include">
        </childnode>
        <childnode refid="41613" relation="include">
        </childnode>
        <childnode refid="41800" relation="include">
        </childnode>
        <childnode refid="41801" relation="include">
        </childnode>
        <childnode refid="41802" relation="include">
        </childnode>
        <childnode refid="41804" relation="include">
        </childnode>
        <childnode refid="41805" relation="include">
        </childnode>
        <childnode refid="41806" relation="include">
        </childnode>
        <childnode refid="41807" relation="include">
        </childnode>
        <childnode refid="41725" relation="include">
        </childnode>
      </node>
      <node id="41737">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="41833">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="41715" relation="include">
        </childnode>
      </node>
      <node id="41607">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="41570" relation="include">
        </childnode>
        <childnode refid="41608" relation="include">
        </childnode>
        <childnode refid="41609" relation="include">
        </childnode>
      </node>
      <node id="41844">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="41816" relation="include">
        </childnode>
        <childnode refid="41721" relation="include">
        </childnode>
        <childnode refid="41727" relation="include">
        </childnode>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41581" relation="include">
        </childnode>
        <childnode refid="41845" relation="include">
        </childnode>
        <childnode refid="41846" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
        <childnode refid="41820" relation="include">
        </childnode>
        <childnode refid="41619" relation="include">
        </childnode>
        <childnode refid="41815" relation="include">
        </childnode>
        <childnode refid="41821" relation="include">
        </childnode>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41822" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41829" relation="include">
        </childnode>
      </node>
      <node id="41624">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="41591" relation="include">
        </childnode>
        <childnode refid="41594" relation="include">
        </childnode>
        <childnode refid="41596" relation="include">
        </childnode>
        <childnode refid="41625" relation="include">
        </childnode>
        <childnode refid="41626" relation="include">
        </childnode>
      </node>
      <node id="41767">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41670">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
        <childnode refid="41671" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
      </node>
      <node id="41846">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="41726" relation="include">
        </childnode>
        <childnode refid="41847" relation="include">
        </childnode>
      </node>
      <node id="41653">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="41853">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="41642">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.H</label>
        <link refid="AMReX__EB__levelset_8H"/>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41571" relation="include">
        </childnode>
        <childnode refid="41574" relation="include">
        </childnode>
      </node>
      <node id="41828">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="41629" relation="include">
        </childnode>
        <childnode refid="41593" relation="include">
        </childnode>
        <childnode refid="41594" relation="include">
        </childnode>
        <childnode refid="41829" relation="include">
        </childnode>
        <childnode refid="41832" relation="include">
        </childnode>
        <childnode refid="41833" relation="include">
        </childnode>
      </node>
      <node id="41680">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="41779">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="41780" relation="include">
        </childnode>
      </node>
      <node id="41807">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="41808" relation="include">
        </childnode>
      </node>
      <node id="41815">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="41620" relation="include">
        </childnode>
      </node>
      <node id="41797">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="41565" relation="include">
        </childnode>
        <childnode refid="41577" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
      </node>
      <node id="41769">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="41675" relation="include">
        </childnode>
        <childnode refid="41685" relation="include">
        </childnode>
      </node>
      <node id="41759">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="41739">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="41740" relation="include">
        </childnode>
      </node>
      <node id="41721">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="41722" relation="include">
        </childnode>
        <childnode refid="41725" relation="include">
        </childnode>
        <childnode refid="41726" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
      </node>
      <node id="41667">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="41700">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.H</label>
        <link refid="AMReX__ABec4_8H"/>
        <childnode refid="41701" relation="include">
        </childnode>
      </node>
      <node id="41563">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AsyncFillPatch.cpp</label>
        <link refid="AMReX__AsyncFillPatch_8cpp"/>
      </node>
      <node id="41689">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="41690" relation="include">
        </childnode>
      </node>
      <node id="41610">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="41589">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="41590" relation="include">
        </childnode>
      </node>
      <node id="41861">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41809">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="41810" relation="include">
        </childnode>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41705" relation="include">
        </childnode>
      </node>
      <node id="41732">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41569">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="41570" relation="include">
        </childnode>
      </node>
      <node id="41705">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.H</label>
        <link refid="AMReX__MCInterpBndryData_8H"/>
        <childnode refid="41706" relation="include">
        </childnode>
      </node>
      <node id="41592">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="41852">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DArena.cpp</label>
        <link refid="AMReX__DArena_8cpp"/>
      </node>
      <node id="41604">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="41570" relation="include">
        </childnode>
        <childnode refid="41605" relation="include">
        </childnode>
        <childnode refid="41603" relation="include">
        </childnode>
        <childnode refid="41606" relation="include">
        </childnode>
        <childnode refid="41607" relation="include">
        </childnode>
      </node>
      <node id="41562">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="41796">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuLaunch.cpp</label>
        <link refid="AMReX__GpuLaunch_8cpp"/>
      </node>
      <node id="41868">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="41859" relation="include">
        </childnode>
      </node>
      <node id="41840">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
      </node>
      <node id="41764">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="41836">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="41628" relation="include">
        </childnode>
      </node>
      <node id="41791">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="41792" relation="include">
        </childnode>
      </node>
      <node id="41826">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="41592" relation="include">
        </childnode>
      </node>
      <node id="41730">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="41588" relation="include">
        </childnode>
        <childnode refid="41594" relation="include">
        </childnode>
        <childnode refid="41595" relation="include">
        </childnode>
      </node>
      <node id="41831">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="41827" relation="include">
        </childnode>
      </node>
      <node id="41843">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41722" relation="include">
        </childnode>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41763">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="41660" relation="include">
        </childnode>
      </node>
      <node id="41663">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="41650" relation="include">
        </childnode>
        <childnode refid="41664" relation="include">
        </childnode>
        <childnode refid="41652" relation="include">
        </childnode>
        <childnode refid="41655" relation="include">
        </childnode>
        <childnode refid="41667" relation="include">
        </childnode>
        <childnode refid="41573" relation="include">
        </childnode>
      </node>
      <node id="41691">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.H</label>
        <link refid="AMReX__LinOp_8H"/>
        <childnode refid="41692" relation="include">
        </childnode>
        <childnode refid="41694" relation="include">
        </childnode>
        <childnode refid="41702" relation="include">
        </childnode>
        <childnode refid="41704" relation="include">
        </childnode>
        <childnode refid="41697" relation="include">
        </childnode>
        <childnode refid="41698" relation="include">
        </childnode>
        <childnode refid="41700" relation="include">
        </childnode>
      </node>
      <node id="41655">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="41609">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="41782">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="41774">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="41775" relation="include">
        </childnode>
      </node>
      <node id="41557">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="41692">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.H</label>
        <link refid="AMReX__ABecLaplacian_8H"/>
        <childnode refid="41693" relation="include">
        </childnode>
        <childnode refid="41694" relation="include">
        </childnode>
        <childnode refid="41698" relation="include">
        </childnode>
      </node>
      <node id="41746">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="41744" relation="include">
        </childnode>
        <childnode refid="41745" relation="include">
        </childnode>
        <childnode refid="41747" relation="include">
        </childnode>
        <childnode refid="41748" relation="include">
        </childnode>
      </node>
      <node id="41554">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="41824">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="41560">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="41557" relation="include">
        </childnode>
        <childnode refid="41561" relation="include">
        </childnode>
        <childnode refid="41564" relation="include">
        </childnode>
        <childnode refid="41566" relation="include">
        </childnode>
        <childnode refid="41567" relation="include">
        </childnode>
      </node>
      <node id="41839">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41840" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
      </node>
      <node id="41717">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="41657">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="41658" relation="include">
        </childnode>
      </node>
      <node id="41599">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="41722">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="41719" relation="include">
        </childnode>
        <childnode refid="41723" relation="include">
        </childnode>
        <childnode refid="41642" relation="include">
        </childnode>
        <childnode refid="41587" relation="include">
        </childnode>
        <childnode refid="41724" relation="include">
        </childnode>
        <childnode refid="41572" relation="include">
        </childnode>
      </node>
      <node id="41780">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="41787">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="41751">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="41569" relation="include">
        </childnode>
        <childnode refid="41752" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41604" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
      </node>
      <node id="41648">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="41696">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.cpp</label>
        <link refid="AMReX__MultiGrid_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1PODVector" prot="public">amrex::PODVector</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1detail">amrex::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PODVECTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PODVECTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuAllocators_8H" kindref="compound">AMReX_GpuAllocators.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuContainers_8H" kindref="compound">AMReX_GpuContainers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuDevice_8H" kindref="compound">AMReX_GpuDevice.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="21" refid="namespaceamrex_1_1detail_1a5bcec00259aa287e4fa1c57ed626d4e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a5bcec00259aa287e4fa1c57ed626d4e7" kindref="member">uninitializedFillNImpl</ref><sp/>(U*<sp/>data,<sp/>Size<sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value&amp;<sp/>value)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a88491162751c848c2ada7d1c72c5a80d" kindref="member">amrex::ParallelFor</ref>(count,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Size<sp/>i)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1Device_1a67c55a7d25eb5f5fdec62ffcc9c0dccf" kindref="member">Gpu::Device::streamSynchronize</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="31" refid="namespaceamrex_1_1detail_1a2bc955e71a20bceeaed3cc8333eb0398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a5bcec00259aa287e4fa1c57ed626d4e7" kindref="member">uninitializedFillNImpl</ref><sp/>(U*<sp/>data,<sp/>Size<sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value&amp;<sp/>value)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_fill_n&lt;U*,<sp/>U&gt;(data,<sp/>count,<sp/>value);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="38" refid="namespaceamrex_1_1detail_1aa59349c2dc230fb4a0c79fd80154b201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa59349c2dc230fb4a0c79fd80154b201" kindref="member">memCopyImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab695bddeb3cc727225d95a1826472ae4" kindref="member">Gpu::dtod_memcpy</ref>(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="45" refid="namespaceamrex_1_1detail_1a5eae9e79bcaf47cc572db8a613117788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa59349c2dc230fb4a0c79fd80154b201" kindref="member">memCopyImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="52" refid="namespaceamrex_1_1detail_1a4ad48aa99f6648fea787451a974dda26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a4ad48aa99f6648fea787451a974dda26" kindref="member">memMoveImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count,<sp/>T&amp;<sp/>allocator)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(count<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::value_type)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>count<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::value_type);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>allocator.allocate(N);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab695bddeb3cc727225d95a1826472ae4" kindref="member">Gpu::dtod_memcpy</ref>(tmp,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab695bddeb3cc727225d95a1826472ae4" kindref="member">Gpu::dtod_memcpy</ref>(dst,<sp/>tmp,<sp/>count);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator.deallocate(tmp,<sp/>N);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="67" refid="namespaceamrex_1_1detail_1a658b84a19ed9885975fe71a6c341a2e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a4ad48aa99f6648fea787451a974dda26" kindref="member">memMoveImpl</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/>std::size_t<sp/>count,<sp/>T&amp;<sp/>allocator)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(dst,<sp/>src,<sp/>count);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="74" refid="namespaceamrex_1_1detail_1a0a1833caa214a1cb642c80afe8c49bc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a0a1833caa214a1cb642c80afe8c49bc7" kindref="member">initFromListImpl</ref><sp/>(U*<sp/>data,<sp/>std::initializer_list&lt;U&gt;<sp/>list)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aa720ba8e7b622f0897659c64d23d5db4" kindref="member">Gpu::htod_memcpy</ref>(data,<sp/>&amp;(*list.begin()),<sp/>list.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!RunOnGpu&lt;T&gt;::value&gt;::type</highlight></codeline>
<codeline lineno="81" refid="namespaceamrex_1_1detail_1a2eed1c648c543a4917823d6a12dc9135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1a0a1833caa214a1cb642c80afe8c49bc7" kindref="member">initFromListImpl</ref><sp/>(U*<sp/>data,<sp/>std::initializer_list&lt;U&gt;<sp/>list)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>list)<sp/>{<sp/>*(data++)<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>std::allocator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="88" refid="classamrex_1_1PODVector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Allocator</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_standard_layout&lt;T&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;PODVector<sp/>can<sp/>only<sp/>hold<sp/>standard<sp/>layout<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(T),<sp/></highlight><highlight class="stringliteral">&quot;PODVector<sp/>can<sp/>only<sp/>hold<sp/>trivially<sp/>copyable<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Allocator::allocate;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Allocator::deallocate;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="classamrex_1_1PODVector_1a845a40f6549798e6ddf2079f1882f1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classamrex_1_1PODVector_1a845a40f6549798e6ddf2079f1882f1a6" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="98" refid="classamrex_1_1PODVector_1af2658f7c6d69faf4cd927d908802b41c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Allocator<sp/><ref refid="classamrex_1_1PODVector_1af2658f7c6d69faf4cd927d908802b41c" kindref="member">allocator_type</ref>;</highlight></codeline>
<codeline lineno="99" refid="classamrex_1_1PODVector_1a483f82ea685a6b6fecca53afe15d558d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="classamrex_1_1PODVector_1a483f82ea685a6b6fecca53afe15d558d" kindref="member">size_t</ref>;</highlight></codeline>
<codeline lineno="100" refid="classamrex_1_1PODVector_1a60a84d612f4b351d147ba1bb934758c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="classamrex_1_1PODVector_1a60a84d612f4b351d147ba1bb934758c1" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="101" refid="classamrex_1_1PODVector_1af184326386f1d1a678a4bf3247d45d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::ptrdiff_t<sp/><ref refid="classamrex_1_1PODVector_1af184326386f1d1a678a4bf3247d45d42" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="classamrex_1_1PODVector_1a9581fd4380a515628518d666d00e9d49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a9581fd4380a515628518d666d00e9d49" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="104" refid="classamrex_1_1PODVector_1ac45bc075fc9a1f60362dea58a71bf4c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1ac45bc075fc9a1f60362dea58a71bf4c0" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="105" refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="106" refid="classamrex_1_1PODVector_1a49a0b4c89f35668f99101cfae2905fd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;iterator&gt;<sp/><ref refid="classamrex_1_1PODVector_1a49a0b4c89f35668f99101cfae2905fd2" kindref="member">reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="classamrex_1_1PODVector_1a4d6e9668f39b13b37a58ca6be438bbfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a4d6e9668f39b13b37a58ca6be438bbfa" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="109" refid="classamrex_1_1PODVector_1a92c3b41f9015529103a077d83ea9fd3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a92c3b41f9015529103a077d83ea9fd3b" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="110" refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="111" refid="classamrex_1_1PODVector_1a956bb5cb593c90c5767dab45cdb827d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;const_iterator&gt;<sp/><ref refid="classamrex_1_1PODVector_1a956bb5cb593c90c5767dab45cdb827d5" kindref="member">const_reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/><ref refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="115" refid="classamrex_1_1PODVector_1a9ff96f69373c71e0ce54cae0b724c374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1a9ff96f69373c71e0ce54cae0b724c374" kindref="member">m_size</ref>,<sp/>m_capacity;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118" refid="classamrex_1_1PODVector_1a76f461b88f855afac15b08881216c5d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a76f461b88f855afac15b08881216c5d1" kindref="member">PODVector</ref><sp/>()<sp/>noexcept<sp/>:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator(),<sp/>m_data(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="classamrex_1_1PODVector_1ad7b0f629ddd6623ad965cc468bfda35b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1ad7b0f629ddd6623ad965cc468bfda35b" kindref="member">PODVector</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator)<sp/>noexcept</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),<sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="classamrex_1_1PODVector_1a79ee46b90b91bcc831c81e7ad43b3219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a79ee46b90b91bcc831c81e7ad43b3219" kindref="member">PODVector</ref><sp/>(size_type<sp/>a_size)<sp/>noexcept</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(a_size));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_size;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="classamrex_1_1PODVector_1aa826f3cebc8fcc8912101481e36e0b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1aa826f3cebc8fcc8912101481e36e0b52" kindref="member">PODVector</ref><sp/>(size_type<sp/>a_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type&amp;<sp/>a_value,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator<sp/>=<sp/>Allocator())<sp/>noexcept</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),<sp/>m_data(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(a_size));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_size;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(m_data,<sp/>a_size,<sp/>a_value);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="classamrex_1_1PODVector_1a6b8ab8f7ddc2372349a59abfbd06ceab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1a6b8ab8f7ddc2372349a59abfbd06ceab" kindref="member">PODVector</ref><sp/>(std::initializer_list&lt;T&gt;<sp/>a_initializer_list,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator<sp/>=<sp/>Allocator())<sp/>noexcept</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),<sp/>m_data(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref><sp/>=<sp/>a_initializer_list.size();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(size));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::initFromListImpl&lt;Allocator&gt;(m_data,<sp/>a_initializer_list);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="classamrex_1_1PODVector_1a5c85faa4ccae07e9e904c516cfd1ef49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1a5c85faa4ccae07e9e904c516cfd1ef49" kindref="member">PODVector</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_vector),<sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>m_size(0),<sp/>m_capacity(0)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(a_vector.capacity());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_vector.size();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memCopyImpl&lt;Allocator&gt;(m_data,<sp/>a_vector.m_data,<sp/>a_vector.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161" refid="classamrex_1_1PODVector_1abac5cd6b7981b06fe091b1cea5b54579" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1abac5cd6b7981b06fe091b1cea5b54579" kindref="member">PODVector</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(std::move(a_vector)),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data(a_vector.m_data),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size(a_vector.m_size),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity(a_vector.m_capacity)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="classamrex_1_1PODVector_1afe47db5bea52ba4e76c92c5f4e185c46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1afe47db5bea52ba4e76c92c5f4e185c46" kindref="member">PODVector</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>allocator_type&amp;<sp/>a_allocator)<sp/>noexcept</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Allocator(a_allocator),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data(a_vector.m_data),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size(a_vector.m_size),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity(a_vector.m_capacity)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183" refid="classamrex_1_1PODVector_1a4b55d119990bf8f5038348b29aa996c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector_1a4b55d119990bf8f5038348b29aa996c8" kindref="member">~PODVector</ref><sp/>()<sp/>noexcept<sp/>{<sp/>deallocate(m_data,<sp/>capacity());<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="classamrex_1_1PODVector_1a463a93331c5e5a8658ce9bd9fac52a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/>operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CopyAssignmentDoIt(a_vector,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::allocator_traits&lt;Allocator&gt;::</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagate_on_container_copy_assignment());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="classamrex_1_1PODVector_1a08d60f3cf95329c999bc991ebd4b1df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/>operator=<sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::allocator_traits&lt;Allocator&gt;::propagate_on_container_move_assignment::value)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MoveAssignmentDoIt(std::move(a_vector),<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::allocator_traits&lt;Allocator&gt;::</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagate_on_container_move_assignment());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198" refid="classamrex_1_1PODVector_1ada4716396d1c5faae81c327d1ac44e81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1ada4716396d1c5faae81c327d1ac44e81" kindref="member">erase</ref><sp/>(const_iterator<sp/>a_pos)<sp/>noexcept</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--m_size;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos),<sp/>a_pos+1,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205" refid="classamrex_1_1PODVector_1a6aec62620d673d5bfd290bfa35cdd0d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a6aec62620d673d5bfd290bfa35cdd0d6" kindref="member">erase</ref><sp/>(const_iterator<sp/>a_first,<sp/>const_iterator<sp/>a_last)<sp/>noexcept</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>num_to_erase<sp/>=<sp/>a_last<sp/>-<sp/>a_first;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_to_erase<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_first);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>-=<sp/>num_to_erase;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_first),<sp/>a_first+num_to_erase,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_first)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_first);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="classamrex_1_1PODVector_1a07a01dfd32b00e67c3c65e9ecb7da432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a07a01dfd32b00e67c3c65e9ecb7da432" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_item)<sp/>noexcept</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_size<sp/>==<sp/>m_capacity)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(1),<sp/>insert_index,<sp/>1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+1,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)<sp/>=<sp/>a_item;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="classamrex_1_1PODVector_1ae26665c45117a553ccdf7c2a216c11e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1ae26665c45117a553ccdf7c2a216c11e6" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>size_type<sp/>a_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_count<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capacity()<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>a_count)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(a_count),<sp/>insert_index,<sp/>a_count);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+a_count,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>+=<sp/>a_count;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos),<sp/>a_count,<sp/>a_value);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="classamrex_1_1PODVector_1a3b5964595821a3c3e9c261b40ec53e58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a3b5964595821a3c3e9c261b40ec53e58" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>T&amp;&amp;<sp/>a_item)<sp/>noexcept</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_size<sp/>==<sp/>m_capacity)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(1),<sp/>insert_index,<sp/>1);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+1,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)<sp/>=<sp/>a_item;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275" refid="classamrex_1_1PODVector_1ad50d4bf1013274e31a7efbb856407372" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1ad50d4bf1013274e31a7efbb856407372" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>std::initializer_list&lt;T&gt;<sp/>a_initializer_list)<sp/>noexcept</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>count<sp/>=<sp/>a_initializer_list.size();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capacity()<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>count)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(count),<sp/>insert_index,<sp/>count);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+count,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>initializer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>a_initializer_list)<sp/>{<sp/>*(dst++)<sp/>=<sp/>value;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>InputIt,<sp/>class<sp/>bar<sp/>=<sp/>typename<sp/>std::iterator_traits&lt;InputIt&gt;::difference_type&gt;</highlight></codeline>
<codeline lineno="296" refid="classamrex_1_1PODVector_1af372ba330714bf4ec696aad95e1f4dfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1af372ba330714bf4ec696aad95e1f4dfc" kindref="member">insert</ref><sp/>(const_iterator<sp/>a_pos,<sp/>InputIt<sp/>a_first,<sp/>InputIt<sp/>a_last)<sp/>noexcept</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>count<sp/>=<sp/>std::distance(a_first,<sp/>a_last);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capacity()<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>count)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_index<sp/>=<sp/>std::distance(m_data,<sp/>const_cast&lt;iterator&gt;(a_pos));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBufferForInsert(GetNewCapacity(count),<sp/>insert_index,<sp/>count);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_pos<sp/>=<sp/>m_data;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(a_pos,<sp/>insert_index);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memMoveImpl&lt;Allocator&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos)+count,<sp/>a_pos,<sp/>(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>()<sp/>-<sp/>a_pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(a_first<sp/>!=<sp/>a_last)<sp/>{<sp/>*(dst++)<sp/>=<sp/>*(a_first++);<sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a_pos);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316" refid="classamrex_1_1PODVector_1a4e20e83accd80a92cd1a01b1c3242d25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a4e20e83accd80a92cd1a01b1c3242d25" kindref="member">assign</ref><sp/>(size_type<sp/>a_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a_count<sp/>&gt;<sp/>capacity()<sp/>)<sp/>AllocateBuffer(GetNewCapacity(a_count));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_count;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(m_data,<sp/>a_count,<sp/>a_value);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323" refid="classamrex_1_1PODVector_1a55288145cc1dcb67bfd58a5b85fac727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a55288145cc1dcb67bfd58a5b85fac727" kindref="member">assign</ref><sp/>(std::initializer_list&lt;T&gt;<sp/>a_initializer_list)<sp/>noexcept</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a_initializer_list.size()<sp/>&gt;<sp/>capacity())</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(GetNewCapacity(a_initializer_list.size()));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_initializer_list.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>initializer<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_data);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>a_initializer_list)<sp/>{<sp/>*(dst++)<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>InputIt,<sp/>class<sp/>bar<sp/>=<sp/>typename<sp/>std::iterator_traits&lt;InputIt&gt;::difference_type&gt;</highlight></codeline>
<codeline lineno="333" refid="classamrex_1_1PODVector_1a1afe8d2f8a93c4feb056c2214878fd0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a1afe8d2f8a93c4feb056c2214878fd0a" kindref="member">assign</ref><sp/>(InputIt<sp/>a_first,<sp/>InputIt<sp/>a_last)<sp/>noexcept</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>std::distance(a_first,<sp/>a_last);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>capacity())<sp/>AllocateBuffer(GetNewCapacity(count));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">iterator</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_data);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(a_first<sp/>!=<sp/>a_last)<sp/>{<sp/>*(dst++)<sp/>=<sp/>*(a_first++);<sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>have<sp/>the<sp/>emplace<sp/>methods,<sp/>but<sp/>not<sp/>sure<sp/>how<sp/>often<sp/>we<sp/>use<sp/>those.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classamrex_1_1PODVector_1a67de98b5efe335d818e6bc91911418ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/><ref refid="classamrex_1_1PODVector_1a67de98b5efe335d818e6bc91911418ff" kindref="member">get_allocator</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344" refid="classamrex_1_1PODVector_1adb9df25b399f75fae646206ecd6706cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1adb9df25b399f75fae646206ecd6706cc" kindref="member">push_back</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_size<sp/>==<sp/>m_capacity)<sp/>AllocateBuffer(GetNewCapacity(1));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[m_size]<sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351" refid="classamrex_1_1PODVector_1a30ce7699c5a5620cad90ce01e827092c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a30ce7699c5a5620cad90ce01e827092c" kindref="member">push_back</ref><sp/>(T&amp;&amp;<sp/>a_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_size<sp/>==<sp/>m_capacity)<sp/>AllocateBuffer(GetNewCapacity(1));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data[m_size]<sp/>=<sp/>std::move(a_value);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_size;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358" refid="classamrex_1_1PODVector_1a437b046dcdfcfe81a587846c4068c95a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a437b046dcdfcfe81a587846c4068c95a" kindref="member">pop_back</ref><sp/>()<sp/>noexcept<sp/>{<sp/>--m_size;<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360" refid="classamrex_1_1PODVector_1aab4feefd754fb80185d22c9a6708caea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1aab4feefd754fb80185d22c9a6708caea" kindref="member">clear</ref><sp/>()<sp/>noexcept<sp/>{<sp/>m_size<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362" refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" kindref="member">size</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364" refid="classamrex_1_1PODVector_1abf630d0bfa81c94458b031d299c5d6ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1abf630d0bfa81c94458b031d299c5d6ef" kindref="member">max_size</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Allocator::max_size();<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366" refid="classamrex_1_1PODVector_1ab0c66f33cd2db51d1c4d142e175eefd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1ab0c66f33cd2db51d1c4d142e175eefd3" kindref="member">capacity</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_capacity;<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368" refid="classamrex_1_1PODVector_1af46775770f6ac9e8696c8e8fd80da03e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1af46775770f6ac9e8696c8e8fd80da03e" kindref="member">empty</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_size<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370" refid="classamrex_1_1PODVector_1a553df993568cf65c1252d805c7cfcd8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/>operator[]<sp/>(size_type<sp/>a_index)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data[a_index];<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372" refid="classamrex_1_1PODVector_1a57c5c0338de67e3329a4e33e0500527b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator[]<sp/>(size_type<sp/>a_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data[a_index];<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374" refid="classamrex_1_1PODVector_1ae35d54db01ac368409bd57f8e2f91941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1ae35d54db01ac368409bd57f8e2f91941" kindref="member">front</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_data;<sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376" refid="classamrex_1_1PODVector_1a24668b130567e7b47b01a5342ac943a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a24668b130567e7b47b01a5342ac943a2" kindref="member">front</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_data;<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378" refid="classamrex_1_1PODVector_1a2f7b499a6deaa9062f42552e90766de6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a2f7b499a6deaa9062f42552e90766de6" kindref="member">back</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(m_data<sp/>+<sp/>m_size<sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380" refid="classamrex_1_1PODVector_1a94624aaa5b0a5c99b6a6e755fcb39120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classamrex_1_1PODVector_1a94624aaa5b0a5c99b6a6e755fcb39120" kindref="member">back</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(m_data<sp/>+<sp/>m_size<sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382" refid="classamrex_1_1PODVector_1a52a678e008fab2346394fcad18bc90c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a52a678e008fab2346394fcad18bc90c4" kindref="member">data</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384" refid="classamrex_1_1PODVector_1a7915ebc269c31e0ca4dd52ea91b782ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1a7915ebc269c31e0ca4dd52ea91b782ad" kindref="member">data</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386" refid="classamrex_1_1PODVector_1aed3e37de016bb3a5bdeef31fe0f8b4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1aed3e37de016bb3a5bdeef31fe0f8b4e0" kindref="member">dataPtr</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388" refid="classamrex_1_1PODVector_1ae1c2484fecf96587fdb95ba7fffc55ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1PODVector_1ae1c2484fecf96587fdb95ba7fffc55ad" kindref="member">dataPtr</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390" refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" kindref="member">begin</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="classamrex_1_1PODVector_1a0d45a6981becc1c5a1185029a91d47f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1a0d45a6981becc1c5a1185029a91d47f6" kindref="member">begin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394" refid="classamrex_1_1PODVector_1a834016620c6c540a3af5cbe7a2637bed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classamrex_1_1PODVector_1a834016620c6c540a3af5cbe7a2637bed" kindref="member">end</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data<sp/>+<sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396" refid="classamrex_1_1PODVector_1acd98b753ad23f8ace8640192eaf907e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1acd98b753ad23f8ace8640192eaf907e2" kindref="member">end</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data<sp/>+<sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398" refid="classamrex_1_1PODVector_1aa95b5d33b04423ffc385e2c8f2096876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1aa95b5d33b04423ffc385e2c8f2096876" kindref="member">rbegin</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverse_iterator(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>());<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400" refid="classamrex_1_1PODVector_1a8dc6a6dec2668ff14d083905ed5b128a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a8dc6a6dec2668ff14d083905ed5b128a" kindref="member">rbegin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>());<sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402" refid="classamrex_1_1PODVector_1a62f0bd74d3b57e02621753ca0892e892" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a62f0bd74d3b57e02621753ca0892e892" kindref="member">rend</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverse_iterator(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>());<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404" refid="classamrex_1_1PODVector_1a951939815fe8ce7a68fd156df98d76e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a951939815fe8ce7a68fd156df98d76e9" kindref="member">rend</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>());<sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406" refid="classamrex_1_1PODVector_1a0def3f145344eccc86425f242f188ac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1a0def3f145344eccc86425f242f188ac8" kindref="member">cbegin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408" refid="classamrex_1_1PODVector_1ab181f05f4a962b1a5f6092ba124bc9a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classamrex_1_1PODVector_1ab181f05f4a962b1a5f6092ba124bc9a6" kindref="member">cend</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data<sp/>+<sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410" refid="classamrex_1_1PODVector_1a2c68dc479595f1cfeb16dc8c5e3a8c81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1a2c68dc479595f1cfeb16dc8c5e3a8c81" kindref="member">crbegin</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>());<sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412" refid="classamrex_1_1PODVector_1aa4c942fc07ff0e247a2857deeaa773ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/><ref refid="classamrex_1_1PODVector_1aa4c942fc07ff0e247a2857deeaa773ae" kindref="member">crend</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>());<sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414" refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" kindref="member">resize</ref><sp/>(size_type<sp/>a_new_size)<sp/>noexcept</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capacity()<sp/>&lt;<sp/>a_new_size)<sp/>AllocateBuffer(GetNewCapacity(a_new_size<sp/>-<sp/>capacity()));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_new_size;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420" refid="classamrex_1_1PODVector_1a250601ff5e9d9c82bf48202f062fec41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a250601ff5e9d9c82bf48202f062fec41" kindref="member">resize</ref><sp/>(size_type<sp/>a_new_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>a_val)<sp/>noexcept</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>old_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resize(a_new_size);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_size<sp/>&lt;<sp/>a_new_size)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedFillNImpl&lt;Allocator&gt;(m_data<sp/>+<sp/>old_size,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>-<sp/>old_size,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_val);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432" refid="classamrex_1_1PODVector_1a0710d10af50a121adb47fd3982774d8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a0710d10af50a121adb47fd3982774d8c" kindref="member">reserve</ref><sp/>(size_type<sp/>a_capacity)<sp/>noexcept<sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capacity()<sp/>&lt;<sp/>a_capacity)<sp/>AllocateBuffer(a_capacity);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437" refid="classamrex_1_1PODVector_1ad57142666bd78b62d509821a0e0f2e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1ad57142666bd78b62d509821a0e0f2e6a" kindref="member">shrink_to_fit</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>current_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>current_size<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>current_size<sp/>&lt;<sp/>capacity()<sp/>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocateBuffer(current_size);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453" refid="classamrex_1_1PODVector_1a20b9cc552a434d343fd01e5c62b39ef2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a20b9cc552a434d343fd01e5c62b39ef2" kindref="member">swap</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector)<sp/>noexcept</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(m_data,<sp/>a_vector.m_data);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(m_size,<sp/>a_vector.m_size);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(m_capacity,<sp/>a_vector.m_capacity);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(static_cast&lt;Allocator&amp;&gt;(a_vector),<sp/>static_cast&lt;Allocator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>where<sp/>we<sp/>would<sp/>change<sp/>the<sp/>growth<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="classamrex_1_1PODVector_1aef1641f59137b10682b3c6a6e563fecc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="classamrex_1_1PODVector_1aef1641f59137b10682b3c6a6e563fecc" kindref="member">GetNewCapacity</ref><sp/>(size_type<sp/>a_num_to_be_added)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>new_capacity<sp/>=<sp/>capacity();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capacity()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_capacity<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(64<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>size_type(1));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(new_capacity<sp/>&lt;<sp/>(capacity()<sp/>+<sp/>a_num_to_be_added))</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_capacity<sp/>=<sp/>(3<sp/>*<sp/>new_capacity<sp/>+<sp/>1)/2;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_capacity;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>where<sp/>we<sp/>would<sp/>play<sp/>games<sp/>with<sp/>the<sp/>allocator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="classamrex_1_1PODVector_1a9952bc77943ea3370be5fad878b97e03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a9952bc77943ea3370be5fad878b97e03" kindref="member">AllocateBuffer</ref><sp/>(size_type<sp/>a_capacity)<sp/>noexcept</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>new_data<sp/>=<sp/>allocate(a_capacity);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_data)<sp/>detail::memCopyImpl&lt;Allocator&gt;(new_data,<sp/>m_data,<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_capacity;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>have<sp/>this<sp/>version<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classamrex_1_1PODVector_1a8249332ae009a83e8b0b6600032d05a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector_1a8249332ae009a83e8b0b6600032d05a3" kindref="member">AllocateBufferForInsert</ref>(size_type<sp/>a_capacity,<sp/>size_type<sp/>a_index,<sp/>size_type<sp/>a_count)<sp/>noexcept</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>new_data<sp/>=<sp/>allocate(a_capacity);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_data)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memCopyImpl&lt;Allocator&gt;(new_data,<sp/>m_data,<sp/>a_index<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memCopyImpl&lt;Allocator&gt;(new_data<sp/>+<sp/>a_index<sp/>+<sp/>a_count,<sp/>m_data<sp/>+<sp/>a_index,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>-<sp/>a_index)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>+<sp/>a_count;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_capacity;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508" refid="classamrex_1_1PODVector_1a1cc18735213c97b7fb64e2ce42a83cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1a1cc18735213c97b7fb64e2ce42a83cc2" kindref="member">CopyAssignmentDoIt</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector,<sp/>std::false_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>other_size<sp/>=<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" kindref="member">size</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_size<sp/>&gt;<sp/>capacity()<sp/>)<sp/>{<sp/>AllocateBuffer(other_size);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>other_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memCopyImpl&lt;Allocator&gt;(m_data,<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" kindref="member">m_data</ref>,<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517" refid="classamrex_1_1PODVector_1a5a460930ffbde164303d6fb956a2990e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1a5a460930ffbde164303d6fb956a2990e" kindref="member">CopyAssignmentDoIt</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;<sp/>a_vector,<sp/>std::true_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;Allocator&amp;&gt;(a_vector)<sp/>==<sp/>static_cast&lt;Allocator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyAssignmentDoIt(a_vector,<sp/>std::false_type());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>other_size<sp/>=<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1a1cdc3c767875be38aa4e622280597347" kindref="member">size</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_size<sp/>&gt;<sp/>capacity()<sp/>)<sp/>{<sp/>AllocateBuffer(other_size);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>other_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::memCopyImpl&lt;Allocator&gt;(m_data,<sp/>a_vector.<ref refid="classamrex_1_1PODVector_1aa3653b70897299b34df8afff92bb2299" kindref="member">m_data</ref>,<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::operator=(static_cast&lt;Allocator&amp;&gt;(a_vector));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534" refid="classamrex_1_1PODVector_1af344a2609581e4d8a2150493765c89fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1af344a2609581e4d8a2150493765c89fb" kindref="member">MoveAssignmentDoIt</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector,<sp/>std::false_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;Allocator&amp;&gt;(a_vector)<sp/>==<sp/>static_cast&lt;Allocator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>a_vector.m_data;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_vector.m_size;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_vector.m_capacity;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>allocators<sp/>are<sp/>not<sp/>the<sp/>same<sp/>we<sp/>give<sp/>up<sp/>and<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyAssignmentDoIt(a_vector,<sp/>std::false_type());</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557" refid="classamrex_1_1PODVector_1a5deceff5843ae30c88913841d64ce001" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">PODVector</ref>&amp;<sp/><ref refid="classamrex_1_1PODVector_1a5deceff5843ae30c88913841d64ce001" kindref="member">MoveAssignmentDoIt</ref><sp/>(<ref refid="classamrex_1_1PODVector" kindref="compound">PODVector&lt;T, Allocator&gt;</ref>&amp;&amp;<sp/>a_vector,<sp/>std::true_type)<sp/>noexcept</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate(m_data,<sp/>capacity());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::operator=(std::move(static_cast&lt;Allocator&amp;&gt;(a_vector)));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>a_vector.m_data;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_size<sp/>=<sp/>a_vector.m_size;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>a_vector.m_capacity;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_vector.m_capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PODVector.H"/>
  </compounddef>
</doxygen>
