<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EBMFCellConsLinInterp" kind="class" language="C++" prot="public" final="yes">
    <compoundname>amrex::EBMFCellConsLinInterp</compoundname>
    <basecompoundref refid="classamrex_1_1MFCellConsLinInterp" prot="public" virt="non-virtual">amrex::MFCellConsLinInterp</basecompoundref>
    <includes refid="AMReX__EBMFInterpolater_8H" local="no">AMReX_EBMFInterpolater.H</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EBMFCellConsLinInterp_1a043c6494ec3f45ea323ef693b35989e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual amrex::EBMFCellConsLinInterp::~EBMFCellConsLinInterp</definition>
        <argsstring>()=default</argsstring>
        <name>~EBMFCellConsLinInterp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.H" line="15" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBMFCellConsLinInterp_1a5ae7c27989c4dbcd516771daddc85ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::EBMFCellConsLinInterp::interp</definition>
        <argsstring>(MultiFab const &amp;crsemf, int ccomp, MultiFab &amp;finemf, int fcomp, int ncomp, IntVect const &amp;ng, Geometry const &amp;cgeom, Geometry const &amp;fgeom, Box const &amp;dest_domain, IntVect const &amp;ratio, Vector&lt; BCRec &gt; const &amp;bcs, int bcscomp)</argsstring>
        <name>interp</name>
        <reimplements refid="classamrex_1_1MFCellConsLinInterp_1acbb3de375a7d2c73c0b3f9b9326de4a8">interp</reimplements>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const &amp;</type>
          <declname>crsemf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ccomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>finemf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ng</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>cgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>dest_domain</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bcscomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.H" line="17" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.cpp" bodystart="11" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBMFCellConsLinInterp_1a3143da788fef06af1498167b5d05a065" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MFCellConsLinInterp::MFCellConsLinInterp</definition>
        <argsstring>(bool do_linear_limiting_)</argsstring>
        <name>MFCellConsLinInterp</name>
        <param>
          <type>bool</type>
          <declname>do_linear_limiting_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.H" line="13" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" bodystart="57" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="1">
        <label>amrex::EBMFCellConsLinInterp</label>
        <link refid="classamrex_1_1EBMFCellConsLinInterp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::MFInterpolater</label>
        <link refid="classamrex_1_1MFInterpolater"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::MFCellConsLinInterp</label>
        <link refid="classamrex_1_1MFCellConsLinInterp"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="1">
        <label>amrex::EBMFCellConsLinInterp</label>
        <link refid="classamrex_1_1EBMFCellConsLinInterp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::MFInterpolater</label>
        <link refid="classamrex_1_1MFInterpolater"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::MFCellConsLinInterp</label>
        <link refid="classamrex_1_1MFCellConsLinInterp"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.H" line="9" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.H" bodystart="11" bodyend="21"/>
    <listofallmembers>
      <member refid="classamrex_1_1InterpBase_1ab2961b67ebd3fabbf32afe103267ad59" prot="public" virt="non-virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>BoxCoarsener</name></member>
      <member refid="classamrex_1_1MFCellConsLinInterp_1a74654ff59b479f8515f47d0104c5d44c" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1MFCellConsLinInterp_1a3efce6bc405fc34cd1b7e9607396a7a6" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1MFCellConsLinInterp_1a91c24df4c8841c52503e3ce919f6a223" prot="protected" virt="non-virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>do_linear_limiting</name></member>
      <member refid="classamrex_1_1InterpBase_1ad9523dae9903f59fc43bb7df17e2250e" prot="public" virt="non-virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>GetBCArray</name></member>
      <member refid="classamrex_1_1EBMFCellConsLinInterp_1a5ae7c27989c4dbcd516771daddc85ff6" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>interp</name></member>
      <member refid="classamrex_1_1EBMFCellConsLinInterp_1a3143da788fef06af1498167b5d05a065" prot="public" virt="non-virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>MFCellConsLinInterp</name></member>
      <member refid="classamrex_1_1MFCellConsLinInterp_1a3143da788fef06af1498167b5d05a065" prot="public" virt="non-virtual" ambiguityscope="amrex::MFCellConsLinInterp::"><scope>amrex::EBMFCellConsLinInterp</scope><name>MFCellConsLinInterp</name></member>
      <member refid="classamrex_1_1EBMFCellConsLinInterp_1a043c6494ec3f45ea323ef693b35989e6" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>~EBMFCellConsLinInterp</name></member>
      <member refid="classamrex_1_1InterpBase_1a73cb181d9364c6005abfcfdb54037291" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>~InterpBase</name></member>
      <member refid="classamrex_1_1MFCellConsLinInterp_1a12fc644c56b404fb262fe306024804d5" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>~MFCellConsLinInterp</name></member>
      <member refid="classamrex_1_1MFInterpolater_1afd25250d30fb2d1d605bdb7b6b0e1a4e" prot="public" virt="virtual"><scope>amrex::EBMFCellConsLinInterp</scope><name>~MFInterpolater</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
