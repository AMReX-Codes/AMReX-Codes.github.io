<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1Table3D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Table3D</compoundname>
    <includes refid="AMReX__TableData_8H" local="no">AMReX_TableData.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20" kindref="member">Order</ref></type>
        <declname>ORDER</declname>
        <defname>ORDER</defname>
        <defval><ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">Order::F</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Table3D_1a407895222f88d71031163c10862f5aa6" prot="public" static="no" mutable="no">
        <type>T *restrict</type>
        <definition>T* restrict amrex::Table3D&lt; T, ORDER &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>amrex::Table3D::p</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="174" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table3D_1a2364337755de91dfe210ddb6e13d9917" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table3D&lt; T, ORDER &gt;::stride1</definition>
        <argsstring></argsstring>
        <name>stride1</name>
        <qualifiedname>amrex::Table3D::stride1</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="175" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table3D_1a3fd3906154fd716964cdd75b4694c9b2" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table3D&lt; T, ORDER &gt;::stride2</definition>
        <argsstring></argsstring>
        <name>stride2</name>
        <qualifiedname>amrex::Table3D::stride2</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="176" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table3D_1ae6e3b01db1692caf20dae041275adec0" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt;</type>
        <definition>GpuArray&lt;int,3&gt; amrex::Table3D&lt; T, ORDER &gt;::begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <qualifiedname>amrex::Table3D::begin</qualifiedname>
        <initializer>{{1,1,1}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="177" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table3D_1a99916092c93df93da10a0bb582222174" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt;</type>
        <definition>GpuArray&lt;int,3&gt; amrex::Table3D&lt; T, ORDER &gt;::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>amrex::Table3D::end</qualifiedname>
        <initializer>{{0,0,0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="178" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="178" bodyend="178"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Table3D_1a994877eb9b7819106bd25c3fb2932398" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::Table3D&lt; T, ORDER &gt;::Table3D</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>Table3D</name>
        <qualifiedname>amrex::Table3D::Table3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="180" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table3D_1a5ff647da9beb0549055d5e18bef7514a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::Table3D&lt; T, ORDER &gt;::Table3D</definition>
        <argsstring>(Table3D&lt; std::remove_const_t&lt; T &gt;, ORDER &gt; const &amp;rhs) noexcept</argsstring>
        <name>Table3D</name>
        <qualifiedname>amrex::Table3D::Table3D</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Table3D" kindref="compound">Table3D</ref>&lt; std::remove_const_t&lt; T &gt;, ORDER &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="184" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="184" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table3D_1a3df237f63ba761b2845818f82dfeb9c9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::Table3D&lt; T, ORDER &gt;::Table3D</definition>
        <argsstring>(T *a_p, GpuArray&lt; int, 3 &gt; const &amp;a_begin, GpuArray&lt; int, 3 &gt; const &amp;a_end) noexcept</argsstring>
        <name>Table3D</name>
        <qualifiedname>amrex::Table3D::Table3D</qualifiedname>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="193" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table3D_1a50efdf9597768eab65300f0cffd9f038" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::Table3D&lt; T, ORDER &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>amrex::Table3D::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="204" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table3D_1ae2f6b02c6a7e930a317dbb44549fa361" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_void_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ U &amp;</type>
        <definition>__host__ __device__ U &amp; amrex::Table3D&lt; T, ORDER &gt;::operator()</definition>
        <argsstring>(int i, int j, int k) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::Table3D::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="208" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="208" bodyend="217"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structamrex_1_1Table3D_1accb55d2deb7abdb2c5fe9afd0f27046c" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int amrex::Table3D&lt; T, ORDER &gt;::len0</definition>
        <argsstring>(GpuArray&lt; int, 3 &gt; const &amp;a_begin, GpuArray&lt; int, 3 &gt; const &amp;a_end) noexcept</argsstring>
        <name>len0</name>
        <qualifiedname>amrex::Table3D::len0</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="246" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="246" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table3D_1a8da09138b8d2468cc9898ba75700cdd1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int amrex::Table3D&lt; T, ORDER &gt;::len1</definition>
        <argsstring>(GpuArray&lt; int, 3 &gt; const &amp;a_begin, GpuArray&lt; int, 3 &gt; const &amp;a_end) noexcept</argsstring>
        <name>len1</name>
        <qualifiedname>amrex::Table3D::len1</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 3 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="256" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="256" bodyend="260"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::GpuArray&lt; int, 3 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="1">
        <label>amrex::Table3D&lt; T, ORDER &gt;</label>
        <link refid="structamrex_1_1Table3D"/>
        <childnode refid="2" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="172" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="173" bodyend="261"/>
    <listofallmembers>
      <member refid="structamrex_1_1Table3D_1ae6e3b01db1692caf20dae041275adec0" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>begin</name></member>
      <member refid="structamrex_1_1Table3D_1a99916092c93df93da10a0bb582222174" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>end</name></member>
      <member refid="structamrex_1_1Table3D_1accb55d2deb7abdb2c5fe9afd0f27046c" prot="private" virt="non-virtual"><scope>amrex::Table3D</scope><name>len0</name></member>
      <member refid="structamrex_1_1Table3D_1a8da09138b8d2468cc9898ba75700cdd1" prot="private" virt="non-virtual"><scope>amrex::Table3D</scope><name>len1</name></member>
      <member refid="structamrex_1_1Table3D_1a50efdf9597768eab65300f0cffd9f038" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1Table3D_1ae2f6b02c6a7e930a317dbb44549fa361" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Table3D_1a407895222f88d71031163c10862f5aa6" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>p</name></member>
      <member refid="structamrex_1_1Table3D_1a2364337755de91dfe210ddb6e13d9917" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>stride1</name></member>
      <member refid="structamrex_1_1Table3D_1a3fd3906154fd716964cdd75b4694c9b2" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>stride2</name></member>
      <member refid="structamrex_1_1Table3D_1a994877eb9b7819106bd25c3fb2932398" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>Table3D</name></member>
      <member refid="structamrex_1_1Table3D_1a5ff647da9beb0549055d5e18bef7514a" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>Table3D</name></member>
      <member refid="structamrex_1_1Table3D_1a3df237f63ba761b2845818f82dfeb9c9" prot="public" virt="non-virtual"><scope>amrex::Table3D</scope><name>Table3D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
