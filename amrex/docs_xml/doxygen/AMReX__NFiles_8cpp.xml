<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__NFiles_8cpp" kind="file" language="C++">
    <compoundname>AMReX_NFiles.cpp</compoundname>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__NFiles_8H" local="no">AMReX_NFiles.H</includes>
    <includes local="no">deque</includes>
    <incdepgraph>
      <node id="29682">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29683" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
      </node>
      <node id="29703">
        <label>iomanip</label>
      </node>
      <node id="29650">
        <label>functional</label>
      </node>
      <node id="29676">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29678" relation="include">
        </childnode>
        <childnode refid="29673" relation="include">
        </childnode>
        <childnode refid="29679" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
      </node>
      <node id="29738">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
      </node>
      <node id="29671">
        <label>limits</label>
      </node>
      <node id="29689">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
      </node>
      <node id="29729">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="29691" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
      </node>
      <node id="29664">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29666" relation="include">
        </childnode>
        <childnode refid="29668" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29673" relation="include">
        </childnode>
        <childnode refid="29674" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
      </node>
      <node id="29723">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29719" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29670" relation="include">
        </childnode>
      </node>
      <node id="29696">
        <label>cstdint</label>
      </node>
      <node id="29712">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29676" relation="include">
        </childnode>
        <childnode refid="29680" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
        <childnode refid="29713" relation="include">
        </childnode>
        <childnode refid="29711" relation="include">
        </childnode>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29714" relation="include">
        </childnode>
      </node>
      <node id="29680">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
      </node>
      <node id="29669">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29670" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29672" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29667" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
      </node>
      <node id="29693">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29683" relation="include">
        </childnode>
        <childnode refid="29694" relation="include">
        </childnode>
        <childnode refid="29695" relation="include">
        </childnode>
        <childnode refid="29658" relation="include">
        </childnode>
        <childnode refid="29696" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29697" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
      </node>
      <node id="29645">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29648" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29650" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29651" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
      </node>
      <node id="29704">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="29722">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="29716">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="29634" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
      </node>
      <node id="29662">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
      </node>
      <node id="29702">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="29659" relation="include">
        </childnode>
        <childnode refid="29683" relation="include">
        </childnode>
        <childnode refid="29703" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29682" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
      </node>
      <node id="29670">
        <label>cmath</label>
      </node>
      <node id="29710">
        <label>cassert</label>
      </node>
      <node id="29649">
        <label>stdexcept</label>
      </node>
      <node id="29691">
        <label>numeric</label>
      </node>
      <node id="29679">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29673" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
      </node>
      <node id="29733">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="29670" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29672" relation="include">
        </childnode>
        <childnode refid="29657" relation="include">
        </childnode>
        <childnode refid="29640" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29720" relation="include">
        </childnode>
        <childnode refid="29679" relation="include">
        </childnode>
        <childnode refid="29734" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29689" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29704" relation="include">
        </childnode>
        <childnode refid="29634" relation="include">
        </childnode>
        <childnode refid="29714" relation="include">
        </childnode>
      </node>
      <node id="29637">
        <label>string</label>
      </node>
      <node id="29728">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29719" relation="include">
        </childnode>
      </node>
      <node id="29720">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="29664" relation="include">
        </childnode>
      </node>
      <node id="29638">
        <label>map</label>
      </node>
      <node id="29737">
        <label>unordered_set</label>
      </node>
      <node id="29740">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="29739">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="29712" relation="include">
        </childnode>
        <childnode refid="29731" relation="include">
        </childnode>
      </node>
      <node id="29683">
        <label>fstream</label>
      </node>
      <node id="29706">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29707" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
        <childnode refid="29708" relation="include">
        </childnode>
        <childnode refid="29711" relation="include">
        </childnode>
      </node>
      <node id="29731">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29712" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29708" relation="include">
        </childnode>
        <childnode refid="29714" relation="include">
        </childnode>
      </node>
      <node id="29668">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="29654" relation="include">
        </childnode>
      </node>
      <node id="29708">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29657" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29709" relation="include">
        </childnode>
      </node>
      <node id="29656">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="29657" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29658" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29659" relation="include">
        </childnode>
        <childnode refid="29651" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
      </node>
      <node id="29727">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29634" relation="include">
        </childnode>
      </node>
      <node id="29661">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="29713">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29640" relation="include">
        </childnode>
      </node>
      <node id="29655">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="29715">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29716" relation="include">
        </childnode>
        <childnode refid="29717" relation="include">
        </childnode>
        <childnode refid="29719" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29720" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29718" relation="include">
        </childnode>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29721" relation="include">
        </childnode>
        <childnode refid="29722" relation="include">
        </childnode>
      </node>
      <node id="29641">
        <label>sys/types.h</label>
      </node>
      <node id="29711">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
      </node>
      <node id="29690">
        <label>typeinfo</label>
      </node>
      <node id="29651">
        <label>cstdio</label>
      </node>
      <node id="29718">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="29640" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
      </node>
      <node id="29660">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
      </node>
      <node id="29695">
        <label>future</label>
      </node>
      <node id="29684">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="29685" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29658" relation="include">
        </childnode>
        <childnode refid="29659" relation="include">
        </childnode>
        <childnode refid="29651" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29686" relation="include">
        </childnode>
        <childnode refid="29687" relation="include">
        </childnode>
        <childnode refid="29688" relation="include">
        </childnode>
      </node>
      <node id="29642">
        <label>unistd.h</label>
      </node>
      <node id="29685">
        <label>stack</label>
      </node>
      <node id="29652">
        <label>vector</label>
      </node>
      <node id="29701">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29704" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
      </node>
      <node id="29644">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="29645" relation="include">
        </childnode>
      </node>
      <node id="29646">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="29658">
        <label>utility</label>
      </node>
      <node id="29657">
        <label>array</label>
      </node>
      <node id="29697">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29698" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29658" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29699" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29676" relation="include">
        </childnode>
        <childnode refid="29700" relation="include">
        </childnode>
        <childnode refid="29701" relation="include">
        </childnode>
        <childnode refid="29680" relation="include">
        </childnode>
        <childnode refid="29706" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
        <childnode refid="29634" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29689" relation="include">
        </childnode>
        <childnode refid="29711" relation="include">
        </childnode>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29712" relation="include">
        </childnode>
        <childnode refid="29731" relation="include">
        </childnode>
        <childnode refid="29704" relation="include">
        </childnode>
        <childnode refid="29718" relation="include">
        </childnode>
        <childnode refid="29739" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29714" relation="include">
        </childnode>
        <childnode refid="29740" relation="include">
        </childnode>
      </node>
      <node id="29732">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29701" relation="include">
        </childnode>
        <childnode refid="29670" relation="include">
        </childnode>
      </node>
      <node id="29659">
        <label>sstream</label>
      </node>
      <node id="29648">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="29649" relation="include">
        </childnode>
      </node>
      <node id="29666">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
        <childnode refid="29667" relation="include">
        </childnode>
      </node>
      <node id="29633">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX_NFiles.cpp"/>
        <childnode refid="29634" relation="include">
        </childnode>
        <childnode refid="29692" relation="include">
        </childnode>
        <childnode refid="29742" relation="include">
        </childnode>
      </node>
      <node id="29717">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29716" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29718" relation="include">
        </childnode>
      </node>
      <node id="29681">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29682" relation="include">
        </childnode>
        <childnode refid="29684" relation="include">
        </childnode>
        <childnode refid="29689" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29690" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29650" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29691" relation="include">
        </childnode>
      </node>
      <node id="29634">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29640" relation="include">
        </childnode>
        <childnode refid="29641" relation="include">
        </childnode>
        <childnode refid="29642" relation="include">
        </childnode>
        <childnode refid="29643" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29676" relation="include">
        </childnode>
        <childnode refid="29680" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
      </node>
      <node id="29705">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
      </node>
      <node id="29674">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
      </node>
      <node id="29667">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
      </node>
      <node id="29665">
        <label>iosfwd</label>
      </node>
      <node id="29643">
        <label>sys/wait.h</label>
      </node>
      <node id="29635">
        <label>cstdlib</label>
      </node>
      <node id="29688">
        <label>cfenv</label>
      </node>
      <node id="29636">
        <label>iostream</label>
      </node>
      <node id="29673">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
      </node>
      <node id="29675">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="29669" relation="include">
        </childnode>
      </node>
      <node id="29677">
        <label>cstddef</label>
      </node>
      <node id="29742">
        <label>deque</label>
      </node>
      <node id="29678">
        <label>unordered_map</label>
      </node>
      <node id="29700">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29673" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29679" relation="include">
        </childnode>
      </node>
      <node id="29714">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29715" relation="include">
        </childnode>
        <childnode refid="29716" relation="include">
        </childnode>
        <childnode refid="29723" relation="include">
        </childnode>
        <childnode refid="29719" relation="include">
        </childnode>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29717" relation="include">
        </childnode>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29729" relation="include">
        </childnode>
        <childnode refid="29730" relation="include">
        </childnode>
      </node>
      <node id="29672">
        <label>climits</label>
      </node>
      <node id="29730">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="29692">
        <label>AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29683" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
        <childnode refid="29693" relation="include">
        </childnode>
      </node>
      <node id="29736">
        <label>mutex</label>
      </node>
      <node id="29639">
        <label>chrono</label>
      </node>
      <node id="29721">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="29687">
        <label>csignal</label>
      </node>
      <node id="29694">
        <label>thread</label>
      </node>
      <node id="29735">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29699" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29736" relation="include">
        </childnode>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29650" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
      </node>
      <node id="29640">
        <label>type_traits</label>
      </node>
      <node id="29699">
        <label>set</label>
      </node>
      <node id="29734">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="29705" relation="include">
        </childnode>
      </node>
      <node id="29647">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="29741">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
      </node>
      <node id="29725">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="29705" relation="include">
        </childnode>
      </node>
      <node id="29663">
        <label>algorithm</label>
      </node>
      <node id="29719">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29657" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29634" relation="include">
        </childnode>
        <childnode refid="29716" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
      </node>
      <node id="29686">
        <label>execinfo.h</label>
      </node>
      <node id="29698">
        <label>cstring</label>
      </node>
      <node id="29709">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29698" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29670" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29710" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
      </node>
      <node id="29707">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="29671" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
      </node>
      <node id="29653">
        <label>memory</label>
      </node>
      <node id="29724">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29698" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29718" relation="include">
        </childnode>
        <childnode refid="29719" relation="include">
        </childnode>
      </node>
      <node id="29726">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29719" relation="include">
        </childnode>
        <childnode refid="29718" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29635" relation="include">
        </childnode>
      </node>
      <node id="29654">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="29655" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__NFiles_8H" kindref="compound">AMReX_NFiles.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">NFilesIter::currentDeciderIndex</ref>(-1);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" kindref="member">NFilesIter::minDigits</ref>(5);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="classamrex_1_1NFilesIter_1a0251784dab51b741e87189d342682354" kindref="member">NFilesIter::NFilesIter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutfiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fileprefix,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>groupsets,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setBuf)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" kindref="member">stWriteTag</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" kindref="member">stReadTag</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" kindref="member">isReading</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a11b5dec9fc1e0865a1e59a896d8c2f8e" kindref="member">ActualNFiles</ref>(noutfiles);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>groupsets;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" kindref="member">nSets</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a9138f1bb7d077d7d1cd043715ecb7d74" kindref="member">LengthOfSet</ref>(<ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" kindref="member">mySetPosition</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" kindref="member">WhichSetPosition</ref>(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1aad4c1bc1d99aa619064cdf4ea8c7a12e" kindref="member">FileNumber</ref>(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" kindref="member">filePrefix</ref><sp/><sp/><sp/><sp/>=<sp/>fileprefix;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a658343fbeab64c3c54fc6fa62974f8b5" kindref="member">FileName</ref>(<ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" kindref="member">filePrefix</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" kindref="member">useSparseFPP</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setBuf)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" kindref="member">io_buffer</ref>.resize(<ref refid="classamrex_1_1VisMF_1a5786626f23a062d3c33c0a9550324ebc" kindref="member">VisMF::GetIOBufferSize</ref>());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.rdbuf()-&gt;pubsetbuf(<ref refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" kindref="member">io_buffer</ref>.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>(),<sp/><ref refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" kindref="member">io_buffer</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>make<sp/>a<sp/>static<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.resize(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[<ref refid="classamrex_1_1NFilesIter_1aad4c1bc1d99aa619064cdf4ea8c7a12e" kindref="member">FileNumber</ref>(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/>i,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>)].push_back(i);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.resize(0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.reserve(nProcs);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" kindref="member">setZeroProcs</ref>.reserve(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>count<sp/>zero<sp/>set<sp/>positions<sp/><sp/>and<sp/>find<sp/>an<sp/>alternate<sp/>decider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" kindref="member">NFilesIter::WhichSetPosition</ref>(i,<sp/>nProcs,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" kindref="member">setZeroProcs</ref>.push_back(i);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.push_back(i);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" kindref="member">nSets</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>&gt;=<sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkNFiles(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkNFiles)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a0a8de2ff506c69fd9d2165fe0f294100" kindref="member">CheckNFiles</ref>(nProcs,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1afaabf4f7bbf8f45e425237a5116fffda" kindref="member">NFilesIter::SetDynamic</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deciderproc)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref><sp/>=<sp/>deciderproc;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>we<sp/>have<sp/>to<sp/>check<sp/>currentDeciderIndex<sp/>here<sp/>also<sp/>in<sp/>case<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>different<sp/>nfiles<sp/>for<sp/>plots<sp/>and<sp/>checkpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>&gt;=<sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>||<sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deciderProc<sp/>&lt;<sp/>0<sp/>||<sp/>deciderProc<sp/>&gt;=<sp/>nProcs)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>[<ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref>];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" kindref="member">NFilesIter::WhichSetPosition</ref>(<ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref>,<sp/>nProcs,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>decider<sp/>cannot<sp/>have<sp/>set<sp/>position<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>[<ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref>];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>+=<sp/><ref refid="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" kindref="member">nSets</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>&gt;=<sp/><ref refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" kindref="member">availableDeciders</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>||<sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" kindref="member">currentDeciderIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" kindref="member">NFilesIter::WhichSetPosition</ref>(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref>,<sp/>nProcs,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" kindref="member">deciderTag</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" kindref="member">coordinatorTag</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" kindref="member">doneTag</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" kindref="member">writeTag</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" kindref="member">remainingWriters</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref><sp/>==<sp/>nProcs)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.clear();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.resize(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a4502510b5b15f7e87226e43367e1923a" kindref="member">NFilesIter::SetSparseFPP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;<sp/>&amp;ranksToWrite)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ranksToWrite.empty())<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ranksToWrite.size()<sp/>&gt;<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;****<sp/>Error<sp/>in<sp/>NFilesIter::SetSparseFPP:<sp/><sp/>ranksToWrite.size()<sp/>&gt;<sp/>nProcs.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7ea5dbf41c762d6e8e90def0b878ea8d" kindref="member">sparseWritingRanks</ref><sp/>=<sp/>ranksToWrite;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>do<sp/>more<sp/>error<sp/>checking<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>ranks<sp/>in<sp/>range,<sp/>is<sp/>dynamic<sp/>on<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r(0);<sp/>r<sp/>&lt;<sp/>ranksToWrite.size();<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ranksToWrite[r]<sp/>&lt;<sp/>0<sp/>||<sp/>ranksToWrite[r]<sp/>&gt;=<sp/>nProcs)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;****<sp/>Error<sp/>in<sp/>NFilesIter::SetSparseFPP:<sp/><sp/>rank<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ranksToWrite[r]<sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;****<sp/>Error<sp/>in<sp/>NFilesIter::SetSparseFPP:<sp/><sp/>ranksToWrite<sp/>not<sp/>unique.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref><sp/>=<sp/>ranksToWrite.size();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>get<sp/>the<sp/>write<sp/>order<sp/>from<sp/>ranksToWrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.clear();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.resize(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[i].push_back(ranksToWrite[i]);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a658343fbeab64c3c54fc6fa62974f8b5" kindref="member">FileName</ref>(<ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" kindref="member">filePrefix</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fullFileNameUndefined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" kindref="member">useSparseFPP</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="classamrex_1_1NFilesIter_1a0251784dab51b741e87189d342682354" kindref="member">NFilesIter::NFilesIter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;<sp/>&amp;readranks,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setBuf)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" kindref="member">isReading</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>nProcs<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref><sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" kindref="member">readRanks</ref><sp/>=<sp/>readranks;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" kindref="member">indexUndefined</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" kindref="member">readRanks</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" kindref="member">readRanks</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>!=<sp/><ref refid="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" kindref="member">indexUndefined</ref>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;****<sp/>Error<sp/>in<sp/>NFilesIter:<sp/><sp/>readRanks<sp/>not<sp/>unique.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" kindref="member">indexUndefined</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>nothing<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" kindref="member">finishedReading</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" kindref="member">finishedReading</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setBuf)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" kindref="member">io_buffer</ref>.resize(<ref refid="classamrex_1_1VisMF_1a5786626f23a062d3c33c0a9550324ebc" kindref="member">VisMF::GetIOBufferSize</ref>());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.rdbuf()-&gt;pubsetbuf(<ref refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" kindref="member">io_buffer</ref>.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>(),<sp/><ref refid="classamrex_1_1NFilesIter_1ac9b6223bf489ebe24b22ae01e1c16652" kindref="member">io_buffer</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="classamrex_1_1NFilesIter_1a4f9a9917a9842e888fbdf9d45f5de52e" kindref="member">NFilesIter::~NFilesIter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1aa0c0e9a50f259bef6b3a1f2a932c65bc" kindref="member">CleanUpMessages</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a6c012f15ef5b8e7438a88bc794766143" kindref="member">NFilesIter::ReadyToWrite</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>appendFirst)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" kindref="member">useSparseFPP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>appendFirst)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/>std::ios::trunc<sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/><ref refid="AMReX__MLNodeLap__2d_8F90_1aa73b1bd51de1204686813e341958b9c7" kindref="member">std::ios::app</ref><sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>general<sp/>static<sp/>set<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iSet(0);<sp/>iSet<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" kindref="member">nSets</ref>;<sp/>++iSet)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" kindref="member">mySetPosition</ref><sp/>==<sp/>iSet)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iSet<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!<sp/>appendFirst)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>first<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/>std::ios::trunc<sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/><ref refid="AMReX__MLNodeLap__2d_8F90_1aa73b1bd51de1204686813e341958b9c7" kindref="member">std::ios::app</ref><sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" kindref="member">mySetPosition</ref><sp/>==<sp/>(iSet<sp/>+<sp/>1))<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>next<sp/>set<sp/>waits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBuff,<sp/>waitForPID(-1);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitForPID<sp/>=<sp/>(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>-<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitForPID<sp/>=<sp/>(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;iBuff,<sp/>1,<sp/>waitForPID,<sp/><ref refid="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" kindref="member">stWriteTag</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>use<sp/>dynamic<sp/>set<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" kindref="member">mySetPosition</ref><sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>return<sp/>true,<sp/>ready<sp/>to<sp/>write<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref><sp/>=<sp/><ref refid="namespaceamrex_1a6e3a82e54e91d8c7543596b2c2476250" kindref="member">amrex::Concatenate</ref>(<ref refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" kindref="member">filePrefix</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" kindref="member">minDigits</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(appendFirst)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/><ref refid="AMReX__MLNodeLap__2d_8F90_1aa73b1bd51de1204686813e341958b9c7" kindref="member">std::ios::app</ref><sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/>std::ios::trunc<sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>this<sp/>proc<sp/>decides<sp/>who<sp/>decides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;NFI::ReadyToWrite:decider&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>first<sp/>message<sp/>received<sp/>is<sp/>the<sp/>coordinator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>,<sp/>1,<sp/>MPI_ANY_SOURCE,<sp/><ref refid="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" kindref="member">deciderTag</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" kindref="member">setZeroProcs</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>();<sp/>++i)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>tell<sp/>the<sp/>set<sp/>zero<sp/>ranks<sp/><sp/>who<sp/>is<sp/>coordinating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>,<sp/>1,<sp/><ref refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" kindref="member">setZeroProcs</ref>[i],<sp/><ref refid="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" kindref="member">coordinatorTag</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" kindref="member">unreadMessages</ref>.push_back(std::make_pair(<ref refid="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" kindref="member">deciderTag</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" kindref="member">setZeroProcs</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>these<sp/>are<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>procs<sp/>who<sp/>need<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>deciderProc<sp/>drops<sp/>through<sp/>to<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>wait<sp/>for<sp/>signal<sp/>to<sp/>start<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParallelDescriptor::Message<sp/>rmess<sp/>=</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/>1,<sp/>MPI_ANY_SOURCE,<sp/><ref refid="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" kindref="member">writeTag</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref><sp/>=<sp/>rmess.pid();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref><sp/>=<sp/><ref refid="namespaceamrex_1a6e3a82e54e91d8c7543596b2c2476250" kindref="member">amrex::Concatenate</ref>(<ref refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" kindref="member">filePrefix</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" kindref="member">minDigits</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/><ref refid="AMReX__MLNodeLap__2d_8F90_1aa73b1bd51de1204686813e341958b9c7" kindref="member">std::ios::app</ref><sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::out<sp/>|<sp/>std::ios::trunc<sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1af4f8ba9c90ecfcea92b6426df76049af" kindref="member">NFilesIter::ReadyToRead</ref>()<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" kindref="member">finishedReading</ref>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>!=<sp/>0)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>wait<sp/>for<sp/>rank<sp/>myReadIndex<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBuff(-1),<sp/>waitForPID(<ref refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" kindref="member">readRanks</ref>[<ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;iBuff,<sp/>1,<sp/>waitForPID,<sp/><ref refid="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" kindref="member">stReadTag</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.open(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>.c_str(),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::in<sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(<ref refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" kindref="member">fullFileName</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><ref refid="classamrex_1_1NFilesIter_1a0251784dab51b741e87189d342682354" kindref="member">NFilesIter</ref><sp/>&amp;<ref refid="classamrex_1_1NFilesIter_1a47cb9c9c13164881e7cd69a7fd7bf455" kindref="member">NFilesIter::operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>ParallelDescriptor::Message<sp/>rmess;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" kindref="member">isReading</ref>)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" kindref="member">readRanks</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBuff(0),<sp/>wakeUpPID(<ref refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" kindref="member">readRanks</ref>[<ref refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" kindref="member">myReadIndex</ref><sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;iBuff,<sp/>1,<sp/>wakeUpPID,<sp/><ref refid="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" kindref="member">stReadTag</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" kindref="member">finishedReading</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" kindref="member">useStaticSetSelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" kindref="member">useSparseFPP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" kindref="member">mySparseFileNumber</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.flush();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>general<sp/>static<sp/>set<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.flush();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBuff(0),<sp/>wakeUpPID(-1);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeUpPID<sp/>=<sp/>(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>+<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeUpPID<sp/>=<sp/>(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wakeUpPID<sp/>&lt;<sp/>nProcs)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextSP<sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" kindref="member">WhichSetPosition</ref>(wakeUpPID,<sp/>nProcs,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nextSP<sp/>&gt;<sp/><ref refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" kindref="member">mySetPosition</ref>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;iBuff,<sp/>1,<sp/>wakeUpPID,<sp/><ref refid="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" kindref="member">stWriteTag</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>use<sp/>dynamic<sp/>set<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" kindref="member">mySetPosition</ref><sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>write<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.flush();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>tell<sp/>the<sp/>decider<sp/>we<sp/>are<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref>,<sp/>1,<sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" kindref="member">deciderTag</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>wait<sp/>to<sp/>find<sp/>out<sp/>who<sp/>will<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>,<sp/>1,<sp/><ref refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" kindref="member">deciderProc</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" kindref="member">coordinatorTag</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;std::deque&lt;int&gt;<sp/>&gt;<sp/>procsToWrite(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>[fileNumber](procsToWriteToFileNumber)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>populate<sp/>with<sp/>the<sp/>static<sp/>nfiles<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>procSet(<ref refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" kindref="member">WhichSetPosition</ref>(i,<sp/>nProcs,<sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFileNumber(<ref refid="classamrex_1_1NFilesIter_1aad4c1bc1d99aa619064cdf4ea8c7a12e" kindref="member">NFilesIter::FileNumber</ref>(<ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/>i,<sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>procSet<sp/>==<sp/>0<sp/>have<sp/>already<sp/>written<sp/>their<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(procSet<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[whichFileNumber].push_back(i);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" kindref="member">remainingWriters</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(procSet<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procsToWrite[whichFileNumber].push_back(i);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>signal<sp/>each<sp/>remaining<sp/>processor<sp/>when<sp/>to<sp/>write<sp/>and<sp/>to<sp/>which<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>availableFileNumbers;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableFileNumbers.insert(<ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>coordinators<sp/>file<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>recv<sp/>incoming<sp/>available<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" kindref="member">remainingWriters</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextProcToWrite(-1),<sp/>nextFileNumberToWrite,<sp/>nextFileNumberAvailable;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;int&gt;::iterator<sp/>ait<sp/>=<sp/>availableFileNumbers.begin();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextFileNumberToWrite<sp/>=<sp/>*ait;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableFileNumbers.erase(nextFileNumberToWrite);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfn(0);<sp/>nfn<sp/>&lt;<sp/>procsToWrite.size();<sp/>++nfn)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>start<sp/>with<sp/>the<sp/>current<sp/>next<sp/>file<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>get<sp/>a<sp/>proc<sp/>from<sp/>another<sp/>file<sp/>number<sp/>if<sp/>the<sp/>queue<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempNFN((nextFileNumberToWrite<sp/>+<sp/>nfn)<sp/>%<sp/>procsToWrite.size());</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(procsToWrite[tempNFN].<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextProcToWrite<sp/>=<sp/>procsToWrite[tempNFN].front();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procsToWrite[tempNFN].pop_front();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>found<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nextProcToWrite<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" kindref="member">remainingWriters</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Print()<sp/>&lt;&lt;<sp/>myProc<sp/>&lt;&lt;<sp/>&quot;::IOIOIOIO:<sp/><sp/>nptw<sp/>==<sp/>-1<sp/><sp/>rW<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>remainingWriters<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[nextFileNumberToWrite].push_back(nextProcToWrite);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;nextFileNumberToWrite,<sp/>1,<sp/>nextProcToWrite,<sp/><ref refid="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" kindref="member">writeTag</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmess<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;nextFileNumberAvailable,<sp/>1,<sp/>MPI_ANY_SOURCE,<sp/><ref refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" kindref="member">doneTag</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableFileNumbers.insert(nextFileNumberAvailable);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" kindref="member">remainingWriters</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" kindref="member">unreadMessages</ref>.push_back(std::make_pair(<ref refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" kindref="member">doneTag</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" kindref="member">setZeroProcs</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>tell<sp/>the<sp/>coordinatorProc<sp/>we<sp/>are<sp/>done<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/>1,<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" kindref="member">doneTag</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>the<sp/>deciderProc<sp/>drops<sp/>through<sp/>to<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.flush();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>signal<sp/>we<sp/>are<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(&amp;<ref refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" kindref="member">fileNumber</ref>,<sp/>1,<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>,<sp/><ref refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" kindref="member">doneTag</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" kindref="member">isReading</ref>)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" kindref="member">finishedReading</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.flush();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.close();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" kindref="member">finishedWriting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">std::streampos<sp/><ref refid="classamrex_1_1NFilesIter_1a66c78163b811ad78cb91330d0100cc54" kindref="member">NFilesIter::SeekPos</ref>()<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" kindref="member">fileStream</ref>.tellp();</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a0a8de2ff506c69fd9d2165fe0f294100" kindref="member">NFilesIter::CheckNFiles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nProcs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" kindref="member">nOutFiles</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" kindref="member">groupSets</ref>)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>fileNumbers;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" kindref="member">nProcs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileNumbers.insert(<ref refid="classamrex_1_1NFilesIter_1aad4c1bc1d99aa619064cdf4ea8c7a12e" kindref="member">FileNumber</ref>(nOutFiles,<sp/>i,<sp/>groupSets));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>amrex::Print()<sp/>&lt;&lt;<sp/>&quot;nOutFiles<sp/>fileNumbers.size()<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>nOutFiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>fileNumbers.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nOutFiles<sp/>!=<sp/>static_cast&lt;int&gt;(fileNumbers.size()))<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>amrex::Print()<sp/>&lt;&lt;<sp/>&quot;****<sp/>Different<sp/>number<sp/>of<sp/>files.&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">Vector&lt;int&gt;<sp/><ref refid="classamrex_1_1NFilesIter_1a071c4306e5a102244c1461684ab17cf5" kindref="member">NFilesIter::FileNumbersWritten</ref>()</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>Vector&lt;int&gt;<sp/>fileNumbersWritten(nProcs,<sp/>-1);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" kindref="member">myProc</ref><sp/>==<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total(0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>procSet;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f(0);<sp/>f<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.size();<sp/>++f)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[f].size();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r(0);<sp/>r<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[f].size();<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procSet.insert(<ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[f][r]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(total<sp/>!=<sp/>nProcs<sp/>||<sp/>static_cast&lt;int&gt;(procSet.size())<sp/>!=<sp/>nProcs)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Error<sp/>in<sp/>NFilesIter::FileNumbersWritten():<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>coordinatorProc<sp/>nProcs<sp/>total<sp/>procSet.size()<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" kindref="member">coordinatorProc</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nProcs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>total<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>procSet.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f(0);<sp/>f<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>.size();<sp/>++f)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r(0);<sp/>r<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[f].size();<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNumbersWritten[<ref refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" kindref="member">fileNumbersWriteOrder</ref>[f][r]]<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileNumbersWritten;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1NFilesIter_1aa0c0e9a50f259bef6b3a1f2a932c65bc" kindref="member">NFilesIter::CleanUpMessages</ref>()<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;NFI::CleanUpMessages&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" kindref="member">unreadMessages</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>&amp;<sp/>pii<sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" kindref="member">unreadMessages</ref>[i];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fromProc,<sp/>tag(pii.first),<sp/>nMessages(pii.second);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::<sp/>cleaning<sp/>up<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nMessages</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>messages<sp/>for<sp/>tag<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tag<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n(0);<sp/>n<sp/>&lt;<sp/>nMessages;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(&amp;fromProc,<sp/>1,<sp/>MPI_ANY_SOURCE,<sp/>tag);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" kindref="member">unreadMessages</ref>.clear();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp"/>
  </compounddef>
</doxygen>
