<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1Gpu_1_1Elixir" kind="class" language="C++" prot="public">
    <compoundname>amrex::Gpu::Elixir</compoundname>
    <includes refid="AMReX__GpuElixir_8H" local="no">AMReX_GpuElixir.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1Elixir_1a79be11c3b6a009d4aaefb3fd9db6b227" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* amrex::Gpu::Elixir::m_p</definition>
        <argsstring></argsstring>
        <name>m_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="42" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1Elixir_1ab65cbf8729c0a623e2d80caba9df2c5a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::Gpu::Elixir::m_arena</definition>
        <argsstring></argsstring>
        <name>m_arena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1a804749719bfa9c68aedcdd7ab6b8978d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::Elixir::Elixir</definition>
        <argsstring>() noexcept</argsstring>
        <name>Elixir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="14" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1a62d8be14e66b536bcadc7689658054db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::Elixir::Elixir</definition>
        <argsstring>(void *p, Arena *arena) noexcept</argsstring>
        <name>Elixir</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1afbafbee2ae0733e7b642416a6c0e1d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::Elixir::Elixir</definition>
        <argsstring>(Elixir const &amp;)=delete</argsstring>
        <name>Elixir</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1Elixir" kindref="compound">Elixir</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1a7ec3927c67b784fb0c2ef24751468766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Elixir::operator=</definition>
        <argsstring>(Elixir const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1Elixir" kindref="compound">Elixir</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1a73116015261623afc75de5846c536d60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::Elixir::Elixir</definition>
        <argsstring>(Elixir &amp;&amp;rhs) noexcept</argsstring>
        <name>Elixir</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1Elixir" kindref="compound">Elixir</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1af79e02ec3b0398a363792fb05f8fdada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Elixir::operator=</definition>
        <argsstring>(Elixir &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1Elixir" kindref="compound">Elixir</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1aaf8c50c534f3c06f0b7adf47ca0944f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::Elixir::~Elixir</definition>
        <argsstring>()</argsstring>
        <name>~Elixir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Elixir_1a6b4d08e1329afbce2ced6dd65acd9bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Elixir::clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="39" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.cpp" bodystart="38" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1207">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1206">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="1207" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="1205">
        <label>amrex::Gpu::Elixir</label>
        <link refid="classamrex_1_1Gpu_1_1Elixir"/>
        <childnode refid="1206" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" line="11" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuElixir.H" bodystart="10" bodyend="44"/>
    <listofallmembers>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1a6b4d08e1329afbce2ced6dd65acd9bec" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>clear</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1a804749719bfa9c68aedcdd7ab6b8978d" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1a62d8be14e66b536bcadc7689658054db" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1afbafbee2ae0733e7b642416a6c0e1d95" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1a73116015261623afc75de5846c536d60" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1ab65cbf8729c0a623e2d80caba9df2c5a" prot="private" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>m_arena</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1a79be11c3b6a009d4aaefb3fd9db6b227" prot="private" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>m_p</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1a7ec3927c67b784fb0c2ef24751468766" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1af79e02ec3b0398a363792fb05f8fdada" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Gpu_1_1Elixir_1aaf8c50c534f3c06f0b7adf47ca0944f3" prot="public" virt="non-virtual"><scope>amrex::Gpu::Elixir</scope><name>~Elixir</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
