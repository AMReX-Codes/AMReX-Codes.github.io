<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="AMReX__Parser__Y_8H" kind="file" language="C++">
    <compoundname>AMReX_Parser_Y.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__GpuQualifiers_8H" local="no">AMReX_GpuQualifiers.H</includes>
    <includes refid="AMReX__GpuPrint_8H" local="no">AMReX_GpuPrint.H</includes>
    <includes refid="AMReX__Math_8H" local="no">AMReX_Math.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <includes refid="AMReX__REAL_8H" local="no">AMReX_REAL.H</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includes local="no">string_view</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="amrex__parser_8lex_8nolint_8H" local="yes">/home/runner/work/amrex/amrex/Src/Base/Parser/amrex_parser.lex.nolint.H</includedby>
    <includedby refid="amrex__parser_8tab_8nolint_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/Parser/amrex_parser.tab.nolint.H</includedby>
    <includedby refid="AMReX__Parser__Exe_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H</includedby>
    <includedby refid="AMReX__Parser__Y_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp</includedby>
    <incdepgraph>
      <node id="58">
        <label>atomic</label>
      </node>
      <node id="36">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>iomanip</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="50">
        <label>AMReX_ValLocPair.H</label>
        <link refid="AMReX__ValLocPair_8H"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>limits</label>
      </node>
      <node id="48">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>float.h</label>
      </node>
      <node id="26">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>cstdint</label>
      </node>
      <node id="25">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>cassert</label>
      </node>
      <node id="34">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>numeric</label>
      </node>
      <node id="49">
        <label>AMReX_GpuComplex.H</label>
        <link refid="AMReX__GpuComplex_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="62">
        <label>AMReX_ANSIEscCode.H</label>
        <link refid="AMReX__ANSIEscCode_8H"/>
      </node>
      <node id="3">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>fstream</label>
      </node>
      <node id="29">
        <label>limits.h</label>
      </node>
      <node id="31">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>string_view</label>
      </node>
      <node id="7">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>typeinfo</label>
      </node>
      <node id="4">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="5">
        <label>cstdio</label>
      </node>
      <node id="56">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>stack</label>
      </node>
      <node id="23">
        <label>vector</label>
      </node>
      <node id="11">
        <label>utility</label>
      </node>
      <node id="51">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>array</label>
      </node>
      <node id="57">
        <label>sstream</label>
      </node>
      <node id="27">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.H</label>
        <link refid="AMReX__Parser__Y_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>iosfwd</label>
      </node>
      <node id="9">
        <label>cstdlib</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>cstddef</label>
      </node>
      <node id="53">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>climits</label>
      </node>
      <node id="59">
        <label>csignal</label>
      </node>
      <node id="6">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="67">
        <label>set</label>
      </node>
      <node id="38">
        <label>algorithm</label>
      </node>
      <node id="66">
        <label>cstring</label>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="28">
        <label>inttypes.h</label>
      </node>
      <node id="43">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/amrex_parser.lex.cpp</label>
        <link refid="amrex__parser_8lex_8cpp"/>
      </node>
      <node id="12">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.cpp</label>
        <link refid="AMReX__Parser__Exe_8cpp"/>
      </node>
      <node id="10">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="5">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/amrex_parser.tab.cpp</label>
        <link refid="amrex__parser_8tab_8cpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/amrex_parser.lex.nolint.H</label>
        <link refid="amrex__parser_8lex_8nolint_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="13">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp</label>
        <link refid="AMReX__Parser__Y_8cpp"/>
      </node>
      <node id="7">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H</label>
        <link refid="AMReX__Parser_8H"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.H</label>
        <link refid="AMReX__Parser__Y_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Parser.H</label>
        <link refid="AMReX__EB2__IF__Parser_8H"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp</label>
        <link refid="AMReX__Parser_8cpp"/>
      </node>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/amrex_parser.tab.nolint.H</label>
        <link refid="amrex__parser_8tab_8nolint_8H"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H</label>
        <link refid="AMReX__Parser__Exe_8H"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1parser__node" prot="public">amrex::parser_node</innerclass>
    <innerclass refid="structamrex_1_1parser__number" prot="public">amrex::parser_number</innerclass>
    <innerclass refid="structamrex_1_1parser__symbol" prot="public">amrex::parser_symbol</innerclass>
    <innerclass refid="structamrex_1_1parser__f1" prot="public">amrex::parser_f1</innerclass>
    <innerclass refid="structamrex_1_1parser__f2" prot="public">amrex::parser_f2</innerclass>
    <innerclass refid="structamrex_1_1parser__f3" prot="public">amrex::parser_f3</innerclass>
    <innerclass refid="structamrex_1_1parser__assign" prot="public">amrex::parser_assign</innerclass>
    <innerclass refid="structamrex_1_1amrex__parser" prot="public">amrex::amrex_parser</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__Parser__Y_8H_1ab76fb0f384d4c8daa7bda6aa6f55aba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_parsererror</definition>
        <argsstring>(char const *s,...)</argsstring>
        <name>amrex_parsererror</name>
        <param>
          <type>char const *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.H" line="20" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="10" bodyend="18" declfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.H" declline="20" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARSER_Y_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARSER_Y_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuQualifiers_8H" kindref="compound">AMReX_GpuQualifiers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuPrint_8H" kindref="compound">AMReX_GpuPrint.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Math_8H" kindref="compound">AMReX_Math.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__REAL_8H" kindref="compound">AMReX_REAL.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__Parser__Y_8H_1ab76fb0f384d4c8daa7bda6aa6f55aba9" kindref="member">amrex_parsererror</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*s,<sp/>...);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" kindref="member">parser_f1_t</ref><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Built-in<sp/>functions<sp/>with<sp/>one<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a3fb34ef0b3bf8980039c8b7938964511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a3fb34ef0b3bf8980039c8b7938964511" kindref="member">PARSER_SQRT</ref>,</highlight></codeline>
<codeline lineno="26" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a5659297c786f4248f15bf8990826f06c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a5659297c786f4248f15bf8990826f06c" kindref="member">PARSER_EXP</ref>,</highlight></codeline>
<codeline lineno="27" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a6d472fc8669b810eccc4c8ccfaf4c1d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a6d472fc8669b810eccc4c8ccfaf4c1d6" kindref="member">PARSER_LOG</ref>,</highlight></codeline>
<codeline lineno="28" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af1f083ccd600c4f36a89b024f39f62d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af1f083ccd600c4f36a89b024f39f62d0" kindref="member">PARSER_LOG10</ref>,</highlight></codeline>
<codeline lineno="29" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a723f6e0a6ed9422b505ce4ea722a9242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a723f6e0a6ed9422b505ce4ea722a9242" kindref="member">PARSER_SIN</ref>,</highlight></codeline>
<codeline lineno="30" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a146c14c8d7badfe1adbfa704245f686e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a146c14c8d7badfe1adbfa704245f686e" kindref="member">PARSER_COS</ref>,</highlight></codeline>
<codeline lineno="31" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a45e9ea1f41504ce7c2d125cc59fa08ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a45e9ea1f41504ce7c2d125cc59fa08ea" kindref="member">PARSER_TAN</ref>,</highlight></codeline>
<codeline lineno="32" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ab1139ce456ce4f10e58ddb98628a9e67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ab1139ce456ce4f10e58ddb98628a9e67" kindref="member">PARSER_ASIN</ref>,</highlight></codeline>
<codeline lineno="33" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a4bb2d123de0d48093170da3df9163321" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a4bb2d123de0d48093170da3df9163321" kindref="member">PARSER_ACOS</ref>,</highlight></codeline>
<codeline lineno="34" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589adcff340768238477e235ec55d511e0ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589adcff340768238477e235ec55d511e0ac" kindref="member">PARSER_ATAN</ref>,</highlight></codeline>
<codeline lineno="35" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af9f5e87ccf73aa564cab896e5737f3f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af9f5e87ccf73aa564cab896e5737f3f2" kindref="member">PARSER_SINH</ref>,</highlight></codeline>
<codeline lineno="36" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a1c44c6c982e5f5394b02f66a59cbcbf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a1c44c6c982e5f5394b02f66a59cbcbf0" kindref="member">PARSER_COSH</ref>,</highlight></codeline>
<codeline lineno="37" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0e8b5d96d71e43edef0273b7e86277ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0e8b5d96d71e43edef0273b7e86277ee" kindref="member">PARSER_TANH</ref>,</highlight></codeline>
<codeline lineno="38" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0168c8658e4afe3e386ce0bfe8a3fc83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0168c8658e4afe3e386ce0bfe8a3fc83" kindref="member">PARSER_ASINH</ref>,</highlight></codeline>
<codeline lineno="39" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af07f7cbfe5ca616030f0f25c9a7bf167" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af07f7cbfe5ca616030f0f25c9a7bf167" kindref="member">PARSER_ACOSH</ref>,</highlight></codeline>
<codeline lineno="40" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a54156fc39786dde748a8721d4a9ed0ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a54156fc39786dde748a8721d4a9ed0ed" kindref="member">PARSER_ATANH</ref>,</highlight></codeline>
<codeline lineno="41" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ae01afc57c89c498c5363a6be1fd64eab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ae01afc57c89c498c5363a6be1fd64eab" kindref="member">PARSER_ABS</ref>,</highlight></codeline>
<codeline lineno="42" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af4ebc6b2c539f7e888d719bab325461d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af4ebc6b2c539f7e888d719bab325461d" kindref="member">PARSER_FLOOR</ref>,</highlight></codeline>
<codeline lineno="43" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589abacc88377d1f207fe9d1aab1cdfbbaa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589abacc88377d1f207fe9d1aab1cdfbbaa5" kindref="member">PARSER_CEIL</ref>,</highlight></codeline>
<codeline lineno="44" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a396843df4fbe8fdc7fb395e61f7fcbf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a396843df4fbe8fdc7fb395e61f7fcbf5" kindref="member">PARSER_COMP_ELLINT_1</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a43db7cb27778d6ef769014bcf7d9825e" kindref="member">PARSER_COMP_ELLINT_2</ref></highlight></codeline>
<codeline lineno="46" refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a43db7cb27778d6ef769014bcf7d9825e" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)<sp/>&amp;&amp;<sp/>defined(__EDG__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespaceamrex_1aeaf83c12cb19017e55b62be15d3f4369" refkind="member"><highlight class="normal">std::string_view<sp/><ref refid="namespaceamrex_1aeaf83c12cb19017e55b62be15d3f4369" kindref="member">parser_f1_s</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sqrt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;log&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;log10&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sin&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cos&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tan&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;asin&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;acos&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;atan&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sinh&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cosh&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tanh&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;asinh&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;acosh&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;atanh&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;abs&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;floor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ceil&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;comp_ellint_1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;comp_ellint_2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Built-in<sp/>functions<sp/>with<sp/>two<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca7b172eaccc69212b5526d8a1675b2399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca7b172eaccc69212b5526d8a1675b2399" kindref="member">PARSER_POW</ref>,</highlight></codeline>
<codeline lineno="81" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4426cecc68dbdc158b088f0cebfb79a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4426cecc68dbdc158b088f0cebfb79a7" kindref="member">PARSER_ATAN2</ref>,</highlight></codeline>
<codeline lineno="82" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabbb10d89f09bab7d5aa1b256c361fe4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabbb10d89f09bab7d5aa1b256c361fe4b" kindref="member">PARSER_GT</ref>,</highlight></codeline>
<codeline lineno="83" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca27a45d5e1783028fbc362d8e4f35d752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca27a45d5e1783028fbc362d8e4f35d752" kindref="member">PARSER_LT</ref>,</highlight></codeline>
<codeline lineno="84" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca627eafb93eb5cc55cc6f1bd716ee6461" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca627eafb93eb5cc55cc6f1bd716ee6461" kindref="member">PARSER_GEQ</ref>,</highlight></codeline>
<codeline lineno="85" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4d0e5b2b972b4bf0ffa84bb373ec9c77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4d0e5b2b972b4bf0ffa84bb373ec9c77" kindref="member">PARSER_LEQ</ref>,</highlight></codeline>
<codeline lineno="86" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcae7a9987ba06f3e22647b6455a894d954" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcae7a9987ba06f3e22647b6455a894d954" kindref="member">PARSER_EQ</ref>,</highlight></codeline>
<codeline lineno="87" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3a1729e1b576ae7d414ae6ba76c3b194" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3a1729e1b576ae7d414ae6ba76c3b194" kindref="member">PARSER_NEQ</ref>,</highlight></codeline>
<codeline lineno="88" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca2d8f7fc88d138e332180438e1171ee57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca2d8f7fc88d138e332180438e1171ee57" kindref="member">PARSER_AND</ref>,</highlight></codeline>
<codeline lineno="89" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3b65381fef1e4a480813955566ac6224" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3b65381fef1e4a480813955566ac6224" kindref="member">PARSER_OR</ref>,</highlight></codeline>
<codeline lineno="90" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcacb0b84f852fe36fbb6ffafd2455f9644" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcacb0b84f852fe36fbb6ffafd2455f9644" kindref="member">PARSER_HEAVISIDE</ref>,</highlight></codeline>
<codeline lineno="91" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcaace05cc3a245149a82643a976e7e139a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcaace05cc3a245149a82643a976e7e139a" kindref="member">PARSER_JN</ref>,</highlight></codeline>
<codeline lineno="92" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcab15097a6b28d7658374164aa5eabf155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcab15097a6b28d7658374164aa5eabf155" kindref="member">PARSER_MIN</ref>,</highlight></codeline>
<codeline lineno="93" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabc0c26e39e66ba16b2fa97b76c9dae35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabc0c26e39e66ba16b2fa97b76c9dae35" kindref="member">PARSER_MAX</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcac75e51f4689c58f1e203db343bf3fdd8" kindref="member">PARSER_FMOD</ref></highlight></codeline>
<codeline lineno="95" refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcac75e51f4689c58f1e203db343bf3fdd8" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)<sp/>&amp;&amp;<sp/>defined(__EDG__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespaceamrex_1ae56e28f5753ecf0f394683c95ef2303f" refkind="member"><highlight class="normal">std::string_view<sp/><ref refid="namespaceamrex_1ae56e28f5753ecf0f394683c95ef2303f" kindref="member">parser_f2_s</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pow&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;atan2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;gt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;geq&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;leq&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;eq&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;neq&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;or&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;heaviside&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;jn&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fmod&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051b" kindref="member">parser_f3_t</ref><sp/>{<sp/></highlight><highlight class="comment">//<sp/>functions<sp/>with<sp/>three<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051ba8ecdd6c594b2624b8d56c95e2e48d836" kindref="member">PARSER_IF</ref></highlight></codeline>
<codeline lineno="124" refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051ba8ecdd6c594b2624b8d56c95e2e48d836" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)<sp/>&amp;&amp;<sp/>defined(__EDG__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="namespaceamrex_1a6ce73c7041e01915b29e6be148bad28d" refkind="member"><highlight class="normal">std::string_view<sp/><ref refid="namespaceamrex_1a6ce73c7041e01915b29e6be148bad28d" kindref="member">parser_f3_s</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;if&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>{</highlight></codeline>
<codeline lineno="138" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>,</highlight></codeline>
<codeline lineno="139" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>,</highlight></codeline>
<codeline lineno="140" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>,</highlight></codeline>
<codeline lineno="141" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>,</highlight></codeline>
<codeline lineno="142" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>,</highlight></codeline>
<codeline lineno="143" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>,</highlight></codeline>
<codeline lineno="144" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>,</highlight></codeline>
<codeline lineno="145" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>,</highlight></codeline>
<codeline lineno="146" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>,</highlight></codeline>
<codeline lineno="147" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref></highlight></codeline>
<codeline lineno="149" refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)<sp/>&amp;&amp;<sp/>defined(__EDG__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="namespaceamrex_1a8c0892ef7e1f02a2857500ab15a932ab" refkind="member"><highlight class="normal">std::string_view<sp/><ref refid="namespaceamrex_1a8c0892ef7e1f02a2857500ab15a932ab" kindref="member">parser_node_s</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sub&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mul&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;f1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;f2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;f3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;assign&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>C,<sp/>the<sp/>address<sp/>of<sp/>the<sp/>first<sp/>member<sp/>of<sp/>a<sp/>struct<sp/>is<sp/>the<sp/>same<sp/>as</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>the<sp/>address<sp/>of<sp/>the<sp/>struct<sp/>itself.<sp/><sp/>Because<sp/>of<sp/>this,<sp/>all<sp/>struct<sp/>parser_*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>pointers<sp/>can<sp/>be<sp/>passed<sp/>around<sp/>as<sp/>struct<sp/>parser_node<sp/>pointer<sp/>and<sp/>enum</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>parser_node_t<sp/>type<sp/>can<sp/>be<sp/>safely<sp/>checked<sp/>to<sp/>determine<sp/>their<sp/>real<sp/>type.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structamrex_1_1parser__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/><ref refid="structamrex_1_1parser__node_1aee9093898e53fbeba75eb636c9ef99e1" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/><ref refid="structamrex_1_1parser__node_1a8ef1e0a0d45c614776931b35f889cabb" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="181" refid="structamrex_1_1parser__node_1a3a9f4a4402fe7b5d744bf67fa9d0d21d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__node_1a3a9f4a4402fe7b5d744bf67fa9d0d21d" kindref="member">l</ref>;<sp/></highlight><highlight class="comment">//<sp/>NOLINT(misc-confusable-identifiers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="structamrex_1_1parser__node_1aeb2f3f6f5f90a7cc9843357edecb2538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__node_1aeb2f3f6f5f90a7cc9843357edecb2538" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="183" refid="structamrex_1_1parser__node_1a442ba0b8c233cb21caf93f28f62ab8f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__node_1a442ba0b8c233cb21caf93f28f62ab8f3" kindref="member">padding2</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structamrex_1_1parser__number" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">alignas(parser_node)<sp/><ref refid="structamrex_1_1parser__number" kindref="compound">parser_number</ref><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type;</highlight></codeline>
<codeline lineno="188" refid="structamrex_1_1parser__symbol_1a8b935e5014acf16b10e6b98c79de3054" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structamrex_1_1parser__symbol" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">alignas(parser_node)<sp/><ref refid="structamrex_1_1parser__symbol" kindref="compound">parser_symbol</ref><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type;</highlight></codeline>
<codeline lineno="193" refid="structamrex_1_1parser__symbol_1a36d42d12dc34e9e1a3321c27539bb34d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structamrex_1_1parser__symbol_1a36d42d12dc34e9e1a3321c27539bb34d" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="194" refid="structamrex_1_1parser__f1_1aaf0d2b037f4bfd9b5216a0a799dcfbf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structamrex_1_1parser__f1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">alignas(parser_node)<sp/><ref refid="structamrex_1_1parser__f1" kindref="compound">parser_f1</ref><sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>Builtin<sp/>functions<sp/>with<sp/>one<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" kindref="member">parser_f1_t</ref><sp/>ftype;</highlight></codeline>
<codeline lineno="200" refid="structamrex_1_1parser__f1_1a5f6ec2dfb5d293ac8210bb51f2e27467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f1_1a5f6ec2dfb5d293ac8210bb51f2e27467" kindref="member">l</ref>;<sp/></highlight><highlight class="comment">//<sp/>NOLINT(misc-confusable-identifiers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structamrex_1_1parser__f1_1a56862a7eca53a21d4305af60bef4f4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f1_1a56862a7eca53a21d4305af60bef4f4f6" kindref="member">padding1</ref>;</highlight></codeline>
<codeline lineno="202" refid="structamrex_1_1parser__f2_1a64c4972956d99a93eae3ded417a94e74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>padding2;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structamrex_1_1parser__f2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">alignas(parser_node)<sp/><ref refid="structamrex_1_1parser__f2" kindref="compound">parser_f2</ref><sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>Builtin<sp/>functions<sp/>with<sp/>two<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/>ftype;</highlight></codeline>
<codeline lineno="208" refid="structamrex_1_1parser__f2_1a061f4a9f63618c8b77ff0af074dc4659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f2_1a061f4a9f63618c8b77ff0af074dc4659" kindref="member">l</ref>;<sp/></highlight><highlight class="comment">//<sp/>NOLINT(misc-confusable-identifiers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structamrex_1_1parser__f2_1a3d6eae5bbd75c46a06b38a40d6978ba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f2_1a3d6eae5bbd75c46a06b38a40d6978ba6" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="210" refid="structamrex_1_1parser__f3_1af480e24f7880857ba4ee5710e1e2f823" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>padding;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="structamrex_1_1parser__f3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">alignas(parser_node)<sp/><ref refid="structamrex_1_1parser__f3" kindref="compound">parser_f3</ref><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Builtin<sp/>functions<sp/>with<sp/>three<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051b" kindref="member">parser_f3_t</ref><sp/>ftype;</highlight></codeline>
<codeline lineno="216" refid="structamrex_1_1parser__f3_1a6caf5b36a9f8beace196c5072f325928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f3_1a6caf5b36a9f8beace196c5072f325928" kindref="member">n1</ref>;</highlight></codeline>
<codeline lineno="217" refid="structamrex_1_1parser__f3_1a9c0e8a7d413bf12c7adc9cfb9159da53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f3_1a9c0e8a7d413bf12c7adc9cfb9159da53" kindref="member">n2</ref>;</highlight></codeline>
<codeline lineno="218" refid="structamrex_1_1parser__f3_1a62f9b0134e9c4f6d0019a249f4dc9017" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__f3_1a62f9b0134e9c4f6d0019a249f4dc9017" kindref="member">n3</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="structamrex_1_1parser__assign" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">alignas(parser_node)<sp/><ref refid="structamrex_1_1parser__assign" kindref="compound">parser_assign</ref><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type;</highlight></codeline>
<codeline lineno="223" refid="structamrex_1_1parser__assign_1a879a0faae6497e8e45702c6a99625c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__symbol" kindref="compound">parser_symbol</ref>*<sp/><ref refid="structamrex_1_1parser__assign_1a879a0faae6497e8e45702c6a99625c74" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="224" refid="structamrex_1_1parser__assign_1a8133d36cbf6dcb6aca392217ee6a90e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1parser__assign_1a8133d36cbf6dcb6aca392217ee6a90e5" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1parser__f3" kindref="compound">parser_f3</ref>)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;amrex<sp/>parser:<sp/>sizeof<sp/>parser_node<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>functions<sp/>are<sp/>used<sp/>in<sp/>bison<sp/>rules<sp/>to<sp/>generate<sp/>the<sp/>original<sp/>AST.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad611b2a5542fba47b36125c772d02700" kindref="member">parser_defexpr</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>body);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__symbol" kindref="compound">parser_symbol</ref>*<sp/><ref refid="namespaceamrex_1ae51f56e5de666bd486e02809fb95826a" kindref="member">parser_makesymbol</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1a54e375fb078fbde3c46609319674551f" kindref="member">parser_newnode</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>l,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>r);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1a59fa51e57d91b3fde27a4ee69d81b584" kindref="member">parser_newneg</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>n);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1af52966118e944ed96c7d6ed24c08d837" kindref="member">parser_newnumber</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1ad839d03442a4323dfb7b2b9578b6b9fd" kindref="member">parser_newsymbol</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__symbol" kindref="compound">parser_symbol</ref>*<sp/>sym);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1af7520cc9fa8b9a8de8e845d02b75db77" kindref="member">parser_newf1</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" kindref="member">parser_f1_t</ref><sp/>ftype,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>l);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1a1a35a66f1f45aa77d0be9afe8def5501" kindref="member">parser_newf2</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/>ftype,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>l,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>r);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1a6762c0fee754bd1ce564f76ef81253b6" kindref="member">parser_newf3</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051b" kindref="member">parser_f3_t</ref><sp/>ftype,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>n1,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>n2,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>n3);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1a63cdcee7f7165d07558abfd490a3cf8f" kindref="member">parser_newassign</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__symbol" kindref="compound">parser_symbol</ref>*<sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>v);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1af77166ee4bf8e84e0628c8d6ef96f055" kindref="member">parser_newlist</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>nl,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>nr);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>our<sp/>struct<sp/>for<sp/>storing<sp/>AST<sp/>in<sp/>a<sp/>more<sp/>packed<sp/>way.<sp/><sp/>The<sp/>whole</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>tree<sp/>is<sp/>stored<sp/>in<sp/>a<sp/>contiguous<sp/>chunk<sp/>of<sp/>memory<sp/>starting<sp/>from<sp/>void*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>p_root<sp/>with<sp/>a<sp/>size<sp/>of<sp/>sz_mempool.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="structamrex_1_1amrex__parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref><sp/>{</highlight></codeline>
<codeline lineno="254" refid="structamrex_1_1amrex__parser_1a45522f4f5f94f1bb374baddefd0a9530" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structamrex_1_1amrex__parser_1a45522f4f5f94f1bb374baddefd0a9530" kindref="member">p_root</ref>;</highlight></codeline>
<codeline lineno="255" refid="structamrex_1_1amrex__parser_1a9f312ddc4d9aa46a1bf3856152d01b16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structamrex_1_1amrex__parser_1a9f312ddc4d9aa46a1bf3856152d01b16" kindref="member">p_free</ref>;</highlight></codeline>
<codeline lineno="256" refid="structamrex_1_1amrex__parser_1afc9a6bd1b3b65c88f2ff997308922b16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="structamrex_1_1amrex__parser_1afc9a6bd1b3b65c88f2ff997308922b16" kindref="member">ast</ref>;</highlight></codeline>
<codeline lineno="257" refid="structamrex_1_1amrex__parser_1af0acb0644812be5dc5a7c0d1a116e8f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structamrex_1_1amrex__parser_1af0acb0644812be5dc5a7c0d1a116e8f3" kindref="member">sz_mempool</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/><ref refid="namespaceamrex_1ae66dc6e64e2bbaeb5e33f845f1021f4f" kindref="member">amrex_parser_new</ref><sp/>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2f20d75c59ef143705ccaeaef9897c17" kindref="member">amrex_parser_delete</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/><ref refid="namespaceamrex_1af09002432ee048d8be86ce24cac1b230" kindref="member">parser_dup</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>source);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>move);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2287c28084a10ac6a9cfb4b2a50892fc" kindref="member">parser_regvar</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4051597b502fed03ea3b07d5f6cbb042" kindref="member">parser_setconst</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a53d306308d380a6d874ad24396fa7673" kindref="member">parser_print</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">std::set&lt;std::string&gt;<sp/><ref refid="namespaceamrex_1aa4683ef8db99a703c386785fc95e1d29" kindref="member">parser_get_symbols</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a511dc2f5222b878782000339b1858f3c" kindref="member">parser_depth</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>walk<sp/>the<sp/>tree<sp/>in<sp/>these<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">std::size_t<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a87c0a8afac2fbe12cb2ac48e663ed0d6" kindref="member">parser_ast_print</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>space,<sp/>std::ostream&amp;<sp/>printer);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae1d40846503356e1e1201c614163ea54" kindref="member">parser_ast_get_symbols</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node,<sp/>std::set&lt;std::string&gt;&amp;<sp/>symbols,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;&amp;<sp/>local_symbols);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3519067af5edf22a956910ef7ee7ce47" kindref="member">parser_ast_sort</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a953b2c149c67e1e516421d279f2fc22a" kindref="member">parser_get_number</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a031546532f5b81bd867039b219562b95" kindref="member">parser_set_number</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aaa47ebc7570db6460238b4a73824c682" kindref="member">parser_node_equal</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>a,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1parser__node" kindref="compound">parser_node</ref>*<sp/>b);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="291" refid="namespaceamrex_1a8f3d6e0107012526c3465c75a12f5459" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a8f3d6e0107012526c3465c75a12f5459" kindref="member">parser_math_exp</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad7188a3015dcffc0938b6cb74def1c7f" kindref="member">std::exp</ref>(a);<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="295" refid="namespaceamrex_1aba3dcfe04cce2c0ea7fdbe3b2ed9e87a" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1aba3dcfe04cce2c0ea7fdbe3b2ed9e87a" kindref="member">parser_math_log</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a377e86dc25bb181be031ad2f80cb2984" kindref="member">std::log</ref>(a);<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="299" refid="namespaceamrex_1aaa7d9660ad9a94bcb47fd4de04acd3a6" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1aaa7d9660ad9a94bcb47fd4de04acd3a6" kindref="member">parser_math_log10</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::log10(a);<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="303" refid="namespaceamrex_1a658f0f07d0553e3d21650fb5a198048e" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a658f0f07d0553e3d21650fb5a198048e" kindref="member">parser_math_sin</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sin(a);<sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="307" refid="namespaceamrex_1ad9c5d0a6539470f7560f822714b7c75b" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1ad9c5d0a6539470f7560f822714b7c75b" kindref="member">parser_math_cos</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cos(a);<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="311" refid="namespaceamrex_1a62570906aab0550c65f8a971dff0e58a" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a62570906aab0550c65f8a971dff0e58a" kindref="member">parser_math_tan</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tan(a);<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="315" refid="namespaceamrex_1a914656d851c249d6787f813ea09a6626" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a914656d851c249d6787f813ea09a6626" kindref="member">parser_math_asin</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::asin(a);<sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="319" refid="namespaceamrex_1aefee20e5a68eb0e134e5b8a25a45b4b4" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1aefee20e5a68eb0e134e5b8a25a45b4b4" kindref="member">parser_math_acos</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::acos(a);<sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="323" refid="namespaceamrex_1a2bd581231b46b3a5a62d99e00e743622" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a2bd581231b46b3a5a62d99e00e743622" kindref="member">parser_math_atan</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::atan(a);<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="327" refid="namespaceamrex_1a249f102bab7043232da73dcc4d33612e" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a249f102bab7043232da73dcc4d33612e" kindref="member">parser_math_sinh</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sinh(a);<sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="331" refid="namespaceamrex_1a22b01fd56b83bc1cad5dc2fb17b023b4" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a22b01fd56b83bc1cad5dc2fb17b023b4" kindref="member">parser_math_cosh</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cosh(a);<sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="335" refid="namespaceamrex_1aa087ffc694106cd11e7196bdb42b72a6" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1aa087ffc694106cd11e7196bdb42b72a6" kindref="member">parser_math_tanh</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tanh(a);<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="339" refid="namespaceamrex_1ad3f7885c55e5c6c0f671cace29421690" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1ad3f7885c55e5c6c0f671cace29421690" kindref="member">parser_math_asinh</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::asinh(a);<sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="343" refid="namespaceamrex_1ae08bf7de3948219b7c52cfb9e0a61a59" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1ae08bf7de3948219b7c52cfb9e0a61a59" kindref="member">parser_math_acosh</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::acosh(a);<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="347" refid="namespaceamrex_1ac9199cb52898d7f521ae0d291917866a" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1ac9199cb52898d7f521ae0d291917866a" kindref="member">parser_math_atanh</ref><sp/>(T<sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::atanh(a);<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="351" refid="namespaceamrex_1abec1b60762ebf83a7597d70c0e32aaa5" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1abec1b60762ebf83a7597d70c0e32aaa5" kindref="member">parser_math_comp_ellint_1</ref><sp/>(T<sp/>a)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__clang__)<sp/>&amp;&amp;<sp/>!defined(__CUDA_ARCH__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::comp_ellint_1(a);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(a);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;parser:<sp/>comp_ellint_1<sp/>only<sp/>supported<sp/>with<sp/>gcc<sp/>and<sp/>cpu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="364" refid="namespaceamrex_1a7f39381b8634177fe59bf13bc7769de8" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a7f39381b8634177fe59bf13bc7769de8" kindref="member">parser_math_comp_ellint_2</ref><sp/>(T<sp/>a)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__clang__)<sp/>&amp;&amp;<sp/>!defined(__CUDA_ARCH__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::comp_ellint_2(a);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(a);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;parser:<sp/>comp_ellint_2<sp/>only<sp/>supported<sp/>with<sp/>gcc<sp/>and<sp/>cpu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="377" refid="namespaceamrex_1aa73033601c86e80eaaefc3201cb140af" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1aa73033601c86e80eaaefc3201cb140af" kindref="member">parser_math_pow</ref><sp/>(T<sp/>a,<sp/>T<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aac289a1a554a6d1018603b5cd7fc8f9e" kindref="member">std::pow</ref>(a,b);<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="381" refid="namespaceamrex_1ae58842a73522988e8e20316c56e3c0b9" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1ae58842a73522988e8e20316c56e3c0b9" kindref="member">parser_math_atan2</ref><sp/>(T<sp/>a,<sp/>T<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::atan2(a,b);<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a5fddc549617b82ce5fc2b33aa9b6aa6f" kindref="member">AMREX_NO_INLINE</ref></highlight></codeline>
<codeline lineno="385" refid="namespaceamrex_1a43535087747b0d92f5e11040d600be5c" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1a43535087747b0d92f5e11040d600be5c" kindref="member">parser_math_jn</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/>T<sp/>b)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>AMREX_USE_SYCL<sp/>||<sp/>defined<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(a,b);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neither<sp/>jn(f)<sp/>nor<sp/>std::cyl_bessel_j<sp/>work<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/oneapi-src/oneAPI-spec/issues/308</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;parser:<sp/>jn<sp/>in<sp/>SYCL<sp/>not<sp/>supported<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jn(a,<sp/>b);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="namespaceamrex_1a28d9f515eaa0f8b6c464afd9e8e26839" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a28d9f515eaa0f8b6c464afd9e8e26839" kindref="member">parser_call_f1</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" kindref="member">parser_f1_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a3fb34ef0b3bf8980039c8b7938964511" kindref="member">PARSER_SQRT</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1afe1175c09892da177b5f5ecaf36936ab" kindref="member">std::sqrt</ref>(a);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a5659297c786f4248f15bf8990826f06c" kindref="member">PARSER_EXP</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_exp&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a6d472fc8669b810eccc4c8ccfaf4c1d6" kindref="member">PARSER_LOG</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_log&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af1f083ccd600c4f36a89b024f39f62d0" kindref="member">PARSER_LOG10</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_log10&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a723f6e0a6ed9422b505ce4ea722a9242" kindref="member">PARSER_SIN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_sin&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a146c14c8d7badfe1adbfa704245f686e" kindref="member">PARSER_COS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_cos&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a45e9ea1f41504ce7c2d125cc59fa08ea" kindref="member">PARSER_TAN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_tan&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ab1139ce456ce4f10e58ddb98628a9e67" kindref="member">PARSER_ASIN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_asin&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a4bb2d123de0d48093170da3df9163321" kindref="member">PARSER_ACOS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_acos&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589adcff340768238477e235ec55d511e0ac" kindref="member">PARSER_ATAN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_atan&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af9f5e87ccf73aa564cab896e5737f3f2" kindref="member">PARSER_SINH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_sinh&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a1c44c6c982e5f5394b02f66a59cbcbf0" kindref="member">PARSER_COSH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_cosh&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0e8b5d96d71e43edef0273b7e86277ee" kindref="member">PARSER_TANH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_tanh&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0168c8658e4afe3e386ce0bfe8a3fc83" kindref="member">PARSER_ASINH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_asinh&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af07f7cbfe5ca616030f0f25c9a7bf167" kindref="member">PARSER_ACOSH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_acosh&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a54156fc39786dde748a8721d4a9ed0ed" kindref="member">PARSER_ATANH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_atanh&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ae01afc57c89c498c5363a6be1fd64eab" kindref="member">PARSER_ABS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(a);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af4ebc6b2c539f7e888d719bab325461d" kindref="member">PARSER_FLOOR</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::floor(a);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589abacc88377d1f207fe9d1aab1cdfbbaa5" kindref="member">PARSER_CEIL</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::ceil(a);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a396843df4fbe8fdc7fb395e61f7fcbf5" kindref="member">PARSER_COMP_ELLINT_1</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_comp_ellint_1&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a43db7cb27778d6ef769014bcf7d9825e" kindref="member">PARSER_COMP_ELLINT_2</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_comp_ellint_2&lt;double&gt;(a);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_call_f1:<sp/>Unknown<sp/>function<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="namespaceamrex_1a9ad43c67a92cbfee740c7219dede60de" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a9ad43c67a92cbfee740c7219dede60de" kindref="member">parser_call_f2</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca7b172eaccc69212b5526d8a1675b2399" kindref="member">PARSER_POW</ref>:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_pow&lt;double&gt;(a,b);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4426cecc68dbdc158b088f0cebfb79a7" kindref="member">PARSER_ATAN2</ref>:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_atan2&lt;double&gt;(a,b);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabbb10d89f09bab7d5aa1b256c361fe4b" kindref="member">PARSER_GT</ref>:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>b)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca27a45d5e1783028fbc362d8e4f35d752" kindref="member">PARSER_LT</ref>:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>b)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca627eafb93eb5cc55cc6f1bd716ee6461" kindref="member">PARSER_GEQ</ref>:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>b)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4d0e5b2b972b4bf0ffa84bb373ec9c77" kindref="member">PARSER_LEQ</ref>:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;=<sp/>b)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcae7a9987ba06f3e22647b6455a894d954" kindref="member">PARSER_EQ</ref>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>b)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3a1729e1b576ae7d414ae6ba76c3b194" kindref="member">PARSER_NEQ</ref>:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>b)<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca2d8f7fc88d138e332180438e1171ee57" kindref="member">PARSER_AND</ref>:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a<sp/>!=<sp/>0.0)<sp/>&amp;&amp;<sp/>(b<sp/>!=<sp/>0.0))<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3b65381fef1e4a480813955566ac6224" kindref="member">PARSER_OR</ref>:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a<sp/>!=<sp/>0.0)<sp/>||<sp/>(b<sp/>!=<sp/>0.0))<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcacb0b84f852fe36fbb6ffafd2455f9644" kindref="member">PARSER_HEAVISIDE</ref>:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>0.0)<sp/>?<sp/>0.0<sp/>:<sp/>((a<sp/>&gt;<sp/>0.0)<sp/>?<sp/>1.0<sp/>:<sp/>b);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcaace05cc3a245149a82643a976e7e139a" kindref="member">PARSER_JN</ref>:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parser_math_jn&lt;double&gt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a),b);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcab15097a6b28d7658374164aa5eabf155" kindref="member">PARSER_MIN</ref>:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>b)<sp/>?<sp/>a<sp/>:<sp/>b;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabc0c26e39e66ba16b2fa97b76c9dae35" kindref="member">PARSER_MAX</ref>:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>b)<sp/>?<sp/>a<sp/>:<sp/>b;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcac75e51f4689c58f1e203db343bf3fdd8" kindref="member">PARSER_FMOD</ref>:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fmod(a,b);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_call_f2:<sp/>Unknown<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="structamrex_1_1parser__node_1a8ef1e0a0d45c614776931b35f889cabb" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ac8fc246b5e107c0247b09a8c97395063" kindref="member">parser_call_f3</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051b" kindref="member">parser_f3_t</ref><sp/></highlight><highlight class="comment">/*type*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>only<sp/>one<sp/>type<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>0.0)<sp/>?<sp/>b<sp/>:<sp/>c;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.H"/>
  </compounddef>
</doxygen>
