<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__IntConv_8cpp" kind="file" language="C++">
    <compoundname>AMReX_IntConv.cpp</compoundname>
    <includes refid="AMReX__IntConv_8H" local="yes">AMReX_IntConv.H</includes>
    <incdepgraph>
      <node id="32660">
        <label>functional</label>
      </node>
      <node id="32668">
        <label>float.h</label>
      </node>
      <node id="32641">
        <label>cstdint</label>
      </node>
      <node id="32652">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="32653" relation="include">
        </childnode>
        <childnode refid="32654" relation="include">
        </childnode>
        <childnode refid="32655" relation="include">
        </childnode>
        <childnode refid="32657" relation="include">
        </childnode>
        <childnode refid="32658" relation="include">
        </childnode>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32660" relation="include">
        </childnode>
        <childnode refid="32649" relation="include">
        </childnode>
        <childnode refid="32651" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32647" relation="include">
        </childnode>
      </node>
      <node id="32654">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="32651" relation="include">
        </childnode>
      </node>
      <node id="32669">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="32670" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32647" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
      </node>
      <node id="32656">
        <label>cassert</label>
      </node>
      <node id="32659">
        <label>stdexcept</label>
      </node>
      <node id="32649">
        <label>string</label>
      </node>
      <node id="32645">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="32646" relation="include">
        </childnode>
        <childnode refid="32647" relation="include">
        </childnode>
        <childnode refid="32648" relation="include">
        </childnode>
        <childnode refid="32649" relation="include">
        </childnode>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32650" relation="include">
        </childnode>
        <childnode refid="32651" relation="include">
        </childnode>
        <childnode refid="32652" relation="include">
        </childnode>
        <childnode refid="32653" relation="include">
        </childnode>
        <childnode refid="32662" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
      </node>
      <node id="32665">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="32667">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="32663">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="32638">
        <label>AMReX_IntConv.H</label>
        <link refid="AMReX__IntConv_8H"/>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32640" relation="include">
        </childnode>
        <childnode refid="32641" relation="include">
        </childnode>
        <childnode refid="32642" relation="include">
        </childnode>
        <childnode refid="32643" relation="include">
        </childnode>
      </node>
      <node id="32637">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IntConv.cpp</label>
        <link refid="AMReX_IntConv.cpp"/>
        <childnode refid="32638" relation="include">
        </childnode>
      </node>
      <node id="32651">
        <label>cstdio</label>
      </node>
      <node id="32662">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="32653" relation="include">
        </childnode>
        <childnode refid="32663" relation="include">
        </childnode>
      </node>
      <node id="32661">
        <label>vector</label>
      </node>
      <node id="32664">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="32652" relation="include">
        </childnode>
      </node>
      <node id="32653">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="32648">
        <label>utility</label>
      </node>
      <node id="32646">
        <label>array</label>
      </node>
      <node id="32650">
        <label>sstream</label>
      </node>
      <node id="32658">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="32659" relation="include">
        </childnode>
      </node>
      <node id="32644">
        <label>iosfwd</label>
      </node>
      <node id="32639">
        <label>iostream</label>
      </node>
      <node id="32657">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="32643">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="32644" relation="include">
        </childnode>
        <childnode refid="32645" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
      </node>
      <node id="32670">
        <label>algorithm</label>
      </node>
      <node id="32655">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="32656" relation="include">
        </childnode>
      </node>
      <node id="32640">
        <label>cstring</label>
      </node>
      <node id="32642">
        <label>AMReX_FPC.H</label>
        <link refid="AMReX__FPC_8H"/>
        <childnode refid="32643" relation="include">
        </childnode>
      </node>
      <node id="32647">
        <label>memory</label>
      </node>
      <node id="32666">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="32667" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__IntConv_8H" kindref="compound">AMReX_IntConv.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">std::int16_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::int16_t<sp/>val)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">std::int32_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::int32_t<sp/>val)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF<sp/>);<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::int64_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::int64_t<sp/>val)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00FF00FF00ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x00FF00FF00FF00FFULL<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFFFF0000FFFF0000ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0000FFFF0000FFFFULL<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>32)<sp/>&amp;<sp/>0xFFFFFFFFULL);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">std::uint16_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::uint16_t<sp/>val)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(val<sp/>&gt;&gt;<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">std::uint32_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF<sp/>);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(val<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::uint64_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::uint64_t<sp/>val)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00FF00FF00ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x00FF00FF00FF00FFULL<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFFFF0000FFFF0000ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0000FFFF0000FFFFULL<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>(val<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IntConv.cpp"/>
  </compounddef>
</doxygen>
