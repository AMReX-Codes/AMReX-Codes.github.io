<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__IntConv_8cpp" kind="file" language="C++">
    <compoundname>AMReX_IntConv.cpp</compoundname>
    <includes refid="AMReX__IntConv_8H" local="yes">AMReX_IntConv.H</includes>
    <incdepgraph>
      <node id="27438">
        <label>functional</label>
      </node>
      <node id="27422">
        <label>cstdint</label>
      </node>
      <node id="27433">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="27434" relation="include">
        </childnode>
        <childnode refid="27435" relation="include">
        </childnode>
        <childnode refid="27436" relation="include">
        </childnode>
        <childnode refid="27420" relation="include">
        </childnode>
        <childnode refid="27438" relation="include">
        </childnode>
        <childnode refid="27430" relation="include">
        </childnode>
        <childnode refid="27432" relation="include">
        </childnode>
        <childnode refid="27439" relation="include">
        </childnode>
        <childnode refid="27428" relation="include">
        </childnode>
      </node>
      <node id="27445">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="27446" relation="include">
        </childnode>
        <childnode refid="27439" relation="include">
        </childnode>
        <childnode refid="27428" relation="include">
        </childnode>
        <childnode refid="27441" relation="include">
        </childnode>
      </node>
      <node id="27437">
        <label>stdexcept</label>
      </node>
      <node id="27430">
        <label>string</label>
      </node>
      <node id="27426">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="27427" relation="include">
        </childnode>
        <childnode refid="27428" relation="include">
        </childnode>
        <childnode refid="27429" relation="include">
        </childnode>
        <childnode refid="27430" relation="include">
        </childnode>
        <childnode refid="27420" relation="include">
        </childnode>
        <childnode refid="27431" relation="include">
        </childnode>
        <childnode refid="27432" relation="include">
        </childnode>
        <childnode refid="27433" relation="include">
        </childnode>
        <childnode refid="27434" relation="include">
        </childnode>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27441" relation="include">
        </childnode>
        <childnode refid="27442" relation="include">
        </childnode>
        <childnode refid="27443" relation="include">
        </childnode>
      </node>
      <node id="27442">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="27444">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="27419">
        <label>AMReX_IntConv.H</label>
        <link refid="AMReX__IntConv_8H"/>
        <childnode refid="27420" relation="include">
        </childnode>
        <childnode refid="27421" relation="include">
        </childnode>
        <childnode refid="27422" relation="include">
        </childnode>
        <childnode refid="27423" relation="include">
        </childnode>
        <childnode refid="27424" relation="include">
        </childnode>
      </node>
      <node id="27418">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IntConv.cpp</label>
        <link refid="AMReX_IntConv.cpp"/>
        <childnode refid="27419" relation="include">
        </childnode>
      </node>
      <node id="27432">
        <label>cstdio</label>
      </node>
      <node id="27440">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="27434" relation="include">
        </childnode>
      </node>
      <node id="27439">
        <label>vector</label>
      </node>
      <node id="27441">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="27433" relation="include">
        </childnode>
      </node>
      <node id="27434">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="27429">
        <label>utility</label>
      </node>
      <node id="27427">
        <label>array</label>
      </node>
      <node id="27431">
        <label>sstream</label>
      </node>
      <node id="27436">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="27437" relation="include">
        </childnode>
      </node>
      <node id="27425">
        <label>iosfwd</label>
      </node>
      <node id="27420">
        <label>iostream</label>
      </node>
      <node id="27435">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="27424">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="27425" relation="include">
        </childnode>
        <childnode refid="27426" relation="include">
        </childnode>
        <childnode refid="27445" relation="include">
        </childnode>
        <childnode refid="27441" relation="include">
        </childnode>
        <childnode refid="27443" relation="include">
        </childnode>
      </node>
      <node id="27446">
        <label>algorithm</label>
      </node>
      <node id="27421">
        <label>cstring</label>
      </node>
      <node id="27423">
        <label>AMReX_FPC.H</label>
        <link refid="AMReX__FPC_8H"/>
        <childnode refid="27424" relation="include">
        </childnode>
      </node>
      <node id="27428">
        <label>memory</label>
      </node>
      <node id="27443">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="27444" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__IntConv_8H" kindref="compound">AMReX_IntConv.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">std::int16_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::int16_t<sp/>val)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">std::int32_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::int32_t<sp/>val)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF<sp/>);<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::int64_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::int64_t<sp/>val)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00FF00FF00ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x00FF00FF00FF00FFULL<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFFFF0000FFFF0000ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0000FFFF0000FFFFULL<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>32)<sp/>&amp;<sp/>0xFFFFFFFFULL);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">std::uint16_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::uint16_t<sp/>val)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(val<sp/>&gt;&gt;<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">std::uint32_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF<sp/>);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(val<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::uint64_t<sp/><ref refid="namespaceamrex_1ac25dfba1079e742467f752e4ee21450f" kindref="member">swapBytes</ref>(std::uint64_t<sp/>val)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00FF00FF00FF00ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x00FF00FF00FF00FFULL<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>((val<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFFFF0000FFFF0000ULL<sp/>)<sp/>|<sp/>((val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0000FFFF0000FFFFULL<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>(val<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IntConv.cpp"/>
  </compounddef>
</doxygen>
