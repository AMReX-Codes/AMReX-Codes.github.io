<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__ParticleCommunication_8H" kind="file" language="C++">
    <compoundname>AMReX_ParticleCommunication.H</compoundname>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__CudaContainers_8H" local="no">AMReX_CudaContainers.H</includes>
    <includes refid="AMReX__IntVect_8H" local="no">AMReX_IntVect.H</includes>
    <includes refid="AMReX__ParticleBufferMap_8H" local="no">AMReX_ParticleBufferMap.H</includes>
    <includes refid="AMReX__MFIter_8H" local="no">AMReX_MFIter.H</includes>
    <includes local="no">map</includes>
    <includedby refid="AMReX__ParticleCommunication_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="66362">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66363" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66330" relation="include">
        </childnode>
      </node>
      <node id="66391">
        <label>iomanip</label>
      </node>
      <node id="66333">
        <label>functional</label>
      </node>
      <node id="66356">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66319" relation="include">
        </childnode>
        <childnode refid="66358" relation="include">
        </childnode>
        <childnode refid="66353" relation="include">
        </childnode>
        <childnode refid="66359" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
      </node>
      <node id="66406">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
      </node>
      <node id="66323">
        <label>limits</label>
      </node>
      <node id="66369">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
      </node>
      <node id="66392">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="66371" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66389" relation="include">
        </childnode>
      </node>
      <node id="66346">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="66347" relation="include">
        </childnode>
        <childnode refid="66348" relation="include">
        </childnode>
        <childnode refid="66350" relation="include">
        </childnode>
        <childnode refid="66330" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
        <childnode refid="66353" relation="include">
        </childnode>
        <childnode refid="66354" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66355" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
      </node>
      <node id="66378">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66374" relation="include">
        </childnode>
        <childnode refid="66338" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66355" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66352" relation="include">
        </childnode>
      </node>
      <node id="66396">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66356" relation="include">
        </childnode>
        <childnode refid="66360" relation="include">
        </childnode>
        <childnode refid="66361" relation="include">
        </childnode>
        <childnode refid="66397" relation="include">
        </childnode>
        <childnode refid="66398" relation="include">
        </childnode>
        <childnode refid="66390" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
        <childnode refid="66310" relation="include">
        </childnode>
      </node>
      <node id="66360">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="66319" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66329" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66361" relation="include">
        </childnode>
      </node>
      <node id="66379">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
      </node>
      <node id="66351">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="66347" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66352" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66322" relation="include">
        </childnode>
        <childnode refid="66345" relation="include">
        </childnode>
        <childnode refid="66330" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66349" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66338" relation="include">
        </childnode>
        <childnode refid="66311" relation="include">
        </childnode>
      </node>
      <node id="66329">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66330" relation="include">
        </childnode>
        <childnode refid="66331" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66333" relation="include">
        </childnode>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66334" relation="include">
        </childnode>
        <childnode refid="66335" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
      </node>
      <node id="66407">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="66385">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="66314">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="66315" relation="include">
        </childnode>
        <childnode refid="66318" relation="include">
        </childnode>
      </node>
      <node id="66344">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="66345" relation="include">
        </childnode>
        <childnode refid="66335" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
      </node>
      <node id="66390">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="66342" relation="include">
        </childnode>
        <childnode refid="66363" relation="include">
        </childnode>
        <childnode refid="66391" relation="include">
        </childnode>
        <childnode refid="66329" relation="include">
        </childnode>
        <childnode refid="66362" relation="include">
        </childnode>
        <childnode refid="66361" relation="include">
        </childnode>
      </node>
      <node id="66352">
        <label>cmath</label>
      </node>
      <node id="66412">
        <label>cassert</label>
      </node>
      <node id="66332">
        <label>stdexcept</label>
      </node>
      <node id="66371">
        <label>numeric</label>
      </node>
      <node id="66380">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="66340" relation="include">
        </childnode>
        <childnode refid="66381" relation="include">
        </childnode>
        <childnode refid="66333" relation="include">
        </childnode>
        <childnode refid="66321" relation="include">
        </childnode>
        <childnode refid="66341" relation="include">
        </childnode>
        <childnode refid="66373" relation="include">
        </childnode>
        <childnode refid="66382" relation="include">
        </childnode>
        <childnode refid="66379" relation="include">
        </childnode>
        <childnode refid="66311" relation="include">
        </childnode>
      </node>
      <node id="66309">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX_ParticleCommunication.H"/>
        <childnode refid="66310" relation="include">
        </childnode>
        <childnode refid="66392" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
        <childnode refid="66394" relation="include">
        </childnode>
        <childnode refid="66395" relation="include">
        </childnode>
        <childnode refid="66319" relation="include">
        </childnode>
      </node>
      <node id="66359">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="66347" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
        <childnode refid="66353" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
      </node>
      <node id="66400">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="66352" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66345" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66322" relation="include">
        </childnode>
        <childnode refid="66340" relation="include">
        </childnode>
        <childnode refid="66321" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66338" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66383" relation="include">
        </childnode>
        <childnode refid="66359" relation="include">
        </childnode>
        <childnode refid="66401" relation="include">
        </childnode>
        <childnode refid="66402" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66369" relation="include">
        </childnode>
        <childnode refid="66406" relation="include">
        </childnode>
        <childnode refid="66407" relation="include">
        </childnode>
        <childnode refid="66315" relation="include">
        </childnode>
        <childnode refid="66408" relation="include">
        </childnode>
        <childnode refid="66310" relation="include">
        </childnode>
      </node>
      <node id="66318">
        <label>string</label>
      </node>
      <node id="66389">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="66319" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66390" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
        <childnode refid="66374" relation="include">
        </childnode>
      </node>
      <node id="66383">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="66346" relation="include">
        </childnode>
      </node>
      <node id="66319">
        <label>map</label>
      </node>
      <node id="66405">
        <label>unordered_set</label>
      </node>
      <node id="66394">
        <label>AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="66356" relation="include">
        </childnode>
        <childnode refid="66360" relation="include">
        </childnode>
        <childnode refid="66310" relation="include">
        </childnode>
        <childnode refid="66392" relation="include">
        </childnode>
      </node>
      <node id="66382">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="66341" relation="include">
        </childnode>
      </node>
      <node id="66324">
        <label>cfloat</label>
      </node>
      <node id="66408">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="66310" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
      </node>
      <node id="66363">
        <label>fstream</label>
      </node>
      <node id="66395">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
        <childnode refid="66396" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
        <childnode refid="66399" relation="include">
        </childnode>
        <childnode refid="66410" relation="include">
        </childnode>
        <childnode refid="66310" relation="include">
        </childnode>
      </node>
      <node id="66350">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="66337" relation="include">
        </childnode>
      </node>
      <node id="66410">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="66347" relation="include">
        </childnode>
        <childnode refid="66340" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66411" relation="include">
        </childnode>
      </node>
      <node id="66339">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="66340" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66341" relation="include">
        </childnode>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66342" relation="include">
        </childnode>
        <childnode refid="66334" relation="include">
        </childnode>
        <childnode refid="66329" relation="include">
        </childnode>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
      </node>
      <node id="66377">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66378" relation="include">
        </childnode>
        <childnode refid="66379" relation="include">
        </childnode>
      </node>
      <node id="66343">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="66397">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="66329" relation="include">
        </childnode>
        <childnode refid="66361" relation="include">
        </childnode>
        <childnode refid="66390" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66321" relation="include">
        </childnode>
      </node>
      <node id="66338">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="66313">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66314" relation="include">
        </childnode>
        <childnode refid="66372" relation="include">
        </childnode>
        <childnode refid="66374" relation="include">
        </childnode>
        <childnode refid="66375" relation="include">
        </childnode>
        <childnode refid="66377" relation="include">
        </childnode>
        <childnode refid="66380" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66383" relation="include">
        </childnode>
        <childnode refid="66338" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66373" relation="include">
        </childnode>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66345" relation="include">
        </childnode>
        <childnode refid="66341" relation="include">
        </childnode>
        <childnode refid="66384" relation="include">
        </childnode>
        <childnode refid="66385" relation="include">
        </childnode>
      </node>
      <node id="66325">
        <label>sys/types.h</label>
      </node>
      <node id="66398">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="66351" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66335" relation="include">
        </childnode>
      </node>
      <node id="66370">
        <label>typeinfo</label>
      </node>
      <node id="66334">
        <label>cstdio</label>
      </node>
      <node id="66373">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="66321" relation="include">
        </childnode>
        <childnode refid="66338" relation="include">
        </childnode>
      </node>
      <node id="66312">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
      </node>
      <node id="66381">
        <label>tuple</label>
      </node>
      <node id="66364">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="66365" relation="include">
        </childnode>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66341" relation="include">
        </childnode>
        <childnode refid="66342" relation="include">
        </childnode>
        <childnode refid="66334" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66366" relation="include">
        </childnode>
        <childnode refid="66367" relation="include">
        </childnode>
        <childnode refid="66368" relation="include">
        </childnode>
      </node>
      <node id="66326">
        <label>unistd.h</label>
      </node>
      <node id="66365">
        <label>stack</label>
      </node>
      <node id="66335">
        <label>vector</label>
      </node>
      <node id="66409">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66390" relation="include">
        </childnode>
        <childnode refid="66407" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
      </node>
      <node id="66328">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="66329" relation="include">
        </childnode>
      </node>
      <node id="66311">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="66341">
        <label>utility</label>
      </node>
      <node id="66340">
        <label>array</label>
      </node>
      <node id="66399">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66400" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66409" relation="include">
        </childnode>
        <childnode refid="66352" relation="include">
        </childnode>
      </node>
      <node id="66342">
        <label>sstream</label>
      </node>
      <node id="66331">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="66332" relation="include">
        </childnode>
      </node>
      <node id="66348">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="66345" relation="include">
        </childnode>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66338" relation="include">
        </childnode>
        <childnode refid="66349" relation="include">
        </childnode>
      </node>
      <node id="66372">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66314" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66373" relation="include">
        </childnode>
      </node>
      <node id="66361">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="66330" relation="include">
        </childnode>
        <childnode refid="66362" relation="include">
        </childnode>
        <childnode refid="66364" relation="include">
        </childnode>
        <childnode refid="66369" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66335" relation="include">
        </childnode>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66370" relation="include">
        </childnode>
        <childnode refid="66345" relation="include">
        </childnode>
        <childnode refid="66333" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66371" relation="include">
        </childnode>
      </node>
      <node id="66315">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66318" relation="include">
        </childnode>
        <childnode refid="66319" relation="include">
        </childnode>
        <childnode refid="66320" relation="include">
        </childnode>
        <childnode refid="66321" relation="include">
        </childnode>
        <childnode refid="66322" relation="include">
        </childnode>
        <childnode refid="66323" relation="include">
        </childnode>
        <childnode refid="66324" relation="include">
        </childnode>
        <childnode refid="66325" relation="include">
        </childnode>
        <childnode refid="66326" relation="include">
        </childnode>
        <childnode refid="66327" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
        <childnode refid="66344" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66356" relation="include">
        </childnode>
        <childnode refid="66360" relation="include">
        </childnode>
        <childnode refid="66361" relation="include">
        </childnode>
      </node>
      <node id="66376">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
      </node>
      <node id="66354">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="66347" relation="include">
        </childnode>
        <childnode refid="66328" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66311" relation="include">
        </childnode>
      </node>
      <node id="66349">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66339" relation="include">
        </childnode>
      </node>
      <node id="66347">
        <label>iosfwd</label>
      </node>
      <node id="66327">
        <label>sys/wait.h</label>
      </node>
      <node id="66316">
        <label>cstdlib</label>
      </node>
      <node id="66368">
        <label>cfenv</label>
      </node>
      <node id="66317">
        <label>iostream</label>
      </node>
      <node id="66353">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="66347" relation="include">
        </childnode>
        <childnode refid="66330" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
      </node>
      <node id="66355">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="66351" relation="include">
        </childnode>
      </node>
      <node id="66357">
        <label>cstddef</label>
      </node>
      <node id="66358">
        <label>unordered_map</label>
      </node>
      <node id="66310">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66313" relation="include">
        </childnode>
        <childnode refid="66314" relation="include">
        </childnode>
        <childnode refid="66378" relation="include">
        </childnode>
        <childnode refid="66374" relation="include">
        </childnode>
        <childnode refid="66386" relation="include">
        </childnode>
        <childnode refid="66388" relation="include">
        </childnode>
        <childnode refid="66375" relation="include">
        </childnode>
        <childnode refid="66372" relation="include">
        </childnode>
        <childnode refid="66377" relation="include">
        </childnode>
        <childnode refid="66389" relation="include">
        </childnode>
        <childnode refid="66392" relation="include">
        </childnode>
        <childnode refid="66393" relation="include">
        </childnode>
      </node>
      <node id="66322">
        <label>climits</label>
      </node>
      <node id="66393">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="66404">
        <label>mutex</label>
      </node>
      <node id="66320">
        <label>chrono</label>
      </node>
      <node id="66384">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="66367">
        <label>csignal</label>
      </node>
      <node id="66402">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66403" relation="include">
        </childnode>
        <childnode refid="66335" relation="include">
        </childnode>
        <childnode refid="66404" relation="include">
        </childnode>
        <childnode refid="66405" relation="include">
        </childnode>
        <childnode refid="66333" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
      </node>
      <node id="66321">
        <label>type_traits</label>
      </node>
      <node id="66403">
        <label>set</label>
      </node>
      <node id="66401">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="66376" relation="include">
        </childnode>
      </node>
      <node id="66330">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="66388">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="66376" relation="include">
        </childnode>
      </node>
      <node id="66345">
        <label>algorithm</label>
      </node>
      <node id="66374">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66340" relation="include">
        </childnode>
        <childnode refid="66329" relation="include">
        </childnode>
        <childnode refid="66315" relation="include">
        </childnode>
        <childnode refid="66314" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
      </node>
      <node id="66366">
        <label>execinfo.h</label>
      </node>
      <node id="66387">
        <label>cstring</label>
      </node>
      <node id="66411">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66387" relation="include">
        </childnode>
        <childnode refid="66317" relation="include">
        </childnode>
        <childnode refid="66352" relation="include">
        </childnode>
        <childnode refid="66346" relation="include">
        </childnode>
        <childnode refid="66337" relation="include">
        </childnode>
        <childnode refid="66343" relation="include">
        </childnode>
        <childnode refid="66335" relation="include">
        </childnode>
        <childnode refid="66412" relation="include">
        </childnode>
        <childnode refid="66351" relation="include">
        </childnode>
      </node>
      <node id="66336">
        <label>memory</label>
      </node>
      <node id="66386">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="66357" relation="include">
        </childnode>
        <childnode refid="66387" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
        <childnode refid="66336" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
        <childnode refid="66373" relation="include">
        </childnode>
        <childnode refid="66374" relation="include">
        </childnode>
      </node>
      <node id="66375">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="66311" relation="include">
        </childnode>
        <childnode refid="66312" relation="include">
        </childnode>
        <childnode refid="66374" relation="include">
        </childnode>
        <childnode refid="66373" relation="include">
        </childnode>
        <childnode refid="66376" relation="include">
        </childnode>
        <childnode refid="66316" relation="include">
        </childnode>
      </node>
      <node id="66337">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="66338" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="66424">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="66425" relation="include">
        </childnode>
      </node>
      <node id="66418">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp</label>
        <link refid="AMReX__LoadBalanceKD_8cpp"/>
      </node>
      <node id="66420">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="66414">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="66413">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX_ParticleCommunication.H"/>
        <childnode refid="66414" relation="include">
        </childnode>
        <childnode refid="66415" relation="include">
        </childnode>
      </node>
      <node id="66416">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="66419">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
      </node>
      <node id="66422">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="66415" relation="include">
        </childnode>
      </node>
      <node id="66421">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="66415" relation="include">
        </childnode>
      </node>
      <node id="66423">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="66416" relation="include">
        </childnode>
        <childnode refid="66424" relation="include">
        </childnode>
        <childnode refid="66425" relation="include">
        </childnode>
      </node>
      <node id="66417">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H</label>
        <link refid="AMReX__LoadBalanceKD_8H"/>
        <childnode refid="66418" relation="include">
        </childnode>
      </node>
      <node id="66415">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="66416" relation="include">
        </childnode>
        <childnode refid="66417" relation="include">
        </childnode>
        <childnode refid="66419" relation="include">
        </childnode>
        <childnode refid="66420" relation="include">
        </childnode>
        <childnode refid="66421" relation="include">
        </childnode>
        <childnode refid="66422" relation="include">
        </childnode>
        <childnode refid="66423" relation="include">
        </childnode>
      </node>
      <node id="66425">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1NeighborUnpackPolicy" prot="public">amrex::NeighborUnpackPolicy</innerclass>
    <innerclass refid="structamrex_1_1RedistributeUnpackPolicy" prot="public">amrex::RedistributeUnpackPolicy</innerclass>
    <innerclass refid="structamrex_1_1ParticleCopyOp" prot="public">amrex::ParticleCopyOp</innerclass>
    <innerclass refid="structamrex_1_1ParticleCopyPlan" prot="public">amrex::ParticleCopyPlan</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLECOMMUNICATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLECOMMUNICATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CudaContainers_8H" kindref="compound">AMReX_CudaContainers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IntVect_8H" kindref="compound">AMReX_IntVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParticleBufferMap_8H" kindref="compound">AMReX_ParticleBufferMap.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MFIter_8H" kindref="compound">AMReX_MFIter.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="structamrex_1_1NeighborUnpackPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NeighborUnpackPolicy" kindref="compound">NeighborUnpackPolicy</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PTile&gt;<sp/></highlight></codeline>
<codeline lineno="17" refid="structamrex_1_1NeighborUnpackPolicy_1a56d26fa2711af732a419aade635539f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NeighborUnpackPolicy_1a56d26fa2711af732a419aade635539f9" kindref="member">resizeTiles</ref>(std::vector&lt;PTile*&gt;&amp;<sp/>tiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>sizes,<sp/>std::vector&lt;int&gt;&amp;<sp/>offsets)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int&gt;(sizes.size());<sp/>++i)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>tiles[i]-&gt;numTotalParticles();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>tiles[i]-&gt;getNumNeighbors();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles[i]-&gt;setNumNeighbors(nn<sp/>+<sp/>sizes[i]);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsets.push_back(offset);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structamrex_1_1RedistributeUnpackPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1RedistributeUnpackPolicy" kindref="compound">RedistributeUnpackPolicy</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PTile&gt;<sp/></highlight></codeline>
<codeline lineno="32" refid="structamrex_1_1RedistributeUnpackPolicy_1a51817666198abf4c854612c9eb24b6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1RedistributeUnpackPolicy_1a51817666198abf4c854612c9eb24b6cb" kindref="member">resizeTiles</ref>(std::vector&lt;PTile*&gt;&amp;<sp/>tiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>sizes,<sp/>std::vector&lt;int&gt;&amp;<sp/>offsets)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sizes.size());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;PTile*,<sp/>int&gt;<sp/>tile_sizes;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_sizes[tiles[i]]<sp/>=<sp/>tiles[i]-&gt;numParticles();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsets.push_back(tile_sizes[tiles[i]]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_sizes[tiles[i]]<sp/>+=<sp/>sizes[i];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>tile_sizes)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv.first-&gt;resize(kv.second);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structamrex_1_1ParticleCopyOp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="structamrex_1_1ParticleCopyOp_1a5fc2aeeee3d8e258a84fb36fc8f03bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Gpu::ManagedDeviceVector&lt;int&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a5fc2aeeee3d8e258a84fb36fc8f03bcf" kindref="member">m_boxes</ref>;</highlight></codeline>
<codeline lineno="54" refid="structamrex_1_1ParticleCopyOp_1a96c528de6ac06a05b9a78acc2a740f3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Gpu::ManagedDeviceVector&lt;int&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a96c528de6ac06a05b9a78acc2a740f3f" kindref="member">m_src_indices</ref>;</highlight></codeline>
<codeline lineno="55" refid="structamrex_1_1ParticleCopyOp_1a0b3e0c7ddb5f8a6898ad26f0d94ab656" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Gpu::ManagedDeviceVector&lt;IntVect&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a0b3e0c7ddb5f8a6898ad26f0d94ab656" kindref="member">m_periodic_shift</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear<sp/>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structamrex_1_1ParticleCopyOp_1a4127b0e24e16a9bdffaadb72ebd8e9ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyOp_1a4127b0e24e16a9bdffaadb72ebd8e9ad" kindref="member">numCopies</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_boxes.at(gid).size();<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structamrex_1_1ParticleCopyPlan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66" refid="structamrex_1_1ParticleCopyPlan_1a5f4b1ac88a404bcfd61a0e79b79ea1a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Gpu::ManagedDeviceVector&lt;int&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a5f4b1ac88a404bcfd61a0e79b79ea1a0" kindref="member">m_dst_indices</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structamrex_1_1ParticleCopyPlan_1a71f6a41409546cfd97245e0772ddb2d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Gpu::ManagedDeviceVector&lt;unsigned int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a71f6a41409546cfd97245e0772ddb2d1" kindref="member">m_box_counts</ref>;</highlight></codeline>
<codeline lineno="69" refid="structamrex_1_1ParticleCopyPlan_1a98b7f5cca577e9539da0faf8cf63f707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Gpu::ManagedDeviceVector&lt;unsigned int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a98b7f5cca577e9539da0faf8cf63f707" kindref="member">m_box_offsets</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structamrex_1_1ParticleCopyPlan_1af5a0b24cb3b7fb71ae70a341a5651e0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Gpu::ManagedDeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1af5a0b24cb3b7fb71ae70a341a5651e0f" kindref="member">m_rcv_box_counts</ref>;</highlight></codeline>
<codeline lineno="72" refid="structamrex_1_1ParticleCopyPlan_1a05cfe95d3aaed96dd4a34050f3ebae5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Gpu::ManagedDeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a05cfe95d3aaed96dd4a34050f3ebae5a" kindref="member">m_rcv_box_offsets</ref>;</highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1ParticleCopyPlan_1af8407941c4e4a59526bf78266c3a1171" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Gpu::ManagedDeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1af8407941c4e4a59526bf78266c3a1171" kindref="member">m_rcv_box_ids</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structamrex_1_1ParticleCopyPlan_1a6c89bc50b21e007fcd3c7cccd4909656" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a6c89bc50b21e007fcd3c7cccd4909656" kindref="member">m_NumSnds</ref>;</highlight></codeline>
<codeline lineno="76" refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>;</highlight></codeline>
<codeline lineno="77" refid="structamrex_1_1ParticleCopyPlan_1a1a340b9f7199d3e7e537b38d7c20f185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Status&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a1a340b9f7199d3e7e537b38d7c20f185" kindref="member">m_stats</ref>;</highlight></codeline>
<codeline lineno="78" refid="structamrex_1_1ParticleCopyPlan_1aeed6a81e3a7628445aac218d45576bd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Request&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1aeed6a81e3a7628445aac218d45576bd0" kindref="member">m_rreqs</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structamrex_1_1ParticleCopyPlan_1a1182b35675ba5b1b597deccdaf4d8c8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a1182b35675ba5b1b597deccdaf4d8c8b" kindref="member">m_snd_num_particles</ref>;</highlight></codeline>
<codeline lineno="81" refid="structamrex_1_1ParticleCopyPlan_1a389ed29ce488b7c5dde93c36bba3f814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a389ed29ce488b7c5dde93c36bba3f814" kindref="member">m_rcv_num_particles</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" kindref="member">m_neighbor_procs</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="structamrex_1_1ParticleCopyPlan_1a07abfe8bf9bec2101263e4c234455463" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a07abfe8bf9bec2101263e4c234455463" kindref="member">m_Snds</ref>;</highlight></codeline>
<codeline lineno="86" refid="structamrex_1_1ParticleCopyPlan_1ab34fcf2e48c2187ffd3ccc02a6358c6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ab34fcf2e48c2187ffd3ccc02a6358c6a" kindref="member">m_Rcvs</ref>;</highlight></codeline>
<codeline lineno="87" refid="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" kindref="member">m_RcvProc</ref>;</highlight></codeline>
<codeline lineno="88" refid="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" kindref="member">m_rOffset</ref>;</highlight></codeline>
<codeline lineno="89" refid="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Gpu::HostVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" kindref="member">m_rcv_data</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PC&gt;</highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1ParticleCopyPlan_1a3a2ffd48804b31c86c39c4d44c67d479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a3a2ffd48804b31c86c39c4d44c67d479" kindref="member">build</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref>&amp;<sp/>op,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_handshake)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ParticleCopyPlan::build&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(pc.numLevels()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>geom<sp/>=<sp/>pc.Geom(lev);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_neighbor_procs.assign(pc.NeighborProcs().begin(),<sp/>pc.NeighborProcs().end());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_boxes<sp/>=<sp/>pc.ParticleBoxArray(lev).<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_boxes<sp/>==<sp/>1<sp/>and<sp/>(not<sp/>geom.isAnyPeriodic())<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_box_counts.resize(0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_box_counts.resize(num_boxes,<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_box_offsets.resize(num_boxes+1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_box_counts<sp/>=<sp/>m_box_counts.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_box_perm<sp/>=<sp/>pc.BufferMap().gridToBucketPtr();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_unsigned_int<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;unsigned int&gt;::max</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a4127b0e24e16a9bdffaadb72ebd8e9ad" kindref="member">numCopies</ref>(gid);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dst_indices[gid].resize(num_copies);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a4127b0e24e16a9bdffaadb72ebd8e9ad" kindref="member">numCopies</ref>(gid);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_boxes<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a5fc2aeeee3d8e258a84fb36fc8f03bcf" kindref="member">m_boxes</ref>.at(gid).dataPtr();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_indices<sp/>=<sp/>m_dst_indices[gid].dataPtr();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>num_copies,<sp/>i,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_box<sp/>=<sp/>p_boxes[i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_box<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a9022f7f32e44bc84adc3f4f1e3fa0a93" kindref="member">Gpu::Atomic::Inc</ref>(&amp;p_dst_box_counts[p_box_perm[dst_box]],<sp/>max_unsigned_int);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dst_indices[i]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Cuda_1ad6e1b17bd58f41513b45874c3e016e41" kindref="member">amrex::Gpu::exclusive_scan</ref>(m_box_counts.begin(),<sp/>m_box_counts.end()+1,<sp/>m_box_offsets.begin());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buildMPIStart(pc.BufferMap(),<sp/>do_handshake);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildMPIFinish<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref>&amp;<sp/>map);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildMPIStart<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref>&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_handshake=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Snds<sp/>-<sp/>a<sp/>Vector<sp/>with<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>that<sp/>is<sp/>process<sp/>will<sp/>send<sp/>to<sp/>each<sp/>proc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rcvs<sp/>-<sp/>a<sp/>Vector<sp/>that,<sp/>after<sp/>calling<sp/>this<sp/>method,<sp/>will<sp/>contain<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>bytes<sp/>this<sp/>process<sp/>will<sp/>reveive<sp/>from<sp/>each<sp/>proc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShake<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>local<sp/>version<sp/>of<sp/>this<sp/>method,<sp/>each<sp/>proc<sp/>knows<sp/>which<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>procs<sp/>it<sp/>could<sp/>possibly<sp/>receive<sp/>messages<sp/>from,<sp/>meaning<sp/>we<sp/>can<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>purely<sp/>with<sp/>point-to-point<sp/>communication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShakeLocal<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>global<sp/>version,<sp/>we<sp/>don&apos;t<sp/>know<sp/>who<sp/>we&apos;ll<sp/>receive<sp/>from,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>do<sp/>some<sp/>collective<sp/>communication<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShakeGlobal<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PC,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Buffer&gt;</highlight></codeline>
<codeline lineno="175" refid="namespaceamrex_1a6e281f2798c1b095d3a6eb21b950e9ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6e281f2798c1b095d3a6eb21b950e9ca" kindref="member">packBuffer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref>&amp;<sp/>op,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/>Buffer&amp;<sp/>snd_buffer)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::packBuffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(pc.numLevels()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>geom<sp/>=<sp/>pc.Geom(lev);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>plev<sp/>=<sp/>pc.GetParticles(lev);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ba<sp/>=<sp/>pc.ParticleBoxArray(lev);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>plo<sp/>=<sp/>geom.ProbLoArray();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phi<sp/>=<sp/>geom.ProbHiArray();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_per<sp/>=<sp/>geom.isPeriodicArray();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ba.size()<sp/>==<sp/>1<sp/>and<sp/>(not<sp/>geom.isAnyPeriodic())<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_buffer_size<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a98b7f5cca577e9539da0faf8cf63f707" kindref="member">m_box_offsets</ref>[ba.size()];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_buffer.resize(total_buffer_size);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>mfi.LocalTileIndex();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>src_tile<sp/>=<sp/>plev.at(index);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>aos<sp/><sp/><sp/>=<sp/>src_tile.GetArrayOfStructs();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>src_tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a4127b0e24e16a9bdffaadb72ebd8e9ad" kindref="member">numCopies</ref>(gid);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_boxes<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a5fc2aeeee3d8e258a84fb36fc8f03bcf" kindref="member">m_boxes</ref>.at(gid).dataPtr();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_src_indices<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a96c528de6ac06a05b9a78acc2a740f3f" kindref="member">m_src_indices</ref>.at(gid).dataPtr();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_indices<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a5f4b1ac88a404bcfd61a0e79b79ea1a0" kindref="member">m_dst_indices</ref>.at(gid).dataPtr();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_periodic_shift<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a0b3e0c7ddb5f8a6898ad26f0d94ab656" kindref="member">m_periodic_shift</ref>.at(gid).dataPtr();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_box_offsets<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a98b7f5cca577e9539da0faf8cf63f707" kindref="member">m_box_offsets</ref>.dataPtr();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_box_perm<sp/>=<sp/>pc.BufferMap().gridToBucketPtr();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_snd_buffer<sp/>=<sp/>snd_buffer.dataPtr();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>num_copies,<sp/>i,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_box<sp/>=<sp/>p_boxes[i];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_box<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_offset<sp/>=<sp/>p_box_offsets[p_box_perm[dst_box]];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_index<sp/>=<sp/>box_offset<sp/>+<sp/>p_dst_indices[i];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_index<sp/>=<sp/>p_src_indices[i];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_snd_buffer[dst_index]<sp/>=<sp/>ptd.getSuperParticle(src_index);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>=<sp/>p_snd_buffer[dst_index];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>pshift<sp/>=<sp/>p_periodic_shift[i];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>is_per[idim])<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pshift[idim]<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.pos(idim)<sp/>+=<sp/>phi[idim]<sp/>-<sp/>plo[idim];<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pshift[idim]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.pos(idim)<sp/>-=<sp/>phi[idim]<sp/>-<sp/>plo[idim];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PC,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Buffer,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>UnpackPolicy&gt;</highlight></codeline>
<codeline lineno="238" refid="namespaceamrex_1aca38419d632c8e6a48b25bc4643522b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aca38419d632c8e6a48b25bc4643522b1" kindref="member">unpackBuffer</ref><sp/>(PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer&amp;<sp/>snd_buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnpackPolicy<sp/>policy)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::unpackBuffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(pc.numLevels()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PTile<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParticleTileType;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>plev<sp/><sp/>=<sp/>pc.GetParticles(lev);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pc.ParticleBoxArray(lev).size()<sp/>==<sp/>1<sp/>and<sp/>(not<sp/>pc.Geom(lev).isAnyPeriodic())<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>how<sp/>many<sp/>particles<sp/>we<sp/>have<sp/>to<sp/>add<sp/>to<sp/>each<sp/>tile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>sizes;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PTile*&gt;<sp/>tiles;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>mfi.LocalTileIndex();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>plev[index];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a71f6a41409546cfd97245e0772ddb2d1" kindref="member">m_box_counts</ref>[pc.BufferMap().gridToBucket(gid)];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes.push_back(num_copies);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles.push_back(&amp;tile);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>the<sp/>tiles<sp/>and<sp/>compute<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>offsets;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>policy.resizeTiles(tiles,<sp/>sizes,<sp/>offsets);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>unpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_box_counts<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a71f6a41409546cfd97245e0772ddb2d1" kindref="member">m_box_counts</ref>.dataPtr();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>mfi.LocalTileIndex();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>plev[index];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>aos<sp/><sp/><sp/>=<sp/>tile.GetArrayOfStructs();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_box_offsets<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a98b7f5cca577e9539da0faf8cf63f707" kindref="member">m_box_offsets</ref>.dataPtr();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_box_perm<sp/>=<sp/>pc.BufferMap().gridToBucketPtr();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_snd_buffer<sp/>=<sp/>snd_buffer.dataPtr();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>offsets[uindex];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref><sp/>=<sp/>sizes[uindex];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++uindex;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getParticleTileData();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>size,<sp/>i,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_offset<sp/>=<sp/>p_box_offsets[p_box_perm[gid]];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_index<sp/>=<sp/>box_offset<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_index<sp/>=<sp/>offset<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptd.setSuperParticle(p_snd_buffer[src_index],<sp/>dst_index);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PC,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Buffer&gt;</highlight></codeline>
<codeline lineno="301" refid="namespaceamrex_1a90f29dc8a6306690b4ef2e53bea4c8b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a90f29dc8a6306690b4ef2e53bea4c8b1" kindref="member">communicateParticlesStart</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PC&amp;<sp/>pc,<sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer&amp;<sp/>snd_buffer,<sp/>Buffer&amp;<sp/>rcv_buffer)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::communicateParticlesStart&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(pc.numLevels()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParticleType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">MyProc</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((NProcs<sp/>==<sp/>1)<sp/>or<sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a6c89bc50b21e007fcd3c7cccd4909656" kindref="member">m_NumSnds</ref><sp/>==<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>RcvProc;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;long&gt;</ref><sp/>rOffset;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>TotRcvParticles<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a389ed29ce488b7c5dde93c36bba3f814" kindref="member">m_rcv_num_particles</ref>[i]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RcvProc.push_back(i);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rOffset.push_back(TotRcvParticles);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotRcvParticles<sp/>+=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a389ed29ce488b7c5dde93c36bba3f814" kindref="member">m_rcv_num_particles</ref>[i];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>rcv_buffer.resize(TotRcvParticles);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref><sp/>=<sp/>RcvProc.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a1a340b9f7199d3e7e537b38d7c20f185" kindref="member">m_stats</ref>.resize(0);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a1a340b9f7199d3e7e537b38d7c20f185" kindref="member">m_stats</ref>.resize(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aeed6a81e3a7628445aac218d45576bd0" kindref="member">m_rreqs</ref>.resize(0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aeed6a81e3a7628445aac218d45576bd0" kindref="member">m_rreqs</ref>.resize(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">SeqNum</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>receives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Who<sp/><sp/><sp/><sp/>=<sp/>RcvProc[i];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>rOffset[i];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Cnt<sp/><sp/><sp/><sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a389ed29ce488b7c5dde93c36bba3f814" kindref="member">m_rcv_num_particles</ref>[Who]*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ParticleType);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(Cnt<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(Cnt<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(Who<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>Who<sp/>&lt;<sp/>NProcs);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aeed6a81e3a7628445aac218d45576bd0" kindref="member">m_rreqs</ref>[i]<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af5ed8a597f21464e9f2803f0e2afc0be" kindref="member">ParallelDescriptor::Arecv</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>(rcv_buffer.dataPtr()<sp/>+<sp/>offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum).<ref refid="classamrex_1_1ParallelDescriptor_1_1Message_1a57999afb8ef13d17fc24750bdae6cd00" kindref="member">req</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>MyProc)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Who<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Cnt<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a1182b35675ba5b1b597deccdaf4d8c8b" kindref="member">m_snd_num_particles</ref>[i]*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ParticleType);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Cnt<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(Who<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>Who<sp/>&lt;<sp/>NProcs);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(Cnt<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bucket<sp/>=<sp/>pc.BufferMap().firstBucketOnProc(i);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>snd_offset<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a98b7f5cca577e9539da0faf8cf63f707" kindref="member">m_box_offsets</ref>[bucket];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0903eb5194f11fcf386f79e6ff3c02f7" kindref="member">ParallelDescriptor::Asend</ref>(<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>(snd_buffer.dataPtr()<sp/>+<sp/>snd_offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a814322d519ae32014737504164a0516b" kindref="member">communicateParticlesFinish</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PC,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Buffer,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>UnpackPolicy&gt;</highlight></codeline>
<codeline lineno="372" refid="namespaceamrex_1ae65aa0e5fb032ec461c63cf5bf490f0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae65aa0e5fb032ec461c63cf5bf490f0d" kindref="member">unpackRemotes</ref><sp/>(PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/>Buffer&amp;<sp/>rcv_buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnpackPolicy&amp;<sp/>policy)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::unpackRemotes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(pc.numLevels()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NProcs<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">MyProc</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PTile<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParticleTileType;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>plev<sp/><sp/>=<sp/>pc.GetParticles(lev);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_rcv_box_counts<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af5a0b24cb3b7fb71ae70a341a5651e0f" kindref="member">m_rcv_box_counts</ref>.dataPtr();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_rcv_box_offsets<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a05cfe95d3aaed96dd4a34050f3ebae5a" kindref="member">m_rcv_box_offsets</ref>.dataPtr();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_rcv_box_ids<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af8407941c4e4a59526bf78266c3a1171" kindref="member">m_rcv_box_ids</ref>.dataPtr();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_rcv_buffer<sp/>=<sp/>rcv_buffer.dataPtr();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>sizes;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PTile*&gt;<sp/>tiles;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af5a0b24cb3b7fb71ae70a341a5651e0f" kindref="member">m_rcv_box_counts</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copy_size<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af5a0b24cb3b7fb71ae70a341a5651e0f" kindref="member">m_rcv_box_counts</ref>[i];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af8407941c4e4a59526bf78266c3a1171" kindref="member">m_rcv_box_ids</ref>[i];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>plev[index];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes.push_back(copy_size);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles.push_back(&amp;tile);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>offsets;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy.resizeTiles(tiles,<sp/>sizes,<sp/>offsets);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af5a0b24cb3b7fb71ae70a341a5651e0f" kindref="member">m_rcv_box_counts</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1af8407941c4e4a59526bf78266c3a1171" kindref="member">m_rcv_box_ids</ref>[i];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a05cfe95d3aaed96dd4a34050f3ebae5a" kindref="member">m_rcv_box_offsets</ref>[i];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>plev[index];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getParticleTileData();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(MyProc<sp/>==<sp/>pc.ParticleDistributionMap(0)[gid]);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_offset<sp/>=<sp/>offsets[uindex];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref><sp/>=<sp/>sizes[uindex];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++uindex;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>size,<sp/>ip,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_index<sp/>=<sp/>offset<sp/>+<sp/>ip;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_index<sp/>=<sp/>dst_offset<sp/>+<sp/>ip;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptd.setSuperParticle(p_rcv_buffer[src_index],<sp/>dst_index);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amrex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_PARTICLECOMMUNICATION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H"/>
  </compounddef>
</doxygen>
