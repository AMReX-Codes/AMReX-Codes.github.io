<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__ParticleCommunication_8H" kind="file" language="C++">
    <compoundname>AMReX_ParticleCommunication.H</compoundname>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__GpuContainers_8H" local="no">AMReX_GpuContainers.H</includes>
    <includes refid="AMReX__IntVect_8H" local="no">AMReX_IntVect.H</includes>
    <includes refid="AMReX__ParticleBufferMap_8H" local="no">AMReX_ParticleBufferMap.H</includes>
    <includes refid="AMReX__MFIter_8H" local="no">AMReX_MFIter.H</includes>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes local="no">map</includes>
    <includedby refid="AMReX__ParticleCommunication_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="81153">
        <label>atomic</label>
      </node>
      <node id="81116">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
      </node>
      <node id="81137">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="81110" relation="include">
        </childnode>
        <childnode refid="81138" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81139" relation="include">
        </childnode>
        <childnode refid="81134" relation="include">
        </childnode>
        <childnode refid="81140" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
      </node>
      <node id="81104">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81105" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81057" relation="include">
        </childnode>
      </node>
      <node id="81136">
        <label>iomanip</label>
      </node>
      <node id="81069">
        <label>functional</label>
      </node>
      <node id="81099">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81096" relation="include">
        </childnode>
        <childnode refid="81100" relation="include">
        </childnode>
        <childnode refid="81090" relation="include">
        </childnode>
        <childnode refid="81101" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
      </node>
      <node id="81159">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
      </node>
      <node id="81088">
        <label>limits</label>
      </node>
      <node id="81108">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
      </node>
      <node id="81138">
        <label>iterator</label>
      </node>
      <node id="81076">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81078" relation="include">
        </childnode>
        <childnode refid="81080" relation="include">
        </childnode>
        <childnode refid="81057" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81090" relation="include">
        </childnode>
        <childnode refid="81091" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81092" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
      </node>
      <node id="81064">
        <label>float.h</label>
      </node>
      <node id="81125">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81051" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81060" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81092" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81066" relation="include">
        </childnode>
      </node>
      <node id="81141">
        <label>cstdint</label>
      </node>
      <node id="81165">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81099" relation="include">
        </childnode>
        <childnode refid="81102" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
        <childnode refid="81166" relation="include">
        </childnode>
        <childnode refid="81149" relation="include">
        </childnode>
        <childnode refid="81135" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81045" relation="include">
        </childnode>
      </node>
      <node id="81102">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="81096" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
      </node>
      <node id="81124">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
      </node>
      <node id="81081">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="81060" relation="include">
        </childnode>
        <childnode refid="81057" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81079" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81065" relation="include">
        </childnode>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81066" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81089" relation="include">
        </childnode>
        <childnode refid="81075" relation="include">
        </childnode>
      </node>
      <node id="81056">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81047" relation="include">
        </childnode>
        <childnode refid="81049" relation="include">
        </childnode>
        <childnode refid="81057" relation="include">
        </childnode>
        <childnode refid="81058" relation="include">
        </childnode>
        <childnode refid="81060" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81065" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81069" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81048" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
      </node>
      <node id="81160">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="81047">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="81048" relation="include">
        </childnode>
      </node>
      <node id="81131">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="81115">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="81095" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
      </node>
      <node id="81074">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="81075" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81060" relation="include">
        </childnode>
      </node>
      <node id="81135">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="81086" relation="include">
        </childnode>
        <childnode refid="81105" relation="include">
        </childnode>
        <childnode refid="81136" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81104" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
      </node>
      <node id="81066">
        <label>cmath</label>
      </node>
      <node id="81050">
        <label>cassert</label>
      </node>
      <node id="81059">
        <label>stdexcept</label>
      </node>
      <node id="81110">
        <label>numeric</label>
      </node>
      <node id="81126">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="81084" relation="include">
        </childnode>
        <childnode refid="81127" relation="include">
        </childnode>
        <childnode refid="81069" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81128" relation="include">
        </childnode>
        <childnode refid="81124" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
      </node>
      <node id="81044">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX_ParticleCommunication.H"/>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81137" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81143" relation="include">
        </childnode>
        <childnode refid="81167" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81096" relation="include">
        </childnode>
      </node>
      <node id="81101">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81090" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
      </node>
      <node id="81152">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="81066" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81075" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81089" relation="include">
        </childnode>
        <childnode refid="81084" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81153" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81129" relation="include">
        </childnode>
        <childnode refid="81101" relation="include">
        </childnode>
        <childnode refid="81154" relation="include">
        </childnode>
        <childnode refid="81155" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81108" relation="include">
        </childnode>
        <childnode refid="81159" relation="include">
        </childnode>
        <childnode refid="81160" relation="include">
        </childnode>
        <childnode refid="81095" relation="include">
        </childnode>
        <childnode refid="81161" relation="include">
        </childnode>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81065" relation="include">
        </childnode>
      </node>
      <node id="81070">
        <label>string</label>
      </node>
      <node id="81129">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="81076" relation="include">
        </childnode>
      </node>
      <node id="81096">
        <label>map</label>
      </node>
      <node id="81150">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="81141" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81151" relation="include">
        </childnode>
        <childnode refid="81163" relation="include">
        </childnode>
        <childnode refid="81172" relation="include">
        </childnode>
        <childnode refid="81149" relation="include">
        </childnode>
      </node>
      <node id="81158">
        <label>unordered_set</label>
      </node>
      <node id="81169">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="81170" relation="include">
        </childnode>
        <childnode refid="81171" relation="include">
        </childnode>
      </node>
      <node id="81112">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
      </node>
      <node id="81143">
        <label>AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="81099" relation="include">
        </childnode>
        <childnode refid="81102" relation="include">
        </childnode>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81137" relation="include">
        </childnode>
        <childnode refid="81144" relation="include">
        </childnode>
      </node>
      <node id="81128">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="81085" relation="include">
        </childnode>
      </node>
      <node id="81098">
        <label>cfloat</label>
      </node>
      <node id="81168">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="81165" relation="include">
        </childnode>
        <childnode refid="81167" relation="include">
        </childnode>
      </node>
      <node id="81161">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81075" relation="include">
        </childnode>
      </node>
      <node id="81105">
        <label>fstream</label>
      </node>
      <node id="81145">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81096" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81146" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
        <childnode refid="81147" relation="include">
        </childnode>
        <childnode refid="81149" relation="include">
        </childnode>
      </node>
      <node id="81167">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81165" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81151" relation="include">
        </childnode>
        <childnode refid="81147" relation="include">
        </childnode>
        <childnode refid="81045" relation="include">
        </childnode>
      </node>
      <node id="81080">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="81062" relation="include">
        </childnode>
      </node>
      <node id="81147">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81084" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81148" relation="include">
        </childnode>
      </node>
      <node id="81083">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="81084" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81086" relation="include">
        </childnode>
        <childnode refid="81048" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81078" relation="include">
        </childnode>
        <childnode refid="81079" relation="include">
        </childnode>
      </node>
      <node id="81122">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81051" relation="include">
        </childnode>
        <childnode refid="81123" relation="include">
        </childnode>
        <childnode refid="81125" relation="include">
        </childnode>
        <childnode refid="81124" relation="include">
        </childnode>
      </node>
      <node id="81082">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="81166">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
        <childnode refid="81135" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
      </node>
      <node id="81063">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="81051">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="81134">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="81096" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81135" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
      </node>
      <node id="81119">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81051" relation="include">
        </childnode>
        <childnode refid="81115" relation="include">
        </childnode>
        <childnode refid="81120" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
        <childnode refid="81121" relation="include">
        </childnode>
        <childnode refid="81122" relation="include">
        </childnode>
        <childnode refid="81126" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81129" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81117" relation="include">
        </childnode>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81075" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81130" relation="include">
        </childnode>
        <childnode refid="81131" relation="include">
        </childnode>
      </node>
      <node id="81170">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
        <childnode refid="81092" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81079" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
      </node>
      <node id="81114">
        <label>sys/types.h</label>
      </node>
      <node id="81149">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
      </node>
      <node id="81109">
        <label>typeinfo</label>
      </node>
      <node id="81048">
        <label>cstdio</label>
      </node>
      <node id="81093">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
      </node>
      <node id="81052">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81051" relation="include">
        </childnode>
      </node>
      <node id="81127">
        <label>tuple</label>
      </node>
      <node id="81106">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="81107" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81086" relation="include">
        </childnode>
        <childnode refid="81048" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
      </node>
      <node id="81140">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81141" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
      </node>
      <node id="81113">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81114" relation="include">
        </childnode>
      </node>
      <node id="81171">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="81107">
        <label>stack</label>
      </node>
      <node id="81071">
        <label>vector</label>
      </node>
      <node id="81162">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81135" relation="include">
        </childnode>
        <childnode refid="81160" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
      </node>
      <node id="81055">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="81056" relation="include">
        </childnode>
      </node>
      <node id="81065">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81066" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
      </node>
      <node id="81046">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="81085">
        <label>utility</label>
      </node>
      <node id="81084">
        <label>array</label>
      </node>
      <node id="81163">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81118" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81096" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
        <childnode refid="81075" relation="include">
        </childnode>
        <childnode refid="81156" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81099" relation="include">
        </childnode>
        <childnode refid="81164" relation="include">
        </childnode>
        <childnode refid="81162" relation="include">
        </childnode>
        <childnode refid="81102" relation="include">
        </childnode>
        <childnode refid="81145" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
        <childnode refid="81095" relation="include">
        </childnode>
        <childnode refid="81057" relation="include">
        </childnode>
        <childnode refid="81108" relation="include">
        </childnode>
        <childnode refid="81149" relation="include">
        </childnode>
        <childnode refid="81135" relation="include">
        </childnode>
        <childnode refid="81165" relation="include">
        </childnode>
        <childnode refid="81167" relation="include">
        </childnode>
        <childnode refid="81160" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81168" relation="include">
        </childnode>
        <childnode refid="81152" relation="include">
        </childnode>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81169" relation="include">
        </childnode>
      </node>
      <node id="81151">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81152" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81162" relation="include">
        </childnode>
        <childnode refid="81066" relation="include">
        </childnode>
      </node>
      <node id="81086">
        <label>sstream</label>
      </node>
      <node id="81172">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="81163" relation="include">
        </childnode>
        <childnode refid="81168" relation="include">
        </childnode>
        <childnode refid="81135" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
      </node>
      <node id="81058">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="81059" relation="include">
        </childnode>
      </node>
      <node id="81078">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="81075" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81079" relation="include">
        </childnode>
      </node>
      <node id="81060">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="81061" relation="include">
        </childnode>
      </node>
      <node id="81120">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81115" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
      </node>
      <node id="81103">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="81057" relation="include">
        </childnode>
        <childnode refid="81104" relation="include">
        </childnode>
        <childnode refid="81106" relation="include">
        </childnode>
        <childnode refid="81108" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81060" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81109" relation="include">
        </childnode>
        <childnode refid="81075" relation="include">
        </childnode>
        <childnode refid="81069" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81110" relation="include">
        </childnode>
        <childnode refid="81111" relation="include">
        </childnode>
      </node>
      <node id="81095">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81086" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81096" relation="include">
        </childnode>
        <childnode refid="81097" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81089" relation="include">
        </childnode>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81098" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81060" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81099" relation="include">
        </childnode>
        <childnode refid="81102" relation="include">
        </childnode>
        <childnode refid="81103" relation="include">
        </childnode>
        <childnode refid="81112" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81113" relation="include">
        </childnode>
      </node>
      <node id="81054">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
      </node>
      <node id="81091">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81055" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
      </node>
      <node id="81079">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81046" relation="include">
        </childnode>
      </node>
      <node id="81077">
        <label>iosfwd</label>
      </node>
      <node id="81067">
        <label>cstdlib</label>
      </node>
      <node id="81068">
        <label>iostream</label>
      </node>
      <node id="81090">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81057" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
      </node>
      <node id="81092">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81047" relation="include">
        </childnode>
      </node>
      <node id="81073">
        <label>cstddef</label>
      </node>
      <node id="81100">
        <label>unordered_map</label>
      </node>
      <node id="81164">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="81077" relation="include">
        </childnode>
        <childnode refid="81090" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81101" relation="include">
        </childnode>
      </node>
      <node id="81139">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81045" relation="include">
        </childnode>
        <childnode refid="81134" relation="include">
        </childnode>
        <childnode refid="81137" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
        <childnode refid="81087" relation="include">
        </childnode>
        <childnode refid="81085" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81118" relation="include">
        </childnode>
      </node>
      <node id="81045">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81047" relation="include">
        </childnode>
        <childnode refid="81049" relation="include">
        </childnode>
        <childnode refid="81051" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81053" relation="include">
        </childnode>
        <childnode refid="81119" relation="include">
        </childnode>
        <childnode refid="81115" relation="include">
        </childnode>
        <childnode refid="81123" relation="include">
        </childnode>
        <childnode refid="81125" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
        <childnode refid="81132" relation="include">
        </childnode>
        <childnode refid="81133" relation="include">
        </childnode>
        <childnode refid="81121" relation="include">
        </childnode>
        <childnode refid="81120" relation="include">
        </childnode>
        <childnode refid="81122" relation="include">
        </childnode>
        <childnode refid="81134" relation="include">
        </childnode>
        <childnode refid="81137" relation="include">
        </childnode>
        <childnode refid="81142" relation="include">
        </childnode>
      </node>
      <node id="81089">
        <label>climits</label>
      </node>
      <node id="81142">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="81157">
        <label>mutex</label>
      </node>
      <node id="81097">
        <label>chrono</label>
      </node>
      <node id="81130">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="81111">
        <label>csignal</label>
      </node>
      <node id="81053">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
        <childnode refid="81117" relation="include">
        </childnode>
        <childnode refid="81118" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
      </node>
      <node id="81117">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
      </node>
      <node id="81155">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81156" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
        <childnode refid="81157" relation="include">
        </childnode>
        <childnode refid="81158" relation="include">
        </childnode>
        <childnode refid="81069" relation="include">
        </childnode>
        <childnode refid="81070" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
      </node>
      <node id="81087">
        <label>type_traits</label>
      </node>
      <node id="81156">
        <label>set</label>
      </node>
      <node id="81154">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="81054" relation="include">
        </childnode>
      </node>
      <node id="81057">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="81133">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="81054" relation="include">
        </childnode>
      </node>
      <node id="81075">
        <label>algorithm</label>
      </node>
      <node id="81094">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81084" relation="include">
        </childnode>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81095" relation="include">
        </childnode>
        <childnode refid="81051" relation="include">
        </childnode>
        <childnode refid="81115" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81116" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
      </node>
      <node id="81049">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="81050" relation="include">
        </childnode>
      </node>
      <node id="81123">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81124" relation="include">
        </childnode>
      </node>
      <node id="81118">
        <label>cstring</label>
      </node>
      <node id="81148">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81118" relation="include">
        </childnode>
        <childnode refid="81068" relation="include">
        </childnode>
        <childnode refid="81066" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81082" relation="include">
        </childnode>
        <childnode refid="81071" relation="include">
        </childnode>
        <childnode refid="81081" relation="include">
        </childnode>
        <childnode refid="81095" relation="include">
        </childnode>
        <childnode refid="81065" relation="include">
        </childnode>
      </node>
      <node id="81146">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="81088" relation="include">
        </childnode>
        <childnode refid="81056" relation="include">
        </childnode>
        <childnode refid="81062" relation="include">
        </childnode>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81076" relation="include">
        </childnode>
      </node>
      <node id="81072">
        <label>memory</label>
      </node>
      <node id="81132">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="81073" relation="include">
        </childnode>
        <childnode refid="81118" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
      </node>
      <node id="81061">
        <label>inttypes.h</label>
      </node>
      <node id="81121">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="81046" relation="include">
        </childnode>
        <childnode refid="81052" relation="include">
        </childnode>
        <childnode refid="81094" relation="include">
        </childnode>
        <childnode refid="81093" relation="include">
        </childnode>
        <childnode refid="81054" relation="include">
        </childnode>
        <childnode refid="81067" relation="include">
        </childnode>
      </node>
      <node id="81062">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="81063" relation="include">
        </childnode>
        <childnode refid="81064" relation="include">
        </childnode>
      </node>
      <node id="81144">
        <label>AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="81083" relation="include">
        </childnode>
        <childnode refid="81074" relation="include">
        </childnode>
        <childnode refid="81145" relation="include">
        </childnode>
        <childnode refid="81150" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="81181">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="81182" relation="include">
        </childnode>
      </node>
      <node id="81178">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="81174">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="81173">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX_ParticleCommunication.H"/>
        <childnode refid="81174" relation="include">
        </childnode>
        <childnode refid="81175" relation="include">
        </childnode>
      </node>
      <node id="81176">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="81177">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="81178" relation="include">
        </childnode>
      </node>
      <node id="81179">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="81175" relation="include">
        </childnode>
      </node>
      <node id="81180">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="81176" relation="include">
        </childnode>
        <childnode refid="81181" relation="include">
        </childnode>
        <childnode refid="81182" relation="include">
        </childnode>
      </node>
      <node id="81184">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="81175" relation="include">
        </childnode>
      </node>
      <node id="81175">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="81176" relation="include">
        </childnode>
        <childnode refid="81177" relation="include">
        </childnode>
        <childnode refid="81178" relation="include">
        </childnode>
        <childnode refid="81179" relation="include">
        </childnode>
        <childnode refid="81180" relation="include">
        </childnode>
        <childnode refid="81183" relation="include">
        </childnode>
      </node>
      <node id="81183">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="81184" relation="include">
        </childnode>
      </node>
      <node id="81182">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1NeighborUnpackPolicy" prot="public">amrex::NeighborUnpackPolicy</innerclass>
    <innerclass refid="structamrex_1_1RedistributeUnpackPolicy" prot="public">amrex::RedistributeUnpackPolicy</innerclass>
    <innerclass refid="structamrex_1_1ParticleCopyOp" prot="public">amrex::ParticleCopyOp</innerclass>
    <innerclass refid="structamrex_1_1ParticleCopyPlan" prot="public">amrex::ParticleCopyPlan</innerclass>
    <innerclass refid="structamrex_1_1GetSendBufferOffset" prot="public">amrex::GetSendBufferOffset</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLECOMMUNICATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLECOMMUNICATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuContainers_8H" kindref="compound">AMReX_GpuContainers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IntVect_8H" kindref="compound">AMReX_IntVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParticleBufferMap_8H" kindref="compound">AMReX_ParticleBufferMap.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MFIter_8H" kindref="compound">AMReX_MFIter.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structamrex_1_1NeighborUnpackPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NeighborUnpackPolicy" kindref="compound">NeighborUnpackPolicy</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PTile&gt;</highlight></codeline>
<codeline lineno="18" refid="structamrex_1_1NeighborUnpackPolicy_1a56d26fa2711af732a419aade635539f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NeighborUnpackPolicy_1a56d26fa2711af732a419aade635539f9" kindref="member">resizeTiles</ref><sp/>(std::vector&lt;PTile*&gt;&amp;<sp/>tiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>sizes,<sp/>std::vector&lt;int&gt;&amp;<sp/>offsets)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int&gt;(sizes.size());<sp/>++i)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>tiles[i]-&gt;numTotalParticles();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>tiles[i]-&gt;getNumNeighbors();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles[i]-&gt;setNumNeighbors(nn<sp/>+<sp/>sizes[i]);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsets.push_back(offset);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structamrex_1_1RedistributeUnpackPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1RedistributeUnpackPolicy" kindref="compound">RedistributeUnpackPolicy</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PTile&gt;</highlight></codeline>
<codeline lineno="33" refid="structamrex_1_1RedistributeUnpackPolicy_1a51817666198abf4c854612c9eb24b6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1RedistributeUnpackPolicy_1a51817666198abf4c854612c9eb24b6cb" kindref="member">resizeTiles</ref><sp/>(std::vector&lt;PTile*&gt;&amp;<sp/>tiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>sizes,<sp/>std::vector&lt;int&gt;&amp;<sp/>offsets)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sizes.size());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;PTile*,<sp/>int&gt;<sp/>tile_sizes;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_sizes[tiles[i]]<sp/>=<sp/>tiles[i]-&gt;numParticles();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsets.push_back(tile_sizes[tiles[i]]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_sizes[tiles[i]]<sp/>+=<sp/>sizes[i];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>tile_sizes)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv.first-&gt;resize(kv.second);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structamrex_1_1ParticleCopyOp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="structamrex_1_1ParticleCopyOp_1a5fbf90399c57c4fb121c1aac5ac825d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a5fbf90399c57c4fb121c1aac5ac825d7" kindref="member">m_boxes</ref>;</highlight></codeline>
<codeline lineno="55" refid="structamrex_1_1ParticleCopyOp_1a6bcb299fb24ae49438d9aff35ff1fee5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a6bcb299fb24ae49438d9aff35ff1fee5" kindref="member">m_levels</ref>;</highlight></codeline>
<codeline lineno="56" refid="structamrex_1_1ParticleCopyOp_1a8f1e282c58e59fdc95a3343a81ff0517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a8f1e282c58e59fdc95a3343a81ff0517" kindref="member">m_src_indices</ref>;</highlight></codeline>
<codeline lineno="57" refid="structamrex_1_1ParticleCopyOp_1a3486942c2721d9199b20c57461b5d31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;IntVect&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyOp_1a3486942c2721d9199b20c57461b5d31a" kindref="member">m_periodic_shift</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear<sp/>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumLevels<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_levels);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structamrex_1_1ParticleCopyOp_1ae90d8936b753addbb2025b490a5dd8f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyOp_1ae90d8936b753addbb2025b490a5dd8f8" kindref="member">numCopies</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_boxes.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>()<sp/>&lt;=<sp/>lev)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>=<sp/>m_boxes[lev].find(gid);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mit<sp/>==<sp/>m_boxes[lev].end()<sp/>?<sp/>0<sp/>:<sp/>mit-&gt;second.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1ParticleCopyPlan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75" refid="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" kindref="member">m_dst_indices</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structamrex_1_1ParticleCopyPlan_1ad7da12a244915034c0688b4eedccbeec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;unsigned int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ad7da12a244915034c0688b4eedccbeec" kindref="member">m_box_counts</ref>;</highlight></codeline>
<codeline lineno="78" refid="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;unsigned int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" kindref="member">m_box_offsets</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" kindref="member">m_rcv_box_counts</ref>;</highlight></codeline>
<codeline lineno="81" refid="structamrex_1_1ParticleCopyPlan_1a733fb4cb939752ebab350db17acfffa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a733fb4cb939752ebab350db17acfffa3" kindref="member">m_rcv_box_offsets</ref>;</highlight></codeline>
<codeline lineno="82" refid="structamrex_1_1ParticleCopyPlan_1a904274abbb6f2df42bb024021bc940e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a904274abbb6f2df42bb024021bc940e7" kindref="member">m_rcv_box_ids</ref>;</highlight></codeline>
<codeline lineno="83" refid="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" kindref="member">m_rcv_box_pids</ref>;</highlight></codeline>
<codeline lineno="84" refid="structamrex_1_1ParticleCopyPlan_1a6bea1df063b160fa8cd2bb83f9ea6062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a6bea1df063b160fa8cd2bb83f9ea6062" kindref="member">m_rcv_box_levs</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" kindref="member">m_NumSnds</ref>;</highlight></codeline>
<codeline lineno="87" refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>;</highlight></codeline>
<codeline lineno="88" refid="structamrex_1_1ParticleCopyPlan_1ab1268c5ed411da9959d9c18f97a92c9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Status&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ab1268c5ed411da9959d9c18f97a92c9e" kindref="member">m_build_stats</ref>;</highlight></codeline>
<codeline lineno="89" refid="structamrex_1_1ParticleCopyPlan_1ae99c8d354fa1ed4c85a8856eed87accc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Request&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ae99c8d354fa1ed4c85a8856eed87accc" kindref="member">m_build_rreqs</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structamrex_1_1ParticleCopyPlan_1aac55f2c595ea7f57832345df3d5fb78b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Status&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1aac55f2c595ea7f57832345df3d5fb78b" kindref="member">m_particle_stats</ref>;</highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Request&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" kindref="member">m_particle_rreqs</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" kindref="member">m_snd_num_particles</ref>;</highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" kindref="member">m_rcv_num_particles</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" kindref="member">m_neighbor_procs</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structamrex_1_1ParticleCopyPlan_1a4f11e52b07357018bf4097a60913ec01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a4f11e52b07357018bf4097a60913ec01" kindref="member">m_Snds</ref>;</highlight></codeline>
<codeline lineno="100" refid="structamrex_1_1ParticleCopyPlan_1a77c7aface2c0ecf8d3a8006c8924e8fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a77c7aface2c0ecf8d3a8006c8924e8fc" kindref="member">m_Rcvs</ref>;</highlight></codeline>
<codeline lineno="101" refid="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" kindref="member">m_RcvProc</ref>;</highlight></codeline>
<codeline lineno="102" refid="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" kindref="member">m_rOffset</ref>;</highlight></codeline>
<codeline lineno="103" refid="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::HostVector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" kindref="member">m_rcv_data</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" kindref="member">m_snd_offsets</ref>;</highlight></codeline>
<codeline lineno="106" refid="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" kindref="member">m_snd_counts</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structamrex_1_1ParticleCopyPlan_1a7bfedead4c32d33e5013a8b5df9c5245" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a7bfedead4c32d33e5013a8b5df9c5245" kindref="member">m_snd_pad_correction_h</ref>;</highlight></codeline>
<codeline lineno="109" refid="structamrex_1_1ParticleCopyPlan_1a3900fd1e88118efacebc15ddd99cbacf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a3900fd1e88118efacebc15ddd99cbacf" kindref="member">m_snd_pad_correction_d</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>;</highlight></codeline>
<codeline lineno="112" refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1PODVector" kindref="compound">Gpu::DeviceVector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" kindref="member">m_rcv_pad_correction_d</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>PC,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="115" refid="structamrex_1_1ParticleCopyPlan_1a9e7e36993ac94530af3bec8f0643764a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a9e7e36993ac94530af3bec8f0643764a" kindref="member">build</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref>&amp;<sp/>op,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ParticleCopyPlan::build&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_local<sp/>=<sp/>local;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngrow<sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>-<sp/>fix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_levels<sp/>=<sp/>pc.BufferMap().numLevels();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_buckets<sp/>=<sp/>pc.BufferMap().numBuckets();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_local)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_neighbor_procs<sp/>=<sp/>pc.NeighborProcs(ngrow);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_neighbor_procs.resize(<ref refid="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" kindref="member">ParallelContext::NProcsSub</ref>());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(m_neighbor_procs.begin(),<sp/>m_neighbor_procs.end(),<sp/>0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_box_counts.<ref refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" kindref="member">resize</ref>(0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_box_counts.<ref refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" kindref="member">resize</ref>(num_buckets+1,<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_box_offsets.<ref refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" kindref="member">resize</ref>(num_buckets+1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_box_counts<sp/>=<sp/>m_box_counts.<ref refid="classamrex_1_1PODVector_1aed3e37de016bb3a5bdeef31fe0f8b4e0" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getBucket<sp/>=<sp/>pc.BufferMap().getBucketFunctor();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_unsigned_int<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;unsigned int&gt;::max</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dst_indices.resize(num_levels);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;<sp/>lev<sp/>&lt;<sp/>num_levels;<sp/>++lev)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>pc.GetParticles(lev))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>kv.first.first;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1ae90d8936b753addbb2025b490a5dd8f8" kindref="member">numCopies</ref>(gid,<sp/>lev);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_copies<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dst_indices[lev][gid].resize(num_copies);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_boxes<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a5fbf90399c57c4fb121c1aac5ac825d7" kindref="member">m_boxes</ref>[lev].at(gid).<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_levs<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a6bcb299fb24ae49438d9aff35ff1fee5" kindref="member">m_levels</ref>[lev].at(gid).<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_indices<sp/>=<sp/>m_dst_indices[lev][gid].<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>num_copies,<sp/>i,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_box<sp/>=<sp/>p_boxes[i];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_box<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_lev<sp/>=<sp/>p_levs[i];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ac87e449691a622f1f9175c75cb79892a" kindref="member">Gpu::Atomic::Inc</ref>(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p_dst_box_counts[getBucket(dst_lev,<sp/>dst_box)],<sp/>max_unsigned_int);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_dst_indices[i]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a3f116832e254a3422729b3455b22f18c" kindref="member">amrex::Gpu::exclusive_scan</ref>(m_box_counts.<ref refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" kindref="member">begin</ref>(),<sp/>m_box_counts.<ref refid="classamrex_1_1PODVector_1a834016620c6c540a3af5cbe7a2637bed" kindref="member">end</ref>(),<sp/>m_box_offsets.<ref refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_snd_pad_correction_h.resize(0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_snd_pad_correction_h.resize(<ref refid="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" kindref="member">ParallelContext::NProcsSub</ref>()+1,<sp/>0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_snd_pad_correction_d.<ref refid="classamrex_1_1PODVector_1ac7b03a34c6a6ff4d2962494280652506" kindref="member">resize</ref>(m_snd_pad_correction_h.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a2c1110b22670288daa9e2a01cbb70fbb" kindref="member">Gpu::copy</ref>(<ref refid="namespaceamrex_1_1Gpu_1a4ffc2b3090d34803c0b78ee6f53d22a9" kindref="member">Gpu::hostToDevice</ref>,<sp/>m_snd_pad_correction_h.begin(),<sp/>m_snd_pad_correction_h.end(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_snd_pad_correction_d.<ref refid="classamrex_1_1PODVector_1a688bc1525c5bcb7456f6423383540666" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buildMPIStart(pc.BufferMap(),<sp/>pc.superParticleSize());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear<sp/>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildMPIFinish<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref>&amp;<sp/>map);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildMPIStart<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref>&amp;<sp/>map,<sp/>Long<sp/>psize);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Snds<sp/>-<sp/>a<sp/>Vector<sp/>with<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>that<sp/>is<sp/>process<sp/>will<sp/>send<sp/>to<sp/>each<sp/>proc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rcvs<sp/>-<sp/>a<sp/>Vector<sp/>that,<sp/>after<sp/>calling<sp/>this<sp/>method,<sp/>will<sp/>contain<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>bytes<sp/>this<sp/>process<sp/>will<sp/>reveive<sp/>from<sp/>each<sp/>proc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShake<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>local<sp/>version<sp/>of<sp/>this<sp/>method,<sp/>each<sp/>proc<sp/>knows<sp/>which<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>procs<sp/>it<sp/>could<sp/>possibly<sp/>receive<sp/>messages<sp/>from,<sp/>meaning<sp/>we<sp/>can<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>purely<sp/>with<sp/>point-to-point<sp/>communication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShakeLocal<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>global<sp/>version,<sp/>we<sp/>don&apos;t<sp/>know<sp/>who<sp/>we&apos;ll<sp/>receive<sp/>from,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>do<sp/>some<sp/>collective<sp/>communication<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShakeGlobal<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Another<sp/>version<sp/>of<sp/>the<sp/>above<sp/>that<sp/>is<sp/>implemented<sp/>using<sp/>MPI<sp/>All-to-All</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doHandShakeAllToAll<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Snds,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref>&amp;<sp/>Rcvs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" kindref="member">m_local</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structamrex_1_1GetSendBufferOffset" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1GetSendBufferOffset" kindref="compound">GetSendBufferOffset</ref></highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222" refid="structamrex_1_1GetSendBufferOffset_1a0ed01f542a7575b5a8d300c751d962b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="structamrex_1_1GetSendBufferOffset_1a0ed01f542a7575b5a8d300c751d962b2" kindref="member">m_box_offsets</ref>;</highlight></codeline>
<codeline lineno="223" refid="structamrex_1_1GetSendBufferOffset_1a81bc5519ac623a1d14e612f8fe202742" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t*<sp/><ref refid="structamrex_1_1GetSendBufferOffset_1a81bc5519ac623a1d14e612f8fe202742" kindref="member">m_pad_correction</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structamrex_1_1GetSendBufferOffset_1a6a63716df57946f90594a5a756582a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GetPID" kindref="compound">GetPID</ref><sp/><ref refid="structamrex_1_1GetSendBufferOffset_1a6a63716df57946f90594a5a756582a77" kindref="member">m_get_pid</ref>;</highlight></codeline>
<codeline lineno="226" refid="structamrex_1_1GetSendBufferOffset_1a7fed473672f976de3014a8116df479f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GetBucket" kindref="compound">GetBucket</ref><sp/><ref refid="structamrex_1_1GetSendBufferOffset_1a7fed473672f976de3014a8116df479f4" kindref="member">m_get_bucket</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structamrex_1_1GetSendBufferOffset_1ae0bd21edb636525d7e8011db403b9fca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GetSendBufferOffset_1ae0bd21edb636525d7e8011db403b9fca" kindref="member">GetSendBufferOffset</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref>&amp;<sp/>map)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_box_offsets(plan.m_box_offsets.dataPtr()),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pad_correction(plan.m_snd_pad_correction_d.dataPtr()),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_get_pid(map.getPIDFunctor()),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_get_bucket(map.getBucketFunctor())</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="236" refid="structamrex_1_1GetSendBufferOffset_1aff82a09f8083216881f94a0361a81a78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>operator()<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_lev,<sp/>std::size_t<sp/>psize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="237"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_pid<sp/>=<sp/>m_get_pid(dst_lev,<sp/>dst_box);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>dst_offset<sp/>=<sp/>psize*(m_box_offsets[m_get_bucket(dst_lev,<sp/>dst_box)]<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_offset<sp/>+=<sp/>m_pad_correction[dst_pid];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst_offset;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>Buffer,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="246" refid="namespaceamrex_1af4c8c19cb812cdbcc34bc408577bb25c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1af4c8c19cb812cdbcc34bc408577bb25c" kindref="member">packBuffer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref>&amp;<sp/>op,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer&amp;<sp/>snd_buffer)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::packBuffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ParticleType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParticleType;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>psize<sp/>=<sp/>pc.superParticleSize();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_levels<sp/>=<sp/>pc.BufferMap().numLevels();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_buckets<sp/>=<sp/>pc.BufferMap().numBuckets();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>total_buffer_size<sp/>=<sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" kindref="member">m_snd_offsets</ref>.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>()<sp/>==<sp/>0)<sp/>?<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" kindref="member">m_box_offsets</ref>[num_buckets]*psize<sp/>:<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" kindref="member">m_snd_offsets</ref>.back();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_buffer.resize(total_buffer_size);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_comm_real<sp/>=<sp/>pc.communicate_real_comp.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_comm_int<sp/><sp/>=<sp/>pc.communicate_int_comp.dataPtr();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;<sp/>lev<sp/>&lt;<sp/>num_levels;<sp/>++lev)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>geom<sp/>=<sp/>pc.Geom(lev);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>plev<sp/>=<sp/>pc.GetParticles(lev);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ba<sp/>=<sp/>pc.ParticleBoxArray(lev);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>plo<sp/>=<sp/>geom.ProbLoArray();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>phi<sp/>=<sp/>geom.ProbHiArray();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_per<sp/>=<sp/>geom.isPeriodicArray();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>plev)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>kv.first.first;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>kv.first.second;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>src_tile<sp/>=<sp/>plev.at(index);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>aos<sp/><sp/><sp/>=<sp/>src_tile.GetArrayOfStructs();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>src_tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1ae90d8936b753addbb2025b490a5dd8f8" kindref="member">numCopies</ref>(gid,<sp/>lev);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_copies<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_boxes<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a5fbf90399c57c4fb121c1aac5ac825d7" kindref="member">m_boxes</ref>[lev].at(gid).<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_levels<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a6bcb299fb24ae49438d9aff35ff1fee5" kindref="member">m_levels</ref>[lev].at(gid).<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_src_indices<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a8f1e282c58e59fdc95a3343a81ff0517" kindref="member">m_src_indices</ref>[lev].at(gid).<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_periodic_shift<sp/>=<sp/>op.<ref refid="structamrex_1_1ParticleCopyOp_1a3486942c2721d9199b20c57461b5d31a" kindref="member">m_periodic_shift</ref>[lev].at(gid).dataPtr();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_dst_indices<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" kindref="member">m_dst_indices</ref>[lev].at(gid).<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_snd_buffer<sp/>=<sp/>snd_buffer.dataPtr();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GetSendBufferOffset" kindref="compound">GetSendBufferOffset</ref><sp/>get_offset(plan,<sp/>pc.BufferMap());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>num_copies,<sp/>i,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_box<sp/>=<sp/>p_boxes[i];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_box<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_lev<sp/>=<sp/>p_levels[i];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dst_offset<sp/>=<sp/>get_offset(dst_box,<sp/>dst_lev,<sp/>psize,<sp/>p_dst_indices[i]);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_index<sp/>=<sp/>p_src_indices[i];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptd.packParticleData(p_snd_buffer,<sp/>src_index,<sp/>dst_offset,<sp/>p_comm_real,<sp/>p_comm_int);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParticleType*<sp/>p<sp/>=<sp/>(ParticleType*)<sp/>&amp;p_snd_buffer[dst_offset];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>pshift<sp/>=<sp/>p_periodic_shift[i];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>is_per[idim])<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pshift[idim]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;pos(idim)<sp/>+=<sp/>phi[idim]<sp/>-<sp/>plo[idim];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pshift[idim]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;pos(idim)<sp/>-=<sp/>phi[idim]<sp/>-<sp/>plo[idim];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PC,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnpackPolicy,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="321" refid="namespaceamrex_1a088b41cb8cc59ea2e3235669ca30b9b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a088b41cb8cc59ea2e3235669ca30b9b7" kindref="member">unpackBuffer</ref><sp/>(PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer&amp;<sp/>snd_buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnpackPolicy&amp;&amp;<sp/>policy)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::unpackBuffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PTile<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParticleTileType;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_levels<sp/>=<sp/>pc.BufferMap().numLevels();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>psize<sp/>=<sp/>pc.superParticleSize();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>how<sp/>many<sp/>particles<sp/>we<sp/>have<sp/>to<sp/>add<sp/>to<sp/>each<sp/>tile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>sizes;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PTile*&gt;<sp/>tiles;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;<sp/>lev<sp/>&lt;<sp/>num_levels;<sp/>++lev)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>mfi.LocalTileIndex();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pc.DefineAndReturnParticleTile(lev,<sp/>gid,<sp/>tid);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_copies<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ad7da12a244915034c0688b4eedccbeec" kindref="member">m_box_counts</ref>[pc.BufferMap().gridAndLevToBucket(gid,<sp/>lev)];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes.push_back(num_copies);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles.push_back(&amp;tile);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>the<sp/>tiles<sp/>and<sp/>compute<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>offsets;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>policy.resizeTiles(tiles,<sp/>sizes,<sp/>offsets);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_comm_real<sp/>=<sp/>pc.communicate_real_comp.dataPtr();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_comm_int<sp/><sp/>=<sp/>pc.communicate_int_comp.dataPtr();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>unpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;<sp/>lev<sp/>&lt;<sp/>num_levels;<sp/>++lev)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>plev<sp/><sp/>=<sp/>pc.GetParticles(lev);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi<sp/>=<sp/>pc.MakeMFIter(lev);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>mfi.LocalTileIndex();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::make_pair(gid,<sp/>tid);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>plev[index];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>aos<sp/><sp/><sp/>=<sp/>tile.GetArrayOfStructs();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GetSendBufferOffset" kindref="compound">GetSendBufferOffset</ref><sp/>get_offset(plan,<sp/>pc.BufferMap());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_snd_buffer<sp/>=<sp/>snd_buffer.dataPtr();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>offsets[uindex];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref><sp/>=<sp/>sizes[uindex];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++uindex;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getParticleTileData();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>size,<sp/>i,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>src_offset<sp/>=<sp/>get_offset(gid,<sp/>lev,<sp/>psize,<sp/>i);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_index<sp/>=<sp/>offset<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptd.unpackParticleData(p_snd_buffer,<sp/>src_offset,<sp/>dst_index,<sp/>p_comm_real,<sp/>p_comm_int);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PC,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="387" refid="namespaceamrex_1aecd4b7b3db27a6698403b2f272a378ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aecd4b7b3db27a6698403b2f272a378ea" kindref="member">communicateParticlesStart</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PC&amp;<sp/>pc,<sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer&amp;<sp/>snd_buffer,<sp/>Buffer&amp;<sp/>rcv_buffer)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::communicateParticlesStart&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>psize<sp/>=<sp/>pc.superParticleSize();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" kindref="member">ParallelContext::NProcsSub</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">MyProc</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a5f6737315bff6905419103b17acf3d06" kindref="member">ParallelContext::MyProcSub</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NProcs<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>RcvProc;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref><sp/>rOffset;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.resize(0);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.push_back(0);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>TotRcvBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" kindref="member">m_rcv_num_particles</ref>[i]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RcvProc.push_back(i);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rOffset.push_back(TotRcvBytes);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>nbytes<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" kindref="member">m_rcv_num_particles</ref>[i]*psize;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>acd<sp/>=<sp/>ParallelDescriptor::alignof_comm_data(nbytes);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotRcvBytes<sp/>=<sp/><ref refid="namespaceamrex_1ad67a8a03bbc2b472ade7e3d2a4866fa1" kindref="member">amrex::aligned_size</ref>(acd,<sp/>TotRcvBytes);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotRcvBytes<sp/>+=<sp/><ref refid="namespaceamrex_1ad67a8a03bbc2b472ade7e3d2a4866fa1" kindref="member">amrex::aligned_size</ref>(acd,<sp/>nbytes);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.push_back(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.back()<sp/>+<sp/>nbytes);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>[i]<sp/>=<sp/>rOffset[i]<sp/>-<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>[i];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" kindref="member">m_rcv_pad_correction_d</ref>.resize(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a2c1110b22670288daa9e2a01cbb70fbb" kindref="member">Gpu::copy</ref>(<ref refid="namespaceamrex_1_1Gpu_1a4ffc2b3090d34803c0b78ee6f53d22a9" kindref="member">Gpu::hostToDevice</ref>,<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.begin(),<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" kindref="member">m_rcv_pad_correction_h</ref>.end(),</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" kindref="member">m_rcv_pad_correction_d</ref>.begin());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>rcv_buffer.resize(TotRcvBytes);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref><sp/>=<sp/>RcvProc.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aac55f2c595ea7f57832345df3d5fb78b" kindref="member">m_particle_stats</ref>.resize(0);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aac55f2c595ea7f57832345df3d5fb78b" kindref="member">m_particle_stats</ref>.resize(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" kindref="member">m_particle_rreqs</ref>.resize(0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" kindref="member">m_particle_rreqs</ref>.resize(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">SeqNum</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>receives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Who<sp/><sp/><sp/><sp/>=<sp/>RcvProc[i];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>rOffset[i];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>nbytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" kindref="member">m_rcv_num_particles</ref>[Who]*psize;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>acd<sp/><sp/><sp/>=<sp/>ParallelDescriptor::alignof_comm_data(nbytes);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Cnt<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1ad67a8a03bbc2b472ade7e3d2a4866fa1" kindref="member">amrex::aligned_size</ref>(acd,<sp/>nbytes)<sp/>/<sp/>acd;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(Cnt<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(Cnt<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(Who<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>Who<sp/>&lt;<sp/>NProcs);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(<ref refid="namespaceamrex_1ad67a8a03bbc2b472ade7e3d2a4866fa1" kindref="member">amrex::aligned_size</ref>(acd,<sp/>nbytes)<sp/>%<sp/>acd<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comm_data_type<sp/>=<sp/>ParallelDescriptor::select_comm_data_type(nbytes);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm_data_type<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" kindref="member">m_particle_rreqs</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af5ed8a597f21464e9f2803f0e2afc0be" kindref="member">ParallelDescriptor::Arecv</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>(rcv_buffer.dataPtr()<sp/>+<sp/>offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum,<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" kindref="member">ParallelContext::CommunicatorSub</ref>()).req();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm_data_type<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" kindref="member">m_particle_rreqs</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af5ed8a597f21464e9f2803f0e2afc0be" kindref="member">ParallelDescriptor::Arecv</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*)<sp/>(rcv_buffer.dataPtr()<sp/>+<sp/>offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum,<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" kindref="member">ParallelContext::CommunicatorSub</ref>()).req();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm_data_type<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" kindref="member">m_particle_rreqs</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af5ed8a597f21464e9f2803f0e2afc0be" kindref="member">ParallelDescriptor::Arecv</ref>((ParallelDescriptor::lull_t<sp/>*)<sp/>(rcv_buffer.dataPtr()<sp/>+<sp/>offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum,<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" kindref="member">ParallelContext::CommunicatorSub</ref>()).req();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;TODO:<sp/>message<sp/>size<sp/>is<sp/>too<sp/>big&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" kindref="member">m_NumSnds</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>MyProc)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Who<sp/><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>nbytes<sp/><sp/><sp/><sp/><sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" kindref="member">m_snd_num_particles</ref>[i]*psize;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>acd<sp/>=<sp/>ParallelDescriptor::alignof_comm_data(nbytes);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Cnt<sp/><sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" kindref="member">m_snd_counts</ref>[i]<sp/>/<sp/>acd;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Cnt<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>snd_offset<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" kindref="member">m_snd_offsets</ref>[i];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" kindref="member">m_snd_counts</ref>[i]<sp/>%<sp/>acd<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(Who<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>Who<sp/>&lt;<sp/>NProcs);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(Cnt<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(snd_offset<sp/>%<sp/>acd<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comm_data_type<sp/>=<sp/>ParallelDescriptor::select_comm_data_type(nbytes);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm_data_type<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(snd_buffer.dataPtr()+snd_offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" kindref="member">ParallelContext::CommunicatorSub</ref>());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm_data_type<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*)(snd_buffer.dataPtr()+snd_offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum,<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" kindref="member">ParallelContext::CommunicatorSub</ref>());</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm_data_type<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>((ParallelDescriptor::lull_t<sp/>*)(snd_buffer.dataPtr()+snd_offset),<sp/>Cnt,<sp/>Who,<sp/>SeqNum,<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" kindref="member">ParallelContext::CommunicatorSub</ref>());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;TODO:<sp/>message<sp/>size<sp/>is<sp/>too<sp/>big&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(pc,plan,snd_buffer,rcv_buffer);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a814322d519ae32014737504164a0516b" kindref="member">communicateParticlesFinish</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PC,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnpackPolicy,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="505" refid="namespaceamrex_1a1dd1ea6c385ce3a863e1818566937e24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a1dd1ea6c385ce3a863e1818566937e24" kindref="member">unpackRemotes</ref><sp/>(PC&amp;<sp/>pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref>&amp;<sp/>plan,<sp/>Buffer&amp;<sp/>rcv_buffer,<sp/>UnpackPolicy&amp;&amp;<sp/>policy)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;amrex::unpackRemotes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">NProcs</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" kindref="member">ParallelContext::NProcsSub</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NProcs<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">MyProc</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a5f6737315bff6905419103b17acf3d06" kindref="member">ParallelContext::MyProcSub</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(MyProc);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PTile<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParticleTileType;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plan.<ref refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" kindref="member">m_nrcvs</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_comm_real<sp/>=<sp/>pc.communicate_real_comp.dataPtr();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_comm_int<sp/><sp/>=<sp/>pc.communicate_int_comp.dataPtr();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_rcv_buffer<sp/>=<sp/>rcv_buffer.dataPtr();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>sizes;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PTile*&gt;<sp/>tiles;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" kindref="member">m_rcv_box_counts</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copy_size<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" kindref="member">m_rcv_box_counts</ref>[i];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a6bea1df063b160fa8cd2bb83f9ea6062" kindref="member">m_rcv_box_levs</ref>[i];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a904274abbb6f2df42bb024021bc940e7" kindref="member">m_rcv_box_ids</ref>[i];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pc.DefineAndReturnParticleTile(lev,<sp/>gid,<sp/>tid);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes.push_back(copy_size);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiles.push_back(&amp;tile);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>offsets;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy.resizeTiles(tiles,<sp/>sizes,<sp/>offsets);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1Device_1a5ccf8e9a40fdaa00878353c79867bd04" kindref="member">Gpu::Device::synchronize</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>procindex<sp/>=<sp/>0,<sp/>rproc<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" kindref="member">m_rcv_box_pids</ref>[0];</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" kindref="member">m_rcv_box_counts</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a6bea1df063b160fa8cd2bb83f9ea6062" kindref="member">m_rcv_box_levs</ref>[i];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a904274abbb6f2df42bb024021bc940e7" kindref="member">m_rcv_box_ids</ref>[i];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a733fb4cb939752ebab350db17acfffa3" kindref="member">m_rcv_box_offsets</ref>[i];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procindex<sp/>=<sp/>(rproc<sp/>==<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" kindref="member">m_rcv_box_pids</ref>[i])<sp/>?<sp/>procindex<sp/>:<sp/>procindex+1;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rproc<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" kindref="member">m_rcv_box_pids</ref>[i];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pc.DefineAndReturnParticleTile(lev,<sp/>gid,<sp/>tid);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getParticleTileData();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(MyProc<sp/>==</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelContext_1aa0f73d99c17e1ccedb7f2e66a660f274" kindref="member">ParallelContext::global_to_local_rank</ref>(pc.ParticleDistributionMap(lev)[gid]));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_offset<sp/>=<sp/>offsets[uindex];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref><sp/>=<sp/>sizes[uindex];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++uindex;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>psize<sp/>=<sp/>pc.superParticleSize();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_pad_adjust<sp/>=<sp/>plan.<ref refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" kindref="member">m_rcv_pad_correction_d</ref>.dataPtr();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a39a4c246c2c105435c9df228aa98c2a6" kindref="member">AMREX_FOR_1D</ref><sp/>(<sp/>size,<sp/>ip,<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>src_offset<sp/>=<sp/>psize*(offset<sp/>+<sp/>ip)<sp/>+<sp/>p_pad_adjust[procindex];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_index<sp/>=<sp/>dst_offset<sp/>+<sp/>ip;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptd.unpackParticleData(p_rcv_buffer,<sp/>src_offset,<sp/>dst_index,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_comm_real,<sp/>p_comm_int);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(pc,plan,rcv_buffer,policy);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amrex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_PARTICLECOMMUNICATION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H"/>
  </compounddef>
</doxygen>
