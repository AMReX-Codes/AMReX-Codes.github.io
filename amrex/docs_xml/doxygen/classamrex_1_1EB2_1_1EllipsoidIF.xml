<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EB2_1_1EllipsoidIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::EllipsoidIF</compoundname>
    <basecompoundref refid="structamrex_1_1GPUable" prot="public" virt="non-virtual">amrex::GPUable</basecompoundref>
    <includes refid="AMReX__EB2__IF__Ellipsoid_8H" local="no">AMReX_EB2_IF_Ellipsoid.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1EllipsoidIF_1a1ba71f374b287b623a388dd3c3080135" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::EllipsoidIF::m_radii</definition>
        <argsstring></argsstring>
        <name>m_radii</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="44" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1EllipsoidIF_1a5778e3c639570e5f9e9f3ab7c1c1a417" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::EllipsoidIF::m_center</definition>
        <argsstring></argsstring>
        <name>m_center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1EllipsoidIF_1a3b6e4a2ba4e86b1b2857488b3453e37d" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::EllipsoidIF::m_sign</definition>
        <argsstring></argsstring>
        <name>m_sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="47" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1a12391461b3aaeda3b88f48f56bd7a38c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::EllipsoidIF::EllipsoidIF</definition>
        <argsstring>(const RealArray &amp;a_radii, const RealArray &amp;a_center, bool a_inside)</argsstring>
        <name>EllipsoidIF</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_radii</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1a9c2615676b866d2415bf91282cd38860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::EllipsoidIF::EllipsoidIF</definition>
        <argsstring>(const EllipsoidIF &amp;rhs) noexcept=default</argsstring>
        <name>EllipsoidIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1EllipsoidIF" kindref="compound">EllipsoidIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1a1e29d57e8cccd9f222f1f92102992453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::EllipsoidIF::EllipsoidIF</definition>
        <argsstring>(EllipsoidIF &amp;&amp;rhs) noexcept=default</argsstring>
        <name>EllipsoidIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1EllipsoidIF" kindref="compound">EllipsoidIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1ae531ef07a63120771391b6848c1a5061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1EllipsoidIF" kindref="compound">EllipsoidIF</ref> &amp;</type>
        <definition>EllipsoidIF&amp; amrex::EB2::EllipsoidIF::operator=</definition>
        <argsstring>(const EllipsoidIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1EllipsoidIF" kindref="compound">EllipsoidIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1aef4b94ae5b1d9654c2d54eda5e269476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1EllipsoidIF" kindref="compound">EllipsoidIF</ref> &amp;</type>
        <definition>EllipsoidIF&amp; amrex::EB2::EllipsoidIF::operator=</definition>
        <argsstring>(EllipsoidIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1EllipsoidIF" kindref="compound">EllipsoidIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1a873e22e55b07270d2825c521584bc5b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::EllipsoidIF::operator()</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z)) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1EllipsoidIF_1a473ae4749d679793645566fc4f345bd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::EllipsoidIF::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1209">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
      <node id="1208">
        <label>amrex::EB2::EllipsoidIF</label>
        <link refid="classamrex_1_1EB2_1_1EllipsoidIF"/>
        <childnode refid="1209" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1213">
        <label>Real</label>
      </node>
      <node id="1212">
        <label>amrex::XDim3</label>
        <link refid="structamrex_1_1XDim3"/>
        <childnode refid="1213" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
      <node id="1211">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
      <node id="1210">
        <label>amrex::EB2::EllipsoidIF</label>
        <link refid="classamrex_1_1EB2_1_1EllipsoidIF"/>
        <childnode refid="1211" relation="public-inheritance">
        </childnode>
        <childnode refid="1212" relation="usage">
          <edgelabel>m_center</edgelabel>
          <edgelabel>m_radii</edgelabel>
        </childnode>
        <childnode refid="1213" relation="usage">
          <edgelabel>m_sign</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" line="14" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H" bodystart="12" bodyend="48"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a12391461b3aaeda3b88f48f56bd7a38c" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>EllipsoidIF</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a9c2615676b866d2415bf91282cd38860" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>EllipsoidIF</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a1e29d57e8cccd9f222f1f92102992453" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>EllipsoidIF</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a5778e3c639570e5f9e9f3ab7c1c1a417" prot="protected" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>m_center</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a1ba71f374b287b623a388dd3c3080135" prot="protected" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>m_radii</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a3b6e4a2ba4e86b1b2857488b3453e37d" prot="protected" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>m_sign</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a873e22e55b07270d2825c521584bc5b0" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1a473ae4749d679793645566fc4f345bd0" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1ae531ef07a63120771391b6848c1a5061" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1EllipsoidIF_1aef4b94ae5b1d9654c2d54eda5e269476" prot="public" virt="non-virtual"><scope>amrex::EB2::EllipsoidIF</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
