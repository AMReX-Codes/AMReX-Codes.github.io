<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1ref__wrapper" kind="class" language="C++" prot="public">
    <compoundname>amrex::ref_wrapper</compoundname>
    <includes refid="AMReX__ParticleArray_8H" local="no">AMReX_ParticleArray.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ref__wrapper_1aed72fe005ae33391f22e0c498019797b" prot="public" static="no">
        <type>T</type>
        <definition>typedef T amrex::ref_wrapper&lt; T &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="45" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ref__wrapper_1ad6587c3974bf67afc32e7d313432b20e" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* amrex::ref_wrapper&lt; T &gt;::_ptr</definition>
        <argsstring></argsstring>
        <name>_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="63" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1aec548b435e6ba52441b7c436a859048a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::ref_wrapper&lt; T &gt;::ref_wrapper</definition>
        <argsstring>(T &amp;ref) noexcept</argsstring>
        <name>ref_wrapper</name>
        <param>
          <type>T &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="48" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1a8f3f054ecab74f9b3e738e5591b32e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ref_wrapper&lt; T &gt;::ref_wrapper</definition>
        <argsstring>(T &amp;&amp;)=delete</argsstring>
        <name>ref_wrapper</name>
        <param>
          <type>T &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="49" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1a8c3a6304e4d37687fb6c62fa26d7ebe5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ref_wrapper&lt; T &gt;::ref_wrapper</definition>
        <argsstring>(const ref_wrapper &amp;) noexcept=default</argsstring>
        <name>ref_wrapper</name>
        <param>
          <type>const <ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="50" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1a42c534331fe88f6513641cecef48d4b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE void amrex::ref_wrapper&lt; T &gt;::operator=</definition>
        <argsstring>(T &amp;&amp;a_other)</argsstring>
        <name>operator=</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>a_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1a70987580ee50f2baaf745b043497ed35" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref> &amp;</type>
        <definition>ref_wrapper&amp; amrex::ref_wrapper&lt; T &gt;::operator=</definition>
        <argsstring>(const ref_wrapper &amp;x) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="54" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1a1dc8e939592c5c6be1754bf8486bafc9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::ref_wrapper&lt; T &gt;::operator T&amp;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator T&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="57" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ref__wrapper_1a48fae2c492bcad7afe1baed7ed0bfc64" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> T &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE T&amp; amrex::ref_wrapper&lt; T &gt;::get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="60" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Because std::reference_wrapper is not <bold>host</bold> <bold>device</bold> </para>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="43" bodyend="64"/>
    <listofallmembers>
      <member refid="classamrex_1_1ref__wrapper_1ad6587c3974bf67afc32e7d313432b20e" prot="private" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>_ptr</name></member>
      <member refid="classamrex_1_1ref__wrapper_1a48fae2c492bcad7afe1baed7ed0bfc64" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>get</name></member>
      <member refid="classamrex_1_1ref__wrapper_1a1dc8e939592c5c6be1754bf8486bafc9" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>operator T&amp;</name></member>
      <member refid="classamrex_1_1ref__wrapper_1a42c534331fe88f6513641cecef48d4b2" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ref__wrapper_1a70987580ee50f2baaf745b043497ed35" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ref__wrapper_1aec548b435e6ba52441b7c436a859048a" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>ref_wrapper</name></member>
      <member refid="classamrex_1_1ref__wrapper_1a8f3f054ecab74f9b3e738e5591b32e91" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>ref_wrapper</name></member>
      <member refid="classamrex_1_1ref__wrapper_1a8c3a6304e4d37687fb6c62fa26d7ebe5" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>ref_wrapper</name></member>
      <member refid="classamrex_1_1ref__wrapper_1aed72fe005ae33391f22e0c498019797b" prot="public" virt="non-virtual"><scope>amrex::ref_wrapper</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
