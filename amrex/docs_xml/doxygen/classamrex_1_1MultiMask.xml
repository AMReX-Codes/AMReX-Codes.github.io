<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1MultiMask" kind="class" language="C++" prot="public">
    <compoundname>amrex::MultiMask</compoundname>
    <includes refid="AMReX__MultiMask_8H" local="no">AMReX_MultiMask.H</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1MultiMask_1a543302181bedff3235f600544f96197f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class MultiMaskIter</definition>
        <argsstring></argsstring>
        <name>MultiMaskIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MultiMask_1a30aad956b0f19c6b897f697915ebf80e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1Mask" kindref="compound">Mask</ref> &gt;</type>
        <definition>FabArray&lt;Mask&gt; amrex::MultiMask::m_fa</definition>
        <argsstring></argsstring>
        <name>m_fa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a1965badea589074d3865b6b7c258baa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiMask::MultiMask</definition>
        <argsstring>()</argsstring>
        <name>MultiMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a82389d75715d6277535cb793627c135e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiMask::MultiMask</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp)</argsstring>
        <name>MultiMask</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1aa6cb4358410dd413ca35d1ecdcc3fb0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiMask::MultiMask</definition>
        <argsstring>(const BoxArray &amp;regba, const DistributionMapping &amp;dm, const Geometry &amp;geom, Orientation face, int in_rad, int out_rad, int extent_rad, int ncomp, bool initval)</argsstring>
        <name>MultiMask</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>regba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extent_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="21" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a600deffa74aedae8cd4a0dc4d40bb31e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiMask::~MultiMask</definition>
        <argsstring>()=default</argsstring>
        <name>~MultiMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1aa1a1571e1a1ec3db4787a6a05e38403c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiMask::MultiMask</definition>
        <argsstring>(MultiMask &amp;&amp;rhs) noexcept=default</argsstring>
        <name>MultiMask</name>
        <param>
          <type><ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a17295aabe1cef5654de77c7133bea544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiMask::MultiMask</definition>
        <argsstring>(const MultiMask &amp;rhs)=delete</argsstring>
        <name>MultiMask</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a9b33ae3b53911061ae8e1130568b85af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;</type>
        <definition>MultiMask&amp; amrex::MultiMask::operator=</definition>
        <argsstring>(const MultiMask &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a243a3677b563ffcb634fef14aea3e2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;</type>
        <definition>MultiMask&amp; amrex::MultiMask::operator=</definition>
        <argsstring>(MultiMask &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1af6ad58f6413f1a7c247f26e74dd7aca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiMask::define</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="32" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a04dd68813ccdcb5e822955b2ec14e077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiMask::define</definition>
        <argsstring>(const BoxArray &amp;regba, const DistributionMapping &amp;dm, const Geometry &amp;geom, Orientation face, int in_rad, int out_rad, int extent_rad, int ncomp, bool initval)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>regba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extent_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp" bodystart="25" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1ada480977cbd644cd226e035c089f2594" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Mask" kindref="compound">Mask</ref> &amp;</type>
        <definition>Mask&amp; amrex::MultiMask::operator[]</definition>
        <argsstring>(const MFIter &amp;mfi) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1af88debd7ac3c502ae1348d86fbecd5f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Mask" kindref="compound">Mask</ref> &amp;</type>
        <definition>const Mask&amp; amrex::MultiMask::operator[]</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a07ecfe5beabbefdf561883084bc00f55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; int const  &gt;</type>
        <definition>Array4&lt;int const&gt; amrex::MultiMask::array</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>array</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1ae990efb7be524a9f1e21c8084eb9ac4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; int &gt;</type>
        <definition>Array4&lt;int &gt; amrex::MultiMask::array</definition>
        <argsstring>(const MFIter &amp;mfi) noexcept</argsstring>
        <name>array</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a36d695b32af9b38493af2d60083ff6ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MultiMask::nComp</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nComp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a8a918fcc2ec7aad2de9961ba43eb9398" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
        <definition>const BoxArray&amp; amrex::MultiMask::boxArray</definition>
        <argsstring>() const noexcept</argsstring>
        <name>boxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="44" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a9a56afa54c82c81ec0db1992cf1a8d7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping&amp; amrex::MultiMask::DistributionMap</definition>
        <argsstring>() const noexcept</argsstring>
        <name>DistributionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="46" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1MultiMask_1a9d21fed308318e770161ce5f76b4b60f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiMask::Copy</definition>
        <argsstring>(MultiMask &amp;dst, const MultiMask &amp;src)</argsstring>
        <name>Copy</name>
        <param>
          <type><ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiMask" kindref="compound">MultiMask</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="48" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp" bodystart="126" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5335">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="5316">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="5317" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="5320">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="5319">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="5319" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="5314">
        <label>amrex::FabArray&lt; amrex::Mask &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="5315" relation="public-inheritance">
        </childnode>
        <childnode refid="5319" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="5321" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="5329" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="5331" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="5333" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="5334" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="5336" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="5338" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="5336">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5337" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5330">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="5321">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5322" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5317">
        <label>string</label>
      </node>
      <node id="5338">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="5319" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="5332">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="5331">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5332" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5333">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="5337">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="5322">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="5327">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="5319" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="5328" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="5325">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="5326" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="5334">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5328">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="5326">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="5321" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="5329">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5318">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="5323">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="5324" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="5325" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="5313">
        <label>amrex::MultiMask</label>
        <link refid="classamrex_1_1MultiMask"/>
        <childnode refid="5314" relation="usage">
          <edgelabel>m_fa</edgelabel>
        </childnode>
      </node>
      <node id="5324">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="5315">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="5316" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="5318" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="5319" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="5320" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="5321" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="5323" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="5327" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H" bodystart="16" bodyend="55"/>
    <listofallmembers>
      <member refid="classamrex_1_1MultiMask_1a07ecfe5beabbefdf561883084bc00f55" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>array</name></member>
      <member refid="classamrex_1_1MultiMask_1ae990efb7be524a9f1e21c8084eb9ac4f" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>array</name></member>
      <member refid="classamrex_1_1MultiMask_1a8a918fcc2ec7aad2de9961ba43eb9398" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1MultiMask_1a9d21fed308318e770161ce5f76b4b60f" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>Copy</name></member>
      <member refid="classamrex_1_1MultiMask_1af6ad58f6413f1a7c247f26e74dd7aca3" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>define</name></member>
      <member refid="classamrex_1_1MultiMask_1a04dd68813ccdcb5e822955b2ec14e077" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>define</name></member>
      <member refid="classamrex_1_1MultiMask_1a9a56afa54c82c81ec0db1992cf1a8d7b" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MultiMask_1a30aad956b0f19c6b897f697915ebf80e" prot="private" virt="non-virtual"><scope>amrex::MultiMask</scope><name>m_fa</name></member>
      <member refid="classamrex_1_1MultiMask_1a1965badea589074d3865b6b7c258baa1" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>MultiMask</name></member>
      <member refid="classamrex_1_1MultiMask_1a82389d75715d6277535cb793627c135e" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>MultiMask</name></member>
      <member refid="classamrex_1_1MultiMask_1aa6cb4358410dd413ca35d1ecdcc3fb0f" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>MultiMask</name></member>
      <member refid="classamrex_1_1MultiMask_1aa1a1571e1a1ec3db4787a6a05e38403c" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>MultiMask</name></member>
      <member refid="classamrex_1_1MultiMask_1a17295aabe1cef5654de77c7133bea544" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>MultiMask</name></member>
      <member refid="classamrex_1_1MultiMask_1a543302181bedff3235f600544f96197f" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>MultiMaskIter</name></member>
      <member refid="classamrex_1_1MultiMask_1a36d695b32af9b38493af2d60083ff6ba" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>nComp</name></member>
      <member refid="classamrex_1_1MultiMask_1a9b33ae3b53911061ae8e1130568b85af" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MultiMask_1a243a3677b563ffcb634fef14aea3e2d5" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MultiMask_1ada480977cbd644cd226e035c089f2594" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1MultiMask_1af88debd7ac3c502ae1348d86fbecd5f4" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1MultiMask_1a600deffa74aedae8cd4a0dc4d40bb31e" prot="public" virt="non-virtual"><scope>amrex::MultiMask</scope><name>~MultiMask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
