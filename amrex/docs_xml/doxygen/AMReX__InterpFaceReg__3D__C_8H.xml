<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="AMReX__InterpFaceReg__3D__C_8H" kind="file" language="C++">
    <compoundname>AMReX_InterpFaceReg_3D_C.H</compoundname>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_INTERP_FACE_REG_3D_C_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_INTERP_FACE_REG_3D_C_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="7" refid="namespaceamrex_1a78a68acf45501af596b096939b49995c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aed91a03099231a70cb9d3fbf02d95081" kindref="member">interp_face_reg</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rr,<sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>,<sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ic<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(i,rr[0]);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jc<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(j,rr[1]);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kc<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(k,rr[2]);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idim<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc,n);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>(1)<sp/>&amp;&amp;<sp/>jc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1aa2ebf79e721706ee01738c9bb1cc13e7" kindref="member">bigEnd</ref>(1)<sp/>&amp;&amp;<sp/>rr[1]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sfy<sp/>=<sp/>Real(1.0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dc<sp/>=<sp/>Real(0.5)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc+1,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc-1,kc,n));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>df<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc+1,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc<sp/><sp/>,kc,n));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>db<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc<sp/><sp/>,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc-1,kc,n));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sy<sp/>=<sp/>(df*db<sp/>&gt;=<sp/>Real(0.0))<sp/>?</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(df),<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(db))<sp/>:<sp/>Real(0.);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>std::copysign(Real(1.),dc)*<ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sy,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dc));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc<sp/>!=<sp/>Real(0.0))<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfy<sp/>=<sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sfy,<sp/>sy<sp/>/<sp/>dc);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>yoff<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(j<sp/>-<sp/>jc*rr[1])<sp/>+<sp/>Real(0.5))<sp/>/<sp/>Real(rr[1])<sp/>-<sp/>Real(0.5);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>+=<sp/>yoff<sp/>*<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>*<sp/>sfy;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>(2)<sp/>&amp;&amp;<sp/>kc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1aa2ebf79e721706ee01738c9bb1cc13e7" kindref="member">bigEnd</ref>(2)<sp/>&amp;&amp;<sp/>rr[2]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sfz<sp/>=<sp/>Real(1.0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dc<sp/>=<sp/>Real(0.5)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc+1,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc-1,n));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>df<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc+1,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc<sp/><sp/>,n));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>db<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc<sp/><sp/>,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc-1,n));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sz<sp/>=<sp/>(df*db<sp/>&gt;=<sp/>Real(0.0))<sp/>?</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(df),<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(db))<sp/>:<sp/>Real(0.);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>std::copysign(Real(1.),dc)*<ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sz,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dc));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc<sp/>!=<sp/>Real(0.0))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfz<sp/>=<sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sfz,<sp/>sz<sp/>/<sp/>dc);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>zoff<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(k<sp/>-<sp/>kc*rr[2])<sp/>+<sp/>Real(0.5))<sp/>/<sp/>Real(rr[2])<sp/>-<sp/>Real(0.5);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>+=<sp/>zoff<sp/>*<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>*<sp/>sfz;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idim<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc,n);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ic<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>(0)<sp/>&amp;&amp;<sp/>ic<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1aa2ebf79e721706ee01738c9bb1cc13e7" kindref="member">bigEnd</ref>(0)<sp/>&amp;&amp;<sp/>rr[0]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sfx<sp/>=<sp/>Real(1.0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dc<sp/>=<sp/>Real(0.5)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic+1,jc,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic-1,jc,kc,n));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>df<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic+1,jc,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic<sp/><sp/>,jc,kc,n));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>db<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic<sp/><sp/>,jc,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic-1,jc,kc,n));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sx<sp/>=<sp/>(df*db<sp/>&gt;=<sp/>Real(0.0))<sp/>?</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(df),<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(db))<sp/>:<sp/>Real(0.);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>std::copysign(Real(1.),dc)*<ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sx,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dc));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc<sp/>!=<sp/>Real(0.0))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfx<sp/>=<sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sfx,<sp/>sx<sp/>/<sp/>dc);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>xoff<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>-<sp/>ic*rr[0])<sp/>+<sp/>Real(0.5))<sp/>/<sp/>Real(rr[0])<sp/>-<sp/>Real(0.5);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>+=<sp/>xoff<sp/>*<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>*<sp/>sfx;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>(2)<sp/>&amp;&amp;<sp/>kc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1aa2ebf79e721706ee01738c9bb1cc13e7" kindref="member">bigEnd</ref>(2)<sp/>&amp;&amp;<sp/>rr[2]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sfz<sp/>=<sp/>Real(1.0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dc<sp/>=<sp/>Real(0.5)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc+1,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc-1,n));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>df<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc+1,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc<sp/><sp/>,n));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>db<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc<sp/><sp/>,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc-1,n));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sz<sp/>=<sp/>(df*db<sp/>&gt;=<sp/>Real(0.0))<sp/>?</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(df),<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(db))<sp/>:<sp/>Real(0.);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>std::copysign(Real(1.),dc)*<ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sz,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dc));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc<sp/>!=<sp/>Real(0.0))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfz<sp/>=<sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sfz,<sp/>sz<sp/>/<sp/>dc);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>zoff<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(k<sp/>-<sp/>kc*rr[2])<sp/>+<sp/>Real(0.5))<sp/>/<sp/>Real(rr[2])<sp/>-<sp/>Real(0.5);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>+=<sp/>zoff<sp/>*<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>*<sp/>sfz;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc,kc,n);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ic<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>(0)<sp/>&amp;&amp;<sp/>ic<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1aa2ebf79e721706ee01738c9bb1cc13e7" kindref="member">bigEnd</ref>(0)<sp/>&amp;&amp;<sp/>rr[0]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sfx<sp/>=<sp/>Real(1.0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dc<sp/>=<sp/>Real(0.5)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic+1,jc,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic-1,jc,kc,n));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>df<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic+1,jc,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic<sp/><sp/>,jc,kc,n));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>db<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic<sp/><sp/>,jc,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic-1,jc,kc,n));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sx<sp/>=<sp/>(df*db<sp/>&gt;=<sp/>Real(0.0))<sp/>?</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(df),<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(db))<sp/>:<sp/>Real(0.);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>std::copysign(Real(1.),dc)*<ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sx,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dc));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc<sp/>!=<sp/>Real(0.0))<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfx<sp/>=<sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sfx,<sp/>sx<sp/>/<sp/>dc);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>xoff<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>-<sp/>ic*rr[0])<sp/>+<sp/>Real(0.5))<sp/>/<sp/>Real(rr[0])<sp/>-<sp/>Real(0.5);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>+=<sp/>xoff<sp/>*<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>*<sp/>sfx;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>(1)<sp/>&amp;&amp;<sp/>jc<sp/>!=<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1ad1bfd5b5828ff9cb9483b1a7c77277d3" kindref="member">domface</ref>.<ref refid="classamrex_1_1Box_1aa2ebf79e721706ee01738c9bb1cc13e7" kindref="member">bigEnd</ref>(1)<sp/>&amp;&amp;<sp/>rr[1]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sfy<sp/>=<sp/>Real(1.0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dc<sp/>=<sp/>Real(0.5)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc+1,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc-1,kc,n));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>df<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc+1,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc<sp/><sp/>,kc,n));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>db<sp/>=<sp/>Real(2.0)<sp/>*<sp/>(<ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc<sp/><sp/>,kc,n)<sp/>-<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a952c6efe16374645210c3308f3b335f6" kindref="member">crse</ref>(ic,jc-1,kc,n));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>sy<sp/>=<sp/>(df*db<sp/>&gt;=<sp/>Real(0.0))<sp/>?</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(df),<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(db))<sp/>:<sp/>Real(0.);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>std::copysign(Real(1.),dc)*<ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sy,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dc));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dc<sp/>!=<sp/>Real(0.0))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfy<sp/>=<sp/><ref refid="namespaceamrex_1a475e2bc71e3ca92b6b016fcb70af95bd" kindref="member">amrex::min</ref>(sfy,<sp/>sy<sp/>/<sp/>dc);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>yoff<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(j<sp/>-<sp/>jc*rr[1])<sp/>+<sp/>Real(0.5))<sp/>/<sp/>Real(rr[1])<sp/>-<sp/>Real(0.5);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a34fe8aaa018dd660e1e0cedd75ae040b" kindref="member">fine</ref>(i,j,k,n+scomp)<sp/>+=<sp/>yoff<sp/>*<sp/><ref refid="AMReX__InterpFaceRegister_8cpp_1a88afcd348f99c86370fb0bae46f7d73f" kindref="member">slope</ref>(i,j,k,n)<sp/>*<sp/>sfy;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceReg_3D_C.H"/>
  </compounddef>
</doxygen>
