<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MLCGSolver_8cpp" kind="file" language="C++">
    <compoundname>AMReX_MLCGSolver.cpp</compoundname>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">cmath</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__LO__BCTYPES_8H" local="no">AMReX_LO_BCTYPES.H</includes>
    <includes refid="AMReX__MLCGSolver_8H" local="no">AMReX_MLCGSolver.H</includes>
    <includes refid="AMReX__VisMF_8H" local="no">AMReX_VisMF.H</includes>
    <includes refid="AMReX__ParallelReduce_8H" local="no">AMReX_ParallelReduce.H</includes>
    <includes refid="AMReX__MLMG_8H" local="no">AMReX_MLMG.H</includes>
    <incdepgraph>
      <node id="67575">
        <label>list</label>
      </node>
      <node id="67640">
        <label>atomic</label>
      </node>
      <node id="67656">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
      </node>
      <node id="67675">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="67629" relation="include">
        </childnode>
        <childnode refid="67676" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67677" relation="include">
        </childnode>
        <childnode refid="67673" relation="include">
        </childnode>
        <childnode refid="67678" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
      </node>
      <node id="67624">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67625" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67584" relation="include">
        </childnode>
      </node>
      <node id="67595">
        <label>functional</label>
      </node>
      <node id="67568">
        <label>iomanip</label>
      </node>
      <node id="67712">
        <label>queue</label>
      </node>
      <node id="67618">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67599" relation="include">
        </childnode>
        <childnode refid="67620" relation="include">
        </childnode>
        <childnode refid="67615" relation="include">
        </childnode>
        <childnode refid="67621" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
      </node>
      <node id="67648">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
      </node>
      <node id="67566">
        <label>limits</label>
      </node>
      <node id="67627">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
      </node>
      <node id="67699">
        <label>AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="67636" relation="include">
        </childnode>
        <childnode refid="67700" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
        <childnode refid="67576" relation="include">
        </childnode>
      </node>
      <node id="67676">
        <label>iterator</label>
      </node>
      <node id="67612">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67609" relation="include">
        </childnode>
        <childnode refid="67613" relation="include">
        </childnode>
        <childnode refid="67584" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67615" relation="include">
        </childnode>
        <childnode refid="67616" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67617" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
      </node>
      <node id="67591">
        <label>float.h</label>
      </node>
      <node id="67665">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67607" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67588" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67617" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67569" relation="include">
        </childnode>
      </node>
      <node id="67637">
        <label>cstdint</label>
      </node>
      <node id="67688">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67618" relation="include">
        </childnode>
        <childnode refid="67622" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
        <childnode refid="67689" relation="include">
        </childnode>
        <childnode refid="67687" relation="include">
        </childnode>
        <childnode refid="67674" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67651" relation="include">
        </childnode>
      </node>
      <node id="67622">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="67599" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
      </node>
      <node id="67664">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
      </node>
      <node id="67635">
        <label>AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="67569" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67636" relation="include">
        </childnode>
        <childnode refid="67696" relation="include">
        </childnode>
      </node>
      <node id="67614">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="67588" relation="include">
        </childnode>
        <childnode refid="67584" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67610" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67592" relation="include">
        </childnode>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67569" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67602" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
      </node>
      <node id="67710">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67625" relation="include">
        </childnode>
        <childnode refid="67711" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67637" relation="include">
        </childnode>
        <childnode refid="67712" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67681" relation="include">
        </childnode>
        <childnode refid="67638" relation="include">
        </childnode>
        <childnode refid="67713" relation="include">
        </childnode>
        <childnode refid="67714" relation="include">
        </childnode>
      </node>
      <node id="67696">
        <label>AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67636" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
        <childnode refid="67697" relation="include">
        </childnode>
        <childnode refid="67699" relation="include">
        </childnode>
        <childnode refid="67702" relation="include">
        </childnode>
        <childnode refid="67710" relation="include">
        </childnode>
      </node>
      <node id="67578">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67580" relation="include">
        </childnode>
        <childnode refid="67582" relation="include">
        </childnode>
        <childnode refid="67584" relation="include">
        </childnode>
        <childnode refid="67585" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67588" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67592" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67595" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67581" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
      </node>
      <node id="67649">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="67580">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="67581" relation="include">
        </childnode>
      </node>
      <node id="67670">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="67655">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="67597" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
      </node>
      <node id="67715">
        <label>AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="67696" relation="include">
        </childnode>
        <childnode refid="67700" relation="include">
        </childnode>
        <childnode refid="67635" relation="include">
        </childnode>
      </node>
      <node id="67611">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67588" relation="include">
        </childnode>
      </node>
      <node id="67674">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="67598" relation="include">
        </childnode>
        <childnode refid="67625" relation="include">
        </childnode>
        <childnode refid="67568" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67624" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
      </node>
      <node id="67569">
        <label>cmath</label>
      </node>
      <node id="67583">
        <label>cassert</label>
      </node>
      <node id="67586">
        <label>stdexcept</label>
      </node>
      <node id="67629">
        <label>numeric</label>
      </node>
      <node id="67702">
        <label>AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="67703" relation="include">
        </childnode>
        <childnode refid="67634" relation="include">
        </childnode>
      </node>
      <node id="67666">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="67576" relation="include">
        </childnode>
        <childnode refid="67667" relation="include">
        </childnode>
        <childnode refid="67595" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67668" relation="include">
        </childnode>
        <childnode refid="67664" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
      </node>
      <node id="67621">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67615" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
      </node>
      <node id="67639">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="67569" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67602" relation="include">
        </childnode>
        <childnode refid="67576" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67640" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67641" relation="include">
        </childnode>
        <childnode refid="67621" relation="include">
        </childnode>
        <childnode refid="67642" relation="include">
        </childnode>
        <childnode refid="67644" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67627" relation="include">
        </childnode>
        <childnode refid="67648" relation="include">
        </childnode>
        <childnode refid="67649" relation="include">
        </childnode>
        <childnode refid="67597" relation="include">
        </childnode>
        <childnode refid="67650" relation="include">
        </childnode>
        <childnode refid="67651" relation="include">
        </childnode>
        <childnode refid="67592" relation="include">
        </childnode>
      </node>
      <node id="67572">
        <label>string</label>
      </node>
      <node id="67641">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="67612" relation="include">
        </childnode>
      </node>
      <node id="67599">
        <label>map</label>
      </node>
      <node id="67636">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="67637" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67638" relation="include">
        </childnode>
        <childnode refid="67681" relation="include">
        </childnode>
        <childnode refid="67695" relation="include">
        </childnode>
        <childnode refid="67687" relation="include">
        </childnode>
      </node>
      <node id="67647">
        <label>unordered_set</label>
      </node>
      <node id="67707">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67618" relation="include">
        </childnode>
        <childnode refid="67638" relation="include">
        </childnode>
        <childnode refid="67616" relation="include">
        </childnode>
        <childnode refid="67697" relation="include">
        </childnode>
        <childnode refid="67708" relation="include">
        </childnode>
        <childnode refid="67706" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67691" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67599" relation="include">
        </childnode>
      </node>
      <node id="67692">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="67693" relation="include">
        </childnode>
        <childnode refid="67694" relation="include">
        </childnode>
      </node>
      <node id="67631">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
      </node>
      <node id="67668">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="67605" relation="include">
        </childnode>
      </node>
      <node id="67565">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX_MLCGSolver.cpp"/>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67568" relation="include">
        </childnode>
        <childnode refid="67569" relation="include">
        </childnode>
        <childnode refid="67570" relation="include">
        </childnode>
        <childnode refid="67597" relation="include">
        </childnode>
        <childnode refid="67634" relation="include">
        </childnode>
        <childnode refid="67635" relation="include">
        </childnode>
        <childnode refid="67710" relation="include">
        </childnode>
        <childnode refid="67689" relation="include">
        </childnode>
        <childnode refid="67715" relation="include">
        </childnode>
      </node>
      <node id="67603">
        <label>cfloat</label>
      </node>
      <node id="67691">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="67688" relation="include">
        </childnode>
        <childnode refid="67690" relation="include">
        </childnode>
      </node>
      <node id="67650">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="67651" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
      </node>
      <node id="67625">
        <label>fstream</label>
      </node>
      <node id="67683">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67599" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67684" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
        <childnode refid="67685" relation="include">
        </childnode>
        <childnode refid="67687" relation="include">
        </childnode>
      </node>
      <node id="67690">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67688" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67638" relation="include">
        </childnode>
        <childnode refid="67685" relation="include">
        </childnode>
        <childnode refid="67651" relation="include">
        </childnode>
      </node>
      <node id="67706">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
      </node>
      <node id="67613">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="67590" relation="include">
        </childnode>
      </node>
      <node id="67703">
        <label>AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="67618" relation="include">
        </childnode>
        <childnode refid="67638" relation="include">
        </childnode>
        <childnode refid="67616" relation="include">
        </childnode>
        <childnode refid="67704" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
        <childnode refid="67706" relation="include">
        </childnode>
        <childnode refid="67707" relation="include">
        </childnode>
      </node>
      <node id="67685">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67576" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67686" relation="include">
        </childnode>
      </node>
      <node id="67604">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="67576" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67598" relation="include">
        </childnode>
        <childnode refid="67581" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67609" relation="include">
        </childnode>
        <childnode refid="67610" relation="include">
        </childnode>
      </node>
      <node id="67662">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67607" relation="include">
        </childnode>
        <childnode refid="67663" relation="include">
        </childnode>
        <childnode refid="67665" relation="include">
        </childnode>
        <childnode refid="67664" relation="include">
        </childnode>
      </node>
      <node id="67608">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="67700">
        <label>AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67701" relation="include">
        </childnode>
        <childnode refid="67681" relation="include">
        </childnode>
        <childnode refid="67695" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
      </node>
      <node id="67689">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
        <childnode refid="67674" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
      </node>
      <node id="67607">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="67587">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="67673">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="67599" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67674" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
      </node>
      <node id="67659">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67607" relation="include">
        </childnode>
        <childnode refid="67655" relation="include">
        </childnode>
        <childnode refid="67660" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
        <childnode refid="67661" relation="include">
        </childnode>
        <childnode refid="67662" relation="include">
        </childnode>
        <childnode refid="67666" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67641" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67657" relation="include">
        </childnode>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67669" relation="include">
        </childnode>
        <childnode refid="67670" relation="include">
        </childnode>
      </node>
      <node id="67693">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
        <childnode refid="67617" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67610" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
      </node>
      <node id="67633">
        <label>sys/types.h</label>
      </node>
      <node id="67687">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
      </node>
      <node id="67714">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="67595" relation="include">
        </childnode>
      </node>
      <node id="67628">
        <label>typeinfo</label>
      </node>
      <node id="67581">
        <label>cstdio</label>
      </node>
      <node id="67704">
        <label>AMReX_BCRec.H</label>
        <link refid="AMReX__BCRec_8H"/>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67705" relation="include">
        </childnode>
      </node>
      <node id="67653">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
      </node>
      <node id="67606">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67607" relation="include">
        </childnode>
      </node>
      <node id="67667">
        <label>tuple</label>
      </node>
      <node id="67705">
        <label>AMReX_BC_TYPES.H</label>
        <link refid="AMReX__BC__TYPES_8H"/>
      </node>
      <node id="67698">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="67636" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
      </node>
      <node id="67626">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="67571" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67598" relation="include">
        </childnode>
        <childnode refid="67581" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
      </node>
      <node id="67678">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="67651" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67637" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
      </node>
      <node id="67632">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67633" relation="include">
        </childnode>
      </node>
      <node id="67694">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="67574">
        <label>vector</label>
      </node>
      <node id="67571">
        <label>stack</label>
      </node>
      <node id="67680">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67674" relation="include">
        </childnode>
        <childnode refid="67649" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
      </node>
      <node id="67577">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="67578" relation="include">
        </childnode>
      </node>
      <node id="67592">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67569" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
      </node>
      <node id="67579">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="67605">
        <label>utility</label>
      </node>
      <node id="67576">
        <label>array</label>
      </node>
      <node id="67681">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67658" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67599" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67645" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67618" relation="include">
        </childnode>
        <childnode refid="67682" relation="include">
        </childnode>
        <childnode refid="67680" relation="include">
        </childnode>
        <childnode refid="67622" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
        <childnode refid="67597" relation="include">
        </childnode>
        <childnode refid="67584" relation="include">
        </childnode>
        <childnode refid="67627" relation="include">
        </childnode>
        <childnode refid="67687" relation="include">
        </childnode>
        <childnode refid="67674" relation="include">
        </childnode>
        <childnode refid="67688" relation="include">
        </childnode>
        <childnode refid="67690" relation="include">
        </childnode>
        <childnode refid="67649" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67691" relation="include">
        </childnode>
        <childnode refid="67639" relation="include">
        </childnode>
        <childnode refid="67651" relation="include">
        </childnode>
        <childnode refid="67692" relation="include">
        </childnode>
      </node>
      <node id="67638">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67639" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67680" relation="include">
        </childnode>
        <childnode refid="67569" relation="include">
        </childnode>
      </node>
      <node id="67598">
        <label>sstream</label>
      </node>
      <node id="67695">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="67681" relation="include">
        </childnode>
        <childnode refid="67691" relation="include">
        </childnode>
        <childnode refid="67674" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
      </node>
      <node id="67585">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="67586" relation="include">
        </childnode>
      </node>
      <node id="67609">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67610" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
      </node>
      <node id="67588">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="67589" relation="include">
        </childnode>
      </node>
      <node id="67660">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67655" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
      </node>
      <node id="67623">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="67584" relation="include">
        </childnode>
        <childnode refid="67624" relation="include">
        </childnode>
        <childnode refid="67626" relation="include">
        </childnode>
        <childnode refid="67627" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67588" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67628" relation="include">
        </childnode>
        <childnode refid="67567" relation="include">
        </childnode>
        <childnode refid="67595" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67629" relation="include">
        </childnode>
        <childnode refid="67630" relation="include">
        </childnode>
      </node>
      <node id="67597">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67598" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67599" relation="include">
        </childnode>
        <childnode refid="67600" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67602" relation="include">
        </childnode>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67603" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67588" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67618" relation="include">
        </childnode>
        <childnode refid="67622" relation="include">
        </childnode>
        <childnode refid="67623" relation="include">
        </childnode>
        <childnode refid="67631" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67632" relation="include">
        </childnode>
      </node>
      <node id="67643">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
      </node>
      <node id="67616">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
      </node>
      <node id="67610">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67579" relation="include">
        </childnode>
      </node>
      <node id="67573">
        <label>iosfwd</label>
      </node>
      <node id="67593">
        <label>cstdlib</label>
      </node>
      <node id="67594">
        <label>iostream</label>
      </node>
      <node id="67615">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67584" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
      </node>
      <node id="67697">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="67618" relation="include">
        </childnode>
        <childnode refid="67698" relation="include">
        </childnode>
      </node>
      <node id="67617">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67580" relation="include">
        </childnode>
      </node>
      <node id="67619">
        <label>cstddef</label>
      </node>
      <node id="67620">
        <label>unordered_map</label>
      </node>
      <node id="67682">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67615" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67621" relation="include">
        </childnode>
      </node>
      <node id="67677">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67651" relation="include">
        </childnode>
        <childnode refid="67673" relation="include">
        </childnode>
        <childnode refid="67675" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
        <childnode refid="67601" relation="include">
        </childnode>
        <childnode refid="67605" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67658" relation="include">
        </childnode>
      </node>
      <node id="67651">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67580" relation="include">
        </childnode>
        <childnode refid="67582" relation="include">
        </childnode>
        <childnode refid="67607" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67652" relation="include">
        </childnode>
        <childnode refid="67659" relation="include">
        </childnode>
        <childnode refid="67655" relation="include">
        </childnode>
        <childnode refid="67663" relation="include">
        </childnode>
        <childnode refid="67665" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
        <childnode refid="67671" relation="include">
        </childnode>
        <childnode refid="67672" relation="include">
        </childnode>
        <childnode refid="67661" relation="include">
        </childnode>
        <childnode refid="67660" relation="include">
        </childnode>
        <childnode refid="67662" relation="include">
        </childnode>
        <childnode refid="67673" relation="include">
        </childnode>
        <childnode refid="67675" relation="include">
        </childnode>
        <childnode refid="67679" relation="include">
        </childnode>
      </node>
      <node id="67602">
        <label>climits</label>
      </node>
      <node id="67701">
        <label>AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67639" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
      </node>
      <node id="67679">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="67646">
        <label>mutex</label>
      </node>
      <node id="67600">
        <label>chrono</label>
      </node>
      <node id="67669">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="67630">
        <label>csignal</label>
      </node>
      <node id="67652">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
        <childnode refid="67657" relation="include">
        </childnode>
        <childnode refid="67658" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
      </node>
      <node id="67708">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="67709" relation="include">
        </childnode>
        <childnode refid="67681" relation="include">
        </childnode>
        <childnode refid="67683" relation="include">
        </childnode>
      </node>
      <node id="67711">
        <label>thread</label>
      </node>
      <node id="67657">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
      </node>
      <node id="67709">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="67639" relation="include">
        </childnode>
        <childnode refid="67638" relation="include">
        </childnode>
      </node>
      <node id="67644">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67645" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67646" relation="include">
        </childnode>
        <childnode refid="67647" relation="include">
        </childnode>
        <childnode refid="67595" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
      </node>
      <node id="67601">
        <label>type_traits</label>
      </node>
      <node id="67645">
        <label>set</label>
      </node>
      <node id="67642">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="67643" relation="include">
        </childnode>
      </node>
      <node id="67584">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="67713">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67588" relation="include">
        </childnode>
      </node>
      <node id="67672">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="67643" relation="include">
        </childnode>
      </node>
      <node id="67570">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="67571" relation="include">
        </childnode>
        <childnode refid="67572" relation="include">
        </childnode>
        <childnode refid="67573" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67575" relation="include">
        </childnode>
        <childnode refid="67576" relation="include">
        </childnode>
        <childnode refid="67577" relation="include">
        </childnode>
      </node>
      <node id="67567">
        <label>algorithm</label>
      </node>
      <node id="67654">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67576" relation="include">
        </childnode>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67597" relation="include">
        </childnode>
        <childnode refid="67607" relation="include">
        </childnode>
        <childnode refid="67655" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67656" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
      </node>
      <node id="67634">
        <label>AMReX_LO_BCTYPES.H</label>
        <link refid="AMReX__LO__BCTYPES_8H"/>
      </node>
      <node id="67582">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="67583" relation="include">
        </childnode>
      </node>
      <node id="67663">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67664" relation="include">
        </childnode>
      </node>
      <node id="67658">
        <label>cstring</label>
      </node>
      <node id="67686">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67658" relation="include">
        </childnode>
        <childnode refid="67594" relation="include">
        </childnode>
        <childnode refid="67569" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67608" relation="include">
        </childnode>
        <childnode refid="67574" relation="include">
        </childnode>
        <childnode refid="67614" relation="include">
        </childnode>
        <childnode refid="67597" relation="include">
        </childnode>
        <childnode refid="67592" relation="include">
        </childnode>
      </node>
      <node id="67684">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="67566" relation="include">
        </childnode>
        <childnode refid="67578" relation="include">
        </childnode>
        <childnode refid="67590" relation="include">
        </childnode>
        <childnode refid="67604" relation="include">
        </childnode>
        <childnode refid="67611" relation="include">
        </childnode>
        <childnode refid="67612" relation="include">
        </childnode>
      </node>
      <node id="67596">
        <label>memory</label>
      </node>
      <node id="67671">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="67619" relation="include">
        </childnode>
        <childnode refid="67658" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
        <childnode refid="67596" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
      </node>
      <node id="67589">
        <label>inttypes.h</label>
      </node>
      <node id="67661">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="67579" relation="include">
        </childnode>
        <childnode refid="67606" relation="include">
        </childnode>
        <childnode refid="67654" relation="include">
        </childnode>
        <childnode refid="67653" relation="include">
        </childnode>
        <childnode refid="67643" relation="include">
        </childnode>
        <childnode refid="67593" relation="include">
        </childnode>
      </node>
      <node id="67590">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="67587" relation="include">
        </childnode>
        <childnode refid="67591" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LO__BCTYPES_8H" kindref="compound">AMReX_LO_BCTYPES.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLCGSolver_8H" kindref="compound">AMReX_MLCGSolver.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__VisMF_8H" kindref="compound">AMReX_VisMF.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelReduce_8H" kindref="compound">AMReX_ParallelReduce.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLMG_8H" kindref="compound">AMReX_MLMG.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">sxay<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>xx,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>yy,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yycomp,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nghost)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;CGSolver::sxay()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/><sp/>=<sp/>ss.nComp();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sscomp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xxcomp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1a0486c02587ea11cc9a30e9da8d7cf957" kindref="member">MultiFab::LinComb</ref>(ss,<sp/>1.0,<sp/>xx,<sp/>xxcomp,<sp/>a,<sp/>yy,<sp/>yycomp,<sp/>sscomp,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">sxay<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>xx,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>yy,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nghost)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>sxay(ss,xx,a,yy,0,nghost);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1ab03782948a095d52c81071f4926c0fff" kindref="member">MLCGSolver::MLCGSolver</ref><sp/>(MLMG*<sp/>a_mlmg,<sp/>MLLinOp&amp;<sp/>_lp,<sp/>Type<sp/>_typ)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>mlmg(a_mlmg),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lp(_lp),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>solver_type(_typ),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amrlev(0),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mglev(_lp.NMGLevels(0)-1)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(mlmg);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1ac0e9733d5de10430137f949ba8438c9d" kindref="member">MLCGSolver::~MLCGSolver</ref><sp/>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1ac0eadefb7faf267f91879b30fc5aa894" kindref="member">MLCGSolver::solve</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_abs)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solver_type<sp/>==<sp/>Type::BiCGStab)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solve_bicgstab(sol,rhs,eps_rel,eps_abs);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solve_cg(sol,rhs,eps_rel,eps_abs);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1aa40411197f3ef314c892e87e6275a351" kindref="member">MLCGSolver::solve_bicgstab</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_abs)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver::bicgstab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>sol.nComp();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba<sp/>=<sp/>sol.boxArray();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/>=<sp/>sol.DistributionMap();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>factory<sp/>=<sp/>sol.Factory();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>ph(ba,<sp/>dm,<sp/>ncomp,<sp/>sol.nGrow(),<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>sh(ba,<sp/>dm,<sp/>ncomp,<sp/>sol.nGrow(),<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ph.setVal(0.0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>sh.setVal(0.0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>sorig(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>p<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>r<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>s<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>rh<sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>v<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>t<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.correctionResidual(amrlev,<sp/>mglev,<sp/>r,<sp/>sol,<sp/>rhs,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884a548465e8241b26162c8e0a7b0cdfc5e7" kindref="member">MLLinOp::BCMode::Homogeneous</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>singular<sp/>remove<sp/>mean<sp/>from<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(Lp.isBottomSingular())<sp/>mlmg-&gt;makeSolvable(amrlev,<sp/>mglev,<sp/>r);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>normalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.normalize(amrlev,<sp/>mglev,<sp/>r);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(sorig,sol,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(rh,<sp/><sp/><sp/>r,<sp/><sp/>0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>sol.setVal(0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>rnorm<sp/>=<sp/>norm_inf(r);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>rnorm0<sp/><sp/><sp/>=<sp/>rnorm;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_BiCGStab:<sp/>Initial<sp/>error<sp/>(error0)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rnorm0<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>rho_1<sp/>=<sp/>0,<sp/>alpha<sp/>=<sp/>0,<sp/>omega<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rnorm0<sp/>==<sp/>0<sp/>||<sp/>rnorm0<sp/>&lt;<sp/>eps_abs<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_BiCGStab:<sp/>niter<sp/>=<sp/>0,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>rnorm<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rnorm<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>eps_abs<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eps_abs<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>&lt;=<sp/>maxiter;<sp/>++iter)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>rho<sp/>=<sp/>dotxy(rh,r);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rho<sp/>==<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(p,r,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>beta<sp/>=<sp/>(rho/rho_1)*(alpha/omega);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(p,<sp/>p,<sp/>-omega,<sp/>v,<sp/>nghost);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(p,<sp/>r,<sp/><sp/><sp/>beta,<sp/>p,<sp/>nghost);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(ph,p,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.apply(amrlev,<sp/>mglev,<sp/>v,<sp/>ph,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884a548465e8241b26162c8e0a7b0cdfc5e7" kindref="member">MLLinOp::BCMode::Homogeneous</ref>,<sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3a8e42c4bdb2369a1c5b19f6f120737334" kindref="member">MLLinOp::StateMode::Correction</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.normalize(amrlev,<sp/>mglev,<sp/>v);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>rhTv<sp/>=<sp/>dotxy(rh,v);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rhTv<sp/>!=<sp/>Real(0.0)<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>rho/rhTv;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(sol,<sp/>sol,<sp/><sp/>alpha,<sp/>ph,<sp/>nghost);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(s,<sp/><sp/><sp/><sp/><sp/>r,<sp/>-alpha,<sp/><sp/>v,<sp/>nghost);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Subtract<sp/>mean<sp/>from<sp/>s<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Lp.isBottomSingular())<sp/>mlmg-&gt;makeSolvable(amrlev,<sp/>mglev,<sp/>s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnorm<sp/>=<sp/>norm_inf(s);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>2<sp/>&amp;&amp;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_BiCGStab:<sp/>Half<sp/>Iter<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(11)<sp/>&lt;&lt;<sp/>iter</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rel.<sp/>err.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rnorm/(rnorm0)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rnorm<sp/>&lt;<sp/>eps_rel*rnorm0<sp/>||<sp/>rnorm<sp/>&lt;<sp/>eps_abs<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(sh,s,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.apply(amrlev,<sp/>mglev,<sp/>t,<sp/>sh,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884a548465e8241b26162c8e0a7b0cdfc5e7" kindref="member">MLLinOp::BCMode::Homogeneous</ref>,<sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3a8e42c4bdb2369a1c5b19f6f120737334" kindref="member">MLLinOp::StateMode::Correction</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.normalize(amrlev,<sp/>mglev,<sp/>t);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>little<sp/>funky.<sp/><sp/>I<sp/>want<sp/>to<sp/>elide<sp/>one<sp/>of<sp/>the<sp/>reductions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>following<sp/>two<sp/>dotxy()s.<sp/><sp/>We<sp/>do<sp/>that<sp/>by<sp/>calculating<sp/>the<sp/>&quot;local&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>and<sp/>then<sp/>reducing<sp/>the<sp/>two<sp/>local<sp/>values<sp/>at<sp/>the<sp/>same<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>tvals[2]<sp/>=<sp/>{<sp/>dotxy(t,t,</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>dotxy(t,s,</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1aa23714eb98f31ba71d565390dae2a7d2" kindref="member">BL_PROFILE_VAR</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver::ParallelAllReduce&quot;</highlight><highlight class="normal">,<sp/>blp_par);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelAllReduce_1a8f0fba40aa737060c0ac09832c9bf877" kindref="member">ParallelAllReduce::Sum</ref>(tvals,2,Lp.BottomCommunicator());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a82c334c787872a6bbacabe9a38389224" kindref="member">BL_PROFILE_VAR_STOP</ref>(blp_par);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tvals[0]<sp/>!=<sp/>Real(0.0)<sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omega<sp/>=<sp/>tvals[1]/tvals[0];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(sol,<sp/>sol,<sp/><sp/>omega,<sp/>sh,<sp/>nghost);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(r,<sp/><sp/><sp/><sp/><sp/>s,<sp/>-omega,<sp/><sp/>t,<sp/>nghost);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Lp.isBottomSingular())<sp/>mlmg-&gt;makeSolvable(amrlev,<sp/>mglev,<sp/>r);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnorm<sp/>=<sp/>norm_inf(r);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_BiCGStab:<sp/>Iteration<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(11)<sp/>&lt;&lt;<sp/>iter</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rel.<sp/>err.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rnorm/(rnorm0)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rnorm<sp/>&lt;<sp/>eps_rel*rnorm0<sp/>||<sp/>rnorm<sp/>&lt;<sp/>eps_abs<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>omega<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>rho;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_BiCGStab:<sp/>Final:<sp/>Iteration<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/>iter</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rel.<sp/>err.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rnorm/(rnorm0)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>rnorm<sp/>&gt;<sp/>eps_rel*rnorm0<sp/>&amp;&amp;<sp/>rnorm<sp/>&gt;<sp/>eps_abs)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad1cc69bc2c0172148e82713abb30d2dd" kindref="member">amrex::Warning</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver_BiCGStab::<sp/>failed<sp/>to<sp/>converge!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>ret<sp/>==<sp/>0<sp/>||<sp/>ret<sp/>==<sp/>8<sp/>)<sp/>&amp;&amp;<sp/>(rnorm<sp/>&lt;<sp/>rnorm0)<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.plus(sorig,<sp/>0,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.setVal(0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.plus(sorig,<sp/>0,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1a8f5383cd09372e80bdf1b309546f8424" kindref="member">MLCGSolver::solve_cg</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_abs)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver::cg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>sol.nComp();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba<sp/>=<sp/>sol.boxArray();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/>=<sp/>sol.DistributionMap();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>factory<sp/>=<sp/>sol.Factory();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>p(ba,<sp/>dm,<sp/>ncomp,<sp/>sol.nGrow(),<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>p.setVal(0.0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>sorig(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>r<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>z<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>q<sp/><sp/><sp/><sp/>(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost,<sp/>MFInfo(),<sp/>factory);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(sorig,sol,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.correctionResidual(amrlev,<sp/>mglev,<sp/>r,<sp/>sol,<sp/>rhs,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884a548465e8241b26162c8e0a7b0cdfc5e7" kindref="member">MLLinOp::BCMode::Homogeneous</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>sol.setVal(0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnorm<sp/><sp/><sp/><sp/>=<sp/>norm_inf(r);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>rnorm0<sp/><sp/><sp/>=<sp/>rnorm;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_CG:<sp/>Initial<sp/>error<sp/>(error0)<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rnorm0<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>rho_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rnorm0<sp/>==<sp/>0<sp/>||<sp/>rnorm0<sp/>&lt;<sp/>eps_abs<sp/>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_CG:<sp/>niter<sp/>=<sp/>0,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>rnorm<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rnorm<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>eps_abs<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eps_abs<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>&lt;=<sp/>maxiter;<sp/>++iter)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(z,r,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>rho<sp/>=<sp/>dotxy(z,r);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rho<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(p,z,0,0,ncomp,nghost);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>beta<sp/>=<sp/>rho/rho_1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(p,<sp/>z,<sp/>beta,<sp/>p,<sp/>nghost);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.apply(amrlev,<sp/>mglev,<sp/>q,<sp/>p,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884a548465e8241b26162c8e0a7b0cdfc5e7" kindref="member">MLLinOp::BCMode::Homogeneous</ref>,<sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3a8e42c4bdb2369a1c5b19f6f120737334" kindref="member">MLLinOp::StateMode::Correction</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>alpha;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>pw<sp/>=<sp/>dotxy(p,q);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pw<sp/>!=<sp/>Real(0.0))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>rho/pw;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_cg:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>iter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rho<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rho</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>alpha<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>alpha<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(sol,<sp/>sol,<sp/>alpha,<sp/>p,<sp/>nghost);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxay(<sp/><sp/>r,<sp/><sp/><sp/>r,-alpha,<sp/>q,<sp/>nghost);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnorm<sp/>=<sp/>norm_inf(r);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_cg:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Iteration&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/>iter</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rel.<sp/>err.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rnorm/(rnorm0)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rnorm<sp/>&lt;<sp/>eps_rel*rnorm0<sp/>||<sp/>rnorm<sp/>&lt;<sp/>eps_abs<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>rho;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MLCGSolver_cg:<sp/>Final<sp/>Iteration&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/>iter</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rel.<sp/>err.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rnorm/(rnorm0)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><sp/>rnorm<sp/>&gt;<sp/>eps_rel*rnorm0<sp/>&amp;&amp;<sp/>rnorm<sp/>&gt;<sp/>eps_abs<sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad1cc69bc2c0172148e82713abb30d2dd" kindref="member">amrex::Warning</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver_cg:<sp/>failed<sp/>to<sp/>converge!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>ret<sp/>==<sp/>0<sp/>||<sp/>ret<sp/>==<sp/>8<sp/>)<sp/>&amp;&amp;<sp/>(rnorm<sp/>&lt;<sp/>rnorm0)<sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.plus(sorig,<sp/>0,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.setVal(0);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.plus(sorig,<sp/>0,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1ac69d7bd7f9e2c35ce9602d24f93c4e77" kindref="member">MLCGSolver::dotxy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>z,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1afc7eb8ed52544707f7b8bf678210fa48" kindref="member">BL_PROFILE_VAR_NS</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver::ParallelAllReduce&quot;</highlight><highlight class="normal">,<sp/>blp_par);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!local)<sp/>{<sp/><ref refid="AMReX__BLProfiler_8H_1a100d10b382fff9099a61671e766e1f19" kindref="member">BL_PROFILE_VAR_START</ref>(blp_par);<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>result<sp/>=<sp/>Lp.xdoty(amrlev,<sp/>mglev,<sp/>r,<sp/>z,<sp/>local);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!local)<sp/>{<sp/><ref refid="AMReX__BLProfiler_8H_1a82c334c787872a6bbacabe9a38389224" kindref="member">BL_PROFILE_VAR_STOP</ref>(blp_par);<sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="classamrex_1_1MLCGSolver_1a6c5043394d5c5290cb302d38c5d08226" kindref="member">MLCGSolver::norm_inf</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>res,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>res.nComp();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>result<sp/>=<sp/>std::numeric_limits&lt;Real&gt;::lowest();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;ncomp;<sp/>n++)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(result,res.norm0(n,0,</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!local)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLCGSolver::ParallelAllReduce&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelAllReduce_1abc654239660dfc6eb557813ef5314650" kindref="member">ParallelAllReduce::Max</ref>(result,<sp/>Lp.BottomCommunicator());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp"/>
  </compounddef>
</doxygen>
