<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1HypreABecLap3" kind="class" language="C++" prot="public" final="yes">
    <compoundname>amrex::HypreABecLap3</compoundname>
    <basecompoundref refid="classamrex_1_1Hypre" prot="public" virt="non-virtual">amrex::Hypre</basecompoundref>
    <includes refid="AMReX__HypreABecLap3_8H" local="no">AMReX_HypreABecLap3.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a5315b73e446b5f629e873416fa8ae149" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1HypreIJIface" kindref="compound">HypreIJIface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HypreIJIface&gt; amrex::HypreABecLap3::hypre_ij</definition>
        <argsstring></argsstring>
        <name>hypre_ij</name>
        <qualifiedname>amrex::HypreABecLap3::hypre_ij</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="39" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a3094f9b4df6d8bc23577d00b40087587" prot="private" static="no" mutable="no">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreABecLap3::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <qualifiedname>amrex::HypreABecLap3::A</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="42" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1aac9a18102f9bc2f5b4b060e49fabaea0" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreABecLap3::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>amrex::HypreABecLap3::b</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="43" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1accd2cc8cf99841dfb7a1707ddfe3ca8e" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreABecLap3::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>amrex::HypreABecLap3::x</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="44" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a2e125c8d535cb75d33aee7d83be455d7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; HYPRE_Int &gt;</type>
        <definition>LayoutData&lt;HYPRE_Int&gt; amrex::HypreABecLap3::ncells_grid</definition>
        <argsstring></argsstring>
        <name>ncells_grid</name>
        <qualifiedname>amrex::HypreABecLap3::ncells_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="46" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a4e1e2418ad02ffb9cfde30d4a611c5f7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; HYPRE_Int &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;HYPRE_Int&gt; &gt; amrex::HypreABecLap3::cell_id</definition>
        <argsstring></argsstring>
        <name>cell_id</name>
        <qualifiedname>amrex::HypreABecLap3::cell_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="47" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a17dd1f8e2e836736e48e804799f4ec1d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; HYPRE_Int &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;HYPRE_Int&gt; &gt; amrex::HypreABecLap3::cell_id_vec</definition>
        <argsstring></argsstring>
        <name>cell_id_vec</name>
        <qualifiedname>amrex::HypreABecLap3::cell_id_vec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="48" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a8f0e80c22cb3ef511cf2dc5b8b5fcd77" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const  *</type>
        <definition>MultiFab const* amrex::HypreABecLap3::m_eb_b_coeffs</definition>
        <argsstring></argsstring>
        <name>m_eb_b_coeffs</name>
        <qualifiedname>amrex::HypreABecLap3::m_eb_b_coeffs</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="50" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap3_1a5deec6d79b32b6214a8ed086a2129e8d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const  *</type>
        <definition>iMultiFab const* amrex::HypreABecLap3::m_overset_mask</definition>
        <argsstring></argsstring>
        <name>m_overset_mask</name>
        <qualifiedname>amrex::HypreABecLap3::m_overset_mask</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="52" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1aea1735051057b26a6a0852159711f029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreABecLap3::HypreABecLap3</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom_, MPI_Comm comm_, const iMultiFab *overset_mask=nullptr)</argsstring>
        <name>HypreABecLap3</name>
        <qualifiedname>amrex::HypreABecLap3::HypreABecLap3</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> *</type>
          <declname>overset_mask</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="21" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a9990778a6ed9b97e1c316a55946755a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreABecLap3::~HypreABecLap3</definition>
        <argsstring>() override</argsstring>
        <name>~HypreABecLap3</name>
        <qualifiedname>amrex::HypreABecLap3::~HypreABecLap3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1ae5aa9ca65d4f13368e5ffffa0ed7c15b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreABecLap3::HypreABecLap3</definition>
        <argsstring>(HypreABecLap3 const &amp;)=delete</argsstring>
        <name>HypreABecLap3</name>
        <qualifiedname>amrex::HypreABecLap3::HypreABecLap3</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreABecLap3" kindref="compound">HypreABecLap3</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="26" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1aacfe928a277883d188564721c0c55a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreABecLap3::HypreABecLap3</definition>
        <argsstring>(HypreABecLap3 &amp;&amp;)=delete</argsstring>
        <name>HypreABecLap3</name>
        <qualifiedname>amrex::HypreABecLap3::HypreABecLap3</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreABecLap3" kindref="compound">HypreABecLap3</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a5ecd8652e316e3ebede0b4eef0e20cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreABecLap3" kindref="compound">HypreABecLap3</ref> &amp;</type>
        <definition>HypreABecLap3 &amp; amrex::HypreABecLap3::operator=</definition>
        <argsstring>(HypreABecLap3 const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::HypreABecLap3::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreABecLap3" kindref="compound">HypreABecLap3</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="28" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a2fe1a1920cb0d7e13ab2d2f831eb1d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreABecLap3" kindref="compound">HypreABecLap3</ref> &amp;</type>
        <definition>HypreABecLap3 &amp; amrex::HypreABecLap3::operator=</definition>
        <argsstring>(HypreABecLap3 &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::HypreABecLap3::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreABecLap3" kindref="compound">HypreABecLap3</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="29" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a8aab0e1b05eed8423e2b70979ff703d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap3::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order) override</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::HypreABecLap3::solve</qualifiedname>
        <reimplements refid="classamrex_1_1Hypre_1accd025c6669f7d68aa001f5c4d1582ad">solve</reimplements>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="31" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp" bodystart="30" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a73956b5120ef6513532cb22e2e8335ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap3::prepareSolver</definition>
        <argsstring>()</argsstring>
        <name>prepareSolver</name>
        <qualifiedname>amrex::HypreABecLap3::prepareSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="55" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp" bodystart="88" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a42b94b56191d33a7f5ba9e1f119ac6b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap3::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <qualifiedname>amrex::HypreABecLap3::getSolution</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="56" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp" bodystart="61" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap3_1a1e022b7b14f485c9d9aa5ab1bb52a929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap3::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <qualifiedname>amrex::HypreABecLap3::loadVectors</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="57" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp" bodystart="511" bodyend="685"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
      </node>
      <node id="1">
        <label>amrex::HypreABecLap3</label>
        <link refid="classamrex_1_1HypreABecLap3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="75">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>amrex::Array4CopyTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4CopyTag"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>dbox</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>amrex::BaseFab&lt; HYPRE_Int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::BoxND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="89">
        <label>amrex::CommRecvBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommRecvBufTag"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::CommSendBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommSendBufTag"/>
        <childnode refid="78" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="95">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="150">
        <label>amrex::FBData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="136">
        <label>amrex::FBData&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="113" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="141">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="144" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="149" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="151" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="153" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="130">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="131" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="133" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="135" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="137" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="139" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="143">
        <label>amrex::FabFactory&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="132">
        <label>amrex::FabFactory&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="114">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="7">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="27">
        <label>amrex::IndexTypeND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="16">
        <label>K</label>
      </node>
      <node id="127">
        <label>amrex::LayoutData&lt; HYPRE_Int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="128" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="78" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="152">
        <label>amrex::PCData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="141" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="138">
        <label>amrex::PCData&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="130" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>T</label>
      </node>
      <node id="84">
        <label>amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="85" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="89" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="93" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>amrex::Vector&lt; HYPRE_Int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>amrex::Vector&lt; amrex::mpidatatypes::MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="62" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="64" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="35">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="36" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="33" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="30" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="23">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="24" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="25" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="116" relation="public-inheritance">
        </childnode>
        <childnode refid="117" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
        <childnode refid="120" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="123" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="116">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="22" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="35" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="55" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="36" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="4">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="5" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="61" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="42">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="43" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="45" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="44" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="71">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="13">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="14" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="49" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="112">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_offset</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="9" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="97">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="98" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="53">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="3">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
        <childnode refid="3" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>scalar_a</edgelabel>
          <edgelabel>scalar_b</edgelabel>
          <edgelabel>strong_threshold</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>options_namespace</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
        </childnode>
        <childnode refid="114" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="115" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::HypreABecLap3</label>
        <link refid="classamrex_1_1HypreABecLap3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="125" relation="usage">
          <edgelabel>hypre_ij</edgelabel>
        </childnode>
        <childnode refid="127" relation="usage">
          <edgelabel>ncells_grid</edgelabel>
        </childnode>
        <childnode refid="130" relation="usage">
          <edgelabel>cell_id</edgelabel>
          <edgelabel>cell_id_vec</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_eb_b_coeffs</edgelabel>
        </childnode>
        <childnode refid="140" relation="usage">
          <edgelabel>m_overset_mask</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>amrex::HypreIJIface</label>
        <link refid="classamrex_1_1HypreIJIface"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_file_prefix</edgelabel>
          <edgelabel>m_preconditioner_name</edgelabel>
          <edgelabel>m_solver_name</edgelabel>
        </childnode>
      </node>
      <node id="145">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="146" relation="public-inheritance">
        </childnode>
        <childnode refid="147" relation="usage">
          <edgelabel>ifabio</edgelabel>
        </childnode>
      </node>
      <node id="148">
        <label>amrex::IFABio</label>
        <link refid="classamrex_1_1IFABio"/>
      </node>
      <node id="14">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="55">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="66">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="11">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="101">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="30" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Real</label>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="5" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="140">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="87" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="91" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="48" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>std::map&lt; std::uint64_t, std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="83" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="48" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="35" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="41" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="51">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>std::mutex</label>
      </node>
      <node id="9">
        <label>std::string</label>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="129">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="124">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="119">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="99" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="51" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="95" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="149">
        <label>std::unique_ptr&lt; amrex::FBData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="150" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="135">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt; &gt;</label>
        <childnode refid="136" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="141" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="139">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt; &gt;</label>
        <childnode refid="130" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="59" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="142">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="143" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="131">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt; &gt;</label>
        <childnode refid="132" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="125">
        <label>std::unique_ptr&lt; amrex::HypreIJIface &gt;</label>
        <childnode refid="126" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="147">
        <label>std::unique_ptr&lt; amrex::IFABio &gt;</label>
        <childnode refid="148" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="111" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="151">
        <label>std::unique_ptr&lt; amrex::PCData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="152" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="137">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt; &gt;</label>
        <childnode refid="138" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="84" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="88" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="92" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
        <childnode refid="69" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="70">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="71" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="144">
        <label>std::vector&lt; IArrayBox * &gt;</label>
        <childnode refid="145" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="133">
        <label>std::vector&lt; amrex::BaseFab&lt; HYPRE_Int &gt; * &gt;</label>
        <childnode refid="134" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="39">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="21">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H" bodystart="18" bodyend="58"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreABecLap3_1a3094f9b4df6d8bc23577d00b40087587" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>A</name></member>
      <member refid="classamrex_1_1Hypre_1a1ab65d249a3254eb6540bedcc9ebf285" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1aac9a18102f9bc2f5b4b060e49fabaea0" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>b</name></member>
      <member refid="classamrex_1_1Hypre_1a097bf586d48d127374ec0d293dd3bd41" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a4e1e2418ad02ffb9cfde30d4a611c5f7" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>cell_id</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a17dd1f8e2e836736e48e804799f4ec1d" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>cell_id_vec</name></member>
      <member refid="classamrex_1_1Hypre_1a55f4b29b2291555432bbc82aa86c0931" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>comm</name></member>
      <member refid="classamrex_1_1Hypre_1a6eb22e62b62ea0d2bcfef92f18df5304" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1Hypre_1a49181827cb7d3a5b52f02540d7e82121" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1a97c4612c2a7f58b47c36ec710cb1b0f6" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>geom</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a42b94b56191d33a7f5ba9e1f119ac6b6" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1Hypre_1acc40ac5b0f83e255a1234cb10970f385" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>hiV</name></member>
      <member refid="classamrex_1_1Hypre_1afd2d6c32022a99d96f73485d03272ec9" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1Hypre_1a383aec5fd079382143f14a1602a6f2e3" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1Hypre_1aa390f243b090b29bc817812412daf278" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a5315b73e446b5f629e873416fa8ae149" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>hypre_ij</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1aea1735051057b26a6a0852159711f029" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>HypreABecLap3</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1ae5aa9ca65d4f13368e5ffffa0ed7c15b" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>HypreABecLap3</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1aacfe928a277883d188564721c0c55a08" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>HypreABecLap3</name></member>
      <member refid="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13f" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>Interface</name></member>
      <member refid="classamrex_1_1Hypre_1a0a7daa97b3caa6216418e78ddf2835ec" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>is_matrix_singular</name></member>
      <member refid="classamrex_1_1Hypre_1a4120c58bf9c835d8345257e836e276b5" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>ispow2</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a1e022b7b14f485c9d9aa5ab1bb52a929" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1Hypre_1a361fc93b88a6c9862c0dd26dc2dd9413" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>loV</name></member>
      <member refid="classamrex_1_1Hypre_1a64e1c781a5d446a7a7cc3ef1231c2218" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a8f0e80c22cb3ef511cf2dc5b8b5fcd77" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>m_eb_b_coeffs</name></member>
      <member refid="classamrex_1_1Hypre_1a88d3049d660b7e0a5fca3002d5b78916" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1Hypre_1a7b04bbe6b54d748e48516df1695bc139" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a5deec6d79b32b6214a8ed086a2129e8d" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>m_overset_mask</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a2e125c8d535cb75d33aee7d83be455d7" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>ncells_grid</name></member>
      <member refid="classamrex_1_1Hypre_1ab49bedd6e91b0cbfe206bc3ab17cdbc1" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>num_sweeps</name></member>
      <member refid="classamrex_1_1Hypre_1af13e0db2e188907cf98e9b933a919cd0" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>old_default</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a5ecd8652e316e3ebede0b4eef0e20cfe" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>operator=</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a2fe1a1920cb0d7e13ab2d2f831eb1d01" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Hypre_1aae61b15a16a7846d73aaf5d2af774cf4" prot="public" virt="non-virtual" ambiguityscope="amrex::Hypre::"><scope>amrex::HypreABecLap3</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Hypre_1a60262e7d5c400163944cef707e63663a" prot="public" virt="non-virtual" ambiguityscope="amrex::Hypre::"><scope>amrex::HypreABecLap3</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Hypre_1a9e2c8bb6ef487b2efe4482bd682b68ce" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>options_namespace</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a73956b5120ef6513532cb22e2e8335ab" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>prepareSolver</name></member>
      <member refid="classamrex_1_1Hypre_1abff4c8fa7e9790d9408099ffa9c57934" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1aa602c05ea8f16fa5aa95d79b372cffa8" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>relax_order</name></member>
      <member refid="classamrex_1_1Hypre_1aa9e67a6e299266afaff8157d33dcfbec" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>relax_type</name></member>
      <member refid="classamrex_1_1Hypre_1a5cc787cbd77e527e4c58e58904305531" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1Hypre_1a8cb2fde2e6ce7be52d40bc7ee19f7ae3" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1Hypre_1ade6e731e7392a70b13f66c6656631cdf" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1a993feadb0ec999bd7f2d92717fd9c486" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1aa3e3c7cdd1399a6569ead6da002cefcc" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setHypreNumSweeps</name></member>
      <member refid="classamrex_1_1Hypre_1a176164a0be65a008953835f054ed05bb" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setHypreOldDefault</name></member>
      <member refid="classamrex_1_1Hypre_1a69bd65a7f09331727ec3606700f744b7" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setHypreOptionsNamespace</name></member>
      <member refid="classamrex_1_1Hypre_1ae6d9ce8d191fe74154cb322a83647c65" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setHypreRelaxOrder</name></member>
      <member refid="classamrex_1_1Hypre_1a405012151d7a1605c76dc277321f8413" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setHypreRelaxType</name></member>
      <member refid="classamrex_1_1Hypre_1a3709ca6588e8a170458aca0425335169" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setHypreStrongThreshold</name></member>
      <member refid="classamrex_1_1Hypre_1ace6b42d6b4d28b5aeb6d0ae4ced033f1" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setIsMatrixSingular</name></member>
      <member refid="classamrex_1_1Hypre_1ac497cc99508dff6311d584d7e0636ce8" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1Hypre_1a1aa001ef00cb82f298c761cbf61de2e1" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a8aab0e1b05eed8423e2b70979ff703d8" prot="public" virt="virtual"><scope>amrex::HypreABecLap3</scope><name>solve</name></member>
      <member refid="classamrex_1_1Hypre_1acbc3e949322292ed5e578e8a2bd87bb3" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>strong_threshold</name></member>
      <member refid="classamrex_1_1Hypre_1a299be2dee6b5a28af170606d9b19615b" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>verbose</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1accd2cc8cf99841dfb7a1707ddfe3ca8e" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>x</name></member>
      <member refid="classamrex_1_1Hypre_1af5b05a1271484c6bd34ebd3fbbfc85ef" prot="public" virt="virtual"><scope>amrex::HypreABecLap3</scope><name>~Hypre</name></member>
      <member refid="classamrex_1_1HypreABecLap3_1a9990778a6ed9b97e1c316a55946755a8" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap3</scope><name>~HypreABecLap3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
