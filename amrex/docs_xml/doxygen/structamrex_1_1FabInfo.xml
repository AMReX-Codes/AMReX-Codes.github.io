<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1FabInfo" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FabInfo</compoundname>
    <includes refid="AMReX__FabFactory_8H" local="no">AMReX_FabFactory.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1FabInfo_1a826adbd1c96b9aab9f1826b69a894459" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FabInfo::alloc</definition>
        <argsstring></argsstring>
        <name>alloc</name>
        <qualifiedname>amrex::FabInfo::alloc</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="28" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabInfo_1aad9bb4d1cfbd53be67289b734bf5042c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FabInfo::shared</definition>
        <argsstring></argsstring>
        <name>shared</name>
        <qualifiedname>amrex::FabInfo::shared</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabInfo_1afca3d5127ba5c2bb5cba6981a60a81ec" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::FabInfo::arena</definition>
        <argsstring></argsstring>
        <name>arena</name>
        <qualifiedname>amrex::FabInfo::arena</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="30" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1FabInfo_1ac8a500671087d87c41ead90f30f423c9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1FabInfo" kindref="compound">FabInfo</ref> &amp;</type>
        <definition>FabInfo &amp; amrex::FabInfo::SetAlloc</definition>
        <argsstring>(bool a) noexcept</argsstring>
        <name>SetAlloc</name>
        <qualifiedname>amrex::FabInfo::SetAlloc</qualifiedname>
        <param>
          <type>bool</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="32" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabInfo_1a613a8a4b04889e7712c23f9d744b3faf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1FabInfo" kindref="compound">FabInfo</ref> &amp;</type>
        <definition>FabInfo &amp; amrex::FabInfo::SetShared</definition>
        <argsstring>(bool s) noexcept</argsstring>
        <name>SetShared</name>
        <qualifiedname>amrex::FabInfo::SetShared</qualifiedname>
        <param>
          <type>bool</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="37" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabInfo_1acc195cbb54c672c29f5fdda328ae3868" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1FabInfo" kindref="compound">FabInfo</ref> &amp;</type>
        <definition>FabInfo &amp; amrex::FabInfo::SetArena</definition>
        <argsstring>(Arena *ar) noexcept</argsstring>
        <name>SetArena</name>
        <qualifiedname>amrex::FabInfo::SetArena</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="42" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="42" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1">
        <label>amrex::FabInfo</label>
        <link refid="structamrex_1_1FabInfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>arena</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="6">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="5">
        <label>std::mutex</label>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="26" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="27" bodyend="46"/>
    <listofallmembers>
      <member refid="structamrex_1_1FabInfo_1a826adbd1c96b9aab9f1826b69a894459" prot="public" virt="non-virtual"><scope>amrex::FabInfo</scope><name>alloc</name></member>
      <member refid="structamrex_1_1FabInfo_1afca3d5127ba5c2bb5cba6981a60a81ec" prot="public" virt="non-virtual"><scope>amrex::FabInfo</scope><name>arena</name></member>
      <member refid="structamrex_1_1FabInfo_1ac8a500671087d87c41ead90f30f423c9" prot="public" virt="non-virtual"><scope>amrex::FabInfo</scope><name>SetAlloc</name></member>
      <member refid="structamrex_1_1FabInfo_1acc195cbb54c672c29f5fdda328ae3868" prot="public" virt="non-virtual"><scope>amrex::FabInfo</scope><name>SetArena</name></member>
      <member refid="structamrex_1_1FabInfo_1a613a8a4b04889e7712c23f9d744b3faf" prot="public" virt="non-virtual"><scope>amrex::FabInfo</scope><name>SetShared</name></member>
      <member refid="structamrex_1_1FabInfo_1aad9bb4d1cfbd53be67289b734bf5042c" prot="public" virt="non-virtual"><scope>amrex::FabInfo</scope><name>shared</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
