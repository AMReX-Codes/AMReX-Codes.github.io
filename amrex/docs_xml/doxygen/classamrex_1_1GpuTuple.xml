<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1GpuTuple" kind="class" language="C++" prot="public">
    <compoundname>amrex::GpuTuple</compoundname>
    <basecompoundref refid="structamrex_1_1detail_1_1gpu__tuple__impl" prot="public" virt="non-virtual">amrex::detail::gpu_tuple_impl&lt; 0, Ts... &gt;</basecompoundref>
    <includes refid="AMReX__Tuple_8H" local="no">AMReX_Tuple.H</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1GpuTuple_1a9b4a022c99f88d3df5c4c68ab494b9ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::GpuTuple&lt; Ts &gt;::GpuTuple</definition>
        <argsstring>()=default</argsstring>
        <name>GpuTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GpuTuple_1a6dd107089d642373514ca69d47ff50b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::GpuTuple&lt; Ts &gt;::GpuTuple</definition>
        <argsstring>(Ts const &amp;...args)</argsstring>
        <name>GpuTuple</name>
        <param>
          <type>Ts const &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" line="94" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GpuTuple_1a9887e4773244355e5671d3be9f9c5095" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Us</declname>
            <defname>Us</defname>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; sizeof...(Us)==sizeof...(Ts), int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr amrex::GpuTuple&lt; Ts &gt;::GpuTuple</definition>
        <argsstring>(Us &amp;&amp;...args)</argsstring>
        <name>GpuTuple</name>
        <param>
          <type>Us &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" line="99" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GpuTuple_1ac3cf15112d4e0b7b33d884fcfd3f558b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Us</declname>
            <defname>Us</defname>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; sizeof...(Us)==sizeof...(Ts), int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt; Ts... &gt; &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE GpuTuple&lt; Ts... &gt; &amp; amrex::GpuTuple&lt; Ts &gt;::operator=</definition>
        <argsstring>(GpuTuple&lt; Us... &gt; const &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt; Us... &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" line="106" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" bodystart="220" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GpuTuple_1a98cd15de0552b07aa6cceda354b8b604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Us</declname>
            <defname>Us</defname>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; sizeof...(Us)==sizeof...(Ts), int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt; Ts... &gt; &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE GpuTuple&lt; Ts... &gt; &amp; amrex::GpuTuple&lt; Ts &gt;::operator=</definition>
        <argsstring>(GpuTuple&lt; Us... &gt; &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt; Us... &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" line="111" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" bodystart="229" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3138">
        <label>amrex::GpuTuple&lt; Ts &gt;</label>
        <link refid="classamrex_1_1GpuTuple"/>
        <childnode refid="3139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3139">
        <label>amrex::detail::gpu_tuple_impl&lt; 0, Ts... &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__impl"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3140">
        <label>amrex::GpuTuple&lt; Ts &gt;</label>
        <link refid="classamrex_1_1GpuTuple"/>
        <childnode refid="3141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3141">
        <label>amrex::detail::gpu_tuple_impl&lt; 0, Ts... &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__impl"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" line="90" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Tuple.H" bodystart="88" bodyend="112"/>
    <listofallmembers>
      <member refid="classamrex_1_1GpuTuple_1a9b4a022c99f88d3df5c4c68ab494b9ab" prot="public" virt="non-virtual"><scope>amrex::GpuTuple</scope><name>GpuTuple</name></member>
      <member refid="classamrex_1_1GpuTuple_1a6dd107089d642373514ca69d47ff50b3" prot="public" virt="non-virtual"><scope>amrex::GpuTuple</scope><name>GpuTuple</name></member>
      <member refid="classamrex_1_1GpuTuple_1a9887e4773244355e5671d3be9f9c5095" prot="public" virt="non-virtual"><scope>amrex::GpuTuple</scope><name>GpuTuple</name></member>
      <member refid="classamrex_1_1GpuTuple_1ac3cf15112d4e0b7b33d884fcfd3f558b" prot="public" virt="non-virtual"><scope>amrex::GpuTuple</scope><name>operator=</name></member>
      <member refid="classamrex_1_1GpuTuple_1a98cd15de0552b07aa6cceda354b8b604" prot="public" virt="non-virtual"><scope>amrex::GpuTuple</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
