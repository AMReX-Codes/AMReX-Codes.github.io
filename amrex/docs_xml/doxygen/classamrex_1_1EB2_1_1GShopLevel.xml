<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1GShopLevel" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::GShopLevel</compoundname>
    <basecompoundref refid="classamrex_1_1EB2_1_1Level" prot="public" virt="non-virtual">amrex::EB2::Level</basecompoundref>
    <includes refid="AMReX__EB2__Level_8H" local="no">AMReX_EB2_Level.H</includes>
    <templateparamlist>
      <param>
        <type>typename G</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GShopLevel_1aa46078b91c8b535cdf6a212f061eb2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GShopLevel&lt; G &gt;::GShopLevel</definition>
        <argsstring>(IndexSpace const *is, G const &amp;gshop, const Geometry &amp;geom, int max_grid_size, int ngrow, bool extend_domain_face, int num_crse_opt)</argsstring>
        <name>GShopLevel</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
          <declname>is</declname>
        </param>
        <param>
          <type>G const &amp;</type>
          <declname>gshop</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_crse_opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="103" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="118" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GShopLevel_1a4c79b3b07e6bd33f132fa7030dd7d5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GShopLevel&lt; G &gt;::GShopLevel</definition>
        <argsstring>(IndexSpace const *is, int ilev, int max_grid_size, int ngrow, const Geometry &amp;geom, GShopLevel&lt; G &gt; &amp;fineLevel)</argsstring>
        <name>GShopLevel</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ilev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GShopLevel" kindref="compound">GShopLevel</ref>&lt; G &gt; &amp;</type>
          <declname>fineLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="105" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="505" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GShopLevel_1a008434e6394b5ae980fc9aaab639cdf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GShopLevel&lt; G &gt;::GShopLevel</definition>
        <argsstring>(IndexSpace const *is, const Geometry &amp;geom)</argsstring>
        <name>GShopLevel</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
          <declname>is</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="107" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GShopLevel_1a014eda53f91496efc4cbf702c944ca00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::GShopLevel&lt; G &gt;::define_fine</definition>
        <argsstring>(G const &amp;gshop, const Geometry &amp;geom, int max_grid_size, int ngrow, bool extend_domain_face, int num_crse_opt)</argsstring>
        <name>define_fine</name>
        <param>
          <type>G const &amp;</type>
          <declname>gshop</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_crse_opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="108" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="133" bodyend="501"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::EB2::GShopLevel&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1GShopLevel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="60">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="44" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="63">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="30">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="12">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::EB2::GShopLevel&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1GShopLevel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="33" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>K</label>
      </node>
      <node id="31">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="9">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="9" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>T</label>
      </node>
      <node id="66">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="5">
        <label>Real</label>
      </node>
      <node id="74">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="73">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="14">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>amrex::EBCellFlagFab::NumCells</label>
        <link refid="structamrex_1_1EBCellFlagFab_1_1NumCells"/>
      </node>
      <node id="69">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="61">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="62" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::GpuArray&lt; float, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="56">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="21">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="63" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="47" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="35">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="9" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="25">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>amrex::EB2::MultiGFab</label>
        <link refid="classamrex_1_1EB2_1_1MultiGFab"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="26">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="59" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="50">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="53" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="5" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="9" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>amrex::LayoutData&lt; GFab &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="81">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="53">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="39">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="40" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="4">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="5" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>std::map&lt; amrex::Box, amrex::EBCellFlagFab::NumCells &gt;</label>
        <childnode refid="80" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="40">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="76">
        <label>std::vector&lt; amrex::EBCellFlagFab * &gt;</label>
        <childnode refid="77" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="16">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="17" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="34" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="55">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="18">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>roundoff_hi_f</edgelabel>
          <edgelabel>roundoff_lo_f</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>roundoff_hi_d</edgelabel>
          <edgelabel>roundoff_lo_d</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="78" relation="public-inheritance">
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_typemap</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="11">
        <label>amrex::GpuArray&lt; double, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="78">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_bndryarea</edgelabel>
          <edgelabel>m_bndrycent</edgelabel>
          <edgelabel>m_bndrynorm</edgelabel>
          <edgelabel>m_centroid</edgelabel>
          <edgelabel>m_levelset</edgelabel>
          <edgelabel>m_volfrac</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_mgf</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_cellflag</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_covered_grids</edgelabel>
          <edgelabel>m_grids</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="35" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="44">
        <label>std::string</label>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="99" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="101" bodyend="110"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1Level_1ac2625b7ac69e478b4ca5b11c74f6827b" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>buildCellFlag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a8244e442a7b8e9f14056fa883f557c9c" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>coarsenFromFine</name></member>
      <member refid="classamrex_1_1EB2_1_1GShopLevel_1a014eda53f91496efc4cbf702c944ca00" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>define_fine</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac93ed636c144b7c065bb092b03b0cde7" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aeaa558e8ea81b3d29afc053a49935264" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillAreaFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aeb91416d1cbdc2122b71db4010a5148b" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillAreaFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ada911333bbc88c6c2dd0a2575fa8e70a" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillBndryArea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac4b6718e4884f24643ca059555df983f" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillBndryArea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aab73ea6f18230ee90540b3f844babf95" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillBndryCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a0f236404be3b81491ae8dd6d518b0e3f" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillBndryCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aaddc85a00634d7e6029ab17c9cb9fbb8" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillBndryNorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a15e67ccc27c985eb2b8a11db46abdcab" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillBndryNorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ace69adcd1c99f57c02bbd7e6fbdca3bf" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillCentroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ae872e8dd53d7851e8baa7cda6c597925" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillCentroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a7d35fe220526a3427bc11672e79c921f" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillEBCellFlag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aa8174a092dd237acf59e9145603b3104" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillEdgeCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a9f121c3a3deb6a4cf27461c8745fd10d" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillEdgeCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a47c9d664df913ef2dd7289062f354f0a" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillFaceCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ab07114892a852fef77608e1cebdd5768" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillFaceCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a3d89b2bcea4e9cbf88291dba6cd8fc7c" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillLevelSet</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac37a09c9b81e67ee3c1f9882db9c2a38" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>fillVolFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1abb45241bcd62cecd1f2e43a3c93cdf7c" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>Geom</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a1c5bf0b16ab52e799b8830fd149c0f62" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>getEBIndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1GShopLevel_1aa46078b91c8b535cdf6a212f061eb2a3" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>GShopLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1GShopLevel_1a4c79b3b07e6bd33f132fa7030dd7d5ca" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>GShopLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1GShopLevel_1a008434e6394b5ae980fc9aaab639cdf8" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>GShopLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>isAllRegular</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a09608e5c4f86b678ac2c665090366d91" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>isOK</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac843646825df5f720267a7c641204301" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ad592cb78732b05e45be18327923b7d3e" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1acdaab7a95f7844763aadfd9f22134658" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a16651c9d026bf4c7876a890be6e85253" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_allregular</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_areafrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_bndryarea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_bndrycent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_bndrynorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_cellflag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_centroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_covered_grids</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_dmap</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a58881e32864c4c8dedf033f9364438ee" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_edgecent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_facecent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a5417de191837a4807397f9dd9acffbc4" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_grids</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_levelset</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a1313168a355b46b2d03060c450036477" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_mgf</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a4b580f495f97633950d9a0822c940fe8" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1acdef1c2b11c62f8e02b1a4806de74376" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_ok</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a4e89aa75cb75a863666efa8df2f74e9b" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_parent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>m_volfrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1abae36260177c7e79251005e56d741d5c" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a3ad78d565e99b94235b3afade60d9fed" prot="protected" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac040458ac6f5ac51b303915a6dd66eb5" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>prepareForCoarsening</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a7c96f2171467f960c184e3f093f9e3b1" prot="public" virt="non-virtual"><scope>amrex::EB2::GShopLevel</scope><name>write_to_chkpt_file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
