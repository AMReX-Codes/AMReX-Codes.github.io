<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__EB2__3D__C_8cpp" kind="file" language="C++">
    <compoundname>AMReX_EB2_3D_C.cpp</compoundname>
    <includes refid="AMReX__EB2__C_8H" local="no">AMReX_EB2_C.H</includes>
    <incdepgraph>
      <node id="40068">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX_EB2_3D_C.cpp"/>
        <childnode refid="40069" relation="include">
        </childnode>
      </node>
      <node id="40130">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40131" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40088" relation="include">
        </childnode>
      </node>
      <node id="40155">
        <label>iomanip</label>
      </node>
      <node id="40091">
        <label>functional</label>
      </node>
      <node id="40126">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40112" relation="include">
        </childnode>
        <childnode refid="40121" relation="include">
        </childnode>
        <childnode refid="40127" relation="include">
        </childnode>
        <childnode refid="40103" relation="include">
        </childnode>
        <childnode refid="40109" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
      </node>
      <node id="40118">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
        <childnode refid="40097" relation="include">
        </childnode>
      </node>
      <node id="40100">
        <label>limits</label>
      </node>
      <node id="40117">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="40084" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
      </node>
      <node id="40156">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="40138" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40153" relation="include">
        </childnode>
      </node>
      <node id="40071">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="40072" relation="include">
        </childnode>
        <childnode refid="40073" relation="include">
        </childnode>
        <childnode refid="40096" relation="include">
        </childnode>
        <childnode refid="40088" relation="include">
        </childnode>
        <childnode refid="40097" relation="include">
        </childnode>
        <childnode refid="40103" relation="include">
        </childnode>
        <childnode refid="40104" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40105" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
      </node>
      <node id="40147">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
        <childnode refid="40076" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40105" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40099" relation="include">
        </childnode>
      </node>
      <node id="40160">
        <label>cstdint</label>
      </node>
      <node id="40128">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="40121" relation="include">
        </childnode>
        <childnode refid="40100" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40112" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40087" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40129" relation="include">
        </childnode>
      </node>
      <node id="40097">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="40072" relation="include">
        </childnode>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40099" relation="include">
        </childnode>
        <childnode refid="40100" relation="include">
        </childnode>
        <childnode refid="40101" relation="include">
        </childnode>
        <childnode refid="40074" relation="include">
        </childnode>
        <childnode refid="40088" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40077" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40076" relation="include">
        </childnode>
        <childnode refid="40075" relation="include">
        </childnode>
      </node>
      <node id="40087">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40088" relation="include">
        </childnode>
        <childnode refid="40089" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40091" relation="include">
        </childnode>
        <childnode refid="40084" relation="include">
        </childnode>
        <childnode refid="40086" relation="include">
        </childnode>
        <childnode refid="40092" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
      </node>
      <node id="40119">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="40146">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="40141">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="40120" relation="include">
        </childnode>
        <childnode refid="40084" relation="include">
        </childnode>
      </node>
      <node id="40102">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="40074" relation="include">
        </childnode>
        <childnode refid="40092" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
      </node>
      <node id="40154">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="40085" relation="include">
        </childnode>
        <childnode refid="40131" relation="include">
        </childnode>
        <childnode refid="40155" relation="include">
        </childnode>
        <childnode refid="40087" relation="include">
        </childnode>
        <childnode refid="40130" relation="include">
        </childnode>
        <childnode refid="40129" relation="include">
        </childnode>
      </node>
      <node id="40099">
        <label>cmath</label>
      </node>
      <node id="40090">
        <label>stdexcept</label>
      </node>
      <node id="40138">
        <label>numeric</label>
      </node>
      <node id="40109">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="40072" relation="include">
        </childnode>
        <childnode refid="40097" relation="include">
        </childnode>
        <childnode refid="40103" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
      </node>
      <node id="40106">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="40099" relation="include">
        </childnode>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40074" relation="include">
        </childnode>
        <childnode refid="40100" relation="include">
        </childnode>
        <childnode refid="40101" relation="include">
        </childnode>
        <childnode refid="40081" relation="include">
        </childnode>
        <childnode refid="40107" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40076" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40108" relation="include">
        </childnode>
        <childnode refid="40109" relation="include">
        </childnode>
        <childnode refid="40110" relation="include">
        </childnode>
        <childnode refid="40113" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40117" relation="include">
        </childnode>
        <childnode refid="40118" relation="include">
        </childnode>
        <childnode refid="40119" relation="include">
        </childnode>
        <childnode refid="40120" relation="include">
        </childnode>
        <childnode refid="40139" relation="include">
        </childnode>
      </node>
      <node id="40084">
        <label>string</label>
      </node>
      <node id="40153">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="40121" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40100" relation="include">
        </childnode>
        <childnode refid="40154" relation="include">
        </childnode>
        <childnode refid="40111" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
      </node>
      <node id="40108">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="40071" relation="include">
        </childnode>
      </node>
      <node id="40121">
        <label>map</label>
      </node>
      <node id="40161">
        <label>AMReX_EB2_Graph.H</label>
        <link refid="AMReX__EB2__Graph_8H"/>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40097" relation="include">
        </childnode>
        <childnode refid="40127" relation="include">
        </childnode>
        <childnode refid="40083" relation="include">
        </childnode>
        <childnode refid="40160" relation="include">
        </childnode>
      </node>
      <node id="40116">
        <label>unordered_set</label>
      </node>
      <node id="40069">
        <label>AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="40070" relation="include">
        </childnode>
        <childnode refid="40159" relation="include">
        </childnode>
        <childnode refid="40161" relation="include">
        </childnode>
      </node>
      <node id="40131">
        <label>fstream</label>
      </node>
      <node id="40096">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="40079" relation="include">
        </childnode>
      </node>
      <node id="40080">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="40081" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40083" relation="include">
        </childnode>
        <childnode refid="40084" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40085" relation="include">
        </childnode>
        <childnode refid="40086" relation="include">
        </childnode>
        <childnode refid="40087" relation="include">
        </childnode>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
      </node>
      <node id="40152">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40120" relation="include">
        </childnode>
      </node>
      <node id="40095">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="40076">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="40140">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40141" relation="include">
        </childnode>
        <childnode refid="40142" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40108" relation="include">
        </childnode>
        <childnode refid="40076" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40143" relation="include">
        </childnode>
        <childnode refid="40112" relation="include">
        </childnode>
        <childnode refid="40100" relation="include">
        </childnode>
        <childnode refid="40074" relation="include">
        </childnode>
        <childnode refid="40145" relation="include">
        </childnode>
        <childnode refid="40146" relation="include">
        </childnode>
      </node>
      <node id="40123">
        <label>sys/types.h</label>
      </node>
      <node id="40137">
        <label>typeinfo</label>
      </node>
      <node id="40086">
        <label>cstdio</label>
      </node>
      <node id="40143">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="40107" relation="include">
        </childnode>
        <childnode refid="40076" relation="include">
        </childnode>
      </node>
      <node id="40093">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
      </node>
      <node id="40132">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="40133" relation="include">
        </childnode>
        <childnode refid="40084" relation="include">
        </childnode>
        <childnode refid="40083" relation="include">
        </childnode>
        <childnode refid="40085" relation="include">
        </childnode>
        <childnode refid="40086" relation="include">
        </childnode>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40134" relation="include">
        </childnode>
        <childnode refid="40135" relation="include">
        </childnode>
        <childnode refid="40136" relation="include">
        </childnode>
      </node>
      <node id="40124">
        <label>unistd.h</label>
      </node>
      <node id="40133">
        <label>stack</label>
      </node>
      <node id="40092">
        <label>vector</label>
      </node>
      <node id="40158">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40154" relation="include">
        </childnode>
        <childnode refid="40119" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40111" relation="include">
        </childnode>
      </node>
      <node id="40094">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="40087" relation="include">
        </childnode>
      </node>
      <node id="40075">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="40083">
        <label>utility</label>
      </node>
      <node id="40081">
        <label>array</label>
      </node>
      <node id="40070">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40106" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
        <childnode refid="40158" relation="include">
        </childnode>
        <childnode refid="40099" relation="include">
        </childnode>
      </node>
      <node id="40085">
        <label>sstream</label>
      </node>
      <node id="40089">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="40090" relation="include">
        </childnode>
      </node>
      <node id="40073">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="40074" relation="include">
        </childnode>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40076" relation="include">
        </childnode>
        <childnode refid="40077" relation="include">
        </childnode>
      </node>
      <node id="40142">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40141" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40143" relation="include">
        </childnode>
      </node>
      <node id="40129">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="40088" relation="include">
        </childnode>
        <childnode refid="40130" relation="include">
        </childnode>
        <childnode refid="40132" relation="include">
        </childnode>
        <childnode refid="40117" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40092" relation="include">
        </childnode>
        <childnode refid="40084" relation="include">
        </childnode>
        <childnode refid="40137" relation="include">
        </childnode>
        <childnode refid="40074" relation="include">
        </childnode>
        <childnode refid="40091" relation="include">
        </childnode>
        <childnode refid="40100" relation="include">
        </childnode>
        <childnode refid="40138" relation="include">
        </childnode>
      </node>
      <node id="40120">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40084" relation="include">
        </childnode>
        <childnode refid="40121" relation="include">
        </childnode>
        <childnode refid="40122" relation="include">
        </childnode>
        <childnode refid="40107" relation="include">
        </childnode>
        <childnode refid="40123" relation="include">
        </childnode>
        <childnode refid="40124" relation="include">
        </childnode>
        <childnode refid="40125" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40102" relation="include">
        </childnode>
        <childnode refid="40071" relation="include">
        </childnode>
        <childnode refid="40126" relation="include">
        </childnode>
        <childnode refid="40128" relation="include">
        </childnode>
        <childnode refid="40129" relation="include">
        </childnode>
      </node>
      <node id="40111">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40112" relation="include">
        </childnode>
        <childnode refid="40098" relation="include">
        </childnode>
      </node>
      <node id="40104">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="40072" relation="include">
        </childnode>
        <childnode refid="40094" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
        <childnode refid="40075" relation="include">
        </childnode>
      </node>
      <node id="40077">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40079" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
      </node>
      <node id="40125">
        <label>sys/wait.h</label>
      </node>
      <node id="40072">
        <label>iosfwd</label>
      </node>
      <node id="40098">
        <label>cstdlib</label>
      </node>
      <node id="40136">
        <label>cfenv</label>
      </node>
      <node id="40078">
        <label>iostream</label>
      </node>
      <node id="40103">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="40072" relation="include">
        </childnode>
        <childnode refid="40088" relation="include">
        </childnode>
        <childnode refid="40097" relation="include">
        </childnode>
        <childnode refid="40095" relation="include">
        </childnode>
      </node>
      <node id="40105">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="40097" relation="include">
        </childnode>
      </node>
      <node id="40112">
        <label>cstddef</label>
      </node>
      <node id="40127">
        <label>unordered_map</label>
      </node>
      <node id="40139">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40140" relation="include">
        </childnode>
        <childnode refid="40141" relation="include">
        </childnode>
        <childnode refid="40147" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
        <childnode refid="40148" relation="include">
        </childnode>
        <childnode refid="40150" relation="include">
        </childnode>
        <childnode refid="40151" relation="include">
        </childnode>
        <childnode refid="40142" relation="include">
        </childnode>
        <childnode refid="40152" relation="include">
        </childnode>
        <childnode refid="40153" relation="include">
        </childnode>
        <childnode refid="40156" relation="include">
        </childnode>
        <childnode refid="40157" relation="include">
        </childnode>
      </node>
      <node id="40101">
        <label>climits</label>
      </node>
      <node id="40159">
        <label>AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="40160" relation="include">
        </childnode>
        <childnode refid="40078" relation="include">
        </childnode>
        <childnode refid="40080" relation="include">
        </childnode>
        <childnode refid="40097" relation="include">
        </childnode>
        <childnode refid="40106" relation="include">
        </childnode>
        <childnode refid="40158" relation="include">
        </childnode>
      </node>
      <node id="40157">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="40115">
        <label>mutex</label>
      </node>
      <node id="40122">
        <label>chrono</label>
      </node>
      <node id="40145">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="40135">
        <label>csignal</label>
      </node>
      <node id="40113">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="40112" relation="include">
        </childnode>
        <childnode refid="40114" relation="include">
        </childnode>
        <childnode refid="40092" relation="include">
        </childnode>
        <childnode refid="40115" relation="include">
        </childnode>
        <childnode refid="40116" relation="include">
        </childnode>
        <childnode refid="40091" relation="include">
        </childnode>
        <childnode refid="40111" relation="include">
        </childnode>
      </node>
      <node id="40107">
        <label>type_traits</label>
      </node>
      <node id="40114">
        <label>set</label>
      </node>
      <node id="40110">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="40111" relation="include">
        </childnode>
      </node>
      <node id="40088">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="40150">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="40111" relation="include">
        </childnode>
      </node>
      <node id="40074">
        <label>algorithm</label>
      </node>
      <node id="40144">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40081" relation="include">
        </childnode>
        <childnode refid="40087" relation="include">
        </childnode>
        <childnode refid="40120" relation="include">
        </childnode>
        <childnode refid="40141" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
      </node>
      <node id="40134">
        <label>execinfo.h</label>
      </node>
      <node id="40149">
        <label>cstring</label>
      </node>
      <node id="40082">
        <label>memory</label>
      </node>
      <node id="40148">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="40112" relation="include">
        </childnode>
        <childnode refid="40149" relation="include">
        </childnode>
        <childnode refid="40098" relation="include">
        </childnode>
        <childnode refid="40082" relation="include">
        </childnode>
        <childnode refid="40111" relation="include">
        </childnode>
        <childnode refid="40143" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
      </node>
      <node id="40151">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="40075" relation="include">
        </childnode>
        <childnode refid="40093" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
        <childnode refid="40143" relation="include">
        </childnode>
        <childnode refid="40111" relation="include">
        </childnode>
        <childnode refid="40098" relation="include">
        </childnode>
      </node>
      <node id="40079">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="40076" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1EB2">amrex::EB2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EB2__C_8H" kindref="compound">AMReX_EB2_C.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">EB2<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cut_face_2d<sp/>(Real&amp;<sp/>areafrac,<sp/>Real&amp;<sp/>centx,<sp/>Real&amp;<sp/>centy,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real&amp;<sp/>Sx2,<sp/>Real&amp;<sp/>Sy2,<sp/>Real&amp;<sp/>Sxy,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>axm,<sp/>Real<sp/>axp,<sp/>Real<sp/>aym,<sp/>Real<sp/>ayp,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcx,<sp/>Real<sp/>bcy)<sp/>noexcept</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>apnorm<sp/>=<sp/>std::hypot(axm-axp,aym-ayp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nx<sp/>=<sp/>(axm-axp)<sp/>*<sp/>(1./apnorm);<sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>to<sp/>the<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>ny<sp/>=<sp/>(aym-ayp)<sp/>*<sp/>(1./apnorm);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nxabs<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(nx);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nyabs<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(ny);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nxabs<sp/>&lt;<sp/>1.e-15<sp/>or<sp/>nyabs<sp/>&gt;<sp/>1.0-1.e-15)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>0.5*(axm+axp);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areafrac<sp/>&gt;<sp/>1.0-1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>Sy2<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areafrac<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sy2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>(0.125*(ayp-aym)<sp/>+<sp/>ny*0.5*bcy*bcy)/areafrac;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>(1./24.)*(axm+axp);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sy2<sp/>=<sp/>(1./24.)*(ayp+aym)<sp/>+<sp/>ny*(1./3.)*(bcy*bcy*bcy);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nyabs<sp/>&lt;<sp/>1.e-15<sp/>or<sp/>nxabs<sp/>&gt;<sp/>1.0-1.e-15)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>0.5*(aym+ayp);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areafrac<sp/>&gt;<sp/>1.0-1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>Sy2<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areafrac<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sy2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>(0.125*(axp-axm)<sp/>+<sp/>nx*0.5*bcx*bcx)/areafrac;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>(1./24.)*(axp+axm)<sp/>+<sp/>nx*(1./3.)*(bcx*bcx*bcx);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sy2<sp/>=<sp/>(1./24.)*(ayp+aym);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>signx<sp/>=<sp/>(nx<sp/>&gt;<sp/>0.0)<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>x_ym<sp/>=<sp/>(-0.5<sp/>+<sp/>aym)*signx;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>x_yp<sp/>=<sp/>(-0.5<sp/>+<sp/>ayp)*signx;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>aa<sp/>=<sp/>nxabs/ny;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dx<sp/>=<sp/>x_ym<sp/>-<sp/>x_yp;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dx2<sp/>=<sp/>dx<sp/>*<sp/>(x_ym<sp/>+<sp/>x_yp);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dx3<sp/>=<sp/>dx<sp/>*<sp/>(x_ym*x_ym<sp/>+<sp/>x_ym*x_yp<sp/>+<sp/>x_yp*x_yp);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dx4<sp/>=<sp/>dx<sp/>*<sp/>(x_ym<sp/>+<sp/>x_yp)<sp/>*<sp/>(x_ym*x_ym<sp/>+<sp/>x_yp*x_yp);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>af1<sp/>=<sp/>0.5*(axm+axp)<sp/>+<sp/>aa*0.5*dx2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.125*(axp-axm)<sp/>+<sp/>aa*(1./6.)*dx3;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>(1./24.)*(axm+axp)<sp/>+<sp/>aa*(1./12.)*dx4;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>signy<sp/>=<sp/>(ny<sp/>&gt;<sp/>0.0)<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>y_xm<sp/>=<sp/>(-0.5<sp/>+<sp/>axm)*signy;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>y_xp<sp/>=<sp/>(-0.5<sp/>+<sp/>axp)*signy;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aa<sp/>=<sp/>nyabs/nx;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dy<sp/>=<sp/>y_xm<sp/>-<sp/>y_xp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dy2<sp/>=<sp/>dy<sp/>*<sp/>(y_xm<sp/>+<sp/>y_xp);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dy3<sp/>=<sp/>dy<sp/>*<sp/>(y_xm*y_xm<sp/>+<sp/>y_xm*y_xp<sp/>+<sp/>y_xp*y_xp);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dy4<sp/>=<sp/>dy<sp/>*<sp/>(y_xm<sp/>+<sp/>y_xp)<sp/>*<sp/>(y_xm*y_xm<sp/>+<sp/>y_xp*y_xp);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>af2<sp/>=<sp/>0.5*(aym+ayp)<sp/>+<sp/>aa*0.5*dy2;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>(1./8.)*(ayp-aym)<sp/>+<sp/>aa*(1./6.)*dy3;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sy2<sp/>=<sp/>(1./24.)*(aym+ayp)<sp/>+<sp/>aa*(1./12.)*dy4;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>S_b<sp/>=<sp/>(nxabs<sp/>&lt;<sp/>nyabs)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(Sx2<sp/>-<sp/>(1./24.)<sp/>-<sp/>signx*(1./6.)*(x_ym*x_ym*x_ym+x_yp*x_yp*x_yp))<sp/>/<sp/>ny</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(Sy2<sp/>-<sp/>(1./24.)<sp/>-<sp/>signy*(1./6.)*(y_xm*y_xm*y_xm+y_xp*y_xp*y_xp))<sp/>/<sp/>nx;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>(nxabs<sp/>&lt;<sp/>nyabs)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-signy*(1./16.)*dy2<sp/>+<sp/>0.5*nx*S_b</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-signx*(1./16.)*dx2<sp/>+<sp/>0.5*ny*S_b;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>0.5*(af1+af2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areafrac<sp/>&gt;<sp/>1.0-1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>Sy2<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areafrac<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sx2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sy2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>*=<sp/>1./areafrac;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>*=<sp/>1./areafrac;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centx<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(centx,-0.5),0.5);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centy<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(centy,-0.5),0.5);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1EB2_1af85ab581cd4980e9d47fafeb2b010ea4" kindref="member">build_faces</ref><sp/>(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/>Array4&lt;EBCellFlag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cell,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fx,<sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fy,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fz,<sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ex,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ey,<sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ez,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>levset,<sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>interx,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>intery,<sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>interz,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apx,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apy,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apz,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcx,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcy,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcz,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>m2x,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>m2y,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>m2z,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;Real,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dx,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;Real,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>problo)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dxinv<sp/>=<sp/>1.0/dx[0];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dyinv<sp/>=<sp/>1.0/dx[1];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dzinv<sp/>=<sp/>1.0/dx[2];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>xbx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(<ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(bx,0),1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>xbx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apx(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,0)<sp/>=<sp/>(1./12.);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,1)<sp/>=<sp/>(1./12.);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apx(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncuts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcz<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lym;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(intery(i,j,k)-(problo[1]+j*dx[1]))*dyinv;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/><sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/>(levset(i,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lym),1.0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lyp;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(intery(i,j,k+1)-(problo[1]+j*dx[1]))*dyinv;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/>(levset(i,j,k+1)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lyp),1.0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lzm;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interz(i,j,k)-(problo[2]+k*dx[2]))*dzinv;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/>(levset(i,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lzm),1.0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lzp;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interz(i,j+1,k)-(problo[2]+k*dx[2]))*dzinv;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzp<sp/>=<sp/>(levset(i,j+1,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(ncuts<sp/>&lt;=<sp/>2,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;amrex::EB2::build_faces:<sp/>more<sp/>than<sp/>2<sp/>cuts<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lym<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lyp<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lzm<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lzp<sp/>&lt;=<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apx(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lym<sp/>==<sp/>lyp<sp/>and<sp/>lzm<sp/>==<sp/>lzp)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apx(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcx(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,0)<sp/>=<sp/>(1./12.);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,1)<sp/>=<sp/>(1./12.);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>=<sp/>0.5*bcy<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>=<sp/>0.5*bcz<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut_face_2d(apx(i,j,k),fcx(i,j,k,0),fcx(i,j,k,1),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2x(i,j,k,0),m2x(i,j,k,1),m2x(i,j,k,2),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm,lzp,lym,lyp,bcy,bcz);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apx(i,j,k)<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apx(i,j,k)<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ybx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(<ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(bx,1),1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>ybx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apy(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,0)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,1)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apy(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncuts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcz<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lxm;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interx(i,j,k)-(problo[0]+i*dx[0]))*dxinv;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/>(levset(i,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lxm),1.0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lxp;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interx(i,j,k+1)-(problo[0]+i*dx[0]))*dxinv;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/>(levset(i,j,k+1)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lxp),1.0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lzm;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interz(i,j,k)-(problo[2]+k*dx[2]))*dzinv;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm<sp/>=<sp/>(levset(i,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lzp;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ez(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interz(i+1,j,k)-(problo[2]+k*dx[2]))*dzinv;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzp<sp/>=<sp/>(levset(i+1,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(ncuts<sp/>&lt;=<sp/>2,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;amrex::EB2::build_faces:<sp/>more<sp/>than<sp/>2<sp/>cuts<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lxm<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lxp<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lzm<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lzp<sp/>&lt;=<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apy(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lxm<sp/>==<sp/>lxp<sp/>and<sp/>lzm<sp/>==<sp/>lzp)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apy(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcy(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,0)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,1)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>=<sp/>0.5*bcx<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcz<sp/>=<sp/>0.5*bcz<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut_face_2d(apy(i,j,k),fcy(i,j,k,0),fcy(i,j,k,1),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2y(i,j,k,0),m2y(i,j,k,1),m2y(i,j,k,2),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzm,lzp,lxm,lxp,bcx,bcz);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apy(i,j,k)<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apy(i,j,k)<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>zbx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(<ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(bx,2),1);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>zbx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apz(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,0)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,1)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apz(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncuts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lxm;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interx(i,j,k)-(problo[0]+i*dx[0]))*dxinv;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/>(levset(i,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxm<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lxm),1.0);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lxp;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(interx(i,j+1,k)-(problo[0]+i*dx[0]))*dxinv;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/>(levset(i,j+1,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lxp<sp/>=<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">amrex::max</ref>(0.0,lxp),1.0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lym;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(intery(i,j,k)-(problo[1]+j*dx[1]))*dyinv;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym<sp/>=<sp/>(levset(i,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lyp;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ey(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ncuts;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cut<sp/>=<sp/>(intery(i+1,j,k)-(problo[1]+j*dx[1]))*dyinv;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>+=<sp/>cut;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lyp<sp/>=<sp/>(levset(i+1,j,k)<sp/>&lt;<sp/>0.0)<sp/>?<sp/>cut<sp/>:<sp/>1.0-cut;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(ncuts<sp/>&lt;=<sp/>2,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;amrex::EB2::build_faces:<sp/>more<sp/>than<sp/>2<sp/>cuts<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lxm<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lxp<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lym<sp/>&lt;=<sp/>1.e-14<sp/>and<sp/>lyp<sp/>&lt;=<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apz(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lxm<sp/>==<sp/>lxp<sp/>and<sp/>lym<sp/>==<sp/>lyp)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apz(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcz(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,0)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,1)<sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcx<sp/>=<sp/>0.5*bcx<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcy<sp/>=<sp/>0.5*bcy<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut_face_2d(apz(i,j,k),fcz(i,j,k,0),fcz(i,j,k,1),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2z(i,j,k,0),m2z(i,j,k,1),m2z(i,j,k,2),</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lym,lyp,lxm,lxp,bcx,bcy);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apz(i,j,k)<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fz(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apz(i,j,k)<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fz(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bxg1<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,1);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>bxg1,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell(i,j,k).isSingleValued())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>and<sp/>fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>and</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>and<sp/>fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>and</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>and<sp/>fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell(i,j,k).setCovered();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref><sp/>and<sp/>fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref><sp/>and</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref><sp/>and<sp/>fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref><sp/>and</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref><sp/>and<sp/>fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a4e8ececf7cf081d7a2125f18f3ba6642" kindref="member">Type::regular</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell(i,j,k).setRegular();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1EB2_1a4326a942766ad3edeadf4eeb7499608d" kindref="member">build_cells</ref><sp/>(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/>Array4&lt;EBCellFlag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cell,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fx,<sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fy,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Type_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fz,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apx,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apy,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apz,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcx,<sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcy,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcz,<sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>m2x,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>m2y,<sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>m2z,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>vfrac,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>vcent,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>barea,<sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcent,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bnorm,<sp/>Array4&lt;EBCellFlag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ctmp)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bxg1<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,1);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>bxg1,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell(i,j,k).isRegular())<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfrac(i,j,k)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,0)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,1)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,2)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barea(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell(i,j,k).isCovered())<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfrac(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,0)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,1)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,2)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barea(i,j,k)<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>axm<sp/>=<sp/>apx(i,j,k);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>axp<sp/>=<sp/>apx(i+1,j,k);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>aym<sp/>=<sp/>apy(i,j,k);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ayp<sp/>=<sp/>apy(i,j+1,k);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>azm<sp/>=<sp/>apz(i,j,k);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>azp<sp/>=<sp/>apz(i,j,k+1);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>multple<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>know<sp/>there<sp/>are<sp/>no<sp/>multiple<sp/>cuts<sp/>on<sp/>faces<sp/>by<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>only<sp/>need<sp/>to<sp/>check<sp/>the<sp/>case<sp/>that<sp/>there<sp/>are<sp/>two<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>opposite<sp/>corners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multi_cuts<sp/>=<sp/>(axm<sp/>&gt;=<sp/>0.5<sp/>and<sp/>axm<sp/>&lt;<sp/>1.0<sp/>and</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axp<sp/>&gt;=<sp/>0.5<sp/>and<sp/>axp<sp/>&lt;<sp/>1.0<sp/>and</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aym<sp/>&gt;=<sp/>0.5<sp/>and<sp/>aym<sp/>&lt;<sp/>1.0<sp/>and</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ayp<sp/>&gt;=<sp/>0.5<sp/>and<sp/>ayp<sp/>&lt;<sp/>1.0<sp/>and</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>azm<sp/>&gt;=<sp/>0.5<sp/>and<sp/>azm<sp/>&lt;<sp/>1.0<sp/>and</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>azp<sp/>&gt;=<sp/>0.5<sp/>and<sp/>azp<sp/>&lt;<sp/>1.0);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(!multi_cuts,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;amrex::EB2::build_cells:<sp/>multi-cuts<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dapx<sp/>=<sp/>axm<sp/>-<sp/>axp;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dapy<sp/>=<sp/>aym<sp/>-<sp/>ayp;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dapz<sp/>=<sp/>azm<sp/>-<sp/>azp;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>apnorm<sp/>=<sp/>std::sqrt(dapx*dapx+dapy*dapy+dapz*dapz);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(apnorm<sp/>!=<sp/>0.0,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;amrex::EB2:build_cells:<sp/>apnorm==0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>apnorminv<sp/>=<sp/>1.0/apnorm;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nx<sp/>=<sp/>dapx<sp/>*<sp/>apnorminv;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ny<sp/>=<sp/>dapy<sp/>*<sp/>apnorminv;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nz<sp/>=<sp/>dapz<sp/>*<sp/>apnorminv;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,0)<sp/>=<sp/>nx;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,1)<sp/>=<sp/>ny;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,2)<sp/>=<sp/>nz;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barea(i,j,k)<sp/>=<sp/>nx*dapx<sp/>+<sp/>ny*dapy<sp/>+<sp/>nz*dapz;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>aax<sp/>=<sp/>0.5*(axm+axp);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>aay<sp/>=<sp/>0.5*(aym+ayp);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>aaz<sp/>=<sp/>0.5*(azm+azp);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>B0<sp/>=<sp/>aax<sp/>+<sp/>aay<sp/>+<sp/>aaz;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>Bx<sp/>=<sp/>-nx*aax<sp/>+<sp/>ny*(aym*fcy(i,j,k,0)-ayp*fcy(i,j+1,k,0))</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>nz*(azm*fcz(i,j,k,0)-azp*fcz(i,j,k+1,0));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>By<sp/>=<sp/>-ny*aay<sp/>+<sp/>nx*(axm*fcx(i,j,k,0)-axp*fcx(i+1,j,k,0))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>nz*(azm*fcz(i,j,k,1)-azp*fcz(i,j,k+1,1));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>Bz<sp/>=<sp/>-nz*aaz<sp/>+<sp/>nx*(axm*fcx(i,j,k,1)-axp*fcx(i+1,j,k,1))</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>ny*(aym*fcy(i,j,k,1)-ayp*fcy(i,j+1,k,1));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfrac(i,j,k)<sp/>=<sp/>0.5*(B0<sp/>+<sp/>nx*Bx<sp/>+<sp/>ny*By<sp/>+<sp/>nz*Bz);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bainv<sp/>=<sp/>1.0/barea(i,j,k);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,0)<sp/>=<sp/>bainv<sp/>*<sp/>(Bx<sp/>+<sp/>nx*vfrac(i,j,k));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,1)<sp/>=<sp/>bainv<sp/>*<sp/>(By<sp/>+<sp/>ny*vfrac(i,j,k));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,2)<sp/>=<sp/>bainv<sp/>*<sp/>(Bz<sp/>+<sp/>nz*vfrac(i,j,k));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b1<sp/>=<sp/>0.5*(axp-axm)<sp/>+<sp/>0.5*(ayp*fcy(i,j+1,k,0)<sp/>+<sp/>aym*fcy(i,j,k,0))<sp/>+<sp/>0.5*(azp*fcz(i,j,k+1,0)<sp/>+<sp/>azm*fcz(i,j,k,0));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b2<sp/>=<sp/>0.5*(axp*fcx(i+1,j,k,0)<sp/>+<sp/>axm*fcx(i,j,k,0))<sp/>+<sp/>0.5*(ayp-aym)<sp/>+<sp/>0.5*(azp*fcz(i,j,k+1,1)<sp/>+<sp/>azm*fcz(i,j,k,1));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b3<sp/>=<sp/>0.5*(axp*fcx(i+1,j,k,1)<sp/>+<sp/>axm*fcx(i,j,k,1))<sp/>+<sp/>0.5*(ayp*fcy(i,j+1,k,1)<sp/>+<sp/>aym*fcy(i,j,k,1))<sp/>+<sp/>0.5*(azp-azm);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b4<sp/>=<sp/>-nx*0.25*(axp-axm)<sp/>-<sp/>ny*(m2y(i,j+1,k,0)<sp/>-<sp/>m2y(i,j,k,0))<sp/>-<sp/>nz*(m2z(i,j,k+1,0)<sp/>-<sp/>m2z(i,j,k,0));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b5<sp/>=<sp/>-nx*(m2x(i+1,j,k,0)<sp/>-<sp/>m2x(i,j,k,0))<sp/>-<sp/>ny*0.25*(ayp-aym)<sp/>-<sp/>nz*(m2z(i,j,k+1,1)<sp/>-<sp/>m2z(i,j,k,1));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b6<sp/>=<sp/>-nx*(m2x(i+1,j,k,1)<sp/>-<sp/>m2x(i,j,k,1))<sp/>-<sp/>ny*(m2y(i,j+1,k,1)<sp/>-<sp/>m2y(i,j,k,1))<sp/>-<sp/>nz*0.25*(azp-azm);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b7<sp/>=<sp/>-nx*0.5*(axp*fcx(i+1,j,k,0)<sp/>+<sp/>axm*fcx(i,j,k,0))<sp/>-<sp/>ny*0.5*(ayp*fcy(i,j+1,k,0)<sp/>+<sp/>aym*fcy(i,j,k,0))<sp/>-<sp/>nz*(m2z(i,j,k+1,2)<sp/>-<sp/>m2z(i,j,k,2));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b8<sp/>=<sp/>-nx*0.5*(axp*fcx(i+1,j,k,1)<sp/>+<sp/>axm*fcx(i,j,k,1))<sp/>-<sp/>ny*(m2y(i,j+1,k,2)<sp/>-<sp/>m2y(i,j,k,2))<sp/>-<sp/>nz*0.5*(azp*fcz(i,j,k+1,0)<sp/>+<sp/>azm*fcz(i,j,k,0));</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b9<sp/>=<sp/>-nx*(m2x(i+1,j,k,2)<sp/>-<sp/>m2x(i,j,k,2))<sp/>-<sp/>ny*0.5*(ayp*fcy(i,j+1,k,1)<sp/>+<sp/>aym*fcy(i,j,k,1))<sp/>-<sp/>nz*0.5*(azp*fcz(i,j,k+1,1)<sp/>+<sp/>azm*fcz(i,j,k,1));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ny2<sp/>=<sp/>ny*ny;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ny3<sp/>=<sp/>ny2*ny;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ny4<sp/>=<sp/>ny3*ny;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nz2<sp/>=<sp/>nz*nz;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nz3<sp/>=<sp/>nz2*nz;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nz4<sp/>=<sp/>nz3*nz;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nz5<sp/>=<sp/>nz4*nz;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>Sx<sp/>=<sp/>(5.*(b1*(5.<sp/>-<sp/>3.*ny2)<sp/>+<sp/>2.*b4*nx*(5.<sp/>-<sp/>3.*ny2)<sp/>+</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny*(nx*(b2<sp/>+<sp/>2.*b5*ny)<sp/>+<sp/>b7*(6.<sp/>-<sp/>4.*ny2)))<sp/>+</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.*b8*(15.<sp/>-<sp/>11.*ny2<sp/>+<sp/>ny4)<sp/>+</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx*(b3*(5.<sp/>-<sp/>2.*ny2)<sp/>-<sp/>2.*b9*ny*(-5.<sp/>+<sp/>ny2)))*nz<sp/>+</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-22.*b7*ny<sp/>-<sp/>2.*nx*(15.*b4<sp/>-<sp/>5.*b6<sp/>+<sp/>b2*ny)<sp/>+</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny2*((16.*b4<sp/>-<sp/>4.*(b5<sp/>+<sp/>b6))*nx<sp/>+<sp/>10.*b7*ny)<sp/>+</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1*(-15.<sp/>+<sp/>8.*ny2))*nz2<sp/>+</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*(-(b9*nx*ny)<sp/>+<sp/>5.*b8*(-2.<sp/>+<sp/>ny2))*nz3<sp/>+</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*b7*ny*nz4);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>Sy<sp/>=<sp/>(5.*(2.*b7*nx*(1.<sp/>+<sp/>2.*ny2)<sp/>+<sp/>b2*(2.<sp/>+<sp/>3.*ny2)<sp/>+</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny*(b1*nx<sp/>-<sp/>2.*b4*(-1.<sp/>+<sp/>ny2)<sp/>+<sp/>b5*(4.<sp/>+<sp/>6.*ny2)))<sp/>+</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.*b9*(5.<sp/>+<sp/>9.*ny2<sp/>+<sp/>ny4)<sp/>+</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny*(2.*b8*nx*(4.<sp/>+<sp/>ny2)<sp/>+<sp/>b3*(3.<sp/>+<sp/>2.*ny2)))*nz<sp/>+</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.*b7*nx*(4.<sp/>-<sp/>5.*ny2)<sp/>-<sp/>8.*b2*(-1.<sp/>+<sp/>ny2)<sp/>+</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*ny*(-7.*b4<sp/>+<sp/>8.*b5<sp/>+<sp/>3.*b6<sp/>-<sp/>b1*nx<sp/>+</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*(b4<sp/>-<sp/>4.*b5<sp/>+<sp/>b6)*ny2))*nz2<sp/>+</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*(b3*ny<sp/>+<sp/>b9*(4.<sp/>-<sp/>3.*ny2))*nz3<sp/>+</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-8.*(b2<sp/>+<sp/>b7*nx)<sp/>+<sp/>4.*(b4<sp/>-<sp/>4.*b5<sp/>+<sp/>b6)*ny)*nz4<sp/>-</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8.*b9*nz5);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>Sz<sp/>=<sp/>(-2.*(b3<sp/>+<sp/>b8*nx<sp/>+<sp/>b9*ny)*(-5.<sp/>-<sp/>4.*ny2<sp/>+<sp/>4.*ny4)<sp/>+</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(5.*(2.*b4<sp/>+<sp/>4.*b6<sp/>+<sp/>b1*nx)<sp/>+<sp/>(3.*b2<sp/>+<sp/>8.*b7*nx)*ny<sp/>-</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*(7.*b4<sp/>-<sp/>3.*b5<sp/>-<sp/>8.*b6<sp/>+<sp/>b1*nx)*ny2<sp/>+</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*b2*ny3<sp/>+<sp/>4.*(b4<sp/>+<sp/>b5<sp/>-<sp/>4.*b6)*ny4)*nz<sp/>+</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(b3*(15.<sp/>-<sp/>8.*ny2)<sp/>-<sp/>6.*b9*ny*(-3.<sp/>+<sp/>ny2)<sp/>-</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10.*b8*nx*(-2.<sp/>+<sp/>ny2))*nz2<sp/>+</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*(-5.*b4<sp/>+<sp/>15.*b6<sp/>+<sp/>(b2<sp/>+<sp/>b7*nx)*ny<sp/>+</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*(b4<sp/>+<sp/>b5<sp/>-<sp/>4.*b6)*ny2)*nz3<sp/>+<sp/>2.*b9*ny*nz4);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>den<sp/>=<sp/>1.<sp/>/<sp/>(10.*(5.<sp/>+<sp/>4.*nz2<sp/>-<sp/>4.*nz4<sp/>+<sp/>2.*ny4*(-2.<sp/>+<sp/>nz2)<sp/>+</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.*ny2*(2.<sp/>-<sp/>3.*nz2<sp/>+<sp/>nz4))<sp/>*<sp/>(vfrac(i,j,k)+1.e-50)<sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,0)<sp/>=<sp/>Sx<sp/>*<sp/>den;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,1)<sp/>=<sp/>Sy<sp/>*<sp/>den;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,2)<sp/>=<sp/>Sz<sp/>*<sp/>den;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>small<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfrac(i,j,k)<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfrac(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vcent(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,0)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,1)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcent(i,j,k,2)<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,0)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,1)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnorm(i,j,k,2)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barea(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell(i,j,k).setCovered();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>faces<sp/>for<sp/>small<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bxlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bxhi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(bx);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bxg1,<sp/>tbx,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a10613950f73e309724a256c28d4849e1" kindref="member">amrex::max_lbound</ref>(tbx,<sp/>Dim3{bxlo.x<sp/><sp/>,bxlo.y-1,bxlo.z-1});</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a1ffc05df0359580bd1fc89982cbaf264" kindref="member">amrex::min_ubound</ref>(tbx,<sp/>Dim3{bxlo.x+1,bxlo.y+1,bxlo.z+1});</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfrac(i-1,j,k)<sp/>&lt;<sp/>1.e-14<sp/>or<sp/>vfrac(i,j,k)<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apx(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a10613950f73e309724a256c28d4849e1" kindref="member">amrex::max_lbound</ref>(tbx,<sp/>Dim3{bxlo.x-1,bxlo.y<sp/><sp/>,bxlo.z-1});</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a1ffc05df0359580bd1fc89982cbaf264" kindref="member">amrex::min_ubound</ref>(tbx,<sp/>Dim3{bxlo.x+1,bxlo.y+1,bxlo.z+1});</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfrac(i,j-1,k)<sp/>&lt;<sp/>1.e-14<sp/>or<sp/>vfrac(i,j,k)<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apy(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a10613950f73e309724a256c28d4849e1" kindref="member">amrex::max_lbound</ref>(tbx,<sp/>Dim3{bxlo.x-1,bxlo.y-1,bxlo.z<sp/><sp/>});</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a1ffc05df0359580bd1fc89982cbaf264" kindref="member">amrex::min_ubound</ref>(tbx,<sp/>Dim3{bxlo.x+1,bxlo.y+1,bxlo.z+1});</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfrac(i,j,k-1)<sp/>&lt;<sp/>1.e-14<sp/>or<sp/>vfrac(i,j,k)<sp/>&lt;<sp/>1.e-14)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fz(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apz(i,j,k)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>neighbors.<sp/><sp/>By<sp/>default<sp/>all<sp/>26<sp/>neighbors<sp/>are<sp/>already<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>bxg1,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell(i,j,k).isCovered())<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell(i,j,k).setDisconnected();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>flg<sp/>=<sp/>cell(i,j,k);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(-1,0,0);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(1,0,0);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,-1,0);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,1,0);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,0,-1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,0,1);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x-y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i-1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i,j-1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(-1,-1,0);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i+1,j-1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(1,-1,0);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i-1,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(-1,1,0);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i+1,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i+1,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(1,1,0);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x-z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i-1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i,j,k-1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(-1,0,-1);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i+1,j,k-1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(1,0,-1);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i-1,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(-1,0,1);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fx(i+1,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i+1,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fx(i+1,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(1,0,1);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y-z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j-1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fy(i,j,k-1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,-1,-1);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fy(i,j+1,k-1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,1,-1);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fy(i,j,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j-1,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fy(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,-1,1);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fy(i,j+1,k)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j+1,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>)<sp/>and</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fy(i,j+1,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref><sp/>or<sp/>fz(i,j,k+1)<sp/>==<sp/><ref refid="namespaceamrex_1_1EB2_1_1Type_1a7b3494fbc6c0b07ed8a3f6d4255eead0" kindref="member">Type::covered</ref>))</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flg.setDisconnected(0,1,1);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell(i,j,k)<sp/>=<sp/>flg;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctmp(i,j,k)<sp/>=<sp/>cell(i,j,k);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(<sp/>bx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cell(i,j,k).isCovered())<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmpflg<sp/>=<sp/>ctmp(i,j,k);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newflg<sp/>=<sp/>tmpflg;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1,<sp/>-1,<sp/>-1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(-1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i-1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,-1,-1))<sp/>and</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,-1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j-1,k<sp/><sp/>).isDisconnected(-1,<sp/>0,-1))<sp/>and</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,-1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k-1).isDisconnected(-1,-1,<sp/>0)))</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(-1,-1,-1);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,<sp/>-1,<sp/>-1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(<sp/>1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i+1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,-1,-1))<sp/>and</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,-1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j-1,k<sp/><sp/>).isDisconnected(<sp/>1,<sp/>0,-1))<sp/>and</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,-1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k-1).isDisconnected(<sp/>1,-1,<sp/>0)))</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(1,-1,-1);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1,<sp/>1,<sp/>-1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(-1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i-1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,<sp/>1,-1))<sp/>and</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j+1,k<sp/><sp/>).isDisconnected(-1,<sp/>0,-1))<sp/>and</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,-1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k-1).isDisconnected(-1,<sp/>1,<sp/>0)))</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(-1,<sp/>1,-1);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,<sp/>1,<sp/>-1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(<sp/>1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i+1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,<sp/>1,-1))<sp/>and</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j+1,k<sp/><sp/>).isDisconnected(<sp/>1,<sp/>0,-1))<sp/>and</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,-1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k-1).isDisconnected(<sp/>1,<sp/>1,<sp/>0)))</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(1,<sp/>1,-1);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1,<sp/>-1,<sp/>1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(-1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i-1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,-1,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,-1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j-1,k<sp/><sp/>).isDisconnected(-1,<sp/>0,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,<sp/>1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k+1).isDisconnected(-1,-1,<sp/>0)))</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(-1,-1,<sp/>1);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,<sp/>-1,<sp/>1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(<sp/>1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i+1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,-1,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,-1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j-1,k<sp/><sp/>).isDisconnected(<sp/>1,<sp/>0,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,<sp/>1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k+1).isDisconnected(<sp/>1,-1,<sp/>0)))</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(1,-1,<sp/>1);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1,<sp/>1,<sp/>1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(-1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i-1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,<sp/>1,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j+1,k<sp/><sp/>).isDisconnected(-1,<sp/>0,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,<sp/>1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k+1).isDisconnected(-1,<sp/>1,<sp/>0)))</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(-1,1,1);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,<sp/>1,<sp/>1<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpflg.isDisconnected(<sp/>1,<sp/>0,<sp/>0)<sp/>or<sp/>ctmp(i+1,j<sp/><sp/>,k<sp/><sp/>).isDisconnected(<sp/>0,<sp/>1,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>1,<sp/>0)<sp/>or<sp/>ctmp(i<sp/><sp/>,j+1,k<sp/><sp/>).isDisconnected(<sp/>1,<sp/>0,<sp/>1))<sp/>and</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tmpflg.isDisconnected(<sp/>0,<sp/>0,<sp/>1)<sp/>or<sp/>ctmp(i<sp/><sp/>,j<sp/><sp/>,k+1).isDisconnected(<sp/>1,<sp/>1,<sp/>0)))</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newflg.setDisconnected(1,1,1);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell(i,j,k)<sp/>=<sp/>newflg;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_3D_C.cpp"/>
  </compounddef>
</doxygen>
