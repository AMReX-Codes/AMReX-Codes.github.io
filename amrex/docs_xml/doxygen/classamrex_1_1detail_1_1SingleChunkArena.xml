<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1detail_1_1SingleChunkArena" kind="class" language="C++" prot="public" final="yes">
    <compoundname>amrex::detail::SingleChunkArena</compoundname>
    <basecompoundref refid="classamrex_1_1Arena" prot="public" virt="non-virtual">amrex::Arena</basecompoundref>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1detail_1_1SingleChunkArena_1ae08344e2c33c31605edbc0b4635c8730" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref></type>
        <definition>DataAllocator amrex::detail::SingleChunkArena::m_dallocator</definition>
        <argsstring></argsstring>
        <name>m_dallocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="758" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1detail_1_1SingleChunkArena_1a933d2d3cd77f3b584a5247341fb7c92e" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::detail::SingleChunkArena::m_root</definition>
        <argsstring></argsstring>
        <name>m_root</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="759" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1detail_1_1SingleChunkArena_1add916ed06ebf8c1ae3ada3caad5a6f08" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::detail::SingleChunkArena::m_free</definition>
        <argsstring></argsstring>
        <name>m_free</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="760" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1detail_1_1SingleChunkArena_1a2ab5bb610d1b9c02e9a9d0d7a75138ad" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t amrex::detail::SingleChunkArena::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="761" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="761" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a2e3657b0ceda0efbd0b6457aec18480b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::detail::SingleChunkArena::SingleChunkArena</definition>
        <argsstring>(Arena *a_arena, std::size_t a_size)</argsstring>
        <name>SingleChunkArena</name>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>a_arena</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>a_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="735" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a5ebc7dfc5b1874f13bf2496e363f77fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::detail::SingleChunkArena::~SingleChunkArena</definition>
        <argsstring>() override</argsstring>
        <name>~SingleChunkArena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="736" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a5d44b33a34400e117bf1fb885c295f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::detail::SingleChunkArena::SingleChunkArena</definition>
        <argsstring>()=delete</argsstring>
        <name>SingleChunkArena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="738" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a9429dc85f6e1b449f8e4b8daa984129e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::detail::SingleChunkArena::SingleChunkArena</definition>
        <argsstring>(const SingleChunkArena &amp;rhs)=delete</argsstring>
        <name>SingleChunkArena</name>
        <param>
          <type>const <ref refid="classamrex_1_1detail_1_1SingleChunkArena" kindref="compound">SingleChunkArena</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="739" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1acbc5848d9c62c383f3e5019dfb905435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::detail::SingleChunkArena::SingleChunkArena</definition>
        <argsstring>(SingleChunkArena &amp;&amp;rhs)=delete</argsstring>
        <name>SingleChunkArena</name>
        <param>
          <type><ref refid="classamrex_1_1detail_1_1SingleChunkArena" kindref="compound">SingleChunkArena</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="740" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1af96a10bb06acc64b2267b55b43024de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1detail_1_1SingleChunkArena" kindref="compound">SingleChunkArena</ref> &amp;</type>
        <definition>SingleChunkArena&amp; amrex::detail::SingleChunkArena::operator=</definition>
        <argsstring>(const SingleChunkArena &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1detail_1_1SingleChunkArena" kindref="compound">SingleChunkArena</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="741" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a62aa1fb076b9be08b30bc598f0a84217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1detail_1_1SingleChunkArena" kindref="compound">SingleChunkArena</ref> &amp;</type>
        <definition>SingleChunkArena&amp; amrex::detail::SingleChunkArena::operator=</definition>
        <argsstring>(SingleChunkArena &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1detail_1_1SingleChunkArena" kindref="compound">SingleChunkArena</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="742" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a1a40bc13e5fda7545591fa3b7cc50a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void* amrex::detail::SingleChunkArena::alloc</definition>
        <argsstring>(std::size_t sz) override</argsstring>
        <name>alloc</name>
        <reimplements refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e">alloc</reimplements>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a dynamic memory arena <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the memory request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the allocated memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="744" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1abd7291506933a08740bb9b2abbc5ef98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::detail::SingleChunkArena::free</definition>
        <argsstring>(void *pt) override</argsstring>
        <name>free</name>
        <reimplements refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515">free</reimplements>
        <param>
          <type>void *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>A pure virtual function for deleting the arena pointed to by pt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="745" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a7f18c58c24d1b6966057125c4758a2a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::detail::SingleChunkArena::isDeviceAccessible</definition>
        <argsstring>() const override</argsstring>
        <name>isDeviceAccessible</name>
        <reimplements refid="classamrex_1_1Arena_1afa7c9e223346f671eb055b3ce8580e56">isDeviceAccessible</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="748" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a1c7a6c7a2a82e1c705442baa09e84560" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::detail::SingleChunkArena::isHostAccessible</definition>
        <argsstring>() const override</argsstring>
        <name>isHostAccessible</name>
        <reimplements refid="classamrex_1_1Arena_1a40d897685d407918d2d6143b5301a525">isHostAccessible</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="749" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1ae6b2985298ea93f8412c8a21da3443ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::detail::SingleChunkArena::isManaged</definition>
        <argsstring>() const override</argsstring>
        <name>isManaged</name>
        <reimplements refid="classamrex_1_1Arena_1a7119489f4464f902d907f6dfe9716909">isManaged</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="751" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1acdc9d343c34ebda8c4c0a78e0e6924d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::detail::SingleChunkArena::isDevice</definition>
        <argsstring>() const override</argsstring>
        <name>isDevice</name>
        <reimplements refid="classamrex_1_1Arena_1aa45555e396ee74158b0c6f3331ce5536">isDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="752" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a08324a9f9d1c2b9e7d81b3ef8e8d4ad5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::detail::SingleChunkArena::isPinned</definition>
        <argsstring>() const override</argsstring>
        <name>isPinned</name>
        <reimplements refid="classamrex_1_1Arena_1a336e271c5a07296e4c2866d194111784">isPinned</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="753" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1detail_1_1SingleChunkArena_1a206ec1ef64bc03efcea7eb01a0c8c9e7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* amrex::detail::SingleChunkArena::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="755" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="755" bodyend="755"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
      </node>
      <node id="1">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="11">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="5">
        <label>std::mutex</label>
      </node>
      <node id="7">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="8">
        <label>std::string</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="731" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="733" bodyend="762"/>
    <listofallmembers>
      <member refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>align</name></member>
      <member refid="classamrex_1_1Arena_1a4b2f3b31e81e52426aef615cb2aaa7b7" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>align_size</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a1a40bc13e5fda7545591fa3b7cc50a04" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>alloc</name></member>
      <member refid="classamrex_1_1Arena_1aabdec69d9448201fc6c85635ea6f18b7" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>alloc_in_place</name></member>
      <member refid="classamrex_1_1Arena_1afc721e195430f79b2d1b287c490ef0fb" prot="protected" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>allocate_system</name></member>
      <member refid="classamrex_1_1Arena_1a2e2407d56d1710a0029928c776b27682" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>Arena</name></member>
      <member refid="classamrex_1_1Arena_1a57de8f5ef86cceadc9f1c00bc7ea7790" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>Arena</name></member>
      <member refid="classamrex_1_1Arena_1a3e2c87e60ea734fe6be6e49d124d5a76" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>Arena</name></member>
      <member refid="classamrex_1_1Arena_1aeb2158ba443c9b23ba0d12bcf38a66e1" prot="protected" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>arena_info</name></member>
      <member refid="classamrex_1_1Arena_1a1af72a36a13904de0715917915db1f6b" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>arenaInfo</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a206ec1ef64bc03efcea7eb01a0c8c9e7" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>data</name></member>
      <member refid="classamrex_1_1Arena_1ac07ba8cda253cddee3cab1168ac65694" prot="protected" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>deallocate_system</name></member>
      <member refid="classamrex_1_1Arena_1a76f2f99b3aa712fe5da7b00610c07385" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>deregisterFromProfiling</name></member>
      <member refid="classamrex_1_1Arena_1a06dd6197d2081d7dd4c1bed308edd387" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1abd7291506933a08740bb9b2abbc5ef98" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>free</name></member>
      <member refid="classamrex_1_1Arena_1ae58dbb9ab6bb4e8d980b384b0d8804e5" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>freeUnused</name></member>
      <member refid="classamrex_1_1Arena_1a881f97d5676c4784f52d6f4c702da696" prot="protected" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>freeUnused_protected</name></member>
      <member refid="classamrex_1_1Arena_1abd6b026129f35157aa2b3945a37bdbd3" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>hasFreeDeviceMemory</name></member>
      <member refid="classamrex_1_1Arena_1a9f40990a545f4d280e905117fc6a0786" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1acdc9d343c34ebda8c4c0a78e0e6924d1" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>isDevice</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a7f18c58c24d1b6966057125c4758a2a4" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>isDeviceAccessible</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a1c7a6c7a2a82e1c705442baa09e84560" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>isHostAccessible</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1ae6b2985298ea93f8412c8a21da3443ec" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>isManaged</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a08324a9f9d1c2b9e7d81b3ef8e8d4ad5" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>isPinned</name></member>
      <member refid="classamrex_1_1Arena_1a45cb8a8f57250c6858412296275c8dbb" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>isStreamOrderedArena</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1ae08344e2c33c31605edbc0b4635c8730" prot="private" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>m_dallocator</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1add916ed06ebf8c1ae3ada3caad5a6f08" prot="private" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>m_free</name></member>
      <member refid="classamrex_1_1Arena_1ad136b691382e7a7d8fba158837416b98" prot="protected" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>m_profiler</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a933d2d3cd77f3b584a5247341fb7c92e" prot="private" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>m_root</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a2ab5bb610d1b9c02e9a9d0d7a75138ad" prot="private" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>m_size</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1af96a10bb06acc64b2267b55b43024de2" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>operator=</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a62aa1fb076b9be08b30bc598f0a84217" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Arena_1ab5c2f212500abb488cf4d14245c29aee" prot="public" virt="non-virtual" ambiguityscope="amrex::Arena::"><scope>amrex::detail::SingleChunkArena</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Arena_1a36dd09d6200de89dd8bb25b1cd223cb5" prot="public" virt="non-virtual" ambiguityscope="amrex::Arena::"><scope>amrex::detail::SingleChunkArena</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Arena_1a506a68384da30629323d0839f13812c2" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>PrintUsage</name></member>
      <member refid="classamrex_1_1Arena_1aa1cfbcfa1c41ac7e45bf469e93db7402" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>PrintUsageToFiles</name></member>
      <member refid="classamrex_1_1Arena_1a99982885760cd861e6e860dea40ea64f" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>registerForProfiling</name></member>
      <member refid="classamrex_1_1Arena_1a1fec80ed73e43de305a5e232e0b551a6" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>shrink_in_place</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a2e3657b0ceda0efbd0b6457aec18480b" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>SingleChunkArena</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a5d44b33a34400e117bf1fb885c295f41" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>SingleChunkArena</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a9429dc85f6e1b449f8e4b8daa984129e" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>SingleChunkArena</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1acbc5848d9c62c383f3e5019dfb905435" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>SingleChunkArena</name></member>
      <member refid="classamrex_1_1Arena_1a327e7541e6291ce735c03392b21931b6" prot="public" virt="virtual"><scope>amrex::detail::SingleChunkArena</scope><name>~Arena</name></member>
      <member refid="classamrex_1_1detail_1_1SingleChunkArena_1a5ebc7dfc5b1874f13bf2496e363f77fb" prot="public" virt="non-virtual"><scope>amrex::detail::SingleChunkArena</scope><name>~SingleChunkArena</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
