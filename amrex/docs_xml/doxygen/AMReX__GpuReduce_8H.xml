<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__GpuReduce_8H" kind="file" language="C++">
    <compoundname>AMReX_GpuReduce.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__GpuQualifiers_8H" local="no">AMReX_GpuQualifiers.H</includes>
    <includes refid="AMReX__GpuControl_8H" local="no">AMReX_GpuControl.H</includes>
    <includes refid="AMReX__GpuTypes_8H" local="no">AMReX_GpuTypes.H</includes>
    <includes refid="AMReX__GpuAtomic_8H" local="no">AMReX_GpuAtomic.H</includes>
    <includes refid="AMReX__GpuUtility_8H" local="no">AMReX_GpuUtility.H</includes>
    <includes refid="AMReX__Functional_8H" local="no">AMReX_Functional.H</includes>
    <includedby refid="AMReX__Gpu_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_Gpu.H</includedby>
    <includedby refid="AMReX__GpuLaunch_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunch.H</includedby>
    <incdepgraph>
      <node id="32481">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32482" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32463" relation="include">
        </childnode>
        <childnode refid="32483" relation="include">
        </childnode>
        <childnode refid="32475" relation="include">
        </childnode>
        <childnode refid="32473" relation="include">
        </childnode>
      </node>
      <node id="32512">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
      </node>
      <node id="32480">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
      </node>
      <node id="32466">
        <label>functional</label>
      </node>
      <node id="32475">
        <label>limits</label>
      </node>
      <node id="32502">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
      </node>
      <node id="32489">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32456" relation="include">
        </childnode>
        <childnode refid="32488" relation="include">
        </childnode>
        <childnode refid="32480" relation="include">
        </childnode>
      </node>
      <node id="32445">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
      </node>
      <node id="32492">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32493" relation="include">
        </childnode>
        <childnode refid="32471" relation="include">
        </childnode>
        <childnode refid="32494" relation="include">
        </childnode>
        <childnode refid="32489" relation="include">
        </childnode>
        <childnode refid="32495" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
      </node>
      <node id="32462">
        <label>float.h</label>
      </node>
      <node id="32477">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32451" relation="include">
        </childnode>
      </node>
      <node id="32454">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32455" relation="include">
        </childnode>
      </node>
      <node id="32508">
        <label>cstdint</label>
      </node>
      <node id="32469">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32448" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32470" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32471" relation="include">
        </childnode>
        <childnode refid="32472" relation="include">
        </childnode>
        <childnode refid="32473" relation="include">
        </childnode>
        <childnode refid="32474" relation="include">
        </childnode>
        <childnode refid="32475" relation="include">
        </childnode>
        <childnode refid="32476" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32459" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32485" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
        <childnode refid="32497" relation="include">
        </childnode>
        <childnode refid="32506" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32509" relation="include">
        </childnode>
      </node>
      <node id="32438">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32441" relation="include">
        </childnode>
        <childnode refid="32442" relation="include">
        </childnode>
        <childnode refid="32444" relation="include">
        </childnode>
        <childnode refid="32446" relation="include">
        </childnode>
        <childnode refid="32445" relation="include">
        </childnode>
      </node>
      <node id="32484">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32483" relation="include">
        </childnode>
        <childnode refid="32468" relation="include">
        </childnode>
        <childnode refid="32449" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32459" relation="include">
        </childnode>
      </node>
      <node id="32500">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32501" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32479" relation="include">
        </childnode>
        <childnode refid="32470" relation="include">
        </childnode>
        <childnode refid="32453" relation="include">
        </childnode>
        <childnode refid="32448" relation="include">
        </childnode>
      </node>
      <node id="32442">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
      </node>
      <node id="32464">
        <label>cmath</label>
      </node>
      <node id="32455">
        <label>cassert</label>
      </node>
      <node id="32461">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32462" relation="include">
        </childnode>
      </node>
      <node id="32458">
        <label>stdexcept</label>
      </node>
      <node id="32456">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
      </node>
      <node id="32504">
        <label>numeric</label>
      </node>
      <node id="32467">
        <label>string</label>
      </node>
      <node id="32447">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32448" relation="include">
        </childnode>
        <childnode refid="32449" relation="include">
        </childnode>
        <childnode refid="32450" relation="include">
        </childnode>
        <childnode refid="32451" relation="include">
        </childnode>
        <childnode refid="32469" relation="include">
        </childnode>
        <childnode refid="32442" relation="include">
        </childnode>
        <childnode refid="32511" relation="include">
        </childnode>
        <childnode refid="32441" relation="include">
        </childnode>
        <childnode refid="32512" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
      </node>
      <node id="32471">
        <label>map</label>
      </node>
      <node id="32511">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32469" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
      </node>
      <node id="32440">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
      </node>
      <node id="32476">
        <label>cfloat</label>
      </node>
      <node id="32482">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
      </node>
      <node id="32498">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32449" relation="include">
        </childnode>
        <childnode refid="32499" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32456" relation="include">
        </childnode>
      </node>
      <node id="32499">
        <label>fstream</label>
      </node>
      <node id="32495">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32488" relation="include">
        </childnode>
        <childnode refid="32489" relation="include">
        </childnode>
        <childnode refid="32485" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
      </node>
      <node id="32441">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32442" relation="include">
        </childnode>
      </node>
      <node id="32451">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32452" relation="include">
        </childnode>
        <childnode refid="32454" relation="include">
        </childnode>
        <childnode refid="32456" relation="include">
        </childnode>
        <childnode refid="32457" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32459" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32463" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32466" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32453" relation="include">
        </childnode>
        <childnode refid="32468" relation="include">
        </childnode>
        <childnode refid="32449" relation="include">
        </childnode>
      </node>
      <node id="32506">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32451" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32497" relation="include">
        </childnode>
        <childnode refid="32507" relation="include">
        </childnode>
        <childnode refid="32475" relation="include">
        </childnode>
        <childnode refid="32508" relation="include">
        </childnode>
      </node>
      <node id="32443">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
      </node>
      <node id="32507">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
      </node>
      <node id="32510">
        <label>sys/types.h</label>
      </node>
      <node id="32503">
        <label>typeinfo</label>
      </node>
      <node id="32452">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32453" relation="include">
        </childnode>
      </node>
      <node id="32439">
        <label>AMReX_Config.H</label>
      </node>
      <node id="32453">
        <label>cstdio</label>
      </node>
      <node id="32496">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32471" relation="include">
        </childnode>
        <childnode refid="32475" relation="include">
        </childnode>
        <childnode refid="32449" relation="include">
        </childnode>
        <childnode refid="32493" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32451" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32485" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32497" relation="include">
        </childnode>
      </node>
      <node id="32491">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32488" relation="include">
        </childnode>
        <childnode refid="32452" relation="include">
        </childnode>
      </node>
      <node id="32497">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32456" relation="include">
        </childnode>
        <childnode refid="32498" relation="include">
        </childnode>
        <childnode refid="32500" relation="include">
        </childnode>
        <childnode refid="32502" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32459" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32485" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32468" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32503" relation="include">
        </childnode>
        <childnode refid="32483" relation="include">
        </childnode>
        <childnode refid="32466" relation="include">
        </childnode>
        <childnode refid="32475" relation="include">
        </childnode>
        <childnode refid="32504" relation="include">
        </childnode>
        <childnode refid="32505" relation="include">
        </childnode>
      </node>
      <node id="32490">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32480" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
      </node>
      <node id="32501">
        <label>stack</label>
      </node>
      <node id="32468">
        <label>vector</label>
      </node>
      <node id="32479">
        <label>utility</label>
      </node>
      <node id="32485">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32481" relation="include">
        </childnode>
        <childnode refid="32487" relation="include">
        </childnode>
        <childnode refid="32456" relation="include">
        </childnode>
        <childnode refid="32488" relation="include">
        </childnode>
        <childnode refid="32489" relation="include">
        </childnode>
        <childnode refid="32490" relation="include">
        </childnode>
        <childnode refid="32480" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32491" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32441" relation="include">
        </childnode>
      </node>
      <node id="32450">
        <label>array</label>
      </node>
      <node id="32470">
        <label>sstream</label>
      </node>
      <node id="32459">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32460" relation="include">
        </childnode>
      </node>
      <node id="32444">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32445" relation="include">
        </childnode>
      </node>
      <node id="32486">
        <label>iosfwd</label>
      </node>
      <node id="32448">
        <label>cstdlib</label>
      </node>
      <node id="32465">
        <label>iostream</label>
      </node>
      <node id="32478">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32450" relation="include">
        </childnode>
        <childnode refid="32449" relation="include">
        </childnode>
        <childnode refid="32479" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32470" relation="include">
        </childnode>
        <childnode refid="32453" relation="include">
        </childnode>
        <childnode refid="32473" relation="include">
        </childnode>
        <childnode refid="32451" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32441" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32480" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32481" relation="include">
        </childnode>
        <childnode refid="32482" relation="include">
        </childnode>
      </node>
      <node id="32493">
        <label>cstddef</label>
      </node>
      <node id="32446">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32442" relation="include">
        </childnode>
        <childnode refid="32441" relation="include">
        </childnode>
        <childnode refid="32447" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
        <childnode refid="32459" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32491" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32464" relation="include">
        </childnode>
        <childnode refid="32513" relation="include">
        </childnode>
      </node>
      <node id="32494">
        <label>unordered_map</label>
      </node>
      <node id="32488">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32459" relation="include">
        </childnode>
        <childnode refid="32456" relation="include">
        </childnode>
        <childnode refid="32480" relation="include">
        </childnode>
        <childnode refid="32478" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32482" relation="include">
        </childnode>
        <childnode refid="32477" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32463" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32448" relation="include">
        </childnode>
        <childnode refid="32464" relation="include">
        </childnode>
        <childnode refid="32475" relation="include">
        </childnode>
        <childnode refid="32474" relation="include">
        </childnode>
        <childnode refid="32483" relation="include">
        </childnode>
      </node>
      <node id="32474">
        <label>climits</label>
      </node>
      <node id="32472">
        <label>chrono</label>
      </node>
      <node id="32505">
        <label>csignal</label>
      </node>
      <node id="32463">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32440" relation="include">
        </childnode>
        <childnode refid="32443" relation="include">
        </childnode>
        <childnode refid="32464" relation="include">
        </childnode>
        <childnode refid="32448" relation="include">
        </childnode>
      </node>
      <node id="32487">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32461" relation="include">
        </childnode>
      </node>
      <node id="32457">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32458" relation="include">
        </childnode>
      </node>
      <node id="32473">
        <label>type_traits</label>
      </node>
      <node id="32483">
        <label>algorithm</label>
      </node>
      <node id="32509">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="32439" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32510" relation="include">
        </childnode>
      </node>
      <node id="32513">
        <label>cstring</label>
      </node>
      <node id="32449">
        <label>memory</label>
      </node>
      <node id="32460">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32819">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32804">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="32516">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_extrapolater_K.H</label>
        <link refid="AMReX__extrapolater__K_8H"/>
        <childnode refid="32517" relation="include">
        </childnode>
      </node>
      <node id="32710">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="32838">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32586">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="32694">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="32690" relation="include">
        </childnode>
        <childnode refid="32691" relation="include">
        </childnode>
        <childnode refid="32692" relation="include">
        </childnode>
      </node>
      <node id="32670">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32671" relation="include">
        </childnode>
      </node>
      <node id="32544">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="32829">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32683">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="32684" relation="include">
        </childnode>
      </node>
      <node id="32622">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="32650">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="32609" relation="include">
        </childnode>
        <childnode refid="32645" relation="include">
        </childnode>
        <childnode refid="32651" relation="include">
        </childnode>
        <childnode refid="32608" relation="include">
        </childnode>
      </node>
      <node id="32773">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="32557" relation="include">
        </childnode>
      </node>
      <node id="32558">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_2D_K.H</label>
        <link refid="AMReX__Habec__2D__K_8H"/>
      </node>
      <node id="32771">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="32833">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32748">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32571">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="32753">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="32752" relation="include">
        </childnode>
      </node>
      <node id="32737">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="32553">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="32720">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="32516" relation="include">
        </childnode>
        <childnode refid="32721" relation="include">
        </childnode>
        <childnode refid="32722" relation="include">
        </childnode>
        <childnode refid="32723" relation="include">
        </childnode>
        <childnode refid="32725" relation="include">
        </childnode>
        <childnode refid="32726" relation="include">
        </childnode>
        <childnode refid="32727" relation="include">
        </childnode>
        <childnode refid="32729" relation="include">
        </childnode>
        <childnode refid="32730" relation="include">
        </childnode>
        <childnode refid="32731" relation="include">
        </childnode>
        <childnode refid="32732" relation="include">
        </childnode>
        <childnode refid="32733" relation="include">
        </childnode>
        <childnode refid="32619" relation="include">
        </childnode>
        <childnode refid="32712" relation="include">
        </childnode>
        <childnode refid="32735" relation="include">
        </childnode>
        <childnode refid="32736" relation="include">
        </childnode>
        <childnode refid="32737" relation="include">
        </childnode>
        <childnode refid="32738" relation="include">
        </childnode>
        <childnode refid="32739" relation="include">
        </childnode>
        <childnode refid="32742" relation="include">
        </childnode>
        <childnode refid="32710" relation="include">
        </childnode>
        <childnode refid="32744" relation="include">
        </childnode>
        <childnode refid="32611" relation="include">
        </childnode>
        <childnode refid="32749" relation="include">
        </childnode>
        <childnode refid="32750" relation="include">
        </childnode>
        <childnode refid="32751" relation="include">
        </childnode>
        <childnode refid="32753" relation="include">
        </childnode>
        <childnode refid="32754" relation="include">
        </childnode>
        <childnode refid="32713" relation="include">
        </childnode>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32641" relation="include">
        </childnode>
        <childnode refid="32756" relation="include">
        </childnode>
        <childnode refid="32757" relation="include">
        </childnode>
        <childnode refid="32758" relation="include">
        </childnode>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32762" relation="include">
        </childnode>
        <childnode refid="32763" relation="include">
        </childnode>
        <childnode refid="32764" relation="include">
        </childnode>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32755" relation="include">
        </childnode>
        <childnode refid="32672" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32770" relation="include">
        </childnode>
        <childnode refid="32766" relation="include">
        </childnode>
        <childnode refid="32773" relation="include">
        </childnode>
        <childnode refid="32774" relation="include">
        </childnode>
        <childnode refid="32689" relation="include">
        </childnode>
        <childnode refid="32688" relation="include">
        </childnode>
        <childnode refid="32690" relation="include">
        </childnode>
        <childnode refid="32680" relation="include">
        </childnode>
        <childnode refid="32692" relation="include">
        </childnode>
        <childnode refid="32694" relation="include">
        </childnode>
        <childnode refid="32695" relation="include">
        </childnode>
        <childnode refid="32776" relation="include">
        </childnode>
        <childnode refid="32777" relation="include">
        </childnode>
        <childnode refid="32778" relation="include">
        </childnode>
        <childnode refid="32779" relation="include">
        </childnode>
        <childnode refid="32780" relation="include">
        </childnode>
        <childnode refid="32786" relation="include">
        </childnode>
        <childnode refid="32787" relation="include">
        </childnode>
        <childnode refid="32788" relation="include">
        </childnode>
        <childnode refid="32655" relation="include">
        </childnode>
        <childnode refid="32789" relation="include">
        </childnode>
        <childnode refid="32577" relation="include">
        </childnode>
        <childnode refid="32579" relation="include">
        </childnode>
      </node>
      <node id="32717">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32649" relation="include">
        </childnode>
      </node>
      <node id="32660">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="32659" relation="include">
        </childnode>
      </node>
      <node id="32614">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="32517" relation="include">
        </childnode>
      </node>
      <node id="32704">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32671">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="32588">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="32589" relation="include">
        </childnode>
        <childnode refid="32564" relation="include">
        </childnode>
        <childnode refid="32599" relation="include">
        </childnode>
      </node>
      <node id="32633">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32634" relation="include">
        </childnode>
        <childnode refid="32635" relation="include">
        </childnode>
      </node>
      <node id="32689">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="32815">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="32794" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
        <childnode refid="32817" relation="include">
        </childnode>
        <childnode refid="32818" relation="include">
        </childnode>
        <childnode refid="32819" relation="include">
        </childnode>
        <childnode refid="32820" relation="include">
        </childnode>
        <childnode refid="32821" relation="include">
        </childnode>
        <childnode refid="32822" relation="include">
        </childnode>
        <childnode refid="32823" relation="include">
        </childnode>
        <childnode refid="32824" relation="include">
        </childnode>
        <childnode refid="32825" relation="include">
        </childnode>
        <childnode refid="32826" relation="include">
        </childnode>
        <childnode refid="32827" relation="include">
        </childnode>
        <childnode refid="32828" relation="include">
        </childnode>
        <childnode refid="32829" relation="include">
        </childnode>
        <childnode refid="32830" relation="include">
        </childnode>
        <childnode refid="32831" relation="include">
        </childnode>
        <childnode refid="32832" relation="include">
        </childnode>
        <childnode refid="32833" relation="include">
        </childnode>
        <childnode refid="32834" relation="include">
        </childnode>
      </node>
      <node id="32807">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="32546" relation="include">
        </childnode>
        <childnode refid="32712" relation="include">
        </childnode>
        <childnode refid="32745" relation="include">
        </childnode>
        <childnode refid="32744" relation="include">
        </childnode>
      </node>
      <node id="32828">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32675">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="32718">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32675" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
      </node>
      <node id="32823">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32687">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.H</label>
        <link refid="AMReX__HypreIJIface_8H"/>
        <childnode refid="32608" relation="include">
        </childnode>
        <childnode refid="32635" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
      </node>
      <node id="32832">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32756">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="32539">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="32540" relation="include">
        </childnode>
      </node>
      <node id="32760">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="32761" relation="include">
        </childnode>
        <childnode refid="32717" relation="include">
        </childnode>
      </node>
      <node id="32680">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="32681" relation="include">
        </childnode>
      </node>
      <node id="32726">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="32663">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="32638">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="32552" relation="include">
        </childnode>
      </node>
      <node id="32821">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32719">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="32676">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="32667" relation="include">
        </childnode>
      </node>
      <node id="32628">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="32692">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="32722">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="32751">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="32752" relation="include">
        </childnode>
      </node>
      <node id="32600">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="32601" relation="include">
        </childnode>
        <childnode refid="32602" relation="include">
        </childnode>
      </node>
      <node id="32514">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="32515" relation="include">
        </childnode>
        <childnode refid="32839" relation="include">
        </childnode>
      </node>
      <node id="32746">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="32529" relation="include">
        </childnode>
        <childnode refid="32537" relation="include">
        </childnode>
        <childnode refid="32747" relation="include">
        </childnode>
      </node>
      <node id="32730">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="32743">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="32702">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32700">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="32733">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="32734" relation="include">
        </childnode>
      </node>
      <node id="32664">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="32665" relation="include">
        </childnode>
      </node>
      <node id="32557">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="32825">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32653">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="32654" relation="include">
        </childnode>
      </node>
      <node id="32562">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="32525">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32528" relation="include">
        </childnode>
        <childnode refid="32530" relation="include">
        </childnode>
        <childnode refid="32531" relation="include">
        </childnode>
      </node>
      <node id="32655">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="32566" relation="include">
        </childnode>
        <childnode refid="32571" relation="include">
        </childnode>
      </node>
      <node id="32634">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="32784">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="32540">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="32611">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32612" relation="include">
        </childnode>
        <childnode refid="32614" relation="include">
        </childnode>
        <childnode refid="32615" relation="include">
        </childnode>
        <childnode refid="32539" relation="include">
        </childnode>
        <childnode refid="32550" relation="include">
        </childnode>
        <childnode refid="32518" relation="include">
        </childnode>
        <childnode refid="32617" relation="include">
        </childnode>
        <childnode refid="32619" relation="include">
        </childnode>
        <childnode refid="32620" relation="include">
        </childnode>
        <childnode refid="32622" relation="include">
        </childnode>
        <childnode refid="32623" relation="include">
        </childnode>
        <childnode refid="32554" relation="include">
        </childnode>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32626" relation="include">
        </childnode>
        <childnode refid="32631" relation="include">
        </childnode>
        <childnode refid="32633" relation="include">
        </childnode>
        <childnode refid="32636" relation="include">
        </childnode>
        <childnode refid="32583" relation="include">
        </childnode>
        <childnode refid="32658" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
        <childnode refid="32672" relation="include">
        </childnode>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
        <childnode refid="32542" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32674" relation="include">
        </childnode>
        <childnode refid="32675" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
        <childnode refid="32676" relation="include">
        </childnode>
        <childnode refid="32677" relation="include">
        </childnode>
        <childnode refid="32683" relation="include">
        </childnode>
        <childnode refid="32685" relation="include">
        </childnode>
        <childnode refid="32650" relation="include">
        </childnode>
        <childnode refid="32645" relation="include">
        </childnode>
        <childnode refid="32687" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32653" relation="include">
        </childnode>
        <childnode refid="32688" relation="include">
        </childnode>
        <childnode refid="32690" relation="include">
        </childnode>
        <childnode refid="32680" relation="include">
        </childnode>
        <childnode refid="32694" relation="include">
        </childnode>
        <childnode refid="32536" relation="include">
        </childnode>
        <childnode refid="32538" relation="include">
        </childnode>
        <childnode refid="32600" relation="include">
        </childnode>
        <childnode refid="32587" relation="include">
        </childnode>
        <childnode refid="32573" relation="include">
        </childnode>
        <childnode refid="32603" relation="include">
        </childnode>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32696" relation="include">
        </childnode>
        <childnode refid="32705" relation="include">
        </childnode>
        <childnode refid="32706" relation="include">
        </childnode>
      </node>
      <node id="32654">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="32836">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_DenseBins.H</label>
        <link refid="AMReX__DenseBins_8H"/>
        <childnode refid="32576" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32752">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
      </node>
      <node id="32615">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32616" relation="include">
        </childnode>
        <childnode refid="32529" relation="include">
        </childnode>
      </node>
      <node id="32770">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32543" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32771" relation="include">
        </childnode>
        <childnode refid="32586" relation="include">
        </childnode>
        <childnode refid="32772" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
      </node>
      <node id="32775">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="32714">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="32589">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="32590" relation="include">
        </childnode>
        <childnode refid="32593" relation="include">
        </childnode>
        <childnode refid="32595" relation="include">
        </childnode>
        <childnode refid="32596" relation="include">
        </childnode>
        <childnode refid="32598" relation="include">
        </childnode>
      </node>
      <node id="32541">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="32728">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="32729" relation="include">
        </childnode>
      </node>
      <node id="32651">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="32609" relation="include">
        </childnode>
        <childnode refid="32652" relation="include">
        </childnode>
      </node>
      <node id="32551">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="32642">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="32625">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="32554">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="32619">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="32606">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="32607" relation="include">
        </childnode>
        <childnode refid="32570" relation="include">
        </childnode>
      </node>
      <node id="32547">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="32548" relation="include">
        </childnode>
        <childnode refid="32554" relation="include">
        </childnode>
        <childnode refid="32611" relation="include">
        </childnode>
        <childnode refid="32634" relation="include">
        </childnode>
        <childnode refid="32708" relation="include">
        </childnode>
      </node>
      <node id="32617">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="32618" relation="include">
        </childnode>
      </node>
      <node id="32669">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="32808">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuFuse.cpp</label>
        <link refid="AMReX__GpuFuse_8cpp"/>
      </node>
      <node id="32835">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_BinIterator.H</label>
        <link refid="AMReX__BinIterator_8H"/>
        <childnode refid="32836" relation="include">
        </childnode>
        <childnode refid="32837" relation="include">
        </childnode>
      </node>
      <node id="32605">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="32561" relation="include">
        </childnode>
        <childnode refid="32568" relation="include">
        </childnode>
        <childnode refid="32573" relation="include">
        </childnode>
        <childnode refid="32603" relation="include">
        </childnode>
      </node>
      <node id="32559">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_3D_K.H</label>
        <link refid="AMReX__Habec__3D__K_8H"/>
      </node>
      <node id="32549">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil_I.H</label>
        <link refid="AMReX__FillPatchUtil__I_8H"/>
        <childnode refid="32550" relation="include">
        </childnode>
      </node>
      <node id="32822">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32591">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="32571" relation="include">
        </childnode>
      </node>
      <node id="32762">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="32538">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="32761">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="32596">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32566" relation="include">
        </childnode>
        <childnode refid="32597" relation="include">
        </childnode>
      </node>
      <node id="32742">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="32743" relation="include">
        </childnode>
        <childnode refid="32626" relation="include">
        </childnode>
      </node>
      <node id="32607">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="32570" relation="include">
        </childnode>
      </node>
      <node id="32534">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="32674">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32566" relation="include">
        </childnode>
      </node>
      <node id="32598">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="32594" relation="include">
        </childnode>
        <childnode refid="32592" relation="include">
        </childnode>
      </node>
      <node id="32623">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="32615" relation="include">
        </childnode>
        <childnode refid="32624" relation="include">
        </childnode>
        <childnode refid="32625" relation="include">
        </childnode>
      </node>
      <node id="32818">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32816">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="32766">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="32586" relation="include">
        </childnode>
      </node>
      <node id="32727">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="32728" relation="include">
        </childnode>
      </node>
      <node id="32592">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="32572" relation="include">
        </childnode>
      </node>
      <node id="32527">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="32740">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="32741" relation="include">
        </childnode>
        <childnode refid="32626" relation="include">
        </childnode>
      </node>
      <node id="32635">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="32701">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32702" relation="include">
        </childnode>
        <childnode refid="32703" relation="include">
        </childnode>
        <childnode refid="32581" relation="include">
        </childnode>
      </node>
      <node id="32566">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="32567">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="32561">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="32721">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="32750">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="32616">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="32789">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="32790" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32791" relation="include">
        </childnode>
      </node>
      <node id="32747">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="32640">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="32530">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="32529" relation="include">
        </childnode>
      </node>
      <node id="32754">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Slopes_K.H</label>
        <link refid="AMReX__Slopes__K_8H"/>
        <childnode refid="32755" relation="include">
        </childnode>
      </node>
      <node id="32579">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="32580" relation="include">
        </childnode>
      </node>
      <node id="32738">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="32732">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="32556">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="32713">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="32527" relation="include">
        </childnode>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32615" relation="include">
        </childnode>
        <childnode refid="32518" relation="include">
        </childnode>
        <childnode refid="32714" relation="include">
        </childnode>
        <childnode refid="32619" relation="include">
        </childnode>
        <childnode refid="32715" relation="include">
        </childnode>
        <childnode refid="32632" relation="include">
        </childnode>
        <childnode refid="32631" relation="include">
        </childnode>
        <childnode refid="32634" relation="include">
        </childnode>
        <childnode refid="32708" relation="include">
        </childnode>
        <childnode refid="32657" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32625" relation="include">
        </childnode>
        <childnode refid="32677" relation="include">
        </childnode>
        <childnode refid="32610" relation="include">
        </childnode>
        <childnode refid="32561" relation="include">
        </childnode>
        <childnode refid="32601" relation="include">
        </childnode>
        <childnode refid="32587" relation="include">
        </childnode>
        <childnode refid="32567" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32777">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="32563" relation="include">
        </childnode>
      </node>
      <node id="32830">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32785">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="32655" relation="include">
        </childnode>
      </node>
      <node id="32648">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="32632">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="32741">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="32576">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="32574" relation="include">
        </childnode>
      </node>
      <node id="32757">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="32563">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="32522">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="32778">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap_K.H</label>
        <link refid="AMReX__MLCellABecLap__K_8H"/>
        <childnode refid="32595" relation="include">
        </childnode>
      </node>
      <node id="32542">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="32543" relation="include">
        </childnode>
      </node>
      <node id="32711">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="32712" relation="include">
        </childnode>
      </node>
      <node id="32776">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="32562" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32571" relation="include">
        </childnode>
      </node>
      <node id="32715">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="32716" relation="include">
        </childnode>
        <childnode refid="32708" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32755">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_slopes_K.H</label>
        <link refid="AMReX__EB__slopes__K_8H"/>
      </node>
      <node id="32528">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
      </node>
      <node id="32564">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="32535">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="32609">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="32602">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="32601" relation="include">
        </childnode>
        <childnode refid="32567" relation="include">
        </childnode>
        <childnode refid="32568" relation="include">
        </childnode>
        <childnode refid="32592" relation="include">
        </childnode>
        <childnode refid="32573" relation="include">
        </childnode>
        <childnode refid="32603" relation="include">
        </childnode>
      </node>
      <node id="32767">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32769" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32671" relation="include">
        </childnode>
      </node>
      <node id="32608">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="32609" relation="include">
        </childnode>
        <childnode refid="32610" relation="include">
        </childnode>
      </node>
      <node id="32688">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="32689" relation="include">
        </childnode>
        <childnode refid="32690" relation="include">
        </childnode>
        <childnode refid="32691" relation="include">
        </childnode>
        <childnode refid="32694" relation="include">
        </childnode>
        <childnode refid="32695" relation="include">
        </childnode>
      </node>
      <node id="32550">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="32527" relation="include">
        </childnode>
        <childnode refid="32534" relation="include">
        </childnode>
        <childnode refid="32551" relation="include">
        </childnode>
      </node>
      <node id="32729">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="32524">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="32525" relation="include">
        </childnode>
        <childnode refid="32532" relation="include">
        </childnode>
        <childnode refid="32533" relation="include">
        </childnode>
      </node>
      <node id="32813">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="32520" relation="include">
        </childnode>
        <childnode refid="32796" relation="include">
        </childnode>
      </node>
      <node id="32656">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="32627">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32628" relation="include">
        </childnode>
        <childnode refid="32616" relation="include">
        </childnode>
        <childnode refid="32615" relation="include">
        </childnode>
        <childnode refid="32629" relation="include">
        </childnode>
      </node>
      <node id="32636">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32637" relation="include">
        </childnode>
        <childnode refid="32657" relation="include">
        </childnode>
      </node>
      <node id="32519">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="32697">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="32698" relation="include">
        </childnode>
        <childnode refid="32699" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32701" relation="include">
        </childnode>
      </node>
      <node id="32552">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="32686">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="32577">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32523">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="32524" relation="include">
        </childnode>
        <childnode refid="32535" relation="include">
        </childnode>
        <childnode refid="32536" relation="include">
        </childnode>
        <childnode refid="32538" relation="include">
        </childnode>
      </node>
      <node id="32573">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="32593">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="32563" relation="include">
        </childnode>
        <childnode refid="32594" relation="include">
        </childnode>
      </node>
      <node id="32597">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="32566" relation="include">
        </childnode>
      </node>
      <node id="32779">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="32566" relation="include">
        </childnode>
      </node>
      <node id="32682">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="32580">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="32569">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="32629">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="32659">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="32612">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="32613" relation="include">
        </childnode>
      </node>
      <node id="32709">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="32623" relation="include">
        </childnode>
      </node>
      <node id="32572">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="32744">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="32719" relation="include">
        </childnode>
        <childnode refid="32546" relation="include">
        </childnode>
        <childnode refid="32745" relation="include">
        </childnode>
        <childnode refid="32710" relation="include">
        </childnode>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32529" relation="include">
        </childnode>
        <childnode refid="32537" relation="include">
        </childnode>
        <childnode refid="32746" relation="include">
        </childnode>
        <childnode refid="32748" relation="include">
        </childnode>
        <childnode refid="32699" relation="include">
        </childnode>
        <childnode refid="32701" relation="include">
        </childnode>
      </node>
      <node id="32568">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="32684">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="32703">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="32814">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="32811" relation="include">
        </childnode>
        <childnode refid="32809" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32701" relation="include">
        </childnode>
      </node>
      <node id="32809">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Partition.H</label>
        <link refid="AMReX__Partition_8H"/>
      </node>
      <node id="32739">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="32740" relation="include">
        </childnode>
      </node>
      <node id="32695">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="32689" relation="include">
        </childnode>
        <childnode refid="32690" relation="include">
        </childnode>
        <childnode refid="32691" relation="include">
        </childnode>
        <childnode refid="32693" relation="include">
        </childnode>
      </node>
      <node id="32780">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="32595" relation="include">
        </childnode>
        <childnode refid="32564" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32781" relation="include">
        </childnode>
        <childnode refid="32784" relation="include">
        </childnode>
        <childnode refid="32785" relation="include">
        </childnode>
      </node>
      <node id="32811">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="32515" relation="include">
        </childnode>
        <childnode refid="32810" relation="include">
        </childnode>
        <childnode refid="32790" relation="include">
        </childnode>
        <childnode refid="32576" relation="include">
        </childnode>
        <childnode refid="32697" relation="include">
        </childnode>
        <childnode refid="32699" relation="include">
        </childnode>
        <childnode refid="32704" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32812" relation="include">
        </childnode>
      </node>
      <node id="32839">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="32515" relation="include">
        </childnode>
        <childnode refid="32840" relation="include">
        </childnode>
      </node>
      <node id="32691">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="32689" relation="include">
        </childnode>
        <childnode refid="32690" relation="include">
        </childnode>
        <childnode refid="32692" relation="include">
        </childnode>
        <childnode refid="32693" relation="include">
        </childnode>
      </node>
      <node id="32639">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="32640" relation="include">
        </childnode>
        <childnode refid="32641" relation="include">
        </childnode>
        <childnode refid="32649" relation="include">
        </childnode>
        <childnode refid="32650" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32653" relation="include">
        </childnode>
        <childnode refid="32655" relation="include">
        </childnode>
      </node>
      <node id="32613">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="32716">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="32565">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="32758">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="32759" relation="include">
        </childnode>
      </node>
      <node id="32827">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32543">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="32782">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="32649">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="32594">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="32790">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32791" relation="include">
        </childnode>
      </node>
      <node id="32798">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32596" relation="include">
        </childnode>
      </node>
      <node id="32529">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="32834">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32788">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="32594" relation="include">
        </childnode>
      </node>
      <node id="32745">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32546" relation="include">
        </childnode>
        <childnode refid="32547" relation="include">
        </childnode>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
        <childnode refid="32608" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32653" relation="include">
        </childnode>
      </node>
      <node id="32734">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="32730" relation="include">
        </childnode>
      </node>
      <node id="32735">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="32696">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="32533" relation="include">
        </childnode>
        <childnode refid="32697" relation="include">
        </childnode>
        <childnode refid="32704" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32701" relation="include">
        </childnode>
      </node>
      <node id="32824">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32749">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="32645">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="32609" relation="include">
        </childnode>
        <childnode refid="32646" relation="include">
        </childnode>
      </node>
      <node id="32801">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.H</label>
        <link refid="AMReX__BlockMutex_8H"/>
        <childnode refid="32802" relation="include">
        </childnode>
        <childnode refid="32803" relation="include">
        </childnode>
      </node>
      <node id="32797">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32798" relation="include">
        </childnode>
      </node>
      <node id="32672">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.H</label>
        <link refid="AMReX__EB__STL__utils_8H"/>
        <childnode refid="32673" relation="include">
        </childnode>
      </node>
      <node id="32705">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="32533">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="32534" relation="include">
        </childnode>
      </node>
      <node id="32794">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32662" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
      </node>
      <node id="32548">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="32517" relation="include">
        </childnode>
        <childnode refid="32549" relation="include">
        </childnode>
        <childnode refid="32552" relation="include">
        </childnode>
        <childnode refid="32541" relation="include">
        </childnode>
        <childnode refid="32518" relation="include">
        </childnode>
        <childnode refid="32553" relation="include">
        </childnode>
        <childnode refid="32554" relation="include">
        </childnode>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32583" relation="include">
        </childnode>
        <childnode refid="32608" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32602" relation="include">
        </childnode>
        <childnode refid="32604" relation="include">
        </childnode>
      </node>
      <node id="32677">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="32625" relation="include">
        </childnode>
        <childnode refid="32678" relation="include">
        </childnode>
      </node>
      <node id="32786">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="32567" relation="include">
        </childnode>
      </node>
      <node id="32520">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="32521" relation="include">
        </childnode>
        <childnode refid="32518" relation="include">
        </childnode>
        <childnode refid="32544" relation="include">
        </childnode>
        <childnode refid="32545" relation="include">
        </childnode>
        <childnode refid="32719" relation="include">
        </childnode>
        <childnode refid="32720" relation="include">
        </childnode>
        <childnode refid="32792" relation="include">
        </childnode>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32794" relation="include">
        </childnode>
        <childnode refid="32795" relation="include">
        </childnode>
      </node>
      <node id="32817">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
      </node>
      <node id="32644">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="32731">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="32792">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="32729" relation="include">
        </childnode>
        <childnode refid="32793" relation="include">
        </childnode>
        <childnode refid="32548" relation="include">
        </childnode>
        <childnode refid="32749" relation="include">
        </childnode>
        <childnode refid="32750" relation="include">
        </childnode>
        <childnode refid="32751" relation="include">
        </childnode>
        <childnode refid="32753" relation="include">
        </childnode>
        <childnode refid="32756" relation="include">
        </childnode>
        <childnode refid="32757" relation="include">
        </childnode>
        <childnode refid="32758" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
      </node>
      <node id="32764">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="32765" relation="include">
        </childnode>
      </node>
      <node id="32690">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="32662">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="32659" relation="include">
        </childnode>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
      </node>
      <node id="32517">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="32765">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="32584" relation="include">
        </childnode>
        <childnode refid="32766" relation="include">
        </childnode>
      </node>
      <node id="32518">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="32621">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="32531">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="32578">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="32534" relation="include">
        </childnode>
        <childnode refid="32579" relation="include">
        </childnode>
        <childnode refid="32580" relation="include">
        </childnode>
      </node>
      <node id="32803">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Random.cpp</label>
        <link refid="AMReX__Random_8cpp"/>
      </node>
      <node id="32712">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="32693">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="32774">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="32679" relation="include">
        </childnode>
        <childnode refid="32775" relation="include">
        </childnode>
      </node>
      <node id="32666">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="32590">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="32562" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32567" relation="include">
        </childnode>
        <childnode refid="32591" relation="include">
        </childnode>
        <childnode refid="32592" relation="include">
        </childnode>
      </node>
      <node id="32537">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="32584">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="32706">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="32707" relation="include">
        </childnode>
      </node>
      <node id="32837">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H</label>
        <link refid="AMReX__SparseBins_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32796">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="32641">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="32642" relation="include">
        </childnode>
        <childnode refid="32643" relation="include">
        </childnode>
        <childnode refid="32647" relation="include">
        </childnode>
      </node>
      <node id="32725">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="32595">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="32802">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.cpp</label>
        <link refid="AMReX__BlockMutex_8cpp"/>
      </node>
      <node id="32707">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="32708">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="32603">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="32573" relation="include">
        </childnode>
      </node>
      <node id="32810">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="32811" relation="include">
        </childnode>
      </node>
      <node id="32679">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="32840">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuDevice.cpp</label>
        <link refid="AMReX__GpuDevice_8cpp"/>
      </node>
      <node id="32805">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DArena.cpp</label>
        <link refid="AMReX__DArena_8cpp"/>
      </node>
      <node id="32667">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="32599">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="32793">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="32768">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="32610">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="32800">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.cpp</label>
        <link refid="AMReX__EBToPVD_8cpp"/>
      </node>
      <node id="32601">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="32630">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="32769">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="32657">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="32724">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="32552" relation="include">
        </childnode>
      </node>
      <node id="32626">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="32615" relation="include">
        </childnode>
        <childnode refid="32627" relation="include">
        </childnode>
        <childnode refid="32550" relation="include">
        </childnode>
        <childnode refid="32618" relation="include">
        </childnode>
        <childnode refid="32630" relation="include">
        </childnode>
      </node>
      <node id="32668">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="32620">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="32621" relation="include">
        </childnode>
      </node>
      <node id="32685">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="32686" relation="include">
        </childnode>
      </node>
      <node id="32637">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="32638" relation="include">
        </childnode>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32656" relation="include">
        </childnode>
        <childnode refid="32587" relation="include">
        </childnode>
      </node>
      <node id="32791">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32702" relation="include">
        </childnode>
        <childnode refid="32701" relation="include">
        </childnode>
      </node>
      <node id="32587">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="32588" relation="include">
        </childnode>
        <childnode refid="32600" relation="include">
        </childnode>
        <childnode refid="32599" relation="include">
        </childnode>
        <childnode refid="32602" relation="include">
        </childnode>
        <childnode refid="32604" relation="include">
        </childnode>
      </node>
      <node id="32581">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="32582" relation="include">
        </childnode>
      </node>
      <node id="32521">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32523" relation="include">
        </childnode>
        <childnode refid="32539" relation="include">
        </childnode>
        <childnode refid="32541" relation="include">
        </childnode>
        <childnode refid="32542" relation="include">
        </childnode>
      </node>
      <node id="32772">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="32631">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="32632" relation="include">
        </childnode>
        <childnode refid="32633" relation="include">
        </childnode>
      </node>
      <node id="32515">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="32516" relation="include">
        </childnode>
        <childnode refid="32518" relation="include">
        </childnode>
        <childnode refid="32519" relation="include">
        </childnode>
        <childnode refid="32520" relation="include">
        </childnode>
        <childnode refid="32801" relation="include">
        </childnode>
        <childnode refid="32804" relation="include">
        </childnode>
        <childnode refid="32731" relation="include">
        </childnode>
        <childnode refid="32732" relation="include">
        </childnode>
        <childnode refid="32733" relation="include">
        </childnode>
        <childnode refid="32805" relation="include">
        </childnode>
        <childnode refid="32806" relation="include">
        </childnode>
        <childnode refid="32546" relation="include">
        </childnode>
        <childnode refid="32807" relation="include">
        </childnode>
        <childnode refid="32808" relation="include">
        </childnode>
        <childnode refid="32744" relation="include">
        </childnode>
        <childnode refid="32749" relation="include">
        </childnode>
        <childnode refid="32750" relation="include">
        </childnode>
        <childnode refid="32751" relation="include">
        </childnode>
        <childnode refid="32753" relation="include">
        </childnode>
        <childnode refid="32809" relation="include">
        </childnode>
        <childnode refid="32810" relation="include">
        </childnode>
        <childnode refid="32803" relation="include">
        </childnode>
        <childnode refid="32813" relation="include">
        </childnode>
        <childnode refid="32814" relation="include">
        </childnode>
        <childnode refid="32815" relation="include">
        </childnode>
        <childnode refid="32835" relation="include">
        </childnode>
        <childnode refid="32836" relation="include">
        </childnode>
        <childnode refid="32748" relation="include">
        </childnode>
        <childnode refid="32697" relation="include">
        </childnode>
        <childnode refid="32699" relation="include">
        </childnode>
        <childnode refid="32838" relation="include">
        </childnode>
        <childnode refid="32702" relation="include">
        </childnode>
        <childnode refid="32701" relation="include">
        </childnode>
        <childnode refid="32837" relation="include">
        </childnode>
        <childnode refid="32579" relation="include">
        </childnode>
      </node>
      <node id="32699">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="32700" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32585">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="32586" relation="include">
        </childnode>
      </node>
      <node id="32661">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="32662" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
      </node>
      <node id="32536">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="32537" relation="include">
        </childnode>
      </node>
      <node id="32812">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H</label>
        <link refid="AMReX__StructOfArrays_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32791" relation="include">
        </childnode>
      </node>
      <node id="32658">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="32659" relation="include">
        </childnode>
        <childnode refid="32660" relation="include">
        </childnode>
      </node>
      <node id="32652">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="32806">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="32583">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="32584" relation="include">
        </childnode>
        <childnode refid="32585" relation="include">
        </childnode>
        <childnode refid="32587" relation="include">
        </childnode>
      </node>
      <node id="32826">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32643">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="32644" relation="include">
        </childnode>
        <childnode refid="32645" relation="include">
        </childnode>
      </node>
      <node id="32575">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="32534" relation="include">
        </childnode>
        <childnode refid="32576" relation="include">
        </childnode>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32577" relation="include">
        </childnode>
        <childnode refid="32578" relation="include">
        </childnode>
        <childnode refid="32581" relation="include">
        </childnode>
      </node>
      <node id="32646">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="32783">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="32779" relation="include">
        </childnode>
      </node>
      <node id="32570">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="32681">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="32604">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="32605" relation="include">
        </childnode>
        <childnode refid="32569" relation="include">
        </childnode>
        <childnode refid="32606" relation="include">
        </childnode>
      </node>
      <node id="32831">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32759">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="32642" relation="include">
        </childnode>
      </node>
      <node id="32546">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="32521" relation="include">
        </childnode>
        <childnode refid="32547" relation="include">
        </childnode>
        <childnode refid="32709" relation="include">
        </childnode>
        <childnode refid="32548" relation="include">
        </childnode>
        <childnode refid="32710" relation="include">
        </childnode>
        <childnode refid="32611" relation="include">
        </childnode>
        <childnode refid="32711" relation="include">
        </childnode>
        <childnode refid="32713" relation="include">
        </childnode>
        <childnode refid="32717" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32718" relation="include">
        </childnode>
      </node>
      <node id="32624">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="32618">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="32526">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32527" relation="include">
        </childnode>
        <childnode refid="32528" relation="include">
        </childnode>
        <childnode refid="32529" relation="include">
        </childnode>
      </node>
      <node id="32560">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="32561" relation="include">
        </childnode>
      </node>
      <node id="32787">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="32568" relation="include">
        </childnode>
        <childnode refid="32569" relation="include">
        </childnode>
        <childnode refid="32570" relation="include">
        </childnode>
      </node>
      <node id="32582">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32723">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="32724" relation="include">
        </childnode>
      </node>
      <node id="32545">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="32546" relation="include">
        </childnode>
      </node>
      <node id="32555">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32541" relation="include">
        </childnode>
        <childnode refid="32553" relation="include">
        </childnode>
        <childnode refid="32556" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32558" relation="include">
        </childnode>
        <childnode refid="32559" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32562" relation="include">
        </childnode>
        <childnode refid="32563" relation="include">
        </childnode>
        <childnode refid="32564" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32566" relation="include">
        </childnode>
        <childnode refid="32567" relation="include">
        </childnode>
        <childnode refid="32568" relation="include">
        </childnode>
        <childnode refid="32569" relation="include">
        </childnode>
        <childnode refid="32570" relation="include">
        </childnode>
        <childnode refid="32571" relation="include">
        </childnode>
        <childnode refid="32572" relation="include">
        </childnode>
        <childnode refid="32573" relation="include">
        </childnode>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
      </node>
      <node id="32665">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="32736">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="32532">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="32781">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32782" relation="include">
        </childnode>
        <childnode refid="32783" relation="include">
        </childnode>
      </node>
      <node id="32820">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32816" relation="include">
        </childnode>
      </node>
      <node id="32799">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.H</label>
        <link refid="AMReX__EBToPVD_8H"/>
        <childnode refid="32800" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
      </node>
      <node id="32795">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
        <childnode refid="32543" relation="include">
        </childnode>
        <childnode refid="32796" relation="include">
        </childnode>
        <childnode refid="32797" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32771" relation="include">
        </childnode>
        <childnode refid="32585" relation="include">
        </childnode>
        <childnode refid="32766" relation="include">
        </childnode>
        <childnode refid="32772" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32773" relation="include">
        </childnode>
        <childnode refid="32799" relation="include">
        </childnode>
        <childnode refid="32718" relation="include">
        </childnode>
        <childnode refid="32781" relation="include">
        </childnode>
      </node>
      <node id="32673">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.cpp</label>
        <link refid="AMReX__EB__STL__utils_8cpp"/>
      </node>
      <node id="32763">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="32678">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="32679" relation="include">
        </childnode>
        <childnode refid="32680" relation="include">
        </childnode>
        <childnode refid="32682" relation="include">
        </childnode>
      </node>
      <node id="32698">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="32647">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="32587" relation="include">
        </childnode>
        <childnode refid="32648" relation="include">
        </childnode>
      </node>
      <node id="32574">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Gpu">amrex::Gpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_GPU_REDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_GPU_REDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuQualifiers_8H" kindref="compound">AMReX_GpuQualifiers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuControl_8H" kindref="compound">AMReX_GpuControl.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuTypes_8H" kindref="compound">AMReX_GpuTypes.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuAtomic_8H" kindref="compound">AMReX_GpuAtomic.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuUtility_8H" kindref="compound">AMReX_GpuUtility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Functional_8H" kindref="compound">AMReX_Functional.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Public<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2a3432ca64f06615abf07ab44c10cada38" kindref="member">Gpu</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ae705989f374063902dea01ffbd8bea59" kindref="member">deviceReduceSum</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1afcf7e4c0387e3a7e0552b832fe587303" kindref="member">deviceReduceMin</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a4bca2075ddd39a12c54ef72d6ab6982c" kindref="member">deviceReduceMax</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab3f4cd3fc9faf5dae5e082fe040abea9" kindref="member">deviceReduceLogicalAnd</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a9c281b8457f3a98e35e63cae00508128" kindref="member">deviceReduceLogicalOr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reduce<sp/>functions<sp/>based<sp/>on<sp/>_shfl_down_sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2a3432ca64f06615abf07ab44c10cada38" kindref="member">Gpu</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">warpReduce</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>operator()<sp/>(T<sp/>x,<sp/>sycl::ONEAPI::sub_group<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sg)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>warpSize/2;<sp/>offset<sp/>&gt;<sp/>0;<sp/>offset<sp/>/=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>sg.shuffle_down(x,<sp/>offset);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>F()(x,y);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WARPREDUCE&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">T<sp/>blockReduce<sp/>(T<sp/>x,<sp/>WARPREDUCE<sp/>&amp;&amp;<sp/>warp_reduce,<sp/>T<sp/>x0,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>shared<sp/>=<sp/>(T*)h.local;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>h.item-&gt;get_local_id(0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>sycl::ONEAPI::sub_group<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sg<sp/>=<sp/>h.item-&gt;get_sub_group();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lane<sp/>=<sp/>sg.get_local_id()[0];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid<sp/>=<sp/>sg.get_group_id()[0];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numwarps<sp/>=<sp/>sg.get_group_range()[0];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>warp_reduce(x,<sp/>sg);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__syncthreads()<sp/>prior<sp/>to<sp/>writing<sp/>to<sp/>shared<sp/>memory<sp/>is<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>reduction<sp/>call<sp/>is<sp/>occurring<sp/>multiple<sp/>times<sp/>in<sp/>a<sp/>kernel,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>since<sp/>we<sp/>don&apos;t<sp/>know<sp/>how<sp/>many<sp/>times<sp/>the<sp/>user<sp/>is<sp/>calling<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>it<sp/>always<sp/>to<sp/>be<sp/>safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>h.item-&gt;barrier(sycl::access::fence_space::local_space);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>0)<sp/>shared[wid]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>h.item-&gt;barrier(sycl::access::fence_space::local_space);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(tid<sp/>==<sp/>0)<sp/>||<sp/>(tid<sp/>&lt;<sp/>numwarps);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><sp/>b<sp/>?<sp/>shared[lane]<sp/>:<sp/>x0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/>0)<sp/>x<sp/>=<sp/>warp_reduce(x,<sp/>sg);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WARPREDUCE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ATOMICOP&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduce_partial<sp/>(T*<sp/>dest,<sp/>T<sp/>x,<sp/>WARPREDUCE<sp/>&amp;&amp;<sp/>warp_reduce,<sp/>ATOMICOP<sp/>&amp;&amp;<sp/>atomic_op,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>sycl::ONEAPI::sub_group<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sg<sp/>=<sp/>handler.item-&gt;get_sub_group();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid<sp/>=<sp/>sg.get_group_id()[0];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wid+1)*warpSize<sp/>&lt;=<sp/>handler.numActiveThreads)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>warp_reduce(x,<sp/>sg);<sp/></highlight><highlight class="comment">//<sp/>full<sp/>warp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sg.get_local_id()[0]<sp/>==<sp/>0)<sp/>atomic_op(dest,<sp/>x);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomic_op(dest,<sp/>x);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">deviceReduceSum_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Plus&lt;T&gt;<sp/>&gt;(),<sp/>(T)0,<sp/>h);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.item-&gt;get_local_id(0)<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aafa3ecc838e7a17251520a2ef125c963" kindref="member">Gpu::Atomic::AddNoRet</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">deviceReduceMin_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Less&lt;T&gt;<sp/>&gt;(),<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.item-&gt;get_local_id(0)<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a775473b1fa3e7d661e3ac6cde59b6018" kindref="member">Gpu::Atomic::Min</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">deviceReduceMax_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Greater&lt;T&gt;<sp/>&gt;(),<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.item-&gt;get_local_id(0)<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a4a6e235c6fc2013e52d7f1b59bc71bb0" kindref="member">Gpu::Atomic::Max</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">deviceReduceLogicalAnd_full</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalAnd&lt;int&gt;<sp/>&gt;(),<sp/>1,<sp/>h);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.item-&gt;get_local_id(0)<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a766ff7e5ed9d78fb3a0d5eaffec9c2ea" kindref="member">Gpu::Atomic::LogicalAnd</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">deviceReduceLogicalOr_full</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalOr&lt;int&gt;<sp/>&gt;(),<sp/>0,<sp/>h);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.item-&gt;get_local_id(0)<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ae705989f374063902dea01ffbd8bea59" kindref="member">deviceReduceSum</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">deviceReduceSum_full</ref>(dest,<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Plus&lt;T&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicAdd&lt;T&gt;(),<sp/>h);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1afcf7e4c0387e3a7e0552b832fe587303" kindref="member">deviceReduceMin</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">deviceReduceMin_full</ref>(dest,<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Less&lt;T&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicMin&lt;T&gt;(),<sp/>h);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a4bca2075ddd39a12c54ef72d6ab6982c" kindref="member">deviceReduceMax</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">deviceReduceMax_full</ref>(dest,<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Greater&lt;T&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicMax&lt;T&gt;(),<sp/>h);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab3f4cd3fc9faf5dae5e082fe040abea9" kindref="member">deviceReduceLogicalAnd</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">deviceReduceLogicalAnd_full</ref>(dest,<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalAnd&lt;int&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicLogicalAnd&lt;int&gt;(),<sp/>h);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a9c281b8457f3a98e35e63cae00508128" kindref="member">deviceReduceLogicalOr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">deviceReduceLogicalOr_full</ref>(dest,<sp/>source,<sp/>h);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalOr&lt;int&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicLogicalOr&lt;int&gt;(),<sp/>h);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>defined(AMREX_USE_HIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">warpReduce</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>operator()<sp/>(T<sp/>x)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>warpSize/2;<sp/>offset<sp/>&gt;<sp/>0;<sp/>offset<sp/>/=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuControl_8H_1a0008c69fc4b1c0dff4da75ec778f4941" kindref="member">AMREX_HIP_OR_CUDA</ref>(T<sp/>y<sp/>=<sp/>__shfl_down(x,<sp/>offset);,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>__shfl_down_sync(0xffffffff,<sp/>x,<sp/>offset);<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>F()(x,y);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WARPREDUCE&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="221"><highlight class="normal">T<sp/>blockReduce<sp/>(T<sp/>x,<sp/>WARPREDUCE<sp/>&amp;&amp;<sp/>warp_reduce,<sp/>T<sp/>x0)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>__shared__<sp/>T<sp/>shared[warpSize];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lane<sp/>=<sp/>threadIdx.x<sp/>%<sp/>warpSize;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid<sp/>=<sp/>threadIdx.x<sp/>/<sp/>warpSize;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>warp_reduce(x);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__syncthreads()<sp/>prior<sp/>to<sp/>writing<sp/>to<sp/>shared<sp/>memory<sp/>is<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>reduction<sp/>call<sp/>is<sp/>occurring<sp/>multiple<sp/>times<sp/>in<sp/>a<sp/>kernel,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>since<sp/>we<sp/>don&apos;t<sp/>know<sp/>how<sp/>many<sp/>times<sp/>the<sp/>user<sp/>is<sp/>calling<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>it<sp/>always<sp/>to<sp/>be<sp/>safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>0)<sp/>shared[wid]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>||<sp/>(threadIdx.x<sp/>&lt;<sp/>blockDim.x<sp/>/<sp/>warpSize);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><sp/>b<sp/>?<sp/>shared[lane]<sp/>:<sp/>x0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wid<sp/>==<sp/>0)<sp/>x<sp/>=<sp/>warp_reduce(x);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WARPREDUCE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ATOMICOP&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduce_partial<sp/>(T*<sp/>dest,<sp/>T<sp/>x,<sp/>WARPREDUCE<sp/>&amp;&amp;<sp/>warp_reduce,<sp/>ATOMICOP<sp/>&amp;&amp;<sp/>atomic_op,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warp<sp/>=<sp/>(<ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>)threadIdx.x<sp/>/<sp/>warpSize;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((warp+1)*warpSize<sp/>&lt;=<sp/>handler.numActiveThreads)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>warp_reduce(x);<sp/></highlight><highlight class="comment">//<sp/>full<sp/>warp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>%<sp/>warpSize<sp/>==<sp/>0)<sp/>atomic_op(dest,<sp/>x);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomic_op(dest,x);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">deviceReduceSum_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Plus&lt;T&gt;<sp/>&gt;(),<sp/>(T)0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aafa3ecc838e7a17251520a2ef125c963" kindref="member">Gpu::Atomic::AddNoRet</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">deviceReduceMin_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Less&lt;T&gt;<sp/>&gt;(),<sp/>source);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a775473b1fa3e7d661e3ac6cde59b6018" kindref="member">Gpu::Atomic::Min</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">deviceReduceMax_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Greater&lt;T&gt;<sp/>&gt;(),<sp/>source);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a4a6e235c6fc2013e52d7f1b59bc71bb0" kindref="member">Gpu::Atomic::Max</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">deviceReduceLogicalAnd_full</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalAnd&lt;int&gt;<sp/>&gt;(),<sp/>1);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a766ff7e5ed9d78fb3a0d5eaffec9c2ea" kindref="member">Gpu::Atomic::LogicalAnd</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">deviceReduceLogicalOr_full</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalOr&lt;int&gt;<sp/>&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ae705989f374063902dea01ffbd8bea59" kindref="member">deviceReduceSum</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)<sp/>noexcept</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">deviceReduceSum_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Plus&lt;T&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicAdd&lt;T&gt;(),<sp/>handler);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1afcf7e4c0387e3a7e0552b832fe587303" kindref="member">deviceReduceMin</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)<sp/>noexcept</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">deviceReduceMin_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Less&lt;T&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicMin&lt;T&gt;(),<sp/>handler);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a4bca2075ddd39a12c54ef72d6ab6982c" kindref="member">deviceReduceMax</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)<sp/>noexcept</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">deviceReduceMax_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,T,amrex::Greater&lt;T&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicMax&lt;T&gt;(),<sp/>handler);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab3f4cd3fc9faf5dae5e082fe040abea9" kindref="member">deviceReduceLogicalAnd</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)<sp/>noexcept</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">deviceReduceLogicalAnd_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalAnd&lt;int&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicLogicalAnd&lt;int&gt;(),<sp/>handler);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a9c281b8457f3a98e35e63cae00508128" kindref="member">deviceReduceLogicalOr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>handler)<sp/>noexcept</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler.isFullBlock())<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">deviceReduceLogicalOr_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::blockReduce_partial&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest,<sp/>source,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,int,amrex::LogicalOr&lt;int&gt;<sp/>&gt;(),</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::AtomicLogicalOr&lt;int&gt;(),<sp/>handler);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="364" refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">deviceReduceSum_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>atomic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>+=<sp/>source;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="374" refid="namespaceamrex_1_1Gpu_1a0ce32d487ead65c965dc43607f29756d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ae705989f374063902dea01ffbd8bea59" kindref="member">deviceReduceSum</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>noexcept</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">deviceReduceSum_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="381" refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">deviceReduceMin_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(gpureduce_reducemin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(*dest,<sp/>source);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="391" refid="namespaceamrex_1_1Gpu_1acb8d7517847b3f675693d5a824bbedf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1afcf7e4c0387e3a7e0552b832fe587303" kindref="member">deviceReduceMin</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>noexcept</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">deviceReduceMin_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="398" refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">deviceReduceMax_full</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(gpureduce_reducemax)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(*dest,<sp/>source);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="408" refid="namespaceamrex_1_1Gpu_1a5f1212a4d48d298458e6540009dd415d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a4bca2075ddd39a12c54ef72d6ab6982c" kindref="member">deviceReduceMax</ref><sp/>(T<sp/>*<sp/>dest,<sp/>T<sp/>source,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>noexcept</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">deviceReduceMax_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="414" refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">deviceReduceLogicalAnd_full</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(gpureduce_reduceand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>(*dest)<sp/>&amp;&amp;<sp/>source;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="423" refid="namespaceamrex_1_1Gpu_1ab3f4cd3fc9faf5dae5e082fe040abea9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ab3f4cd3fc9faf5dae5e082fe040abea9" kindref="member">deviceReduceLogicalAnd</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>noexcept</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">deviceReduceLogicalAnd_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="429" refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">deviceReduceLogicalOr_full</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source)<sp/>noexcept</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(gpureduce_reduceor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>(*dest)<sp/>||<sp/>source;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="438" refid="namespaceamrex_1_1Gpu_1a9c281b8457f3a98e35e63cae00508128" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a9c281b8457f3a98e35e63cae00508128" kindref="member">deviceReduceLogicalOr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>noexcept</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">deviceReduceLogicalOr_full</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2a3432ca64f06615abf07ab44c10cada38" kindref="member">Gpu</ref><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)<sp/>&amp;&amp;<sp/>!defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>https://developer.download.nvidia.com/assets/cuda/files/reduction.pdf<sp/>by<sp/>Mark<sp/>Harris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>amdWarpReduceSum<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__HIP_DEVICE_COMPILE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>64];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>16];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>8];</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>4];</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceSum_lt7<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&lt;<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>16];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>8];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>4];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceSum_ge7<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>32];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>16)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/>16];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>8)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/><sp/>8];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>4)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/><sp/>4];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>2)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/><sp/>2];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>1)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid<sp/>+<sp/><sp/>1];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceSum<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceSum_ge7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceSum_lt7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduceSum<sp/>(T*<sp/>data,<sp/>T&amp;<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>tid+512;<sp/>n<sp/>&lt;<sp/>blockSize;<sp/>n<sp/>+=<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[tid]<sp/>+=<sp/>data[n];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>512)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>256)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid+256];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>256)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>128)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid+128];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warpSize<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>64)<sp/>amdWarpReduceSum&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>64)<sp/>{<sp/>data[tid]<sp/>+=<sp/>data[tid+<sp/>64];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>cudaWarpReduceSum&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>==<sp/>0)<sp/>sum<sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>amdWarpReduceMin<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__HIP_DEVICE_COMPILE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>64]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>32]);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>16]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>8]);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>4]);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>2]);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>1]);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceMin_lt7<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&lt;<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>32]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>16]);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>8]);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>4]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>2]);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>1]);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceMin_ge7<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>32]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>16)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/>16]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>8)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>8]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>4)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>4]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>2)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>2]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>1)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid<sp/>+<sp/><sp/>1]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceMin<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceMin_ge7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceMin_lt7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduceMin<sp/>(T*<sp/>data,<sp/>T&amp;<sp/>dmin)<sp/>noexcept</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>tid+512;<sp/>n<sp/>&lt;<sp/>blockSize;<sp/>n<sp/>+=<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[n]);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>512)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>256)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid+256]);<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>256)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>128)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid+128]);<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warpSize<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>64)<sp/>amdWarpReduceMin&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>64)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(data[tid],data[tid+<sp/>64]);<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>cudaWarpReduceMin&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>==<sp/>0)<sp/>dmin<sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>amdWarpReduceMax<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__HIP_DEVICE_COMPILE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>64]);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>32]);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>16]);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>8]);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>4]);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>2]);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>1]);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceMax_lt7<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&lt;<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>32]);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>16]);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>8]);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>4]);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>2]);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>1]);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceMax_ge7<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>32]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>16)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/>16]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>8)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>8]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>4)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>4]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>2)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>2]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>1)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid<sp/>+<sp/><sp/>1]);<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceMax<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceMax_ge7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceMax_lt7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduceMax<sp/>(T*<sp/>data,<sp/>T&amp;<sp/>dmax)<sp/>noexcept</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>tid+512;<sp/>n<sp/>&lt;<sp/>blockSize;<sp/>n<sp/>+=<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[n]);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>512)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>256)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid+256]);<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>256)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>128)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid+128]);<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warpSize<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>64)<sp/>amdWarpReduceMax&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>64)<sp/>{<sp/>data[tid]<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(data[tid],data[tid+<sp/>64]);<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>cudaWarpReduceMax&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>==<sp/>0)<sp/>dmax<sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>amdWarpReduceAnd<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__HIP_DEVICE_COMPILE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>64];</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>16];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>8];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>4];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>2];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>1];</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceAnd_lt7<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&lt;<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>16];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>8];</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>4];</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>2];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>1];</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceAnd_ge7<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>32];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>16)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/>16];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>8)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>8];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>4)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>4];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>2)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>2];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>1)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid<sp/>+<sp/><sp/>1];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceAnd<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceAnd_ge7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceAnd_lt7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduceAnd<sp/>(T*<sp/>data,<sp/>T&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>tid+512;<sp/>n<sp/>&lt;<sp/>blockSize;<sp/>n<sp/>+=<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[n];</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>512)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>256)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid+256];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>256)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>128)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid+128];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warpSize<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>64)<sp/>amdWarpReduceAnd&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>64)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>&amp;&amp;<sp/>data[tid+<sp/>64];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>cudaWarpReduceAnd&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>==<sp/>0)<sp/>r<sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>amdWarpReduceOr<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__HIP_DEVICE_COMPILE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>64];</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>16];</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>8];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>4];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>2];</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>1];</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceOr_lt7<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&lt;<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>16];</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>8];</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>4];</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>2];</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>1];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceOr_ge7<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>64)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>32];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>16)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/>16];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>16)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>8)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>8];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>8)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>4)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>4];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>4)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>2)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>2];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/><sp/>2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>1)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid<sp/>+<sp/><sp/>1];<sp/>}<sp/>__syncwarp();<sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(data,tid);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cudaWarpReduceOr<sp/>(T*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>noexcept</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__CUDA_ARCH__<sp/>&gt;=<sp/>700</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceOr_ge7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaWarpReduceOr_lt7&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warpSize,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blockReduceOr<sp/>(T*<sp/>data,<sp/>T&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>tid+512;<sp/>n<sp/>&lt;<sp/>blockSize;<sp/>n<sp/>+=<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[n];</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>512)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>256)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid+256];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>256)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>128)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid+128];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warpSize<sp/>&gt;=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>64)<sp/>amdWarpReduceOr&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockSize<sp/>&gt;=<sp/>128)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/><sp/>64)<sp/>{<sp/>data[tid]<sp/>=<sp/>data[tid]<sp/>||<sp/>data[tid+<sp/>64];<sp/>}<sp/>__syncthreads();<sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>&lt;<sp/>32)<sp/>cudaWarpReduceOr&lt;blockSize&gt;(data,<sp/>tid);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tid<sp/>==<sp/>0)<sp/>r<sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuReduce.H"/>
  </compounddef>
</doxygen>
