<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1ParticleCopyPlan" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleCopyPlan</compoundname>
    <includes refid="AMReX__ParticleCommunication_8H" local="no">AMReX_ParticleCommunication.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::ParticleCopyPlan::m_dst_indices</definition>
        <argsstring></argsstring>
        <name>m_dst_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7285486c8e5119099572a46997f89641" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;unsigned int&gt; amrex::ParticleCopyPlan::m_box_counts_d</definition>
        <argsstring></argsstring>
        <name>m_box_counts_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="78" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ad7d72a20fb9d967f606d7e1ed546b6ac" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a3d871a58c724cf2f3a5fb0247d592beb" kindref="member">Gpu::HostVector</ref>&lt; unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::HostVector&lt;unsigned int&gt; amrex::ParticleCopyPlan::m_box_counts_h</definition>
        <argsstring></argsstring>
        <name>m_box_counts_h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="79" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;unsigned int&gt; amrex::ParticleCopyPlan::m_box_offsets</definition>
        <argsstring></argsstring>
        <name>m_box_offsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="80" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_counts</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_counts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="82" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a733fb4cb939752ebab350db17acfffa3" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_offsets</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_offsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="83" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a904274abbb6f2df42bb024021bc940e7" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_ids</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_ids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="84" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_pids</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_pids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="85" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a6bea1df063b160fa8cd2bb83f9ea6062" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_levs</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_levs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="86" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::ParticleCopyPlan::m_NumSnds</definition>
        <argsstring></argsstring>
        <name>m_NumSnds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="88" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleCopyPlan::m_nrcvs</definition>
        <argsstring></argsstring>
        <name>m_nrcvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="89" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ab1268c5ed411da9959d9c18f97a92c9e" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structMPI__Status" kindref="compound">MPI_Status</ref> &gt;</type>
        <definition>Vector&lt;MPI_Status&gt; amrex::ParticleCopyPlan::m_build_stats</definition>
        <argsstring></argsstring>
        <name>m_build_stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ae99c8d354fa1ed4c85a8856eed87accc" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="AMReX__ccse-mpi_8H_1a240e9d13a157e03c75e42306b13cd8d8" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::ParticleCopyPlan::m_build_rreqs</definition>
        <argsstring></argsstring>
        <name>m_build_rreqs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="91" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aac55f2c595ea7f57832345df3d5fb78b" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structMPI__Status" kindref="compound">MPI_Status</ref> &gt;</type>
        <definition>Vector&lt;MPI_Status&gt; amrex::ParticleCopyPlan::m_particle_stats</definition>
        <argsstring></argsstring>
        <name>m_particle_stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="93" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="AMReX__ccse-mpi_8H_1a240e9d13a157e03c75e42306b13cd8d8" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::ParticleCopyPlan::m_particle_rreqs</definition>
        <argsstring></argsstring>
        <name>m_particle_rreqs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="94" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_snd_num_particles</definition>
        <argsstring></argsstring>
        <name>m_snd_num_particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="96" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_rcv_num_particles</definition>
        <argsstring></argsstring>
        <name>m_rcv_num_particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="97" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_neighbor_procs</definition>
        <argsstring></argsstring>
        <name>m_neighbor_procs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="99" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a4f11e52b07357018bf4097a60913ec01" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_Snds</definition>
        <argsstring></argsstring>
        <name>m_Snds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="101" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a77c7aface2c0ecf8d3a8006c8924e8fc" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_Rcvs</definition>
        <argsstring></argsstring>
        <name>m_Rcvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="102" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_RcvProc</definition>
        <argsstring></argsstring>
        <name>m_RcvProc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="103" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_rOffset</definition>
        <argsstring></argsstring>
        <name>m_rOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="104" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a3d871a58c724cf2f3a5fb0247d592beb" kindref="member">Gpu::HostVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::HostVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_data</definition>
        <argsstring></argsstring>
        <name>m_rcv_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="105" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_offsets</definition>
        <argsstring></argsstring>
        <name>m_snd_offsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="107" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_counts</definition>
        <argsstring></argsstring>
        <name>m_snd_counts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="108" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7bfedead4c32d33e5013a8b5df9c5245" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_pad_correction_h</definition>
        <argsstring></argsstring>
        <name>m_snd_pad_correction_h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="110" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a3900fd1e88118efacebc15ddd99cbacf" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; std::size_t &gt;</type>
        <definition>Gpu::DeviceVector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_pad_correction_d</definition>
        <argsstring></argsstring>
        <name>m_snd_pad_correction_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="111" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_rcv_pad_correction_h</definition>
        <argsstring></argsstring>
        <name>m_rcv_pad_correction_h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="113" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; std::size_t &gt;</type>
        <definition>Gpu::DeviceVector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_rcv_pad_correction_d</definition>
        <argsstring></argsstring>
        <name>m_rcv_pad_correction_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="114" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ParticleCopyPlan::m_local</definition>
        <argsstring></argsstring>
        <name>m_local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="224" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a9e7e36993ac94530af3bec8f0643764a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PC</type>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t</ref>&lt; IsParticleContainer&lt; PC &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <declname>foo</declname>
            <defname>foo</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::build</definition>
        <argsstring>(const PC &amp;pc, const ParticleCopyOp &amp;op, bool local)</argsstring>
        <name>build</name>
        <param>
          <type>const PC &amp;</type>
          <declname>pc</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="117" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="117" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1afd8b75e43a4f9a19787cec45ee84b493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="191" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1ab70e7cbaf0b6636a9be60729e0869495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::buildMPIFinish</definition>
        <argsstring>(const ParticleBufferMap &amp;map)</argsstring>
        <name>buildMPIFinish</name>
        <param>
          <type>const <ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="193" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="204" bodyend="266"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a996c810aea3ffa99a480dffa839230c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::buildMPIStart</definition>
        <argsstring>(const ParticleBufferMap &amp;map, Long psize)</argsstring>
        <name>buildMPIStart</name>
        <param>
          <type>const <ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>psize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="197" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="46" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a1e6f1a7b8905dec2a13373c091bedc8b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::doHandShake</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs) const</argsstring>
        <name>doHandShake</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="204" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1afb1ad83ab8ab56bb98500f418fc2cc42" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::doHandShakeLocal</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs) const</argsstring>
        <name>doHandShakeLocal</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="211" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="275" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a6dabbed162dce5462b4fd0023b1b57a0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::doHandShakeGlobal</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs) const</argsstring>
        <name>doHandShakeGlobal</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="217" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="339" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a73a76648a2246e710211b3bb9404b6f4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleCopyPlan::doHandShakeAllToAll</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs) const</argsstring>
        <name>doHandShakeAllToAll</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="316" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4153">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="4141">
        <label>std::allocator&lt; unsigned int &gt;</label>
      </node>
      <node id="4146">
        <label>amrex::PODVector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4151">
        <label>std::vector&lt; Long, std::allocator&lt; Long &gt; &gt;</label>
      </node>
      <node id="4154">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4148">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4147">
        <label>std::allocator&lt;std::size_t &gt;</label>
      </node>
      <node id="4140">
        <label>amrex::PODVector&lt; unsigned int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4142">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4155">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="4149">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="4152">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4150">
        <label>amrex::Vector&lt; Long &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4144">
        <label>amrex::PODVector&lt; int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4143">
        <label>std::vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt;, std::allocator&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="4145">
        <label>std::allocator&lt; int &gt;</label>
      </node>
      <node id="4138">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4139">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
      <node id="4137">
        <label>amrex::ParticleCopyPlan</label>
        <link refid="structamrex_1_1ParticleCopyPlan"/>
        <childnode refid="4138" relation="usage">
          <edgelabel>m_snd_pad_correction_h</edgelabel>
          <edgelabel>m_snd_offsets</edgelabel>
          <edgelabel>m_rOffset</edgelabel>
          <edgelabel>m_snd_counts</edgelabel>
          <edgelabel>m_rcv_pad_correction_h</edgelabel>
        </childnode>
        <childnode refid="4140" relation="usage">
          <edgelabel>m_box_offsets</edgelabel>
          <edgelabel>m_box_counts_h</edgelabel>
          <edgelabel>m_box_counts_d</edgelabel>
        </childnode>
        <childnode refid="4142" relation="usage">
          <edgelabel>m_dst_indices</edgelabel>
        </childnode>
        <childnode refid="4144" relation="usage">
          <edgelabel>m_rcv_box_ids</edgelabel>
          <edgelabel>m_rcv_box_counts</edgelabel>
          <edgelabel>m_rcv_data</edgelabel>
          <edgelabel>m_rcv_box_pids</edgelabel>
          <edgelabel>m_rcv_box_offsets</edgelabel>
          <edgelabel>m_rcv_box_levs</edgelabel>
        </childnode>
        <childnode refid="4146" relation="usage">
          <edgelabel>m_snd_pad_correction_d</edgelabel>
          <edgelabel>m_rcv_pad_correction_d</edgelabel>
        </childnode>
        <childnode refid="4148" relation="usage">
          <edgelabel>m_RcvProc</edgelabel>
          <edgelabel>m_neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="4150" relation="usage">
          <edgelabel>m_Rcvs</edgelabel>
          <edgelabel>m_Snds</edgelabel>
          <edgelabel>m_rcv_num_particles</edgelabel>
          <edgelabel>m_snd_num_particles</edgelabel>
        </childnode>
        <childnode refid="4152" relation="usage">
          <edgelabel>m_particle_stats</edgelabel>
          <edgelabel>m_build_stats</edgelabel>
        </childnode>
        <childnode refid="4154" relation="usage">
          <edgelabel>m_build_rreqs</edgelabel>
          <edgelabel>m_particle_rreqs</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="75" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="74" bodyend="225"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleCopyPlan_1a9e7e36993ac94530af3bec8f0643764a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>build</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ab70e7cbaf0b6636a9be60729e0869495" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>buildMPIFinish</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a996c810aea3ffa99a480dffa839230c3" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>buildMPIStart</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1afd8b75e43a4f9a19787cec45ee84b493" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>clear</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a1e6f1a7b8905dec2a13373c091bedc8b" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShake</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a73a76648a2246e710211b3bb9404b6f4" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShakeAllToAll</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a6dabbed162dce5462b4fd0023b1b57a0" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShakeGlobal</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1afb1ad83ab8ab56bb98500f418fc2cc42" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShakeLocal</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7285486c8e5119099572a46997f89641" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_box_counts_d</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ad7d72a20fb9d967f606d7e1ed546b6ac" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_box_counts_h</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_box_offsets</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ae99c8d354fa1ed4c85a8856eed87accc" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_build_rreqs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ab1268c5ed411da9959d9c18f97a92c9e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_build_stats</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_dst_indices</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_local</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_neighbor_procs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_nrcvs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_NumSnds</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_particle_rreqs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aac55f2c595ea7f57832345df3d5fb78b" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_particle_stats</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a688bba8ba5f6445403254ab976e17130" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_counts</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a904274abbb6f2df42bb024021bc940e7" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_ids</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a6bea1df063b160fa8cd2bb83f9ea6062" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_levs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a733fb4cb939752ebab350db17acfffa3" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_offsets</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a563a9fd94be463d592f88478a720d6b0" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_pids</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_data</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_num_particles</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_pad_correction_d</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_pad_correction_h</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_RcvProc</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a77c7aface2c0ecf8d3a8006c8924e8fc" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_Rcvs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rOffset</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_counts</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_num_particles</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_offsets</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a3900fd1e88118efacebc15ddd99cbacf" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_pad_correction_d</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7bfedead4c32d33e5013a8b5df9c5245" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_pad_correction_h</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a4f11e52b07357018bf4097a60913ec01" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_Snds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
