<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1ParticleCopyPlan" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleCopyPlan</compoundname>
    <includes refid="AMReX__ParticleCommunication_8H" local="no">AMReX_ParticleCommunication.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;int, Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::ParticleCopyPlan::m_dst_indices</definition>
        <argsstring></argsstring>
        <name>m_dst_indices</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_dst_indices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="82" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7285486c8e5119099572a46997f89641" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;unsigned int&gt; amrex::ParticleCopyPlan::m_box_counts_d</definition>
        <argsstring></argsstring>
        <name>m_box_counts_d</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_box_counts_d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="84" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ad7d72a20fb9d967f606d7e1ed546b6ac" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a337aceb06d1f93486e6593ff058c0a93" kindref="member">Gpu::HostVector</ref>&lt; unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::HostVector&lt;unsigned int&gt; amrex::ParticleCopyPlan::m_box_counts_h</definition>
        <argsstring></argsstring>
        <name>m_box_counts_h</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_box_counts_h</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="85" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;unsigned int&gt; amrex::ParticleCopyPlan::m_box_offsets</definition>
        <argsstring></argsstring>
        <name>m_box_offsets</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_box_offsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="86" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a0cecada82881cc3751599dc6818e5a26" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_counts</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_counts</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_box_counts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="88" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7bda4dd344e77a88f619886e4b7a5e41" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_offsets</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_offsets</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_box_offsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="89" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a0298dfc0a4cf7473d0928f295d4fc69a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_ids</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_ids</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_box_ids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="90" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a27b5bc6c55bb3af6e0a9fe4227182a2e" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_pids</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_pids</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_box_pids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="91" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a30ec4ed1918cc93dc2345d25aeb4a650" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_box_levs</definition>
        <argsstring></argsstring>
        <name>m_rcv_box_levs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_box_levs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="92" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::ParticleCopyPlan::m_NumSnds</definition>
        <argsstring></argsstring>
        <name>m_NumSnds</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_NumSnds</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="94" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleCopyPlan::m_nrcvs</definition>
        <argsstring></argsstring>
        <name>m_nrcvs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_nrcvs</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="95" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ab1268c5ed411da9959d9c18f97a92c9e" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1mpidatatypes_1_1MPI__Status" kindref="compound">MPI_Status</ref> &gt;</type>
        <definition>Vector&lt;MPI_Status&gt; amrex::ParticleCopyPlan::m_build_stats</definition>
        <argsstring></argsstring>
        <name>m_build_stats</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_build_stats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="96" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ae99c8d354fa1ed4c85a8856eed87accc" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1_1mpidatatypes_1aa06d59ab6bca4110216e437d289ae929" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::ParticleCopyPlan::m_build_rreqs</definition>
        <argsstring></argsstring>
        <name>m_build_rreqs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_build_rreqs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="97" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a8aaf55be99fcd797c6532c2c4eab393f" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1mpidatatypes_1_1MPI__Status" kindref="compound">MPI_Status</ref> &gt;</type>
        <definition>Vector&lt;MPI_Status&gt; amrex::ParticleCopyPlan::m_particle_rstats</definition>
        <argsstring></argsstring>
        <name>m_particle_rstats</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_particle_rstats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="99" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1_1mpidatatypes_1aa06d59ab6bca4110216e437d289ae929" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::ParticleCopyPlan::m_particle_rreqs</definition>
        <argsstring></argsstring>
        <name>m_particle_rreqs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_particle_rreqs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="100" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7db9842f097fda84a75ff439989d54e3" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1mpidatatypes_1_1MPI__Status" kindref="compound">MPI_Status</ref> &gt;</type>
        <definition>Vector&lt;MPI_Status&gt; amrex::ParticleCopyPlan::m_particle_sstats</definition>
        <argsstring></argsstring>
        <name>m_particle_sstats</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_particle_sstats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="102" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a519b2ffbd14c1b3d07a01e1a21c609b5" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1_1mpidatatypes_1aa06d59ab6bca4110216e437d289ae929" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::ParticleCopyPlan::m_particle_sreqs</definition>
        <argsstring></argsstring>
        <name>m_particle_sreqs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_particle_sreqs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="103" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_snd_num_particles</definition>
        <argsstring></argsstring>
        <name>m_snd_num_particles</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_snd_num_particles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="105" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_rcv_num_particles</definition>
        <argsstring></argsstring>
        <name>m_rcv_num_particles</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_num_particles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="106" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_neighbor_procs</definition>
        <argsstring></argsstring>
        <name>m_neighbor_procs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_neighbor_procs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="108" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a4f11e52b07357018bf4097a60913ec01" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_Snds</definition>
        <argsstring></argsstring>
        <name>m_Snds</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_Snds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="110" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a77c7aface2c0ecf8d3a8006c8924e8fc" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::ParticleCopyPlan::m_Rcvs</definition>
        <argsstring></argsstring>
        <name>m_Rcvs</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_Rcvs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="111" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::ParticleCopyPlan::m_RcvProc</definition>
        <argsstring></argsstring>
        <name>m_RcvProc</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_RcvProc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="112" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_rOffset</definition>
        <argsstring></argsstring>
        <name>m_rOffset</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="113" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a337aceb06d1f93486e6593ff058c0a93" kindref="member">Gpu::HostVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::HostVector&lt;int&gt; amrex::ParticleCopyPlan::m_rcv_data</definition>
        <argsstring></argsstring>
        <name>m_rcv_data</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="114" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_offsets</definition>
        <argsstring></argsstring>
        <name>m_snd_offsets</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_snd_offsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="116" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_counts</definition>
        <argsstring></argsstring>
        <name>m_snd_counts</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_snd_counts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="117" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a7bfedead4c32d33e5013a8b5df9c5245" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_pad_correction_h</definition>
        <argsstring></argsstring>
        <name>m_snd_pad_correction_h</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_snd_pad_correction_h</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="119" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a3900fd1e88118efacebc15ddd99cbacf" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; std::size_t &gt;</type>
        <definition>Gpu::DeviceVector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_snd_pad_correction_d</definition>
        <argsstring></argsstring>
        <name>m_snd_pad_correction_d</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_snd_pad_correction_d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="120" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_rcv_pad_correction_h</definition>
        <argsstring></argsstring>
        <name>m_rcv_pad_correction_h</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_pad_correction_h</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="122" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; std::size_t &gt;</type>
        <definition>Gpu::DeviceVector&lt;std::size_t&gt; amrex::ParticleCopyPlan::m_rcv_pad_correction_d</definition>
        <argsstring></argsstring>
        <name>m_rcv_pad_correction_d</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_rcv_pad_correction_d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="123" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1aeb86bf7ccfb6c6fdc0d232135a1c5908" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::d_int_comp_mask</definition>
        <argsstring></argsstring>
        <name>d_int_comp_mask</name>
        <qualifiedname>amrex::ParticleCopyPlan::d_int_comp_mask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="125" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a36f3d83885b79143865c67ff5599414e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;int&gt; amrex::ParticleCopyPlan::d_real_comp_mask</definition>
        <argsstring></argsstring>
        <name>d_real_comp_mask</name>
        <qualifiedname>amrex::ParticleCopyPlan::d_real_comp_mask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="125" column="39" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a439daadd96aa6868c30e13e8baf8be18" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::ParticleCopyPlan::m_superparticle_size</definition>
        <argsstring></argsstring>
        <name>m_superparticle_size</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_superparticle_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="126" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ParticleCopyPlan::m_local</definition>
        <argsstring></argsstring>
        <name>m_local</name>
        <qualifiedname>amrex::ParticleCopyPlan::m_local</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="304" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="304" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1aa9079143c32a58be84a505fd9d97ffd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Long</type>
        <definition>Long amrex::ParticleCopyPlan::superParticleSize</definition>
        <argsstring>() const</argsstring>
        <name>superParticleSize</name>
        <qualifiedname>amrex::ParticleCopyPlan::superParticleSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="128" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1abe6bc677fed710ac617242ea29aeaefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PC</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; IsParticleContainer&lt; PC &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <declname>foo</declname>
            <defname>foo</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::build</definition>
        <argsstring>(const PC &amp;pc, const ParticleCopyOp &amp;op, const Vector&lt; int &gt; &amp;int_comp_mask, const Vector&lt; int &gt; &amp;real_comp_mask, bool local)</argsstring>
        <name>build</name>
        <qualifiedname>amrex::ParticleCopyPlan::build</qualifiedname>
        <param>
          <type>const PC &amp;</type>
          <declname>pc</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>int_comp_mask</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>real_comp_mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="131" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="131" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a234bad9d87162a94aaa8d75b0c0490de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>amrex::ParticleCopyPlan::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="271" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a1ccd584412c5ab88c0eabcbdb3bdfb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::buildMPIFinish</definition>
        <argsstring>(const ParticleBufferMap &amp;map)</argsstring>
        <name>buildMPIFinish</name>
        <qualifiedname>amrex::ParticleCopyPlan::buildMPIFinish</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="273" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="213" bodyend="260"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a884ad6151242fd6708bec5c2662f13e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::buildMPIStart</definition>
        <argsstring>(const ParticleBufferMap &amp;map, Long psize)</argsstring>
        <name>buildMPIStart</name>
        <qualifiedname>amrex::ParticleCopyPlan::buildMPIStart</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1ParticleBufferMap" kindref="compound">ParticleBufferMap</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>psize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="277" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="48" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1ac4a638b58d7e4f87eccf13b9e1c6fa87" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::doHandShake</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs) const</argsstring>
        <name>doHandShake</name>
        <qualifiedname>amrex::ParticleCopyPlan::doHandShake</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="284" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a75312d5254d02499edba483ee2925178" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::doHandShakeLocal</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs) const</argsstring>
        <name>doHandShakeLocal</name>
        <qualifiedname>amrex::ParticleCopyPlan::doHandShakeLocal</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="291" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="269" bodyend="311"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a5e14dec8bd837aac5995c60231debf81" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::doHandShakeGlobal</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs)</argsstring>
        <name>doHandShakeGlobal</name>
        <qualifiedname>amrex::ParticleCopyPlan::doHandShakeGlobal</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="297" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="336" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCopyPlan_1a77722ca014d6803cc68dbd6898810cd4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleCopyPlan::doHandShakeAllToAll</definition>
        <argsstring>(const Vector&lt; Long &gt; &amp;Snds, Vector&lt; Long &gt; &amp;Rcvs)</argsstring>
        <name>doHandShakeAllToAll</name>
        <qualifiedname>amrex::ParticleCopyPlan::doHandShakeAllToAll</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Snds</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt; &amp;</type>
          <declname>Rcvs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="302" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp" bodystart="313" bodyend="334"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="17">
        <label>amrex::PODVector&lt; int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>amrex::PODVector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>amrex::PODVector&lt; unsigned int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="13">
        <label>amrex::Vector&lt; Long &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; amrex::mpidatatypes::MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::ParticleCopyPlan</label>
        <link refid="structamrex_1_1ParticleCopyPlan"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_dst_indices</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_box_counts_d</edgelabel>
          <edgelabel>m_box_counts_h</edgelabel>
          <edgelabel>m_box_offsets</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_RcvProc</edgelabel>
          <edgelabel>m_neighbor_procs</edgelabel>
          <edgelabel>m_rcv_box_counts</edgelabel>
          <edgelabel>m_rcv_box_ids</edgelabel>
          <edgelabel>m_rcv_box_levs</edgelabel>
          <edgelabel>m_rcv_box_offsets</edgelabel>
          <edgelabel>m_rcv_box_pids</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_build_stats</edgelabel>
          <edgelabel>m_particle_rstats</edgelabel>
          <edgelabel>m_particle_sstats</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_build_rreqs</edgelabel>
          <edgelabel>m_particle_rreqs</edgelabel>
          <edgelabel>m_particle_sreqs</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_Rcvs</edgelabel>
          <edgelabel>m_Snds</edgelabel>
          <edgelabel>m_rcv_num_particles</edgelabel>
          <edgelabel>m_snd_num_particles</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_rOffset</edgelabel>
          <edgelabel>m_rcv_pad_correction_h</edgelabel>
          <edgelabel>m_snd_counts</edgelabel>
          <edgelabel>m_snd_offsets</edgelabel>
          <edgelabel>m_snd_pad_correction_h</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>d_int_comp_mask</edgelabel>
          <edgelabel>d_real_comp_mask</edgelabel>
          <edgelabel>m_rcv_data</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_rcv_pad_correction_d</edgelabel>
          <edgelabel>m_snd_pad_correction_d</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" line="80" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H" bodystart="81" bodyend="305"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleCopyPlan_1abe6bc677fed710ac617242ea29aeaefa" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>build</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a1ccd584412c5ab88c0eabcbdb3bdfb3e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>buildMPIFinish</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a884ad6151242fd6708bec5c2662f13e5" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>buildMPIStart</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a234bad9d87162a94aaa8d75b0c0490de" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>clear</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aeb86bf7ccfb6c6fdc0d232135a1c5908" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>d_int_comp_mask</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a36f3d83885b79143865c67ff5599414e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>d_real_comp_mask</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ac4a638b58d7e4f87eccf13b9e1c6fa87" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShake</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a77722ca014d6803cc68dbd6898810cd4" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShakeAllToAll</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a5e14dec8bd837aac5995c60231debf81" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShakeGlobal</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a75312d5254d02499edba483ee2925178" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>doHandShakeLocal</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7285486c8e5119099572a46997f89641" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_box_counts_d</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ad7d72a20fb9d967f606d7e1ed546b6ac" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_box_counts_h</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a813195052803b3c8844eb604a508e9b0" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_box_offsets</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ae99c8d354fa1ed4c85a8856eed87accc" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_build_rreqs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ab1268c5ed411da9959d9c18f97a92c9e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_build_stats</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7d3018f1b395f2aebb3caa3acb43be9a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_dst_indices</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a1d2885301b5e06ee60387143583aa6f6" prot="private" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_local</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a1eeb92e8809fe6c87b84c777c42323e6" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_neighbor_procs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ac2e31e632d2856477f32757e16ba053e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_nrcvs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a18a64fd46d15d910a3fdd48a4868a200" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_NumSnds</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aa7dcdca22d276a177da66220283582c0" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_particle_rreqs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a8aaf55be99fcd797c6532c2c4eab393f" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_particle_rstats</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a519b2ffbd14c1b3d07a01e1a21c609b5" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_particle_sreqs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7db9842f097fda84a75ff439989d54e3" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_particle_sstats</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a0cecada82881cc3751599dc6818e5a26" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_counts</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a0298dfc0a4cf7473d0928f295d4fc69a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_ids</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a30ec4ed1918cc93dc2345d25aeb4a650" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_levs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7bda4dd344e77a88f619886e4b7a5e41" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_offsets</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a27b5bc6c55bb3af6e0a9fe4227182a2e" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_box_pids</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aade131a77bcc6958b5a1c5296f4f62ec" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_data</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aeb2916dc26f61c4c1e88711227433967" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_num_particles</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a8305346a9bb20a4e5d7983acb025a5a8" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_pad_correction_d</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1ac166e1289239c5e946d1286621d5abd5" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rcv_pad_correction_h</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1abfa960b63b48835c96d12a8754327b10" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_RcvProc</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a77c7aface2c0ecf8d3a8006c8924e8fc" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_Rcvs</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a860eec9b2f5d15e91706d6feb2fa2134" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_rOffset</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a0fc80c44685a05b3c1e807569fae0d62" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_counts</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a9af231ffac4e8ee9799fe6db8edd6886" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_num_particles</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a03f46ec462fad618d823836214c9411a" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_offsets</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a3900fd1e88118efacebc15ddd99cbacf" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_pad_correction_d</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a7bfedead4c32d33e5013a8b5df9c5245" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_snd_pad_correction_h</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a4f11e52b07357018bf4097a60913ec01" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_Snds</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1a439daadd96aa6868c30e13e8baf8be18" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>m_superparticle_size</name></member>
      <member refid="structamrex_1_1ParticleCopyPlan_1aa9079143c32a58be84a505fd9d97ffd8" prot="public" virt="non-virtual"><scope>amrex::ParticleCopyPlan</scope><name>superParticleSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
