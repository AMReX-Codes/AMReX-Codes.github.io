<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1DataAllocator" kind="struct" language="C++" prot="public">
    <compoundname>amrex::DataAllocator</compoundname>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; char &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; EBCellFlag &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; int &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; Real &gt;</derivedcompoundref>
    <includes refid="AMReX__BaseFab_8H" local="no">AMReX_BaseFab.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::DataAllocator::m_arena</definition>
        <argsstring></argsstring>
        <name>m_arena</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="160" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a7efc193b557d263444d91cc90c7c7073" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::DataAllocator::DataAllocator</definition>
        <argsstring>() noexcept</argsstring>
        <name>DataAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="163" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a1cbea797e47f9d7448b1f574beb24d8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::DataAllocator::DataAllocator</definition>
        <argsstring>(Arena *ar) noexcept</argsstring>
        <name>DataAllocator</name>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="166" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a30716debe7359b2514c7dd7eebe6c826" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1af7feff7858c7b1d3557509d883c46674" kindref="member">AMREX_GPU_HOST</ref> void *</type>
        <definition>AMREX_GPU_HOST void* amrex::DataAllocator::alloc</definition>
        <argsstring>(std::size_t sz) const noexcept</argsstring>
        <name>alloc</name>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="169" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1adaecd2fc8c1ddc50d895652495341de5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1af7feff7858c7b1d3557509d883c46674" kindref="member">AMREX_GPU_HOST</ref> void</type>
        <definition>AMREX_GPU_HOST void amrex::DataAllocator::free</definition>
        <argsstring>(void *pt) const noexcept</argsstring>
        <name>free</name>
        <param>
          <type>void *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="174" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a32d3c8bf67dd1026e15ee2c745480726" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1af7feff7858c7b1d3557509d883c46674" kindref="member">AMREX_GPU_HOST</ref> <ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>AMREX_GPU_HOST Arena* amrex::DataAllocator::arena</definition>
        <argsstring>() const noexcept</argsstring>
        <name>arena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="179" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="179" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1147">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1144">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1141">
        <label>amrex::TagBox</label>
        <link refid="classamrex_1_1TagBox"/>
        <childnode refid="1140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1150">
        <label>amrex::EBFArrayBox</label>
        <link refid="classamrex_1_1EBFArrayBox"/>
        <childnode refid="1148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1138">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
      </node>
      <node id="1149">
        <label>amrex::CutFab</label>
        <link refid="classamrex_1_1CutFab"/>
        <childnode refid="1148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1145">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="1144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1140">
        <label>amrex::BaseFab&lt; char &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1143">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="1142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1146">
        <label>amrex::Mask</label>
        <link refid="classamrex_1_1Mask"/>
        <childnode refid="1144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1142">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1148">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="1147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1139">
        <label>amrex::BaseFab&lt; T &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1138" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1153">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1151">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="1152" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="1152">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="1153" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="159" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="159" bodyend="182"/>
    <listofallmembers>
      <member refid="structamrex_1_1DataAllocator_1a30716debe7359b2514c7dd7eebe6c826" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>alloc</name></member>
      <member refid="structamrex_1_1DataAllocator_1a32d3c8bf67dd1026e15ee2c745480726" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>arena</name></member>
      <member refid="structamrex_1_1DataAllocator_1a7efc193b557d263444d91cc90c7c7073" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>DataAllocator</name></member>
      <member refid="structamrex_1_1DataAllocator_1a1cbea797e47f9d7448b1f574beb24d8b" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>DataAllocator</name></member>
      <member refid="structamrex_1_1DataAllocator_1adaecd2fc8c1ddc50d895652495341de5" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>free</name></member>
      <member refid="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>m_arena</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
