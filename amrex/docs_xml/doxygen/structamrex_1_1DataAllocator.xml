<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1DataAllocator" kind="struct" language="C++" prot="public">
    <compoundname>amrex::DataAllocator</compoundname>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1TableData" prot="public" virt="non-virtual">amrex::TableData&lt; T, N &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; AtomicInt &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; char &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; EBCellFlag &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; HYPRE_Int &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; int &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; PetscInt &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; Real &gt;</derivedcompoundref>
    <includes refid="AMReX__DataAllocator_8H" local="no">AMReX_DataAllocator.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::DataAllocator::m_arena</definition>
        <argsstring></argsstring>
        <name>m_arena</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="10" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a21273a9c68a6101940451a9f6abf7f6e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DataAllocator::DataAllocator</definition>
        <argsstring>() noexcept</argsstring>
        <name>DataAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="12" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1ad2f91458d09a1484857061ff235e73bd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DataAllocator::DataAllocator</definition>
        <argsstring>(Arena *ar) noexcept</argsstring>
        <name>DataAllocator</name>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="14" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* amrex::DataAllocator::alloc</definition>
        <argsstring>(std::size_t sz) const noexcept</argsstring>
        <name>alloc</name>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="16" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::DataAllocator::free</definition>
        <argsstring>(void *pt) const noexcept</argsstring>
        <name>free</name>
        <param>
          <type>void *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="20" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::DataAllocator::arena</definition>
        <argsstring>() const noexcept</argsstring>
        <name>arena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="24" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="24" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::TagBox</label>
        <link refid="classamrex_1_1TagBox"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>amrex::EBFArrayBox</label>
        <link refid="classamrex_1_1EBFArrayBox"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::BaseFab&lt; AtomicInt &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
      </node>
      <node id="3">
        <label>amrex::TableData&lt; T, N &gt;</label>
        <link refid="classamrex_1_1TableData"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::CutFab</label>
        <link refid="classamrex_1_1CutFab"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BaseFab&lt; HYPRE_Int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>amrex::BaseFab&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>amrex::BaseFab&lt; char &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::Mask</label>
        <link refid="classamrex_1_1Mask"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BaseFab&lt; T &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" line="9" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DataAllocator.H" bodystart="9" bodyend="27"/>
    <listofallmembers>
      <member refid="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>alloc</name></member>
      <member refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>arena</name></member>
      <member refid="structamrex_1_1DataAllocator_1a21273a9c68a6101940451a9f6abf7f6e" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>DataAllocator</name></member>
      <member refid="structamrex_1_1DataAllocator_1ad2f91458d09a1484857061ff235e73bd" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>DataAllocator</name></member>
      <member refid="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>free</name></member>
      <member refid="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" prot="public" virt="non-virtual"><scope>amrex::DataAllocator</scope><name>m_arena</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
