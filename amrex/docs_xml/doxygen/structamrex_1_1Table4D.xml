<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1Table4D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Table4D</compoundname>
    <includes refid="AMReX__TableData_8H" local="no">AMReX_TableData.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20" kindref="member">Order</ref></type>
        <declname>ORDER</declname>
        <defname>ORDER</defname>
        <defval><ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">Order::F</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Table4D_1aba9fc863d5697608b3b1bd75cf354fed" prot="public" static="no" mutable="no">
        <type>T *restrict</type>
        <definition>T* restrict amrex::Table4D&lt; T, ORDER &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>amrex::Table4D::p</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="266" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a9f61817deacaa878d06ec111526eb676" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table4D&lt; T, ORDER &gt;::stride1</definition>
        <argsstring></argsstring>
        <name>stride1</name>
        <qualifiedname>amrex::Table4D::stride1</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="267" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a57bde5d86b817e2779189949f8b589c5" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table4D&lt; T, ORDER &gt;::stride2</definition>
        <argsstring></argsstring>
        <name>stride2</name>
        <qualifiedname>amrex::Table4D::stride2</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="268" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a0084b4eab04a94241c76c5fc15c6e30a" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table4D&lt; T, ORDER &gt;::stride3</definition>
        <argsstring></argsstring>
        <name>stride3</name>
        <qualifiedname>amrex::Table4D::stride3</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="269" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1acc728a4ffcef48eef5ef2ebe9b0a3ed6" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt;</type>
        <definition>GpuArray&lt;int,4&gt; amrex::Table4D&lt; T, ORDER &gt;::begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <qualifiedname>amrex::Table4D::begin</qualifiedname>
        <initializer>{{1,1,1,1}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="270" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1aee1a2d8e68a6221b68959f46f2bfad58" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt;</type>
        <definition>GpuArray&lt;int,4&gt; amrex::Table4D&lt; T, ORDER &gt;::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>amrex::Table4D::end</qualifiedname>
        <initializer>{{0,0,0,0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="271" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="271" bodyend="271"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Table4D_1a264e4a4265aee9986c1da7486a96a747" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::Table4D&lt; T, ORDER &gt;::Table4D</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>Table4D</name>
        <qualifiedname>amrex::Table4D::Table4D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="273" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1afc2a89e293d90a64e41c7ee79334083a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::Table4D&lt; T, ORDER &gt;::Table4D</definition>
        <argsstring>(Table4D&lt; std::remove_const_t&lt; T &gt;, ORDER &gt; const &amp;rhs) noexcept</argsstring>
        <name>Table4D</name>
        <qualifiedname>amrex::Table4D::Table4D</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D</ref>&lt; std::remove_const_t&lt; T &gt;, ORDER &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="277" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="277" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1abf1f7ba7bf8b291d2650b2dae172e008" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::Table4D&lt; T, ORDER &gt;::Table4D</definition>
        <argsstring>(T *a_p, GpuArray&lt; int, 4 &gt; const &amp;a_begin, GpuArray&lt; int, 4 &gt; const &amp;a_end) noexcept</argsstring>
        <name>Table4D</name>
        <qualifiedname>amrex::Table4D::Table4D</qualifiedname>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="287" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1ab7b3cbeb54e68e1fde80cbb995044403" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::Table4D&lt; T, ORDER &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>amrex::Table4D::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="299" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1ade835cde47c5081814cb8737f5bf1141" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_void_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ U &amp;</type>
        <definition>__host__ __device__ U &amp; amrex::Table4D&lt; T, ORDER &gt;::operator()</definition>
        <argsstring>(int i, int j, int k, int n) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::Table4D::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="303" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="303" bodyend="312"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structamrex_1_1Table4D_1a3668191c352566d1d1c5835102b69e8c" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int amrex::Table4D&lt; T, ORDER &gt;::len0</definition>
        <argsstring>(GpuArray&lt; int, 4 &gt; const &amp;a_begin, GpuArray&lt; int, 4 &gt; const &amp;a_end) noexcept</argsstring>
        <name>len0</name>
        <qualifiedname>amrex::Table4D::len0</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="343" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="343" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1a24f8a04409c92b85616e68e23ed0cb15" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int amrex::Table4D&lt; T, ORDER &gt;::len1</definition>
        <argsstring>(GpuArray&lt; int, 4 &gt; const &amp;a_begin, GpuArray&lt; int, 4 &gt; const &amp;a_end) noexcept</argsstring>
        <name>len1</name>
        <qualifiedname>amrex::Table4D::len1</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="353" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="353" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1a346a4f218664dc863f9082a7f1a13f6b" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int amrex::Table4D&lt; T, ORDER &gt;::len2</definition>
        <argsstring>(GpuArray&lt; int, 4 &gt; const &amp;a_begin, GpuArray&lt; int, 4 &gt; const &amp;a_end) noexcept</argsstring>
        <name>len2</name>
        <qualifiedname>amrex::Table4D::len2</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; int, 4 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="363" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="363" bodyend="371"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::GpuArray&lt; int, 4 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="1">
        <label>amrex::Table4D&lt; T, ORDER &gt;</label>
        <link refid="structamrex_1_1Table4D"/>
        <childnode refid="2" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="264" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="265" bodyend="372"/>
    <listofallmembers>
      <member refid="structamrex_1_1Table4D_1acc728a4ffcef48eef5ef2ebe9b0a3ed6" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>begin</name></member>
      <member refid="structamrex_1_1Table4D_1aee1a2d8e68a6221b68959f46f2bfad58" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>end</name></member>
      <member refid="structamrex_1_1Table4D_1a3668191c352566d1d1c5835102b69e8c" prot="private" virt="non-virtual"><scope>amrex::Table4D</scope><name>len0</name></member>
      <member refid="structamrex_1_1Table4D_1a24f8a04409c92b85616e68e23ed0cb15" prot="private" virt="non-virtual"><scope>amrex::Table4D</scope><name>len1</name></member>
      <member refid="structamrex_1_1Table4D_1a346a4f218664dc863f9082a7f1a13f6b" prot="private" virt="non-virtual"><scope>amrex::Table4D</scope><name>len2</name></member>
      <member refid="structamrex_1_1Table4D_1ab7b3cbeb54e68e1fde80cbb995044403" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1Table4D_1ade835cde47c5081814cb8737f5bf1141" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Table4D_1aba9fc863d5697608b3b1bd75cf354fed" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>p</name></member>
      <member refid="structamrex_1_1Table4D_1a9f61817deacaa878d06ec111526eb676" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>stride1</name></member>
      <member refid="structamrex_1_1Table4D_1a57bde5d86b817e2779189949f8b589c5" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>stride2</name></member>
      <member refid="structamrex_1_1Table4D_1a0084b4eab04a94241c76c5fc15c6e30a" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>stride3</name></member>
      <member refid="structamrex_1_1Table4D_1a264e4a4265aee9986c1da7486a96a747" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>Table4D</name></member>
      <member refid="structamrex_1_1Table4D_1afc2a89e293d90a64e41c7ee79334083a" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>Table4D</name></member>
      <member refid="structamrex_1_1Table4D_1abf1f7ba7bf8b291d2650b2dae172e008" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>Table4D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
