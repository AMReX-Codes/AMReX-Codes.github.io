<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1Table4D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Table4D</compoundname>
    <includes refid="AMReX__TableData_8H" local="no">AMReX_TableData.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Table4D_1ac9f5053c2829d3cae894f726762c9308" prot="public" static="no" mutable="no">
        <type>T *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>T* AMREX_RESTRICT amrex::Table4D&lt; T &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="212" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a226bbe3a233d27432a7510c1af2272ab" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table4D&lt; T &gt;::jstride</definition>
        <argsstring></argsstring>
        <name>jstride</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="213" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a8632cacd7e65997567dfaa01c1c102ba" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table4D&lt; T &gt;::kstride</definition>
        <argsstring></argsstring>
        <name>kstride</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="214" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1aa96cec773574d32b6e940e3c4538045f" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table4D&lt; T &gt;::nstride</definition>
        <argsstring></argsstring>
        <name>nstride</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="215" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a5dec26b782ff54c2a0fc88694d1e2cdc" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 4 &gt;</type>
        <definition>GpuArray&lt;int,4&gt; amrex::Table4D&lt; T &gt;::begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <initializer>{{1,1,1,1}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="216" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table4D_1a92d65198066518d8a467d93e72c92d11" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 4 &gt;</type>
        <definition>GpuArray&lt;int,4&gt; amrex::Table4D&lt; T &gt;::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <initializer>{{0,0,0,0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="217" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Table4D_1a0ffcd793ec142932e68f4b0ef4a427f4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table4D&lt; T &gt;::Table4D</definition>
        <argsstring>() noexcept</argsstring>
        <name>Table4D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="220" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1ab69736b4302e2ec7350d26846686f5b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_const&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table4D&lt; T &gt;::Table4D</definition>
        <argsstring>(Table4D&lt; typename std::remove_const&lt; T &gt;::type &gt; const &amp;rhs) noexcept</argsstring>
        <name>Table4D</name>
        <param>
          <type><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D</ref>&lt; typename std::remove_const&lt; T &gt;::type &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="224" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="224" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1a4c61dfb1d3b83405886b8d6b5f2aa419" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table4D&lt; T &gt;::Table4D</definition>
        <argsstring>(T *a_p, GpuArray&lt; int, 4 &gt; const &amp;a_begin, GpuArray&lt; int, 4 &gt; const &amp;a_end) noexcept</argsstring>
        <name>Table4D</name>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 4 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 4 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="234" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="234" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1aa6f707f9f65762950d32bd46356a4d7e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::Table4D&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="246" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table4D_1af8ed70a03b9293e6dc02bc8899b1d19d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!std::is_void&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> U &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE U&amp; amrex::Table4D&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j, int k, int n) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="250" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="250" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>amrex::Table4D&lt; T &gt;</label>
        <link refid="structamrex_1_1Table4D"/>
        <childnode refid="2" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GpuArray&lt; int, 4 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="210" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="211" bodyend="282"/>
    <listofallmembers>
      <member refid="structamrex_1_1Table4D_1a5dec26b782ff54c2a0fc88694d1e2cdc" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>begin</name></member>
      <member refid="structamrex_1_1Table4D_1a92d65198066518d8a467d93e72c92d11" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>end</name></member>
      <member refid="structamrex_1_1Table4D_1a226bbe3a233d27432a7510c1af2272ab" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>jstride</name></member>
      <member refid="structamrex_1_1Table4D_1a8632cacd7e65997567dfaa01c1c102ba" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>kstride</name></member>
      <member refid="structamrex_1_1Table4D_1aa96cec773574d32b6e940e3c4538045f" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>nstride</name></member>
      <member refid="structamrex_1_1Table4D_1aa6f707f9f65762950d32bd46356a4d7e" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1Table4D_1af8ed70a03b9293e6dc02bc8899b1d19d" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Table4D_1ac9f5053c2829d3cae894f726762c9308" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>p</name></member>
      <member refid="structamrex_1_1Table4D_1a0ffcd793ec142932e68f4b0ef4a427f4" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>Table4D</name></member>
      <member refid="structamrex_1_1Table4D_1ab69736b4302e2ec7350d26846686f5b2" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>Table4D</name></member>
      <member refid="structamrex_1_1Table4D_1a4c61dfb1d3b83405886b8d6b5f2aa419" prot="public" virt="non-virtual"><scope>amrex::Table4D</scope><name>Table4D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
