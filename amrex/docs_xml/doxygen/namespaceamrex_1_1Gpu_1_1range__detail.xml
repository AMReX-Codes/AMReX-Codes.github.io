<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1Gpu_1_1range__detail" kind="namespace" language="C++">
    <compoundname>amrex::Gpu::range_detail</compoundname>
    <innerclass refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl" prot="public">amrex::Gpu::range_detail::range_impl</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_integral_v&lt; T &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Long</type>
        <definition>AMREX_GPU_HOST_DEVICE Long amrex::Gpu::range_detail::size</definition>
        <argsstring>(T const &amp;b) noexcept</argsstring>
        <name>size</name>
        <qualifiedname>amrex::Gpu::range_detail::size</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>integer version </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="26" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1a0e77baa94ae43828e9d53113e8367665" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_integral_v&lt; T &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Long</type>
        <definition>AMREX_GPU_HOST_DEVICE Long amrex::Gpu::range_detail::at</definition>
        <argsstring>(T const &amp;, Long offset) noexcept</argsstring>
        <name>at</name>
        <qualifiedname>amrex::Gpu::range_detail::at</qualifiedname>
        <param>
          <type>T const &amp;</type>
        </param>
        <param>
          <type>Long</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="30" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1af4a6afcca3d71815aa1bc2ea67f622d1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> Long</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE Long amrex::Gpu::range_detail::size</definition>
        <argsstring>(BoxND&lt; dim &gt; const &amp;b) noexcept</argsstring>
        <name>size</name>
        <qualifiedname>amrex::Gpu::range_detail::size</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref>&lt; dim &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para><ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref> version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="35" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1a0b8d0dde83911b9f39384a771eb3b215" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref>&lt; dim &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE BoxND&lt; dim &gt; amrex::Gpu::range_detail::at</definition>
        <argsstring>(BoxND&lt; dim &gt; const &amp;b, Long offset) noexcept</argsstring>
        <name>at</name>
        <qualifiedname>amrex::Gpu::range_detail::at</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref>&lt; dim &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="46" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="46" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="21" column="1"/>
  </compounddef>
</doxygen>
