<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1Gpu_1_1range__detail" kind="namespace" language="C++">
    <compoundname>amrex::Gpu::range_detail</compoundname>
    <innerclass refid="structamrex_1_1Gpu_1_1range__detail_1_1range__impl" prot="public">amrex::Gpu::range_detail::range_impl</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1a466461fab8b1a59566414281213dd631" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_integral_v&lt; T &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ Long</type>
        <definition>__host__ __device__ Long amrex::Gpu::range_detail::size</definition>
        <argsstring>(T const &amp;b) noexcept</argsstring>
        <name>size</name>
        <qualifiedname>amrex::Gpu::range_detail::size</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>integer version </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="26" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1ac52862f66798fbe253adae49b63bdf38" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_integral_v&lt; T &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ Long</type>
        <definition>__host__ __device__ Long amrex::Gpu::range_detail::at</definition>
        <argsstring>(T const &amp;, Long offset) noexcept</argsstring>
        <name>at</name>
        <qualifiedname>amrex::Gpu::range_detail::at</qualifiedname>
        <param>
          <type>T const &amp;</type>
        </param>
        <param>
          <type>Long</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="30" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1abcbb6e42f8696e13a104dcb7c3f405e4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>__host__ __device__ Long</type>
        <definition>__host__ __device__ Long amrex::Gpu::range_detail::size</definition>
        <argsstring>(BoxND&lt; dim &gt; const &amp;b) noexcept</argsstring>
        <name>size</name>
        <qualifiedname>amrex::Gpu::range_detail::size</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref>&lt; dim &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para><ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref> version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="35" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1range__detail_1af1c514ca13cf18e25075a3febd70db26" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>__host__ __device__ <ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref>&lt; dim &gt;</type>
        <definition>__host__ __device__ BoxND&lt; dim &gt; amrex::Gpu::range_detail::at</definition>
        <argsstring>(BoxND&lt; dim &gt; const &amp;b, Long offset) noexcept</argsstring>
        <name>at</name>
        <qualifiedname>amrex::Gpu::range_detail::at</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1BoxND" kindref="compound">BoxND</ref>&lt; dim &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="46" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" bodystart="46" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuRange.H" line="21" column="1"/>
  </compounddef>
</doxygen>
