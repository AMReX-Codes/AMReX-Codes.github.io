<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1EB2_1_1Level" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::Level</compoundname>
    <derivedcompoundref refid="classamrex_1_1EB2_1_1GShopLevel" prot="public" virt="non-virtual">amrex::EB2::GShopLevel&lt; G &gt;</derivedcompoundref>
    <includes refid="AMReX__EB2__Level_8H" local="no">AMReX_EB2_Level.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::EB2::Level::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="68" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a4b580f495f97633950d9a0822c940fe8" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::EB2::Level::m_ngrow</definition>
        <argsstring></argsstring>
        <name>m_ngrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="69" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a5417de191837a4807397f9dd9acffbc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::EB2::Level::m_grids</definition>
        <argsstring></argsstring>
        <name>m_grids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="70" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::EB2::Level::m_covered_grids</definition>
        <argsstring></argsstring>
        <name>m_covered_grids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="71" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::EB2::Level::m_dmap</definition>
        <argsstring></argsstring>
        <name>m_dmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="72" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a1313168a355b46b2d03060c450036477" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1EB2_1_1MultiGFab" kindref="compound">MultiGFab</ref></type>
        <definition>MultiGFab amrex::EB2::Level::m_mgf</definition>
        <argsstring></argsstring>
        <name>m_mgf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="73" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_levelset</definition>
        <argsstring></argsstring>
        <name>m_levelset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="74" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt;</type>
        <definition>FabArray&lt;EBCellFlagFab&gt; amrex::EB2::Level::m_cellflag</definition>
        <argsstring></argsstring>
        <name>m_cellflag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="75" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_volfrac</definition>
        <argsstring></argsstring>
        <name>m_volfrac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="76" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_centroid</definition>
        <argsstring></argsstring>
        <name>m_centroid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="77" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_bndryarea</definition>
        <argsstring></argsstring>
        <name>m_bndryarea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="78" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_bndrycent</definition>
        <argsstring></argsstring>
        <name>m_bndrycent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="79" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_bndrynorm</definition>
        <argsstring></argsstring>
        <name>m_bndrynorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="80" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::EB2::Level::m_areafrac</definition>
        <argsstring></argsstring>
        <name>m_areafrac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="81" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::EB2::Level::m_facecent</definition>
        <argsstring></argsstring>
        <name>m_facecent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="82" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a16651c9d026bf4c7876a890be6e85253" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::m_allregular</definition>
        <argsstring></argsstring>
        <name>m_allregular</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="83" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1acdef1c2b11c62f8e02b1a4806de74376" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::m_ok</definition>
        <argsstring></argsstring>
        <name>m_ok</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="84" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a4e89aa75cb75a863666efa8df2f74e9b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
        <definition>IndexSpace const* amrex::EB2::Level::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="85" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::isAllRegular</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAllRegular</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a09608e5c4f86b678ac2c665090366d91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::isOK</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isOK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="34" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a82fe8afc10f8785c43d647980671acb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillEBCellFlag</definition>
        <argsstring>(FabArray&lt; EBCellFlagFab &gt; &amp;cellflag, const Geometry &amp;geom) const </argsstring>
        <name>fillEBCellFlag</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
          <declname>cellflag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="421" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a6da08cbda4e632cb5d07b109447d2d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillVolFrac</definition>
        <argsstring>(MultiFab &amp;vfrac, const Geometry &amp;geom) const </argsstring>
        <name>fillVolFrac</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>vfrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="478" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a683a39ee3e9d31ca27c2c6406ab43218" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillCentroid</definition>
        <argsstring>(MultiCutFab &amp;centroid, const Geometry &amp;geom) const </argsstring>
        <name>fillCentroid</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>centroid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="535" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ae4276548381151d967b356e530f12191" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillCentroid</definition>
        <argsstring>(MultiFab &amp;centroid, const Geometry &amp;geom) const </argsstring>
        <name>fillCentroid</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>centroid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="549" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a3488f76f16985159aace0bd7e4a480c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryArea</definition>
        <argsstring>(MultiCutFab &amp;bndryarea, const Geometry &amp;geom) const </argsstring>
        <name>fillBndryArea</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>bndryarea</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="559" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a69b8d0f05c6011894999611c87dee126" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryArea</definition>
        <argsstring>(MultiFab &amp;bndryarea, const Geometry &amp;geom) const </argsstring>
        <name>fillBndryArea</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndryarea</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="573" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a60d5a3ff6999c4a6f6bd0bdbd6e6ec8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryCent</definition>
        <argsstring>(MultiCutFab &amp;bndrycent, const Geometry &amp;geom) const </argsstring>
        <name>fillBndryCent</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>bndrycent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="582" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a47219ea3c6a4bbf9614a8f00fe53b8ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryCent</definition>
        <argsstring>(MultiFab &amp;bndrycent, const Geometry &amp;geom) const </argsstring>
        <name>fillBndryCent</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrycent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="596" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a0c0ab0dc65395b6ab5766e5b673f13e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryNorm</definition>
        <argsstring>(MultiCutFab &amp;bndrynorm, const Geometry &amp;geom) const </argsstring>
        <name>fillBndryNorm</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>bndrynorm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="43" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="606" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ab130c2d80e11b06acbdc3784def02448" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryNorm</definition>
        <argsstring>(MultiFab &amp;bndrynorm, const Geometry &amp;geom) const </argsstring>
        <name>fillBndryNorm</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrynorm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="44" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="620" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ae21745edcc1b4f328c0312b4209bf39d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillAreaFrac</definition>
        <argsstring>(Array&lt; MultiCutFab *, AMREX_SPACEDIM &gt; const &amp;areafrac, const Geometry &amp;geom) const </argsstring>
        <name>fillAreaFrac</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>areafrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="630" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ad728fb470341ea8aaccc597e93b1acbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillAreaFrac</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;areafrac, const Geometry &amp;geom) const </argsstring>
        <name>fillAreaFrac</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>areafrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="707" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a6b1a5f173b7121c87b0cb1780757e6f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillFaceCent</definition>
        <argsstring>(Array&lt; MultiCutFab *, AMREX_SPACEDIM &gt; const &amp;facefrac, const Geometry &amp;geom) const </argsstring>
        <name>fillFaceCent</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>facefrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="776" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a3ef24941ade613921d282f41bcd17ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillFaceCent</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;facefrac, const Geometry &amp;geom) const </argsstring>
        <name>fillFaceCent</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>facefrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="48" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="798" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a894bdfe209a8eaf60408caa1b32adee6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillLevelSet</definition>
        <argsstring>(MultiFab &amp;levelset, const Geometry &amp;geom) const </argsstring>
        <name>fillLevelSet</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="814" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac2625b7ac69e478b4ca5b11c74f6827b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
        <definition>const BoxArray&amp; amrex::EB2::Level::boxArray</definition>
        <argsstring>() const noexcept</argsstring>
        <name>boxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac93ed636c144b7c065bb092b03b0cde7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping&amp; amrex::EB2::Level::DistributionMap</definition>
        <argsstring>() const noexcept</argsstring>
        <name>DistributionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac843646825df5f720267a7c641204301" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::Level::Level</definition>
        <argsstring>(IndexSpace const *is, const Geometry &amp;geom)</argsstring>
        <name>Level</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
          <declname>is</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac040458ac6f5ac51b303915a6dd66eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::prepareForCoarsening</definition>
        <argsstring>(const Level &amp;rhs, int max_grid_size, IntVect ngrow)</argsstring>
        <name>prepareForCoarsening</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_grid_size</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
          <declname>ngrow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="55" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="9" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1abb45241bcd62cecd1f2e43a3c93cdf7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
        <definition>const Geometry&amp; amrex::EB2::Level::Geom</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a1c5bf0b16ab52e799b8830fd149c0f62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
        <definition>IndexSpace const* amrex::EB2::Level::getEBIndexSpace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getEBIndexSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a8244e442a7b8e9f14056fa883f557c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::EB2::Level::coarsenFromFine</definition>
        <argsstring>(Level &amp;fineLevel, bool fill_boundary)</argsstring>
        <name>coarsenFromFine</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
          <declname>fineLevel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_boundary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="88" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="80" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::buildCellFlag</definition>
        <argsstring>()</argsstring>
        <name>buildCellFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="89" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="396" bodyend="418"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ad592cb78732b05e45be18327923b7d3e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::Level::Level</definition>
        <argsstring>(Level &amp;&amp;rhs)=default</argsstring>
        <name>Level</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1acdaab7a95f7844763aadfd9f22134658" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::Level::Level</definition>
        <argsstring>(Level const &amp;rhs)=delete</argsstring>
        <name>Level</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1abae36260177c7e79251005e56d741d5c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
        <definition>Level&amp; amrex::EB2::Level::operator=</definition>
        <argsstring>(Level const &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a3ad78d565e99b94235b3afade60d9fed" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
        <definition>Level&amp; amrex::EB2::Level::operator=</definition>
        <argsstring>(Level &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3942">
        <label>amrex::EB2::GShopLevel&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1GShopLevel"/>
        <childnode refid="3941" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3941">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3979">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3958">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3959" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3960">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3972">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="3951">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="3952" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="3949">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3949" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3946">
        <label>Real</label>
      </node>
      <node id="3980">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3981" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3970">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="3971" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="3986">
        <label>std::vector&lt; GFab, std::allocator&lt; GFab &gt; &gt;</label>
      </node>
      <node id="3974">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3971">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3972" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="3961">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3962" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3959">
        <label>string</label>
      </node>
      <node id="3982">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3949" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3976">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="3975">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3953">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt; &gt;</label>
      </node>
      <node id="3985">
        <label>amrex::Vector&lt; GFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3986" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3983">
        <label>amrex::EB2::MultiGFab</label>
        <link refid="classamrex_1_1EB2_1_1MultiGFab"/>
        <childnode refid="3984" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3977">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3987">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3957" relation="public-inheritance">
        </childnode>
        <childnode refid="3968" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3949" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3970" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3961" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3973" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3975" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3977" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3978" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3980" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3982" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3981">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3962">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3967">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="3949" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="3950" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3947">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="3946" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="3952">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3953" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3948">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3949" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3950" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3984">
        <label>amrex::LayoutData&lt; GFab &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3957" relation="public-inheritance">
        </childnode>
        <childnode refid="3985" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3965">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3966" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3978">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3979" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3945">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="3946" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="3950">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3966">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3961" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3973">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3974" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3954">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3963">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3964" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="3965" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3955">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="3956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3944">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3945" relation="public-inheritance">
        </childnode>
        <childnode refid="3947" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="3948" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="3956">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3957" relation="public-inheritance">
        </childnode>
        <childnode refid="3968" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3949" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3970" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3961" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3973" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3975" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3977" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3978" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3980" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3982" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3968">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3969" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3943">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
        <childnode refid="3944" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="3951" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="3954" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="3949" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="3955" relation="usage">
          <edgelabel>m_bndryarea</edgelabel>
          <edgelabel>m_levelset</edgelabel>
          <edgelabel>m_bndrycent</edgelabel>
          <edgelabel>m_centroid</edgelabel>
          <edgelabel>m_bndrynorm</edgelabel>
          <edgelabel>m_volfrac</edgelabel>
        </childnode>
        <childnode refid="3983" relation="usage">
          <edgelabel>m_mgf</edgelabel>
        </childnode>
        <childnode refid="3987" relation="usage">
          <edgelabel>m_cellflag</edgelabel>
        </childnode>
        <childnode refid="3967" relation="usage">
          <edgelabel>m_covered_grids</edgelabel>
          <edgelabel>m_grids</edgelabel>
        </childnode>
      </node>
      <node id="3964">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="3957">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3958" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3954" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3949" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3960" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3961" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3963" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="3967" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="3969">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="29" bodyend="90"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1Level_1ac2625b7ac69e478b4ca5b11c74f6827b" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>buildCellFlag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a8244e442a7b8e9f14056fa883f557c9c" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>coarsenFromFine</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac93ed636c144b7c065bb092b03b0cde7" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ae21745edcc1b4f328c0312b4209bf39d" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillAreaFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ad728fb470341ea8aaccc597e93b1acbc" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillAreaFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a3488f76f16985159aace0bd7e4a480c2" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryArea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a69b8d0f05c6011894999611c87dee126" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryArea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a60d5a3ff6999c4a6f6bd0bdbd6e6ec8c" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a47219ea3c6a4bbf9614a8f00fe53b8ca" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a0c0ab0dc65395b6ab5766e5b673f13e0" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryNorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ab130c2d80e11b06acbdc3784def02448" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryNorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a683a39ee3e9d31ca27c2c6406ab43218" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillCentroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ae4276548381151d967b356e530f12191" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillCentroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a82fe8afc10f8785c43d647980671acb9" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillEBCellFlag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a6b1a5f173b7121c87b0cb1780757e6f6" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillFaceCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a3ef24941ade613921d282f41bcd17ba1" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillFaceCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a894bdfe209a8eaf60408caa1b32adee6" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillLevelSet</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a6da08cbda4e632cb5d07b109447d2d14" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillVolFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1abb45241bcd62cecd1f2e43a3c93cdf7c" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>Geom</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a1c5bf0b16ab52e799b8830fd149c0f62" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>getEBIndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>isAllRegular</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a09608e5c4f86b678ac2c665090366d91" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>isOK</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac843646825df5f720267a7c641204301" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ad592cb78732b05e45be18327923b7d3e" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1acdaab7a95f7844763aadfd9f22134658" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a16651c9d026bf4c7876a890be6e85253" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_allregular</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_areafrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_bndryarea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_bndrycent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_bndrynorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_cellflag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_centroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_covered_grids</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_dmap</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_facecent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a5417de191837a4807397f9dd9acffbc4" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_grids</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_levelset</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a1313168a355b46b2d03060c450036477" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_mgf</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a4b580f495f97633950d9a0822c940fe8" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1acdef1c2b11c62f8e02b1a4806de74376" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_ok</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a4e89aa75cb75a863666efa8df2f74e9b" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_parent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_volfrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1abae36260177c7e79251005e56d741d5c" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a3ad78d565e99b94235b3afade60d9fed" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac040458ac6f5ac51b303915a6dd66eb5" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>prepareForCoarsening</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
