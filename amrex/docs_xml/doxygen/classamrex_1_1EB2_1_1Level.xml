<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1Level" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::Level</compoundname>
    <derivedcompoundref refid="classamrex_1_1EB2_1_1GShopLevel" prot="public" virt="non-virtual">amrex::EB2::GShopLevel&lt; ChkptFile &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1EB2_1_1GShopLevel" prot="public" virt="non-virtual">amrex::EB2::GShopLevel&lt; STLtools &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1EB2_1_1GShopLevel" prot="public" virt="non-virtual">amrex::EB2::GShopLevel&lt; G &gt;</derivedcompoundref>
    <includes refid="AMReX__EB2__Level_8H" local="no">AMReX_EB2_Level.H</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::EB2::Level::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <qualifiedname>amrex::EB2::Level::m_geom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="79" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a4b580f495f97633950d9a0822c940fe8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::EB2::Level::m_ngrow</definition>
        <argsstring></argsstring>
        <name>m_ngrow</name>
        <qualifiedname>amrex::EB2::Level::m_ngrow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="80" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a5417de191837a4807397f9dd9acffbc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::EB2::Level::m_grids</definition>
        <argsstring></argsstring>
        <name>m_grids</name>
        <qualifiedname>amrex::EB2::Level::m_grids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="81" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::EB2::Level::m_covered_grids</definition>
        <argsstring></argsstring>
        <name>m_covered_grids</name>
        <qualifiedname>amrex::EB2::Level::m_covered_grids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="82" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::EB2::Level::m_dmap</definition>
        <argsstring></argsstring>
        <name>m_dmap</name>
        <qualifiedname>amrex::EB2::Level::m_dmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="83" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a1313168a355b46b2d03060c450036477" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1EB2_1_1MultiGFab" kindref="compound">MultiGFab</ref></type>
        <definition>MultiGFab amrex::EB2::Level::m_mgf</definition>
        <argsstring></argsstring>
        <name>m_mgf</name>
        <qualifiedname>amrex::EB2::Level::m_mgf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="84" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_levelset</definition>
        <argsstring></argsstring>
        <name>m_levelset</name>
        <qualifiedname>amrex::EB2::Level::m_levelset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="85" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt;</type>
        <definition>FabArray&lt;EBCellFlagFab&gt; amrex::EB2::Level::m_cellflag</definition>
        <argsstring></argsstring>
        <name>m_cellflag</name>
        <qualifiedname>amrex::EB2::Level::m_cellflag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="86" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_volfrac</definition>
        <argsstring></argsstring>
        <name>m_volfrac</name>
        <qualifiedname>amrex::EB2::Level::m_volfrac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="87" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_centroid</definition>
        <argsstring></argsstring>
        <name>m_centroid</name>
        <qualifiedname>amrex::EB2::Level::m_centroid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="88" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_bndryarea</definition>
        <argsstring></argsstring>
        <name>m_bndryarea</name>
        <qualifiedname>amrex::EB2::Level::m_bndryarea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="89" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_bndrycent</definition>
        <argsstring></argsstring>
        <name>m_bndrycent</name>
        <qualifiedname>amrex::EB2::Level::m_bndrycent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="90" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EB2::Level::m_bndrynorm</definition>
        <argsstring></argsstring>
        <name>m_bndrynorm</name>
        <qualifiedname>amrex::EB2::Level::m_bndrynorm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="91" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::EB2::Level::m_areafrac</definition>
        <argsstring></argsstring>
        <name>m_areafrac</name>
        <qualifiedname>amrex::EB2::Level::m_areafrac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="92" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::EB2::Level::m_facecent</definition>
        <argsstring></argsstring>
        <name>m_facecent</name>
        <qualifiedname>amrex::EB2::Level::m_facecent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="93" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a58881e32864c4c8dedf033f9364438ee" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::EB2::Level::m_edgecent</definition>
        <argsstring></argsstring>
        <name>m_edgecent</name>
        <qualifiedname>amrex::EB2::Level::m_edgecent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="94" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a19f4bfc4f5fd05b24a2ad32e4247f07f" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref></type>
        <definition>iMultiFab amrex::EB2::Level::m_cutcellmask</definition>
        <argsstring></argsstring>
        <name>m_cutcellmask</name>
        <qualifiedname>amrex::EB2::Level::m_cutcellmask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="95" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a16651c9d026bf4c7876a890be6e85253" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::m_allregular</definition>
        <argsstring></argsstring>
        <name>m_allregular</name>
        <qualifiedname>amrex::EB2::Level::m_allregular</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="96" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1acdef1c2b11c62f8e02b1a4806de74376" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::m_ok</definition>
        <argsstring></argsstring>
        <name>m_ok</name>
        <qualifiedname>amrex::EB2::Level::m_ok</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="97" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a8ca77bd2758bddbc9d71e12a1c317418" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::m_has_eb_info</definition>
        <argsstring></argsstring>
        <name>m_has_eb_info</name>
        <qualifiedname>amrex::EB2::Level::m_has_eb_info</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="98" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1Level_1a4e89aa75cb75a863666efa8df2f74e9b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const  *</type>
        <definition>IndexSpace const* amrex::EB2::Level::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <qualifiedname>amrex::EB2::Level::m_parent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="99" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1EB2_1_1Level_1acd9942090fa93b0eb048fbd2026d9b3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GShopLevel</definition>
        <argsstring></argsstring>
        <name>GShopLevel</name>
        <qualifiedname>amrex::EB2::Level::GShopLevel</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GShopLevel" kindref="compound">GShopLevel</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="102" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="102" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::isAllRegular</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAllRegular</name>
        <qualifiedname>amrex::EB2::Level::isAllRegular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="36" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a09608e5c4f86b678ac2c665090366d91" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::isOK</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isOK</name>
        <qualifiedname>amrex::EB2::Level::isOK</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="37" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a7d35fe220526a3427bc11672e79c921f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillEBCellFlag</definition>
        <argsstring>(FabArray&lt; EBCellFlagFab &gt; &amp;cellflag, const Geometry &amp;geom) const</argsstring>
        <name>fillEBCellFlag</name>
        <qualifiedname>amrex::EB2::Level::fillEBCellFlag</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
          <declname>cellflag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="38" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="426" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac37a09c9b81e67ee3c1f9882db9c2a38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillVolFrac</definition>
        <argsstring>(MultiFab &amp;vfrac, const Geometry &amp;geom) const</argsstring>
        <name>fillVolFrac</name>
        <qualifiedname>amrex::EB2::Level::fillVolFrac</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>vfrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="39" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="477" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ace69adcd1c99f57c02bbd7e6fbdca3bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillCentroid</definition>
        <argsstring>(MultiCutFab &amp;centroid, const Geometry &amp;geom) const</argsstring>
        <name>fillCentroid</name>
        <qualifiedname>amrex::EB2::Level::fillCentroid</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>centroid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="40" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="534" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ae872e8dd53d7851e8baa7cda6c597925" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillCentroid</definition>
        <argsstring>(MultiFab &amp;centroid, const Geometry &amp;geom) const</argsstring>
        <name>fillCentroid</name>
        <qualifiedname>amrex::EB2::Level::fillCentroid</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>centroid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="41" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="548" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ada911333bbc88c6c2dd0a2575fa8e70a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryArea</definition>
        <argsstring>(MultiCutFab &amp;bndryarea, const Geometry &amp;geom) const</argsstring>
        <name>fillBndryArea</name>
        <qualifiedname>amrex::EB2::Level::fillBndryArea</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>bndryarea</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="42" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="558" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac4b6718e4884f24643ca059555df983f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryArea</definition>
        <argsstring>(MultiFab &amp;bndryarea, const Geometry &amp;geom) const</argsstring>
        <name>fillBndryArea</name>
        <qualifiedname>amrex::EB2::Level::fillBndryArea</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndryarea</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="43" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="572" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aab73ea6f18230ee90540b3f844babf95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryCent</definition>
        <argsstring>(MultiCutFab &amp;bndrycent, const Geometry &amp;geom) const</argsstring>
        <name>fillBndryCent</name>
        <qualifiedname>amrex::EB2::Level::fillBndryCent</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>bndrycent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="44" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="581" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a0f236404be3b81491ae8dd6d518b0e3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryCent</definition>
        <argsstring>(MultiFab &amp;bndrycent, const Geometry &amp;geom) const</argsstring>
        <name>fillBndryCent</name>
        <qualifiedname>amrex::EB2::Level::fillBndryCent</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrycent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="45" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="595" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aaddc85a00634d7e6029ab17c9cb9fbb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryNorm</definition>
        <argsstring>(MultiCutFab &amp;bndrynorm, const Geometry &amp;geom) const</argsstring>
        <name>fillBndryNorm</name>
        <qualifiedname>amrex::EB2::Level::fillBndryNorm</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>bndrynorm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="46" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="605" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a15e67ccc27c985eb2b8a11db46abdcab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillBndryNorm</definition>
        <argsstring>(MultiFab &amp;bndrynorm, const Geometry &amp;geom) const</argsstring>
        <name>fillBndryNorm</name>
        <qualifiedname>amrex::EB2::Level::fillBndryNorm</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrynorm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="47" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="619" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aeaa558e8ea81b3d29afc053a49935264" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillAreaFrac</definition>
        <argsstring>(Array&lt; MultiCutFab *, AMREX_SPACEDIM &gt; const &amp;areafrac, const Geometry &amp;geom) const</argsstring>
        <name>fillAreaFrac</name>
        <qualifiedname>amrex::EB2::Level::fillAreaFrac</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>areafrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="48" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="629" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aeb91416d1cbdc2122b71db4010a5148b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillAreaFrac</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;areafrac, const Geometry &amp;geom) const</argsstring>
        <name>fillAreaFrac</name>
        <qualifiedname>amrex::EB2::Level::fillAreaFrac</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>areafrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="49" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="706" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a47c9d664df913ef2dd7289062f354f0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillFaceCent</definition>
        <argsstring>(Array&lt; MultiCutFab *, AMREX_SPACEDIM &gt; const &amp;facecent, const Geometry &amp;geom) const</argsstring>
        <name>fillFaceCent</name>
        <qualifiedname>amrex::EB2::Level::fillFaceCent</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>facecent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="50" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="775" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ab07114892a852fef77608e1cebdd5768" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillFaceCent</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;facecent, const Geometry &amp;geom) const</argsstring>
        <name>fillFaceCent</name>
        <qualifiedname>amrex::EB2::Level::fillFaceCent</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>facecent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="51" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="797" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aa8174a092dd237acf59e9145603b3104" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillEdgeCent</definition>
        <argsstring>(Array&lt; MultiCutFab *, AMREX_SPACEDIM &gt; const &amp;edgecent, const Geometry &amp;geom) const</argsstring>
        <name>fillEdgeCent</name>
        <qualifiedname>amrex::EB2::Level::fillEdgeCent</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>edgecent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="52" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="813" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a9f121c3a3deb6a4cf27461c8745fd10d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillEdgeCent</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;edgecent, const Geometry &amp;geom) const</argsstring>
        <name>fillEdgeCent</name>
        <qualifiedname>amrex::EB2::Level::fillEdgeCent</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>edgecent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="837" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a3d89b2bcea4e9cbf88291dba6cd8fc7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillLevelSet</definition>
        <argsstring>(MultiFab &amp;levelset, const Geometry &amp;geom) const</argsstring>
        <name>fillLevelSet</name>
        <qualifiedname>amrex::EB2::Level::fillLevelSet</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="54" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="880" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac670115ccb67611813ef01f428016d4f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
        <definition>const BoxArray &amp; amrex::EB2::Level::boxArray</definition>
        <argsstring>() const noexcept</argsstring>
        <name>boxArray</name>
        <qualifiedname>amrex::EB2::Level::boxArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="56" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a2eb55aa98082d3ab771aec8e3cb4ab11" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping &amp; amrex::EB2::Level::DistributionMap</definition>
        <argsstring>() const noexcept</argsstring>
        <name>DistributionMap</name>
        <qualifiedname>amrex::EB2::Level::DistributionMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="57" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ac843646825df5f720267a7c641204301" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::Level::Level</definition>
        <argsstring>(IndexSpace const *is, const Geometry &amp;geom)</argsstring>
        <name>Level</name>
        <qualifiedname>amrex::EB2::Level::Level</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
          <declname>is</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="59" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a1f72985a64a6353ac131eb89728f7ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::prepareForCoarsening</definition>
        <argsstring>(const Level &amp;rhs, int max_grid_size, IntVect const &amp;ngrow)</argsstring>
        <name>prepareForCoarsening</name>
        <qualifiedname>amrex::EB2::Level::prepareForCoarsening</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> const &amp;</type>
          <declname>ngrow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="60" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="10" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a6cf69e6325cf662dadbdda8eee9ab0bf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; amrex::EB2::Level::Geom</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Geom</name>
        <qualifiedname>amrex::EB2::Level::Geom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="62" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aee9e3cfdc1e04ffc1877cb72009ee966" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> const *</type>
        <definition>IndexSpace const  * amrex::EB2::Level::getEBIndexSpace</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getEBIndexSpace</name>
        <qualifiedname>amrex::EB2::Level::getEBIndexSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="63" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1ab4418a18ddd42434836fe606d7f76d1e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> const &amp;</type>
        <definition>IntVect const  &amp; amrex::EB2::Level::nGrowVect</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nGrowVect</name>
        <qualifiedname>amrex::EB2::Level::nGrowVect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="65" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a7c96f2171467f960c184e3f093f9e3b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::write_to_chkpt_file</definition>
        <argsstring>(const std::string &amp;fname, bool extend_domain_face, int max_grid_size) const</argsstring>
        <name>write_to_chkpt_file</name>
        <qualifiedname>amrex::EB2::Level::write_to_chkpt_file</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="67" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="924" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a7954f6b9a0dfcb4a5bbac4f2b5a4001b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::EB2::Level::hasEBInfo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasEBInfo</name>
        <qualifiedname>amrex::EB2::Level::hasEBInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="69" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a2475ff0518c5fb3e8f60b66ab728c4a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::fillCutCellMask</definition>
        <argsstring>(iMultiFab &amp;cutcellmask, const Geometry &amp;geom) const</argsstring>
        <name>fillCutCellMask</name>
        <qualifiedname>amrex::EB2::Level::fillCutCellMask</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>cutcellmask</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="70" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="915" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1a8244e442a7b8e9f14056fa883f557c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::Level::coarsenFromFine</definition>
        <argsstring>(Level &amp;fineLevel, bool fill_boundary)</argsstring>
        <name>coarsenFromFine</name>
        <qualifiedname>amrex::EB2::Level::coarsenFromFine</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
          <declname>fineLevel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_boundary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="73" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="84" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::buildCellFlag</definition>
        <argsstring>()</argsstring>
        <name>buildCellFlag</name>
        <qualifiedname>amrex::EB2::Level::buildCellFlag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="74" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="400" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1adbf8ba38ca81cc69d1abc5e1dfc25999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::buildCutCellMask</definition>
        <argsstring>(Level const &amp;fine_level)</argsstring>
        <name>buildCutCellMask</name>
        <qualifiedname>amrex::EB2::Level::buildCutCellMask</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> const &amp;</type>
          <declname>fine_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="75" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp" bodystart="934" bodyend="1012"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1Level_1aa134f8da748d28d9c016c9ccf35e0276" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::Level::setRegularLevel</definition>
        <argsstring>()</argsstring>
        <name>setRegularLevel</name>
        <qualifiedname>amrex::EB2::Level::setRegularLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="105" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="105" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::EB2::GShopLevel&lt; ChkptFile &gt;</label>
        <link refid="classamrex_1_1EB2_1_1GShopLevel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::EB2::GShopLevel&lt; STLtools &gt;</label>
        <link refid="classamrex_1_1EB2_1_1GShopLevel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::EB2::ChkptFileLevel</label>
        <link refid="classamrex_1_1EB2_1_1ChkptFileLevel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::EB2::GShopLevel&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1GShopLevel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
      </node>
      <node id="5">
        <label>amrex::EB2::STLLevel</label>
        <link refid="classamrex_1_1EB2_1_1STLLevel"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="78">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="79" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="79" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
        <childnode refid="111" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BoxND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="86">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="87" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="130">
        <label>amrex::FBData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="87" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="116">
        <label>amrex::FBData&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="87" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="85" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="121">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="122" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="124" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="129" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="131" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="133" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="115" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="117" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="119" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="123">
        <label>amrex::FabFactory&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="107">
        <label>amrex::FabFactory&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="6">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="14">
        <label>amrex::IndexTypeND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="40">
        <label>K</label>
      </node>
      <node id="37">
        <label>amrex::LayoutData&lt; GFab &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="78" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="81" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="102">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="103" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="132">
        <label>amrex::PCData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="103" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="118">
        <label>amrex::PCData&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="103" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>T</label>
      </node>
      <node id="57">
        <label>amrex::Vector&lt; GFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="98" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="94" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="96" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="83" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="65" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="67" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="21">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="19" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="10">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="12" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="21" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="54" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>amrex::BoxND&lt; dim &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="15">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="64" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="30">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="31" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="33" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="135" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_covered_grids</edgelabel>
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>m_mgf</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_bndryarea</edgelabel>
          <edgelabel>m_bndrycent</edgelabel>
          <edgelabel>m_bndrynorm</edgelabel>
          <edgelabel>m_centroid</edgelabel>
          <edgelabel>m_levelset</edgelabel>
          <edgelabel>m_volfrac</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>m_cellflag</edgelabel>
        </childnode>
        <childnode refid="120" relation="usage">
          <edgelabel>m_cutcellmask</edgelabel>
        </childnode>
        <childnode refid="134" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::EB2::MultiGFab</label>
        <link refid="classamrex_1_1EB2_1_1MultiGFab"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>amrex::EBCellFlag</label>
        <link refid="classamrex_1_1EBCellFlag"/>
      </node>
      <node id="109">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
        <childnode refid="112" relation="usage">
          <edgelabel>m_typemap</edgelabel>
        </childnode>
      </node>
      <node id="114">
        <label>amrex::EBCellFlagFab::NumCells</label>
        <link refid="structamrex_1_1EBCellFlagFab_1_1NumCells"/>
      </node>
      <node id="76">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="74">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="38">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="26" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="48" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="92" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="42" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="89" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="91" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="92" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="52">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="125">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="126" relation="public-inheritance">
        </childnode>
        <childnode refid="127" relation="usage">
          <edgelabel>ifabio</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>amrex::IFABio</label>
        <link refid="classamrex_1_1IFABio"/>
      </node>
      <node id="26">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="54">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="69">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="59">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="92">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="8" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="5">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>std::map&lt; amrex::BoxND, amrex::EBCellFlagFab::NumCells &gt;</label>
        <childnode refid="113" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="114" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="47" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="47" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="21" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="50">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="40" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="40" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::mutex</label>
      </node>
      <node id="42">
        <label>std::string</label>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="136">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="90" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="50" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="86" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="129">
        <label>std::unique_ptr&lt; amrex::FBData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="130" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="116" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="104">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="60" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="133">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="121" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="119">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="105" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="62" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="123" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="106">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="107" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="127">
        <label>std::unique_ptr&lt; amrex::IFABio &gt;</label>
        <childnode refid="128" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="101">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="102" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="131">
        <label>std::unique_ptr&lt; amrex::PCData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="132" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="118" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
        <childnode refid="72" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="73">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="74" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="124">
        <label>std::vector&lt; IArrayBox * &gt;</label>
        <childnode refid="125" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="108">
        <label>std::vector&lt; amrex::EBCellFlagFab * &gt;</label>
        <childnode refid="109" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="27">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="46">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" line="32" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H" bodystart="33" bodyend="110"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1Level_1ac670115ccb67611813ef01f428016d4f" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>buildCellFlag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1adbf8ba38ca81cc69d1abc5e1dfc25999" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>buildCutCellMask</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a8244e442a7b8e9f14056fa883f557c9c" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>coarsenFromFine</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2eb55aa98082d3ab771aec8e3cb4ab11" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aeaa558e8ea81b3d29afc053a49935264" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillAreaFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aeb91416d1cbdc2122b71db4010a5148b" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillAreaFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ada911333bbc88c6c2dd0a2575fa8e70a" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryArea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac4b6718e4884f24643ca059555df983f" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryArea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aab73ea6f18230ee90540b3f844babf95" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a0f236404be3b81491ae8dd6d518b0e3f" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aaddc85a00634d7e6029ab17c9cb9fbb8" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryNorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a15e67ccc27c985eb2b8a11db46abdcab" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillBndryNorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ace69adcd1c99f57c02bbd7e6fbdca3bf" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillCentroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ae872e8dd53d7851e8baa7cda6c597925" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillCentroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2475ff0518c5fb3e8f60b66ab728c4a0" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillCutCellMask</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a7d35fe220526a3427bc11672e79c921f" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillEBCellFlag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aa8174a092dd237acf59e9145603b3104" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillEdgeCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a9f121c3a3deb6a4cf27461c8745fd10d" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillEdgeCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a47c9d664df913ef2dd7289062f354f0a" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillFaceCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ab07114892a852fef77608e1cebdd5768" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillFaceCent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a3d89b2bcea4e9cbf88291dba6cd8fc7c" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillLevelSet</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac37a09c9b81e67ee3c1f9882db9c2a38" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>fillVolFrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a6cf69e6325cf662dadbdda8eee9ab0bf" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>Geom</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aee9e3cfdc1e04ffc1877cb72009ee966" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>getEBIndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1acd9942090fa93b0eb048fbd2026d9b3c" prot="private" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>GShopLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a7954f6b9a0dfcb4a5bbac4f2b5a4001b" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>hasEBInfo</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>isAllRegular</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a09608e5c4f86b678ac2c665090366d91" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>isOK</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ac843646825df5f720267a7c641204301" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>Level</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a16651c9d026bf4c7876a890be6e85253" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_allregular</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_areafrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_bndryarea</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_bndrycent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_bndrynorm</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_cellflag</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_centroid</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_covered_grids</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a19f4bfc4f5fd05b24a2ad32e4247f07f" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_cutcellmask</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_dmap</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a58881e32864c4c8dedf033f9364438ee" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_edgecent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_facecent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a5417de191837a4807397f9dd9acffbc4" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_grids</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a8ca77bd2758bddbc9d71e12a1c317418" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_has_eb_info</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_levelset</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a1313168a355b46b2d03060c450036477" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_mgf</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a4b580f495f97633950d9a0822c940fe8" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1acdef1c2b11c62f8e02b1a4806de74376" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_ok</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a4e89aa75cb75a863666efa8df2f74e9b" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_parent</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" prot="protected" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>m_volfrac</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1ab4418a18ddd42434836fe606d7f76d1e" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>nGrowVect</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a1f72985a64a6353ac131eb89728f7ba9" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>prepareForCoarsening</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1aa134f8da748d28d9c016c9ccf35e0276" prot="private" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>setRegularLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1Level_1a7c96f2171467f960c184e3f093f9e3b1" prot="public" virt="non-virtual"><scope>amrex::EB2::Level</scope><name>write_to_chkpt_file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
