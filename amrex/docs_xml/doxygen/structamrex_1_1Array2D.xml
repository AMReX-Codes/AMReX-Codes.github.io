<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1Array2D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Array2D</compoundname>
    <includes refid="AMReX__Array_8H" local="no">AMReX_Array.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>int</type>
        <declname>XLO</declname>
        <defname>XLO</defname>
      </param>
      <param>
        <type>int</type>
        <declname>XHI</declname>
        <defname>XHI</defname>
      </param>
      <param>
        <type>int</type>
        <declname>YLO</declname>
        <defname>YLO</defname>
      </param>
      <param>
        <type>int</type>
        <declname>YHI</declname>
        <defname>YHI</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Array2D_1abce236484655c8532397f3c4e36d7df6" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T amrex::Array2D&lt; T, XLO, XHI, YLO, YHI &gt;::arr[(XHI-XLO+1)*(YHI-YLO+1)]</definition>
        <argsstring>[(XHI-XLO+1)*(YHI-YLO+1)]</argsstring>
        <name>arr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Array2D_1a1a6c561e3b4efeb7ba94d55472129f02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> const T &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE const T&amp; amrex::Array2D&lt; T, XLO, XHI, YLO, YHI &gt;::operator()</definition>
        <argsstring>(int i, int j) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" line="87" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Array2D_1a9b45e0eb6b2c157535d6fa97a279e8db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> T &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE T&amp; amrex::Array2D&lt; T, XLO, XHI, YLO, YHI &gt;::operator()</definition>
        <argsstring>(int i, int j) noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" line="92" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="610">
        <label>T</label>
      </node>
      <node id="609">
        <label>amrex::Array2D&lt; T, XLO, XHI, YLO, YHI &gt;</label>
        <link refid="structamrex_1_1Array2D"/>
        <childnode refid="610" relation="usage">
          <edgelabel>arr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" line="85" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Array.H" bodystart="84" bodyend="97"/>
    <listofallmembers>
      <member refid="structamrex_1_1Array2D_1abce236484655c8532397f3c4e36d7df6" prot="public" virt="non-virtual"><scope>amrex::Array2D</scope><name>arr</name></member>
      <member refid="structamrex_1_1Array2D_1a1a6c561e3b4efeb7ba94d55472129f02" prot="public" virt="non-virtual"><scope>amrex::Array2D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Array2D_1a9b45e0eb6b2c157535d6fa97a279e8db" prot="public" virt="non-virtual"><scope>amrex::Array2D</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
