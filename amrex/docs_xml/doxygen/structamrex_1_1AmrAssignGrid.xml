<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1AmrAssignGrid" kind="struct" language="C++" prot="public">
    <compoundname>amrex::AmrAssignGrid</compoundname>
    <includes refid="AMReX__ParticleLocator_8H" local="no">AMReX_ParticleLocator.H</includes>
    <templateparamlist>
      <param>
        <type>class BinIteratorFactory</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1AmrAssignGrid_1a89b80b8bcfbde11575362e5c6f6ea420" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1AssignGrid" kindref="compound">AssignGrid</ref>&lt; BinIteratorFactory &gt; *</type>
        <definition>const AssignGrid&lt;BinIteratorFactory&gt;* amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::m_funcs</definition>
        <argsstring></argsstring>
        <name>m_funcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="191" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AmrAssignGrid_1a34d743ea0713f912d08dec0a20cdaa38" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="192" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1AmrAssignGrid_1a3c5745e3fb6016f3be7777b00c7a458f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::AmrAssignGrid</definition>
        <argsstring>(const AssignGrid&lt; BinIteratorFactory &gt; *a_funcs, std::size_t a_size)</argsstring>
        <name>AmrAssignGrid</name>
        <param>
          <type>const <ref refid="structamrex_1_1AssignGrid" kindref="compound">AssignGrid</ref>&lt; BinIteratorFactory &gt; *</type>
          <declname>a_funcs</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>a_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="194" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1AmrAssignGrid_1aeeb70bfe8962e6d51abe7422d22cd4f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE GpuTuple&lt;int, int&gt; amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::operator()</definition>
        <argsstring>(const P &amp;p, int lev_min=-1, int lev_max=-1, int nGrow=0) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_min</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_max</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="200" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="200" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="190" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="189" bodyend="219"/>
    <listofallmembers>
      <member refid="structamrex_1_1AmrAssignGrid_1a3c5745e3fb6016f3be7777b00c7a458f" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>AmrAssignGrid</name></member>
      <member refid="structamrex_1_1AmrAssignGrid_1a89b80b8bcfbde11575362e5c6f6ea420" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>m_funcs</name></member>
      <member refid="structamrex_1_1AmrAssignGrid_1a34d743ea0713f912d08dec0a20cdaa38" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>m_size</name></member>
      <member refid="structamrex_1_1AmrAssignGrid_1aeeb70bfe8962e6d51abe7422d22cd4f5" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
