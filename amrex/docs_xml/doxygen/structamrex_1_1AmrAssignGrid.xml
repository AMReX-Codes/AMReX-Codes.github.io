<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1AmrAssignGrid" kind="struct" language="C++" prot="public">
    <compoundname>amrex::AmrAssignGrid</compoundname>
    <includes refid="AMReX__ParticleLocator_8H" local="no">AMReX_ParticleLocator.H</includes>
    <templateparamlist>
      <param>
        <type>class BinIteratorFactory</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1AmrAssignGrid_1a89b80b8bcfbde11575362e5c6f6ea420" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1AssignGrid" kindref="compound">AssignGrid</ref>&lt; BinIteratorFactory &gt; *</type>
        <definition>const AssignGrid&lt;BinIteratorFactory&gt;* amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::m_funcs</definition>
        <argsstring></argsstring>
        <name>m_funcs</name>
        <qualifiedname>amrex::AmrAssignGrid::m_funcs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="217" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AmrAssignGrid_1a34d743ea0713f912d08dec0a20cdaa38" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>amrex::AmrAssignGrid::m_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="218" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="218" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1AmrAssignGrid_1a3c5745e3fb6016f3be7777b00c7a458f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::AmrAssignGrid</definition>
        <argsstring>(const AssignGrid&lt; BinIteratorFactory &gt; *a_funcs, std::size_t a_size)</argsstring>
        <name>AmrAssignGrid</name>
        <qualifiedname>amrex::AmrAssignGrid::AmrAssignGrid</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1AssignGrid" kindref="compound">AssignGrid</ref>&lt; BinIteratorFactory &gt; *</type>
          <declname>a_funcs</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>a_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="220" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1AmrAssignGrid_1acad61cd244ffce6b9b9043b775835540" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename Assignor</type>
            <defval><ref refid="structamrex_1_1DefaultAssignor" kindref="compound">DefaultAssignor</ref></defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ <ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt; int, int &gt;</type>
        <definition>__host__ __device__ GpuTuple&lt; int, int &gt; amrex::AmrAssignGrid&lt; BinIteratorFactory &gt;::operator()</definition>
        <argsstring>(const P &amp;p, int lev_min=-1, int lev_max=-1, int nGrow=0, Assignor const &amp;assignor={}) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::AmrAssignGrid::operator()</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lev_min</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>lev_max</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>Assignor const &amp;</type>
          <declname>assignor</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="226" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="226" bodyend="245"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="215" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="216" bodyend="246"/>
    <listofallmembers>
      <member refid="structamrex_1_1AmrAssignGrid_1a3c5745e3fb6016f3be7777b00c7a458f" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>AmrAssignGrid</name></member>
      <member refid="structamrex_1_1AmrAssignGrid_1a89b80b8bcfbde11575362e5c6f6ea420" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>m_funcs</name></member>
      <member refid="structamrex_1_1AmrAssignGrid_1a34d743ea0713f912d08dec0a20cdaa38" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>m_size</name></member>
      <member refid="structamrex_1_1AmrAssignGrid_1acad61cd244ffce6b9b9043b775835540" prot="public" virt="non-virtual"><scope>amrex::AmrAssignGrid</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
