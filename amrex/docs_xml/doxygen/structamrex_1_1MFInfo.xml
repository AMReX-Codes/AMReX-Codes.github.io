<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1MFInfo" kind="struct" language="C++" prot="public">
    <compoundname>amrex::MFInfo</compoundname>
    <includes refid="AMReX__FabArray_8H" local="no">AMReX_FabArray.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1MFInfo_1a61ae5fd154086ea2849fe236e1dce794" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MFInfo::alloc</definition>
        <argsstring></argsstring>
        <name>alloc</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="115" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1MFInfo_1a343c7c4fcab4a05e69b24156ea271ed2" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::MFInfo::arena</definition>
        <argsstring></argsstring>
        <name>arena</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="116" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1MFInfo_1ad0f86517b8114fbc3cfd3c5ef532a592" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::string &gt;</type>
        <definition>Vector&lt;std::string&gt; amrex::MFInfo::tags</definition>
        <argsstring></argsstring>
        <name>tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="117" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1MFInfo_1a983cd10420d59f361b7420da90de5066" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1MFInfo" kindref="compound">MFInfo</ref> &amp;</type>
        <definition>MFInfo&amp; amrex::MFInfo::SetAlloc</definition>
        <argsstring>(bool a) noexcept</argsstring>
        <name>SetAlloc</name>
        <param>
          <type>bool</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="119" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MFInfo_1a8d77528f27f99ad698aa26c78da7e979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1MFInfo" kindref="compound">MFInfo</ref> &amp;</type>
        <definition>MFInfo&amp; amrex::MFInfo::SetArena</definition>
        <argsstring>(Arena *ar) noexcept</argsstring>
        <name>SetArena</name>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="121" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MFInfo_1addb772907b0ba233d79468968d823b80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1MFInfo" kindref="compound">MFInfo</ref> &amp;</type>
        <definition>MFInfo&amp; amrex::MFInfo::SetTag</definition>
        <argsstring>(const char *t) noexcept</argsstring>
        <name>SetTag</name>
        <param>
          <type>const char *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="123" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MFInfo_1ae296881ff07a41910db02649c987d689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1MFInfo" kindref="compound">MFInfo</ref> &amp;</type>
        <definition>MFInfo&amp; amrex::MFInfo::SetTag</definition>
        <argsstring>(std::string t) noexcept</argsstring>
        <name>SetTag</name>
        <param>
          <type>std::string</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="128" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1MFInfo_1a09865d39fb552bb0fa800934f1b1fa6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structamrex_1_1MFInfo" kindref="compound">MFInfo</ref> &amp;</type>
        <definition>MFInfo&amp; amrex::MFInfo::SetTag</definition>
        <argsstring>(T &amp;&amp;t, Ts &amp;&amp;... ts) noexcept</argsstring>
        <name>SetTag</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="134" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="134" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2665">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="2661">
        <label>amrex::MFInfo</label>
        <link refid="structamrex_1_1MFInfo"/>
        <childnode refid="2662" relation="usage">
          <edgelabel>tags</edgelabel>
        </childnode>
        <childnode refid="2664" relation="usage">
          <edgelabel>arena</edgelabel>
        </childnode>
      </node>
      <node id="2663">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="2664">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="2665" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="2662">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2663" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="114" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="114" bodyend="138"/>
    <listofallmembers>
      <member refid="structamrex_1_1MFInfo_1a61ae5fd154086ea2849fe236e1dce794" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>alloc</name></member>
      <member refid="structamrex_1_1MFInfo_1a343c7c4fcab4a05e69b24156ea271ed2" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>arena</name></member>
      <member refid="structamrex_1_1MFInfo_1a983cd10420d59f361b7420da90de5066" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>SetAlloc</name></member>
      <member refid="structamrex_1_1MFInfo_1a8d77528f27f99ad698aa26c78da7e979" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>SetArena</name></member>
      <member refid="structamrex_1_1MFInfo_1addb772907b0ba233d79468968d823b80" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>SetTag</name></member>
      <member refid="structamrex_1_1MFInfo_1ae296881ff07a41910db02649c987d689" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>SetTag</name></member>
      <member refid="structamrex_1_1MFInfo_1a09865d39fb552bb0fa800934f1b1fa6d" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>SetTag</name></member>
      <member refid="structamrex_1_1MFInfo_1ad0f86517b8114fbc3cfd3c5ef532a592" prot="public" virt="non-virtual"><scope>amrex::MFInfo</scope><name>tags</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
