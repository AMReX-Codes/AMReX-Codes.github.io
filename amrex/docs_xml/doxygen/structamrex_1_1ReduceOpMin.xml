<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1ReduceOpMin" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ReduceOpMin</compoundname>
    <includes refid="AMReX__Reduce_8H" local="no">AMReX_Reduce.H</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ReduceOpMin_1a77f7bac6ffad5835419a9586a1b9ae5d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>MT</declname>
            <defname>MT</defname>
            <defval>AMREX_GPU_MAX_THREADS</defval>
          </param>
        </templateparamlist>
        <type>__device__ void</type>
        <definition>__device__ void amrex::ReduceOpMin::parallel_update</definition>
        <argsstring>(T &amp;d, T const &amp;s) const noexcept</argsstring>
        <name>parallel_update</name>
        <qualifiedname>amrex::ReduceOpMin::parallel_update</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="126" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ReduceOpMin_1a95e8e6ab05b242c956f19d455e13dee6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::ReduceOpMin::local_update</definition>
        <argsstring>(T &amp;d, T const &amp;s) const noexcept</argsstring>
        <name>local_update</name>
        <qualifiedname>amrex::ReduceOpMin::local_update</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="135" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ReduceOpMin_1aa6aa88f544e0001023ae610cba20b096" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; std::numeric_limits&lt; T &gt;::is_specialized &gt;</type>
        <definition>constexpr std::enable_if_t&lt; std::numeric_limits&lt; T &gt;::is_specialized &gt; amrex::ReduceOpMin::init</definition>
        <argsstring>(T &amp;t) const noexcept</argsstring>
        <name>init</name>
        <qualifiedname>amrex::ReduceOpMin::init</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="139" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ReduceOpMin_1a3804ce9d45e697dffa9d01fd356258e4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt;!std::numeric_limits&lt; T &gt;::is_specialized &gt;</type>
        <definition>constexpr std::enable_if_t&lt;!std::numeric_limits&lt; T &gt;::is_specialized &gt; amrex::ReduceOpMin::init</definition>
        <argsstring>(T &amp;t) const noexcept</argsstring>
        <name>init</name>
        <qualifiedname>amrex::ReduceOpMin::init</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="143" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="143" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="113" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="114" bodyend="144"/>
    <listofallmembers>
      <member refid="structamrex_1_1ReduceOpMin_1aa6aa88f544e0001023ae610cba20b096" prot="public" virt="non-virtual"><scope>amrex::ReduceOpMin</scope><name>init</name></member>
      <member refid="structamrex_1_1ReduceOpMin_1a3804ce9d45e697dffa9d01fd356258e4" prot="public" virt="non-virtual"><scope>amrex::ReduceOpMin</scope><name>init</name></member>
      <member refid="structamrex_1_1ReduceOpMin_1a95e8e6ab05b242c956f19d455e13dee6" prot="public" virt="non-virtual"><scope>amrex::ReduceOpMin</scope><name>local_update</name></member>
      <member refid="structamrex_1_1ReduceOpMin_1a77f7bac6ffad5835419a9586a1b9ae5d" prot="public" virt="non-virtual"><scope>amrex::ReduceOpMin</scope><name>parallel_update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
