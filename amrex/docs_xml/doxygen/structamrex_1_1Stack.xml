<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1Stack" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Stack</compoundname>
    <includes refid="AMReX__Stack_8H" local="no">AMReX_Stack.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1Stack_1a17dc6a44a8a7ebeda4dd4bf436d64934" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T amrex::Stack&lt; T, N &gt;::m_data[N]</definition>
        <argsstring>[N]</argsstring>
        <name>m_data</name>
        <qualifiedname>amrex::Stack::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="18" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Stack_1abcea4124bbc7aaade2e386895ca90c65" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Stack&lt; T, N &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>amrex::Stack::m_size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="19" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Stack_1a470f67478b996cf9eda28cc684d81948" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void amrex::Stack&lt; T, N &gt;::push</definition>
        <argsstring>(T v)</argsstring>
        <name>push</name>
        <qualifiedname>amrex::Stack::push</qualifiedname>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="10" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Stack_1aabddd0df5489ccc6df725b801461fb12" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void amrex::Stack&lt; T, N &gt;::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <qualifiedname>amrex::Stack::pop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="11" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Stack_1a9e63e0b6010d96773d6d6ffc15d78373" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool amrex::Stack&lt; T, N &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>amrex::Stack::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="12" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Stack_1a7c88084606d1acdaf21b6e891625d0cc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::Stack&lt; T, N &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>amrex::Stack::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="13" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Stack_1aa63bd587bd05afa2db4298e6ded65668" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T const &amp;</type>
        <definition>constexpr T const  &amp; amrex::Stack&lt; T, N &gt;::top</definition>
        <argsstring>() const</argsstring>
        <name>top</name>
        <qualifiedname>amrex::Stack::top</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="14" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Stack_1ae1ce52b58d0b9732b467285fe66907ba" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T &amp;</type>
        <definition>constexpr T &amp; amrex::Stack&lt; T, N &gt;::top</definition>
        <argsstring>()</argsstring>
        <name>top</name>
        <qualifiedname>amrex::Stack::top</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="15" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Stack_1a9ddc376407e8cfbe84195dede1284840" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T</type>
        <definition>constexpr T amrex::Stack&lt; T, N &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>amrex::Stack::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="16" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="16" bodyend="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>T</label>
      </node>
      <node id="1">
        <label>amrex::Stack&lt; T, N &gt;</label>
        <link refid="structamrex_1_1Stack"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" line="7" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Stack.H" bodystart="8" bodyend="20"/>
    <listofallmembers>
      <member refid="structamrex_1_1Stack_1a9e63e0b6010d96773d6d6ffc15d78373" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>empty</name></member>
      <member refid="structamrex_1_1Stack_1a17dc6a44a8a7ebeda4dd4bf436d64934" prot="private" virt="non-virtual"><scope>amrex::Stack</scope><name>m_data</name></member>
      <member refid="structamrex_1_1Stack_1abcea4124bbc7aaade2e386895ca90c65" prot="private" virt="non-virtual"><scope>amrex::Stack</scope><name>m_size</name></member>
      <member refid="structamrex_1_1Stack_1a9ddc376407e8cfbe84195dede1284840" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>operator[]</name></member>
      <member refid="structamrex_1_1Stack_1aabddd0df5489ccc6df725b801461fb12" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>pop</name></member>
      <member refid="structamrex_1_1Stack_1a470f67478b996cf9eda28cc684d81948" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>push</name></member>
      <member refid="structamrex_1_1Stack_1a7c88084606d1acdaf21b6e891625d0cc" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>size</name></member>
      <member refid="structamrex_1_1Stack_1aa63bd587bd05afa2db4298e6ded65668" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>top</name></member>
      <member refid="structamrex_1_1Stack_1ae1ce52b58d0b9732b467285fe66907ba" prot="public" virt="non-virtual"><scope>amrex::Stack</scope><name>top</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
