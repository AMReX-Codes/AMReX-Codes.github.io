<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1AmrMeshDataAdaptor" kind="class" language="C++" prot="public">
    <compoundname>amrex::AmrMeshDataAdaptor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DataAdaptor</basecompoundref>
    <includes refid="AMReX__AmrMeshDataAdaptor_8H" local="no">AMReX_AmrMeshDataAdaptor.H</includes>
    <innerclass refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" prot="public">amrex::AmrMeshDataAdaptor::InternalsType</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1AmrMeshDataAdaptor_1a239d7e100aa5e50e2fa73180fd7649ea" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" kindref="compound">InternalsType</ref> *</type>
        <definition>InternalsType* amrex::AmrMeshDataAdaptor::Internals</definition>
        <argsstring></argsstring>
        <name>Internals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="49" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a85eaea376d002e3fdfaa2082cd2a30cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1AmrMeshDataAdaptor" kindref="compound">AmrMeshDataAdaptor</ref> *</type>
        <definition>static AmrMeshDataAdaptor* amrex::AmrMeshDataAdaptor::New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="15" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a5b94d5fbab0e48ed81b6edb7db19e0aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrMeshDataAdaptor::senseiTypeMacro</definition>
        <argsstring>(AmrMeshDataAdaptor, sensei::DataAdaptor)</argsstring>
        <name>senseiTypeMacro</name>
        <param>
          <type><ref refid="classamrex_1_1AmrMeshDataAdaptor" kindref="compound">AmrMeshDataAdaptor</ref></type>
        </param>
        <param>
          <type>sensei::DataAdaptor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1af39f5254469c146a31e26a5978b052db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::SetDataSource</definition>
        <argsstring>(amrex::AmrMesh *mesh, const std::vector&lt; amrex::Vector&lt; amrex::MultiFab &gt; *&gt; &amp;states, const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;arrayNames)</argsstring>
        <name>SetDataSource</name>
        <param>
          <type><ref refid="classamrex_1_1AmrMesh" kindref="compound">amrex::AmrMesh</ref> *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref> &gt; *&gt; &amp;</type>
          <declname>states</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>arrayNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="106" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1af95203532e6b05769deed97d8015911b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrMeshDataAdaptor::SetPinMesh</definition>
        <argsstring>(int val)</argsstring>
        <name>SetPinMesh</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="24" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a799e8484ecd0ce48d5a84dd634b01ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetNumberOfMeshes</definition>
        <argsstring>(unsigned int &amp;numMeshes) override</argsstring>
        <name>GetNumberOfMeshes</name>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>numMeshes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1aed8264f802b43842e82fbe41a3ecb283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetMeshName</definition>
        <argsstring>(unsigned int id, std::string &amp;meshName) override</argsstring>
        <name>GetMeshName</name>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1af416516fa4c19ec1181034effe6bb4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetMeshHasGhostNodes</definition>
        <argsstring>(const std::string &amp;meshName, int &amp;nLayers) override</argsstring>
        <name>GetMeshHasGhostNodes</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>nLayers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="32" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="439" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a141e4587c3c274deb75f5d04ae75f4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetMeshHasGhostCells</definition>
        <argsstring>(const std::string &amp;meshName, int &amp;nLayers) override</argsstring>
        <name>GetMeshHasGhostCells</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>nLayers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="453" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a81e26add150ac206d12a042169b1f993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetNumberOfArrays</definition>
        <argsstring>(const std::string &amp;meshName, int association, unsigned int &amp;numberOfArrays) override</argsstring>
        <name>GetNumberOfArrays</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>association</declname>
        </param>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>numberOfArrays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="388" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a6134a52852c8b59d0377a1f255990f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetArrayName</definition>
        <argsstring>(const std::string &amp;meshName, int association, unsigned int index, std::string &amp;arrayName) override</argsstring>
        <name>GetArrayName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>association</declname>
        </param>
        <param>
          <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>arrayName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="418" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a677d09b0fbaa9cbe7502ad61b201824f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::GetMesh</definition>
        <argsstring>(const std::string &amp;meshName, bool structureOnly, vtkDataObject *&amp;mesh) override</argsstring>
        <name>GetMesh</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>structureOnly</declname>
        </param>
        <param>
          <type>vtkDataObject *&amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="477" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1acc215f58a34a203a271a0ef08848b546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::AddGhostNodesArray</definition>
        <argsstring>(vtkDataObject *mesh, const std::string &amp;meshName) override</argsstring>
        <name>AddGhostNodesArray</name>
        <param>
          <type>vtkDataObject *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="598" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a652520cdfc484470e71d3641b2c1b608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::AddGhostCellsArray</definition>
        <argsstring>(vtkDataObject *mesh, const std::string &amp;meshName) override</argsstring>
        <name>AddGhostCellsArray</name>
        <param>
          <type>vtkDataObject *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="39" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="611" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a220571102ab3593fd2fd50cc0a7f28cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::AddArray</definition>
        <argsstring>(vtkDataObject *mesh, const std::string &amp;meshName, int association, const std::string &amp;arrayName) override</argsstring>
        <name>AddArray</name>
        <param>
          <type>vtkDataObject *</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>meshName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>association</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>arrayName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="40" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="732" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a9aa101ee90b944010548ed7461cb7a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrMeshDataAdaptor::ReleaseData</definition>
        <argsstring>() override</argsstring>
        <name>ReleaseData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="41" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="899" bodyend="915"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a2343c3cec45162fdd013661122a5ed0f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrMeshDataAdaptor::AmrMeshDataAdaptor</definition>
        <argsstring>()</argsstring>
        <name>AmrMeshDataAdaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="44" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrMeshDataAdaptor_1a128f2624255ef44bea08ba633f9abf99" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrMeshDataAdaptor::~AmrMeshDataAdaptor</definition>
        <argsstring>()</argsstring>
        <name>~AmrMeshDataAdaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="305">
        <label>sensei::DataAdaptor</label>
      </node>
      <node id="304">
        <label>amrex::AmrMeshDataAdaptor</label>
        <link refid="classamrex_1_1AmrMeshDataAdaptor"/>
        <childnode refid="305" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="310">
        <label>amrex::InSituUtils::StateMap</label>
        <link refid="classamrex_1_1InSituUtils_1_1StateMap"/>
      </node>
      <node id="309">
        <label>amrex::InSituUtils::MeshStateMap</label>
        <link refid="classamrex_1_1InSituUtils_1_1MeshStateMap"/>
        <childnode refid="310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="315">
        <label>Real</label>
      </node>
      <node id="321">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="318">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="319" relation="public-inheritance">
        </childnode>
      </node>
      <node id="319">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="313">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="314" relation="public-inheritance">
        </childnode>
      </node>
      <node id="316">
        <label>amrex::Vector&lt; BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="308">
        <label>amrex::AmrMeshDataAdaptor::InternalsType</label>
        <link refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType"/>
        <childnode refid="309" relation="usage">
          <edgelabel>StateMetadata</edgelabel>
        </childnode>
        <childnode refid="311" relation="usage">
          <edgelabel>Mesh</edgelabel>
        </childnode>
      </node>
      <node id="307">
        <label>sensei::DataAdaptor</label>
      </node>
      <node id="312">
        <label>amrex::AmrInfo</label>
        <link refid="structamrex_1_1AmrInfo"/>
        <childnode refid="313" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>n_error_buf</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="315" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="317">
        <label>std::vector&lt; BoxArray, std::allocator&lt; BoxArray &gt; &gt;</label>
      </node>
      <node id="314">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="320">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="321" relation="public-inheritance">
        </childnode>
      </node>
      <node id="306">
        <label>amrex::AmrMeshDataAdaptor</label>
        <link refid="classamrex_1_1AmrMeshDataAdaptor"/>
        <childnode refid="307" relation="public-inheritance">
        </childnode>
        <childnode refid="308" relation="usage">
          <edgelabel>Internals</edgelabel>
        </childnode>
      </node>
      <node id="311">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="312" relation="protected-inheritance">
        </childnode>
        <childnode refid="316" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="318" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="320" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" line="13" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H" bodystart="12" bodyend="50"/>
    <listofallmembers>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a220571102ab3593fd2fd50cc0a7f28cc" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>AddArray</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a652520cdfc484470e71d3641b2c1b608" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>AddGhostCellsArray</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1acc215f58a34a203a271a0ef08848b546" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>AddGhostNodesArray</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a2343c3cec45162fdd013661122a5ed0f" prot="protected" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>AmrMeshDataAdaptor</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a6134a52852c8b59d0377a1f255990f85" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetArrayName</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a677d09b0fbaa9cbe7502ad61b201824f" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetMesh</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a141e4587c3c274deb75f5d04ae75f4d3" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetMeshHasGhostCells</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1af416516fa4c19ec1181034effe6bb4c6" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetMeshHasGhostNodes</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1aed8264f802b43842e82fbe41a3ecb283" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetMeshName</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a81e26add150ac206d12a042169b1f993" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetNumberOfArrays</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a799e8484ecd0ce48d5a84dd634b01ee1" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>GetNumberOfMeshes</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a239d7e100aa5e50e2fa73180fd7649ea" prot="private" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>Internals</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a85eaea376d002e3fdfaa2082cd2a30cf" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>New</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a9aa101ee90b944010548ed7461cb7a8a" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>ReleaseData</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a5b94d5fbab0e48ed81b6edb7db19e0aa" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>senseiTypeMacro</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1af39f5254469c146a31e26a5978b052db" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>SetDataSource</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1af95203532e6b05769deed97d8015911b" prot="public" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>SetPinMesh</name></member>
      <member refid="classamrex_1_1AmrMeshDataAdaptor_1a128f2624255ef44bea08ba633f9abf99" prot="protected" virt="non-virtual"><scope>amrex::AmrMeshDataAdaptor</scope><name>~AmrMeshDataAdaptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
