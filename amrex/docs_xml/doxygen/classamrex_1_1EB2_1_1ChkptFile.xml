<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1ChkptFile" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::ChkptFile</compoundname>
    <includes refid="AMReX__EB__chkpt__file_8H" local="no">AMReX_EB_chkpt_file.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1a7faca328c01194fcb735a45e466529e7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::EB2::ChkptFile::m_restart_file</definition>
        <argsstring></argsstring>
        <name>m_restart_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="11" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1a7f5d4eca7d4393226a5bfda8f847b2c5" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string amrex::EB2::ChkptFile::m_volfrac_name</definition>
        <argsstring></argsstring>
        <name>m_volfrac_name</name>
        <initializer>= &quot;volfrac&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="13" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1a72d2921d8019b34b9f9f88e65bb03489" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string amrex::EB2::ChkptFile::m_centroid_name</definition>
        <argsstring></argsstring>
        <name>m_centroid_name</name>
        <initializer>= &quot;centroid&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="14" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1ab385449aacfc631acf4ce3a8620faf0c" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string amrex::EB2::ChkptFile::m_bndryarea_name</definition>
        <argsstring></argsstring>
        <name>m_bndryarea_name</name>
        <initializer>= &quot;bndryarea&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="15" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1abaa8cf0b7e5e719dcb9766f653b97175" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string amrex::EB2::ChkptFile::m_bndrycent_name</definition>
        <argsstring></argsstring>
        <name>m_bndrycent_name</name>
        <initializer>= &quot;bndrycent&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="16" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1aa8d6585a43d56a06855ae6f0f14fa7c0" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string amrex::EB2::ChkptFile::m_bndrynorm_name</definition>
        <argsstring></argsstring>
        <name>m_bndrynorm_name</name>
        <initializer>= &quot;bndrynorm&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="17" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1a582cbf842e74e78211fd7a484c44d84b" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string amrex::EB2::ChkptFile::m_levelset_name</definition>
        <argsstring></argsstring>
        <name>m_levelset_name</name>
        <initializer>= &quot;levelset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="18" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1aa79ac38888691a09e4b0c3818fa88855" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; std::string &gt;</type>
        <definition>const amrex::Vector&lt;std::string&gt; amrex::EB2::ChkptFile::m_areafrac_name</definition>
        <argsstring></argsstring>
        <name>m_areafrac_name</name>
        <initializer>= {AMREX_D_DECL(&quot;areafrac_x&quot;, &quot;areafrac_y&quot;, &quot;areafrac_z&quot;)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="20" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1aa8a9f4a34561ed52aa403f884612f786" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; std::string &gt;</type>
        <definition>const amrex::Vector&lt;std::string&gt; amrex::EB2::ChkptFile::m_facecent_name</definition>
        <argsstring></argsstring>
        <name>m_facecent_name</name>
        <initializer>= {AMREX_D_DECL(&quot;facecent_x&quot;, &quot;facecent_y&quot;, &quot;facecent_z&quot;)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="22" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ChkptFile_1a0b7ea26f4411fae52cbba8c55fea0cc7" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; std::string &gt;</type>
        <definition>const amrex::Vector&lt;std::string&gt; amrex::EB2::ChkptFile::m_edgecent_name</definition>
        <argsstring></argsstring>
        <name>m_edgecent_name</name>
        <initializer>= {AMREX_D_DECL(&quot;edgecent_x&quot;, &quot;edgecent_y&quot;, &quot;edgecent_z&quot;)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="24" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ChkptFile_1a8f5e5253d66ca9845131bf51279dbbe6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::ChkptFile::writeHeader</definition>
        <argsstring>(const BoxArray &amp;cut_ba, const BoxArray &amp;covered_ba, const Geometry &amp;geom, const IntVect &amp;ngrow, bool extend_domain_face, int max_grid_size) const</argsstring>
        <name>writeHeader</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>cut_ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>covered_ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.cpp" bodystart="26" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ChkptFile_1a41692da26c7e025be0e39c8a149a8739" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::ChkptFile::writeToFile</definition>
        <argsstring>(const MultiFab &amp;mf, const std::string &amp;mf_name) const</argsstring>
        <name>writeToFile</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mf_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="30" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.cpp" bodystart="92" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ChkptFile_1a276bc44ba1ef97690d0bb86bdd115e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ChkptFile::ChkptFile</definition>
        <argsstring>(std::string fname)</argsstring>
        <name>ChkptFile</name>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="34" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ChkptFile_1a42bbef7d1271397c6e1a88006c9462e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::ChkptFile::read_from_chkpt_file</definition>
        <argsstring>(BoxArray &amp;cut_grids, BoxArray &amp;covered_grids, DistributionMapping &amp;dmap, MultiFab &amp;volfrac, MultiFab &amp;centroid, MultiFab &amp;bndryarea, MultiFab &amp;bndrycent, MultiFab &amp;bndrynorm, Array&lt; MultiFab, AMREX_SPACEDIM &gt; &amp;areafrac, Array&lt; MultiFab, AMREX_SPACEDIM &gt; &amp;facecent, Array&lt; MultiFab, AMREX_SPACEDIM &gt; &amp;edgecent, MultiFab &amp;levelset, int ng_gfab, const Geometry &amp;geom, const IntVect &amp;ngrow_finest, bool extend_domain_face, int max_grid_size) const</argsstring>
        <name>read_from_chkpt_file</name>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>cut_grids</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>covered_grids</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>volfrac</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>centroid</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndryarea</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrycent</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrynorm</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>areafrac</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>facecent</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>edgecent</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ng_gfab</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ngrow_finest</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="36" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.cpp" bodystart="104" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ChkptFile_1a59a0dad41168327c4720c9afb6b8fb3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::ChkptFile::write_to_chkpt_file</definition>
        <argsstring>(const BoxArray &amp;cut_grids, const BoxArray &amp;covered_grids, const MultiFab &amp;volfrac, const MultiFab &amp;centroid, const MultiFab &amp;bndryarea, const MultiFab &amp;bndrycent, const MultiFab &amp;bndrynorm, const Array&lt; MultiFab, AMREX_SPACEDIM &gt; &amp;areafrac, const Array&lt; MultiFab, AMREX_SPACEDIM &gt; &amp;facecent, const Array&lt; MultiFab, AMREX_SPACEDIM &gt; &amp;edgecent, const MultiFab &amp;levelset, const Geometry &amp;geom, const IntVect &amp;ngrow, bool extend_domain_face, int max_grid_size) const</argsstring>
        <name>write_to_chkpt_file</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>cut_grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>covered_grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>volfrac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>centroid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndryarea</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrycent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>bndrynorm</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>areafrac</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>facecent</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>edgecent</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_grid_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="46" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.cpp" bodystart="305" bodyend="339"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>T</label>
      </node>
      <node id="3">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::EB2::ChkptFile</label>
        <link refid="classamrex_1_1EB2_1_1ChkptFile"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_areafrac_name</edgelabel>
          <edgelabel>m_edgecent_name</edgelabel>
          <edgelabel>m_facecent_name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_bndryarea_name</edgelabel>
          <edgelabel>m_bndrycent_name</edgelabel>
          <edgelabel>m_bndrynorm_name</edgelabel>
          <edgelabel>m_centroid_name</edgelabel>
          <edgelabel>m_levelset_name</edgelabel>
          <edgelabel>m_restart_file</edgelabel>
          <edgelabel>m_volfrac_name</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" line="8" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H" bodystart="9" bodyend="56"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a276bc44ba1ef97690d0bb86bdd115e1b" prot="public" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>ChkptFile</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1aa79ac38888691a09e4b0c3818fa88855" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_areafrac_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1ab385449aacfc631acf4ce3a8620faf0c" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_bndryarea_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1abaa8cf0b7e5e719dcb9766f653b97175" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_bndrycent_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1aa8d6585a43d56a06855ae6f0f14fa7c0" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_bndrynorm_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a72d2921d8019b34b9f9f88e65bb03489" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_centroid_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a0b7ea26f4411fae52cbba8c55fea0cc7" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_edgecent_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1aa8a9f4a34561ed52aa403f884612f786" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_facecent_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a582cbf842e74e78211fd7a484c44d84b" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_levelset_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a7faca328c01194fcb735a45e466529e7" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_restart_file</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a7f5d4eca7d4393226a5bfda8f847b2c5" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>m_volfrac_name</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a42bbef7d1271397c6e1a88006c9462e0" prot="public" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>read_from_chkpt_file</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a59a0dad41168327c4720c9afb6b8fb3c" prot="public" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>write_to_chkpt_file</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a8f5e5253d66ca9845131bf51279dbbe6" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>writeHeader</name></member>
      <member refid="classamrex_1_1EB2_1_1ChkptFile_1a41692da26c7e025be0e39c8a149a8739" prot="private" virt="non-virtual"><scope>amrex::EB2::ChkptFile</scope><name>writeToFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
