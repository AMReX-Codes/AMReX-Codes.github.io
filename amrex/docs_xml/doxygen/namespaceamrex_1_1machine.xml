<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1machine" kind="namespace" language="C++">
    <compoundname>amrex::machine</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1machine_1a42a34e9b2688dfa4616c06781fe06d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::machine::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
<para>called in <ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">amrex::Initialize()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" line="572" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1machine_1a80498796973f6b853437e50ba873a6d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::machine::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" line="577" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" bodystart="577" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1machine_1afa7cf247ac1fb3972693835d136c00f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
        <definition>Vector&lt; int &gt; amrex::machine::find_best_nbh</definition>
        <argsstring>(int rank_n, bool flag_local_ranks)</argsstring>
        <name>find_best_nbh</name>
        <param>
          <type>int</type>
          <declname>rank_n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flag_local_ranks</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>find the best topologically close neighborhood of ranks returns a vector of global or local rank IDs based on flag_local_ranks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" line="581" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" bodystart="581" bodyend="584"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Machine.cpp" line="570" column="1"/>
  </compounddef>
</doxygen>
