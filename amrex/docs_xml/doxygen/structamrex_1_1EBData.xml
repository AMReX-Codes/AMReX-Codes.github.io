<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1EBData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::EBData</compoundname>
    <includes refid="AMReX__EBData_8H" local="no">AMReX_EBData.H</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1EBData_1aa9983fdf5d6a7a2b4383eb011a564bb1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::EBData::real_data_size</definition>
        <argsstring></argsstring>
        <name>real_data_size</name>
        <qualifiedname>amrex::EBData::real_data_size</qualifiedname>
        <initializer>= static_cast&lt;int&gt;(<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7ae8157b7557ca28ae739dad488092e66f" kindref="member">EBData_t::cellflag</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="172" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="172" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1EBData_1a8054ae8edba7f3b9c1b871920442882e" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="classamrex_1_1EBCellFlag" kindref="compound">EBCellFlag</ref> const  &gt; const  *</type>
        <definition>Array4&lt;EBCellFlag const&gt; const* amrex::EBData::m_cell_flag</definition>
        <argsstring></argsstring>
        <name>m_cell_flag</name>
        <qualifiedname>amrex::EBData::m_cell_flag</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="174" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1EBData_1ad64cb588e3291f80f02113ce7dc7c6ce" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const  &gt; const  *</type>
        <definition>Array4&lt;Real const&gt; const* amrex::EBData::m_real_data</definition>
        <argsstring></argsstring>
        <name>m_real_data</name>
        <qualifiedname>amrex::EBData::m_real_data</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="175" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="175" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1EBData_1af0ef3ee2f9e91fd630fdc46149619494" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7" kindref="member">EBData_t</ref></type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>__host__ __device__ auto</type>
        <definition>__host__ __device__ auto amrex::EBData::get</definition>
        <argsstring>(int i, int j, int k) const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>amrex::EBData::get</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="29" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1EBData_1aef7e3ae2d18ac3e3bb87eb3abb8f193d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7" kindref="member">EBData_t</ref></type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>std::enable_if_t&lt; T==<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7a1401e7de3c16108d52d902869a7fb29f" kindref="member">EBData_t::centroid</ref>||T==<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7a37d3056e94c1d51b6a008f31df92069b" kindref="member">EBData_t::bndrycent</ref>||T==<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7ab9cc5c5229ab9d2efae2fa4124a079b1" kindref="member">EBData_t::bndrynorm</ref>||T==<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7a3f604dc3a2da1ffc7be935e3738454a2" kindref="member">EBData_t::fcx</ref>||T==<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7acff05319c59aeaccf13bce08d1b09b85" kindref="member">EBData_t::fcy</ref>||T==<ref refid="namespaceamrex_1aea45874f350ec5ab95a6918255ecdba7aba006ba7669bb3b52655be17abaae963" kindref="member">EBData_t::fcz</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ auto</type>
        <definition>__host__ __device__ auto amrex::EBData::get</definition>
        <argsstring>(int i, int j, int k, int n) const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>amrex::EBData::get</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="45" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1EBData_1a000b4e3f7ee15ee54c8ddcd40b41e6ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt;</type>
        <definition>__host__ __device__ GpuArray&lt; Real, 3 &gt; amrex::EBData::randomPointOnEB</definition>
        <argsstring>(int i, int j, int k, RandomEngine const &amp;engine) const</argsstring>
        <name>randomPointOnEB</name>
        <qualifiedname>amrex::EBData::randomPointOnEB</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1RandomEngine" kindref="compound">RandomEngine</ref> const &amp;</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="52" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="52" bodyend="170"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>amrex::Array4&lt; Real const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="4" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Array4&lt; amrex::EBCellFlag const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="3" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="3">
        <label>amrex::EBCellFlag</label>
        <link refid="classamrex_1_1EBCellFlag"/>
      </node>
      <node id="1">
        <label>amrex::EBData</label>
        <link refid="structamrex_1_1EBData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_cell_flag</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_real_data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" line="25" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBData.H" bodystart="26" bodyend="176"/>
    <listofallmembers>
      <member refid="structamrex_1_1EBData_1af0ef3ee2f9e91fd630fdc46149619494" prot="public" virt="non-virtual"><scope>amrex::EBData</scope><name>get</name></member>
      <member refid="structamrex_1_1EBData_1aef7e3ae2d18ac3e3bb87eb3abb8f193d" prot="public" virt="non-virtual"><scope>amrex::EBData</scope><name>get</name></member>
      <member refid="structamrex_1_1EBData_1a8054ae8edba7f3b9c1b871920442882e" prot="public" virt="non-virtual"><scope>amrex::EBData</scope><name>m_cell_flag</name></member>
      <member refid="structamrex_1_1EBData_1ad64cb588e3291f80f02113ce7dc7c6ce" prot="public" virt="non-virtual"><scope>amrex::EBData</scope><name>m_real_data</name></member>
      <member refid="structamrex_1_1EBData_1a000b4e3f7ee15ee54c8ddcd40b41e6ed" prot="public" virt="non-virtual"><scope>amrex::EBData</scope><name>randomPointOnEB</name></member>
      <member refid="structamrex_1_1EBData_1aa9983fdf5d6a7a2b4383eb011a564bb1" prot="public" virt="non-virtual"><scope>amrex::EBData</scope><name>real_data_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
