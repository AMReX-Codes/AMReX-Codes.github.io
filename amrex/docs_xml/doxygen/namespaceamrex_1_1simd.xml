<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1simd" kind="namespace" language="C++">
    <compoundname>amrex::simd</compoundname>
    <innerclass refid="structamrex_1_1simd_1_1Vectorized" prot="public">amrex::simd::Vectorized</innerclass>
    <innernamespace refid="namespaceamrex_1_1simd_1_1detail">amrex::simd::detail</innernamespace>
    <innernamespace refid="namespaceamrex_1_1simd_1_1stdx">amrex::simd::stdx</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceamrex_1_1simd_1add6621fecc25847a2732965c42392d93" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>SIMD_WIDTH</declname>
            <defname>SIMD_WIDTH</defname>
            <defval>native_simd_size_real</defval>
          </param>
        </templateparamlist>
        <type>amrex::Real</type>
        <definition>using amrex::simd::SIMDReal = typedef amrex::Real</definition>
        <argsstring></argsstring>
        <name>SIMDReal</name>
        <qualifiedname>amrex::simd::SIMDReal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="59" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceamrex_1_1simd_1a945cac56e2e229159839e79047422383" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>SIMD_WIDTH</declname>
            <defname>SIMD_WIDTH</defname>
            <defval>native_simd_size_particlereal</defval>
          </param>
        </templateparamlist>
        <type>amrex::ParticleReal</type>
        <definition>using amrex::simd::SIMDParticleReal = typedef amrex::ParticleReal</definition>
        <argsstring></argsstring>
        <name>SIMDParticleReal</name>
        <qualifiedname>amrex::simd::SIMDParticleReal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="62" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceamrex_1_1simd_1a13bc9efaf58e1af807347f918fff24a9" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T_ParticleReal</type>
            <defval>SIMDParticleReal&lt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::uint64_t</type>
        <definition>using amrex::simd::SIMDIdCpu = typedef std::uint64_t</definition>
        <argsstring></argsstring>
        <name>SIMDIdCpu</name>
        <qualifiedname>amrex::simd::SIMDIdCpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="66" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1simd_1a3eedc46ea269765dc7010c48bd8a39d8" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto amrex::simd::native_simd_size_real</definition>
        <argsstring></argsstring>
        <name>native_simd_size_real</name>
        <qualifiedname>amrex::simd::native_simd_size_real</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="55" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1simd_1acbc41b506c60eca5132aafb04cfbf19f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto amrex::simd::native_simd_size_particlereal</definition>
        <argsstring></argsstring>
        <name>native_simd_size_particlereal</name>
        <qualifiedname>amrex::simd::native_simd_size_particlereal</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="56" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1simd_1a54138e232b90d8b36128b4dfd4f90923" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool amrex::simd::is_vectorized</definition>
        <argsstring></argsstring>
        <name>is_vectorized</name>
        <qualifiedname>amrex::simd::is_vectorized</qualifiedname>
        <initializer>= std::is_base_of_v&lt;<ref refid="structamrex_1_1simd_1_1detail_1_1InternalVectorized" kindref="compound">detail::InternalVectorized</ref>, T&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a Functor Class works with <ref refid="namespaceamrex_1a7329f7a3e903d5a9abcd5f8603def1a1" kindref="member">amrex::ParallelForSIMD</ref></para>
<para><simplesect kind="see"><para><ref refid="structamrex_1_1simd_1_1Vectorized" kindref="compound">amrex::simd::Vectorized</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="112" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" bodystart="112" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_SIMD.H" line="17" column="1"/>
  </compounddef>
</doxygen>
