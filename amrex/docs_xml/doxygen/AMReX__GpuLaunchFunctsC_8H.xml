<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__GpuLaunchFunctsC_8H" kind="file" language="C++">
    <compoundname>AMReX_GpuLaunchFunctsC.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includedby refid="AMReX__GpuLaunch_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunch.H</includedby>
    <incdepgraph>
      <node id="29717">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="29718" relation="include">
        </childnode>
      </node>
      <node id="29718">
        <label>AMReX_Config.H</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30024">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="30009">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="29722">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_extrapolater_K.H</label>
        <link refid="AMReX__extrapolater__K_8H"/>
        <childnode refid="29723" relation="include">
        </childnode>
      </node>
      <node id="29914">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="30043">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29790">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="29898">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="29894" relation="include">
        </childnode>
        <childnode refid="29895" relation="include">
        </childnode>
        <childnode refid="29896" relation="include">
        </childnode>
      </node>
      <node id="29874">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29875" relation="include">
        </childnode>
      </node>
      <node id="29750">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="30034">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29887">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="29888" relation="include">
        </childnode>
      </node>
      <node id="29826">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="29854">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="29813" relation="include">
        </childnode>
        <childnode refid="29849" relation="include">
        </childnode>
        <childnode refid="29855" relation="include">
        </childnode>
        <childnode refid="29812" relation="include">
        </childnode>
      </node>
      <node id="29977">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="29763" relation="include">
        </childnode>
      </node>
      <node id="29975">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="30038">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29952">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29775">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="29957">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="29956" relation="include">
        </childnode>
      </node>
      <node id="29941">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="29759">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="29924">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="29722" relation="include">
        </childnode>
        <childnode refid="29925" relation="include">
        </childnode>
        <childnode refid="29926" relation="include">
        </childnode>
        <childnode refid="29927" relation="include">
        </childnode>
        <childnode refid="29929" relation="include">
        </childnode>
        <childnode refid="29930" relation="include">
        </childnode>
        <childnode refid="29931" relation="include">
        </childnode>
        <childnode refid="29933" relation="include">
        </childnode>
        <childnode refid="29934" relation="include">
        </childnode>
        <childnode refid="29935" relation="include">
        </childnode>
        <childnode refid="29936" relation="include">
        </childnode>
        <childnode refid="29937" relation="include">
        </childnode>
        <childnode refid="29823" relation="include">
        </childnode>
        <childnode refid="29916" relation="include">
        </childnode>
        <childnode refid="29939" relation="include">
        </childnode>
        <childnode refid="29940" relation="include">
        </childnode>
        <childnode refid="29941" relation="include">
        </childnode>
        <childnode refid="29942" relation="include">
        </childnode>
        <childnode refid="29943" relation="include">
        </childnode>
        <childnode refid="29946" relation="include">
        </childnode>
        <childnode refid="29914" relation="include">
        </childnode>
        <childnode refid="29948" relation="include">
        </childnode>
        <childnode refid="29815" relation="include">
        </childnode>
        <childnode refid="29953" relation="include">
        </childnode>
        <childnode refid="29954" relation="include">
        </childnode>
        <childnode refid="29955" relation="include">
        </childnode>
        <childnode refid="29957" relation="include">
        </childnode>
        <childnode refid="29958" relation="include">
        </childnode>
        <childnode refid="29917" relation="include">
        </childnode>
        <childnode refid="29843" relation="include">
        </childnode>
        <childnode refid="29845" relation="include">
        </childnode>
        <childnode refid="29960" relation="include">
        </childnode>
        <childnode refid="29961" relation="include">
        </childnode>
        <childnode refid="29962" relation="include">
        </childnode>
        <childnode refid="29964" relation="include">
        </childnode>
        <childnode refid="29966" relation="include">
        </childnode>
        <childnode refid="29967" relation="include">
        </childnode>
        <childnode refid="29968" relation="include">
        </childnode>
        <childnode refid="29971" relation="include">
        </childnode>
        <childnode refid="29959" relation="include">
        </childnode>
        <childnode refid="29876" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
        <childnode refid="29974" relation="include">
        </childnode>
        <childnode refid="29970" relation="include">
        </childnode>
        <childnode refid="29977" relation="include">
        </childnode>
        <childnode refid="29978" relation="include">
        </childnode>
        <childnode refid="29980" relation="include">
        </childnode>
        <childnode refid="29893" relation="include">
        </childnode>
        <childnode refid="29892" relation="include">
        </childnode>
        <childnode refid="29894" relation="include">
        </childnode>
        <childnode refid="29884" relation="include">
        </childnode>
        <childnode refid="29896" relation="include">
        </childnode>
        <childnode refid="29898" relation="include">
        </childnode>
        <childnode refid="29899" relation="include">
        </childnode>
        <childnode refid="29981" relation="include">
        </childnode>
        <childnode refid="29982" relation="include">
        </childnode>
        <childnode refid="29983" relation="include">
        </childnode>
        <childnode refid="29984" relation="include">
        </childnode>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29991" relation="include">
        </childnode>
        <childnode refid="29992" relation="include">
        </childnode>
        <childnode refid="29993" relation="include">
        </childnode>
        <childnode refid="29859" relation="include">
        </childnode>
        <childnode refid="29994" relation="include">
        </childnode>
        <childnode refid="29781" relation="include">
        </childnode>
        <childnode refid="29783" relation="include">
        </childnode>
      </node>
      <node id="29921">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="29843" relation="include">
        </childnode>
        <childnode refid="29853" relation="include">
        </childnode>
      </node>
      <node id="29864">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="29863" relation="include">
        </childnode>
      </node>
      <node id="29818">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="29723" relation="include">
        </childnode>
      </node>
      <node id="29908">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29875">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="29792">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="29793" relation="include">
        </childnode>
        <childnode refid="29768" relation="include">
        </childnode>
        <childnode refid="29803" relation="include">
        </childnode>
      </node>
      <node id="29837">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29838" relation="include">
        </childnode>
        <childnode refid="29839" relation="include">
        </childnode>
      </node>
      <node id="29893">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="30020">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="29999" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
        <childnode refid="30022" relation="include">
        </childnode>
        <childnode refid="30023" relation="include">
        </childnode>
        <childnode refid="30024" relation="include">
        </childnode>
        <childnode refid="30025" relation="include">
        </childnode>
        <childnode refid="30026" relation="include">
        </childnode>
        <childnode refid="30027" relation="include">
        </childnode>
        <childnode refid="30028" relation="include">
        </childnode>
        <childnode refid="30029" relation="include">
        </childnode>
        <childnode refid="30030" relation="include">
        </childnode>
        <childnode refid="30031" relation="include">
        </childnode>
        <childnode refid="30032" relation="include">
        </childnode>
        <childnode refid="30033" relation="include">
        </childnode>
        <childnode refid="30034" relation="include">
        </childnode>
        <childnode refid="30035" relation="include">
        </childnode>
        <childnode refid="30036" relation="include">
        </childnode>
        <childnode refid="30037" relation="include">
        </childnode>
        <childnode refid="30038" relation="include">
        </childnode>
        <childnode refid="30039" relation="include">
        </childnode>
      </node>
      <node id="30012">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="29752" relation="include">
        </childnode>
        <childnode refid="29916" relation="include">
        </childnode>
        <childnode refid="29949" relation="include">
        </childnode>
        <childnode refid="29948" relation="include">
        </childnode>
      </node>
      <node id="30033">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29879">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="29922">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29869" relation="include">
        </childnode>
        <childnode refid="29873" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29879" relation="include">
        </childnode>
        <childnode refid="29871" relation="include">
        </childnode>
      </node>
      <node id="30028">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29891">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.H</label>
        <link refid="AMReX__HypreIJIface_8H"/>
        <childnode refid="29812" relation="include">
        </childnode>
        <childnode refid="29839" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
      </node>
      <node id="30037">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29960">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="29745">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="29746" relation="include">
        </childnode>
      </node>
      <node id="29719">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="29720" relation="include">
        </childnode>
      </node>
      <node id="29964">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="29965" relation="include">
        </childnode>
        <childnode refid="29921" relation="include">
        </childnode>
      </node>
      <node id="29884">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="29885" relation="include">
        </childnode>
      </node>
      <node id="29930">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="29867">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="29842">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="29758" relation="include">
        </childnode>
      </node>
      <node id="30026">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29923">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="29880">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="29871" relation="include">
        </childnode>
      </node>
      <node id="29832">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="29896">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="29926">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="29955">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="29956" relation="include">
        </childnode>
      </node>
      <node id="29804">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="29805" relation="include">
        </childnode>
        <childnode refid="29806" relation="include">
        </childnode>
      </node>
      <node id="29950">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="29735" relation="include">
        </childnode>
        <childnode refid="29743" relation="include">
        </childnode>
        <childnode refid="29951" relation="include">
        </childnode>
      </node>
      <node id="29934">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="29947">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="29906">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29904">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="29937">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="29938" relation="include">
        </childnode>
      </node>
      <node id="29868">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="29869" relation="include">
        </childnode>
      </node>
      <node id="29763">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="30030">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29857">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="29858" relation="include">
        </childnode>
      </node>
      <node id="29766">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="29731">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29734" relation="include">
        </childnode>
        <childnode refid="29736" relation="include">
        </childnode>
        <childnode refid="29737" relation="include">
        </childnode>
      </node>
      <node id="29859">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="29770" relation="include">
        </childnode>
        <childnode refid="29775" relation="include">
        </childnode>
      </node>
      <node id="29838">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="29989">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="29746">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="29815">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29816" relation="include">
        </childnode>
        <childnode refid="29818" relation="include">
        </childnode>
        <childnode refid="29819" relation="include">
        </childnode>
        <childnode refid="29745" relation="include">
        </childnode>
        <childnode refid="29756" relation="include">
        </childnode>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29821" relation="include">
        </childnode>
        <childnode refid="29823" relation="include">
        </childnode>
        <childnode refid="29824" relation="include">
        </childnode>
        <childnode refid="29826" relation="include">
        </childnode>
        <childnode refid="29827" relation="include">
        </childnode>
        <childnode refid="29760" relation="include">
        </childnode>
        <childnode refid="29761" relation="include">
        </childnode>
        <childnode refid="29830" relation="include">
        </childnode>
        <childnode refid="29835" relation="include">
        </childnode>
        <childnode refid="29837" relation="include">
        </childnode>
        <childnode refid="29840" relation="include">
        </childnode>
        <childnode refid="29787" relation="include">
        </childnode>
        <childnode refid="29862" relation="include">
        </childnode>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29874" relation="include">
        </childnode>
        <childnode refid="29876" relation="include">
        </childnode>
        <childnode refid="29869" relation="include">
        </childnode>
        <childnode refid="29868" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
        <childnode refid="29873" relation="include">
        </childnode>
        <childnode refid="29878" relation="include">
        </childnode>
        <childnode refid="29879" relation="include">
        </childnode>
        <childnode refid="29871" relation="include">
        </childnode>
        <childnode refid="29880" relation="include">
        </childnode>
        <childnode refid="29881" relation="include">
        </childnode>
        <childnode refid="29887" relation="include">
        </childnode>
        <childnode refid="29889" relation="include">
        </childnode>
        <childnode refid="29854" relation="include">
        </childnode>
        <childnode refid="29849" relation="include">
        </childnode>
        <childnode refid="29891" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
        <childnode refid="29857" relation="include">
        </childnode>
        <childnode refid="29892" relation="include">
        </childnode>
        <childnode refid="29894" relation="include">
        </childnode>
        <childnode refid="29884" relation="include">
        </childnode>
        <childnode refid="29898" relation="include">
        </childnode>
        <childnode refid="29742" relation="include">
        </childnode>
        <childnode refid="29744" relation="include">
        </childnode>
        <childnode refid="29804" relation="include">
        </childnode>
        <childnode refid="29791" relation="include">
        </childnode>
        <childnode refid="29777" relation="include">
        </childnode>
        <childnode refid="29807" relation="include">
        </childnode>
        <childnode refid="29778" relation="include">
        </childnode>
        <childnode refid="29900" relation="include">
        </childnode>
        <childnode refid="29909" relation="include">
        </childnode>
        <childnode refid="29910" relation="include">
        </childnode>
      </node>
      <node id="29858">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="30041">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_DenseBins.H</label>
        <link refid="AMReX__DenseBins_8H"/>
        <childnode refid="29780" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29980">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_K.H</label>
        <link refid="AMReX__Habec__K_8H"/>
        <childnode refid="29850" relation="include">
        </childnode>
        <childnode refid="29856" relation="include">
        </childnode>
        <childnode refid="29814" relation="include">
        </childnode>
        <childnode refid="29858" relation="include">
        </childnode>
      </node>
      <node id="29956">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="29761" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
      </node>
      <node id="29819">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29820" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29974">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="29869" relation="include">
        </childnode>
        <childnode refid="29749" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
        <childnode refid="29975" relation="include">
        </childnode>
        <childnode refid="29790" relation="include">
        </childnode>
        <childnode refid="29976" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29871" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
      </node>
      <node id="29979">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="29918">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="29793">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="29794" relation="include">
        </childnode>
        <childnode refid="29797" relation="include">
        </childnode>
        <childnode refid="29799" relation="include">
        </childnode>
        <childnode refid="29800" relation="include">
        </childnode>
        <childnode refid="29802" relation="include">
        </childnode>
      </node>
      <node id="29747">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="29932">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="29933" relation="include">
        </childnode>
      </node>
      <node id="29855">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="29813" relation="include">
        </childnode>
        <childnode refid="29856" relation="include">
        </childnode>
      </node>
      <node id="29757">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="29846">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="29829">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="29760">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="29823">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="29810">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="29811" relation="include">
        </childnode>
        <childnode refid="29774" relation="include">
        </childnode>
      </node>
      <node id="29753">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="29754" relation="include">
        </childnode>
        <childnode refid="29760" relation="include">
        </childnode>
        <childnode refid="29815" relation="include">
        </childnode>
        <childnode refid="29838" relation="include">
        </childnode>
        <childnode refid="29912" relation="include">
        </childnode>
      </node>
      <node id="29821">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="29822" relation="include">
        </childnode>
      </node>
      <node id="29873">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="30013">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuFuse.cpp</label>
        <link refid="AMReX__GpuFuse_8cpp"/>
      </node>
      <node id="30040">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_BinIterator.H</label>
        <link refid="AMReX__BinIterator_8H"/>
        <childnode refid="30041" relation="include">
        </childnode>
        <childnode refid="30042" relation="include">
        </childnode>
      </node>
      <node id="29809">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="29765" relation="include">
        </childnode>
        <childnode refid="29772" relation="include">
        </childnode>
        <childnode refid="29777" relation="include">
        </childnode>
        <childnode refid="29807" relation="include">
        </childnode>
      </node>
      <node id="29755">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil_I.H</label>
        <link refid="AMReX__FillPatchUtil__I_8H"/>
        <childnode refid="29756" relation="include">
        </childnode>
      </node>
      <node id="30027">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29795">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="29775" relation="include">
        </childnode>
      </node>
      <node id="29966">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="29744">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="29965">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="29800">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29770" relation="include">
        </childnode>
        <childnode refid="29801" relation="include">
        </childnode>
      </node>
      <node id="29946">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="29947" relation="include">
        </childnode>
        <childnode refid="29830" relation="include">
        </childnode>
      </node>
      <node id="29811">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="29774" relation="include">
        </childnode>
      </node>
      <node id="29740">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="29878">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29770" relation="include">
        </childnode>
      </node>
      <node id="29802">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="29798" relation="include">
        </childnode>
        <childnode refid="29796" relation="include">
        </childnode>
      </node>
      <node id="29827">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="29819" relation="include">
        </childnode>
        <childnode refid="29828" relation="include">
        </childnode>
        <childnode refid="29829" relation="include">
        </childnode>
      </node>
      <node id="30023">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="30021">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="29970">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="29790" relation="include">
        </childnode>
      </node>
      <node id="29931">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="29932" relation="include">
        </childnode>
      </node>
      <node id="29796">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="29776" relation="include">
        </childnode>
      </node>
      <node id="29733">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="29944">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="29945" relation="include">
        </childnode>
        <childnode refid="29830" relation="include">
        </childnode>
      </node>
      <node id="29839">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="29905">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="29778" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29906" relation="include">
        </childnode>
        <childnode refid="29907" relation="include">
        </childnode>
        <childnode refid="29785" relation="include">
        </childnode>
      </node>
      <node id="29770">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="29771">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="29765">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="29925">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="29954">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="29820">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="29994">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="29995" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
      </node>
      <node id="29951">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="29844">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="29736">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29958">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Slopes_K.H</label>
        <link refid="AMReX__Slopes__K_8H"/>
        <childnode refid="29959" relation="include">
        </childnode>
      </node>
      <node id="29783">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="29784" relation="include">
        </childnode>
      </node>
      <node id="29942">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="29936">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="29762">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="29917">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29819" relation="include">
        </childnode>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29918" relation="include">
        </childnode>
        <childnode refid="29823" relation="include">
        </childnode>
        <childnode refid="29919" relation="include">
        </childnode>
        <childnode refid="29836" relation="include">
        </childnode>
        <childnode refid="29835" relation="include">
        </childnode>
        <childnode refid="29838" relation="include">
        </childnode>
        <childnode refid="29912" relation="include">
        </childnode>
        <childnode refid="29861" relation="include">
        </childnode>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29829" relation="include">
        </childnode>
        <childnode refid="29881" relation="include">
        </childnode>
        <childnode refid="29814" relation="include">
        </childnode>
        <childnode refid="29765" relation="include">
        </childnode>
        <childnode refid="29805" relation="include">
        </childnode>
        <childnode refid="29791" relation="include">
        </childnode>
        <childnode refid="29771" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29982">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="29767" relation="include">
        </childnode>
      </node>
      <node id="30035">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29990">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="29859" relation="include">
        </childnode>
      </node>
      <node id="29852">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="29836">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="29945">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="29780">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="29778" relation="include">
        </childnode>
      </node>
      <node id="29961">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="29767">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="29728">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="29983">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap_K.H</label>
        <link refid="AMReX__MLCellABecLap__K_8H"/>
        <childnode refid="29799" relation="include">
        </childnode>
      </node>
      <node id="29748">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="29749" relation="include">
        </childnode>
      </node>
      <node id="29915">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="29916" relation="include">
        </childnode>
      </node>
      <node id="29981">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="29766" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29775" relation="include">
        </childnode>
      </node>
      <node id="29919">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="29920" relation="include">
        </childnode>
        <childnode refid="29912" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29959">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_slopes_K.H</label>
        <link refid="AMReX__EB__slopes__K_8H"/>
      </node>
      <node id="29734">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
      </node>
      <node id="29768">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="29741">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="29813">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="29806">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="29805" relation="include">
        </childnode>
        <childnode refid="29771" relation="include">
        </childnode>
        <childnode refid="29772" relation="include">
        </childnode>
        <childnode refid="29796" relation="include">
        </childnode>
        <childnode refid="29777" relation="include">
        </childnode>
        <childnode refid="29807" relation="include">
        </childnode>
      </node>
      <node id="29971">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="29972" relation="include">
        </childnode>
        <childnode refid="29973" relation="include">
        </childnode>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29875" relation="include">
        </childnode>
      </node>
      <node id="29812">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="29813" relation="include">
        </childnode>
        <childnode refid="29814" relation="include">
        </childnode>
      </node>
      <node id="29892">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="29893" relation="include">
        </childnode>
        <childnode refid="29894" relation="include">
        </childnode>
        <childnode refid="29895" relation="include">
        </childnode>
        <childnode refid="29898" relation="include">
        </childnode>
        <childnode refid="29899" relation="include">
        </childnode>
      </node>
      <node id="29756">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29740" relation="include">
        </childnode>
        <childnode refid="29757" relation="include">
        </childnode>
      </node>
      <node id="29933">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="29730">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="29731" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29739" relation="include">
        </childnode>
      </node>
      <node id="30018">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="30001" relation="include">
        </childnode>
      </node>
      <node id="29860">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="29831">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29832" relation="include">
        </childnode>
        <childnode refid="29820" relation="include">
        </childnode>
        <childnode refid="29819" relation="include">
        </childnode>
        <childnode refid="29833" relation="include">
        </childnode>
      </node>
      <node id="29840">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29841" relation="include">
        </childnode>
        <childnode refid="29861" relation="include">
        </childnode>
      </node>
      <node id="29725">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="29901">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="29902" relation="include">
        </childnode>
        <childnode refid="29903" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29905" relation="include">
        </childnode>
      </node>
      <node id="29758">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="29890">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="29781">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29729">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="29730" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29742" relation="include">
        </childnode>
        <childnode refid="29744" relation="include">
        </childnode>
      </node>
      <node id="29777">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="29797">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="29767" relation="include">
        </childnode>
        <childnode refid="29798" relation="include">
        </childnode>
      </node>
      <node id="29801">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="29770" relation="include">
        </childnode>
      </node>
      <node id="29984">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="29770" relation="include">
        </childnode>
      </node>
      <node id="29886">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="29784">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="29773">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="29833">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="29863">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="29816">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="29817" relation="include">
        </childnode>
      </node>
      <node id="29913">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="29827" relation="include">
        </childnode>
      </node>
      <node id="29776">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="29948">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="29923" relation="include">
        </childnode>
        <childnode refid="29752" relation="include">
        </childnode>
        <childnode refid="29949" relation="include">
        </childnode>
        <childnode refid="29914" relation="include">
        </childnode>
        <childnode refid="29761" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
        <childnode refid="29743" relation="include">
        </childnode>
        <childnode refid="29950" relation="include">
        </childnode>
        <childnode refid="29952" relation="include">
        </childnode>
        <childnode refid="29903" relation="include">
        </childnode>
        <childnode refid="29905" relation="include">
        </childnode>
      </node>
      <node id="29772">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="29888">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="29907">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="30019">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="30016" relation="include">
        </childnode>
        <childnode refid="30014" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29905" relation="include">
        </childnode>
      </node>
      <node id="30014">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Partition.H</label>
        <link refid="AMReX__Partition_8H"/>
      </node>
      <node id="29943">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="29944" relation="include">
        </childnode>
      </node>
      <node id="29899">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="29893" relation="include">
        </childnode>
        <childnode refid="29894" relation="include">
        </childnode>
        <childnode refid="29895" relation="include">
        </childnode>
        <childnode refid="29897" relation="include">
        </childnode>
      </node>
      <node id="29985">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="29799" relation="include">
        </childnode>
        <childnode refid="29768" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29986" relation="include">
        </childnode>
        <childnode refid="29989" relation="include">
        </childnode>
        <childnode refid="29990" relation="include">
        </childnode>
      </node>
      <node id="30016">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="29721" relation="include">
        </childnode>
        <childnode refid="30015" relation="include">
        </childnode>
        <childnode refid="29995" relation="include">
        </childnode>
        <childnode refid="29780" relation="include">
        </childnode>
        <childnode refid="29901" relation="include">
        </childnode>
        <childnode refid="29903" relation="include">
        </childnode>
        <childnode refid="29908" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="30017" relation="include">
        </childnode>
      </node>
      <node id="29895">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="29893" relation="include">
        </childnode>
        <childnode refid="29894" relation="include">
        </childnode>
        <childnode refid="29896" relation="include">
        </childnode>
        <childnode refid="29897" relation="include">
        </childnode>
      </node>
      <node id="29720">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="29721" relation="include">
        </childnode>
        <childnode refid="30044" relation="include">
        </childnode>
      </node>
      <node id="29843">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="29844" relation="include">
        </childnode>
        <childnode refid="29845" relation="include">
        </childnode>
        <childnode refid="29853" relation="include">
        </childnode>
        <childnode refid="29854" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
        <childnode refid="29857" relation="include">
        </childnode>
        <childnode refid="29859" relation="include">
        </childnode>
      </node>
      <node id="29817">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="29920">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="29769">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="29962">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="29963" relation="include">
        </childnode>
      </node>
      <node id="30032">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29749">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="29987">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="29853">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="29798">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="29995">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
      </node>
      <node id="30003">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="29869" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29800" relation="include">
        </childnode>
      </node>
      <node id="29735">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="30039">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29993">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="29798" relation="include">
        </childnode>
      </node>
      <node id="29949">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29752" relation="include">
        </childnode>
        <childnode refid="29753" relation="include">
        </childnode>
        <childnode refid="29761" relation="include">
        </childnode>
        <childnode refid="29843" relation="include">
        </childnode>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29874" relation="include">
        </childnode>
        <childnode refid="29812" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
        <childnode refid="29857" relation="include">
        </childnode>
      </node>
      <node id="29938">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="29934" relation="include">
        </childnode>
      </node>
      <node id="29939">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="29900">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="29739" relation="include">
        </childnode>
        <childnode refid="29901" relation="include">
        </childnode>
        <childnode refid="29908" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29905" relation="include">
        </childnode>
      </node>
      <node id="30029">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29953">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="29849">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="29813" relation="include">
        </childnode>
        <childnode refid="29850" relation="include">
        </childnode>
      </node>
      <node id="30006">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.H</label>
        <link refid="AMReX__BlockMutex_8H"/>
        <childnode refid="30007" relation="include">
        </childnode>
        <childnode refid="30008" relation="include">
        </childnode>
      </node>
      <node id="30002">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="29873" relation="include">
        </childnode>
        <childnode refid="30003" relation="include">
        </childnode>
      </node>
      <node id="29876">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.H</label>
        <link refid="AMReX__EB__STL__utils_8H"/>
        <childnode refid="29877" relation="include">
        </childnode>
      </node>
      <node id="29909">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="29739">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="29740" relation="include">
        </childnode>
      </node>
      <node id="29999">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="29866" relation="include">
        </childnode>
        <childnode refid="29868" relation="include">
        </childnode>
      </node>
      <node id="29754">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="29723" relation="include">
        </childnode>
        <childnode refid="29755" relation="include">
        </childnode>
        <childnode refid="29758" relation="include">
        </childnode>
        <childnode refid="29747" relation="include">
        </childnode>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29759" relation="include">
        </childnode>
        <childnode refid="29760" relation="include">
        </childnode>
        <childnode refid="29761" relation="include">
        </childnode>
        <childnode refid="29787" relation="include">
        </childnode>
        <childnode refid="29812" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
        <childnode refid="29806" relation="include">
        </childnode>
        <childnode refid="29808" relation="include">
        </childnode>
      </node>
      <node id="29881">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="29829" relation="include">
        </childnode>
        <childnode refid="29882" relation="include">
        </childnode>
      </node>
      <node id="29991">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="29771" relation="include">
        </childnode>
      </node>
      <node id="29726">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29750" relation="include">
        </childnode>
        <childnode refid="29751" relation="include">
        </childnode>
        <childnode refid="29923" relation="include">
        </childnode>
        <childnode refid="29924" relation="include">
        </childnode>
        <childnode refid="29997" relation="include">
        </childnode>
        <childnode refid="29964" relation="include">
        </childnode>
        <childnode refid="29999" relation="include">
        </childnode>
        <childnode refid="30000" relation="include">
        </childnode>
      </node>
      <node id="30022">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
        <childnode refid="29865" relation="include">
        </childnode>
      </node>
      <node id="29848">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="29935">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="29997">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="29933" relation="include">
        </childnode>
        <childnode refid="29998" relation="include">
        </childnode>
        <childnode refid="29754" relation="include">
        </childnode>
        <childnode refid="29953" relation="include">
        </childnode>
        <childnode refid="29954" relation="include">
        </childnode>
        <childnode refid="29955" relation="include">
        </childnode>
        <childnode refid="29957" relation="include">
        </childnode>
        <childnode refid="29960" relation="include">
        </childnode>
        <childnode refid="29961" relation="include">
        </childnode>
        <childnode refid="29962" relation="include">
        </childnode>
        <childnode refid="29872" relation="include">
        </childnode>
        <childnode refid="29980" relation="include">
        </childnode>
      </node>
      <node id="29968">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="29969" relation="include">
        </childnode>
      </node>
      <node id="29894">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="29866">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="29863" relation="include">
        </childnode>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="29868" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
        <childnode refid="29871" relation="include">
        </childnode>
      </node>
      <node id="29723">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="29969">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="29788" relation="include">
        </childnode>
        <childnode refid="29970" relation="include">
        </childnode>
      </node>
      <node id="29724">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="29825">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="29737">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="29782">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="29740" relation="include">
        </childnode>
        <childnode refid="29783" relation="include">
        </childnode>
        <childnode refid="29784" relation="include">
        </childnode>
      </node>
      <node id="30008">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Random.cpp</label>
        <link refid="AMReX__Random_8cpp"/>
      </node>
      <node id="29916">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="29897">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="29978">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="29883" relation="include">
        </childnode>
        <childnode refid="29979" relation="include">
        </childnode>
      </node>
      <node id="29870">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="29794">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="29766" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29771" relation="include">
        </childnode>
        <childnode refid="29795" relation="include">
        </childnode>
        <childnode refid="29796" relation="include">
        </childnode>
      </node>
      <node id="29743">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="29788">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="29910">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="29911" relation="include">
        </childnode>
      </node>
      <node id="30042">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H</label>
        <link refid="AMReX__SparseBins_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="30001">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="29845">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="29846" relation="include">
        </childnode>
        <childnode refid="29847" relation="include">
        </childnode>
        <childnode refid="29851" relation="include">
        </childnode>
      </node>
      <node id="29929">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="29799">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="30007">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.cpp</label>
        <link refid="AMReX__BlockMutex_8cpp"/>
      </node>
      <node id="29911">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="29912">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="29807">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="29777" relation="include">
        </childnode>
      </node>
      <node id="30015">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="30016" relation="include">
        </childnode>
      </node>
      <node id="29883">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="30044">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuDevice.cpp</label>
        <link refid="AMReX__GpuDevice_8cpp"/>
      </node>
      <node id="30010">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DArena.cpp</label>
        <link refid="AMReX__DArena_8cpp"/>
      </node>
      <node id="29871">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="29803">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="29998">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="29972">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="29814">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="30005">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.cpp</label>
        <link refid="AMReX__EBToPVD_8cpp"/>
      </node>
      <node id="29805">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="29834">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="29973">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="29861">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="29928">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="29758" relation="include">
        </childnode>
      </node>
      <node id="29830">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="29819" relation="include">
        </childnode>
        <childnode refid="29831" relation="include">
        </childnode>
        <childnode refid="29756" relation="include">
        </childnode>
        <childnode refid="29822" relation="include">
        </childnode>
        <childnode refid="29834" relation="include">
        </childnode>
      </node>
      <node id="29872">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="29824">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="29825" relation="include">
        </childnode>
      </node>
      <node id="29889">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="29890" relation="include">
        </childnode>
      </node>
      <node id="29841">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="29842" relation="include">
        </childnode>
        <childnode refid="29843" relation="include">
        </childnode>
        <childnode refid="29860" relation="include">
        </childnode>
        <childnode refid="29791" relation="include">
        </childnode>
      </node>
      <node id="29996">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="29778" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29906" relation="include">
        </childnode>
        <childnode refid="29905" relation="include">
        </childnode>
      </node>
      <node id="29791">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="29792" relation="include">
        </childnode>
        <childnode refid="29804" relation="include">
        </childnode>
        <childnode refid="29803" relation="include">
        </childnode>
        <childnode refid="29806" relation="include">
        </childnode>
        <childnode refid="29808" relation="include">
        </childnode>
      </node>
      <node id="29785">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="29786" relation="include">
        </childnode>
      </node>
      <node id="29727">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29729" relation="include">
        </childnode>
        <childnode refid="29745" relation="include">
        </childnode>
        <childnode refid="29747" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
      </node>
      <node id="29976">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="29835">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="29836" relation="include">
        </childnode>
        <childnode refid="29837" relation="include">
        </childnode>
      </node>
      <node id="29721">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="29722" relation="include">
        </childnode>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="30006" relation="include">
        </childnode>
        <childnode refid="30009" relation="include">
        </childnode>
        <childnode refid="29935" relation="include">
        </childnode>
        <childnode refid="29936" relation="include">
        </childnode>
        <childnode refid="29937" relation="include">
        </childnode>
        <childnode refid="30010" relation="include">
        </childnode>
        <childnode refid="30011" relation="include">
        </childnode>
        <childnode refid="29752" relation="include">
        </childnode>
        <childnode refid="30012" relation="include">
        </childnode>
        <childnode refid="30013" relation="include">
        </childnode>
        <childnode refid="29948" relation="include">
        </childnode>
        <childnode refid="29953" relation="include">
        </childnode>
        <childnode refid="29954" relation="include">
        </childnode>
        <childnode refid="29955" relation="include">
        </childnode>
        <childnode refid="29957" relation="include">
        </childnode>
        <childnode refid="30014" relation="include">
        </childnode>
        <childnode refid="30015" relation="include">
        </childnode>
        <childnode refid="30008" relation="include">
        </childnode>
        <childnode refid="30018" relation="include">
        </childnode>
        <childnode refid="30019" relation="include">
        </childnode>
        <childnode refid="30020" relation="include">
        </childnode>
        <childnode refid="30040" relation="include">
        </childnode>
        <childnode refid="30041" relation="include">
        </childnode>
        <childnode refid="29952" relation="include">
        </childnode>
        <childnode refid="29901" relation="include">
        </childnode>
        <childnode refid="29903" relation="include">
        </childnode>
        <childnode refid="30043" relation="include">
        </childnode>
        <childnode refid="29906" relation="include">
        </childnode>
        <childnode refid="29905" relation="include">
        </childnode>
        <childnode refid="30042" relation="include">
        </childnode>
        <childnode refid="29783" relation="include">
        </childnode>
      </node>
      <node id="29903">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="29904" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29789">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="29790" relation="include">
        </childnode>
      </node>
      <node id="29865">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="29866" relation="include">
        </childnode>
        <childnode refid="29872" relation="include">
        </childnode>
        <childnode refid="29873" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
      </node>
      <node id="29742">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="29743" relation="include">
        </childnode>
      </node>
      <node id="30017">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H</label>
        <link refid="AMReX__StructOfArrays_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
      </node>
      <node id="29862">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="29863" relation="include">
        </childnode>
        <childnode refid="29864" relation="include">
        </childnode>
      </node>
      <node id="29856">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="30011">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="29787">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="29788" relation="include">
        </childnode>
        <childnode refid="29789" relation="include">
        </childnode>
        <childnode refid="29791" relation="include">
        </childnode>
      </node>
      <node id="30031">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29847">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="29848" relation="include">
        </childnode>
        <childnode refid="29849" relation="include">
        </childnode>
      </node>
      <node id="29779">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="29740" relation="include">
        </childnode>
        <childnode refid="29780" relation="include">
        </childnode>
        <childnode refid="29778" relation="include">
        </childnode>
        <childnode refid="29781" relation="include">
        </childnode>
        <childnode refid="29782" relation="include">
        </childnode>
        <childnode refid="29785" relation="include">
        </childnode>
      </node>
      <node id="29850">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="29988">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="29984" relation="include">
        </childnode>
      </node>
      <node id="29774">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="29885">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="29808">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="29809" relation="include">
        </childnode>
        <childnode refid="29773" relation="include">
        </childnode>
        <childnode refid="29810" relation="include">
        </childnode>
      </node>
      <node id="30036">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="29963">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="29846" relation="include">
        </childnode>
      </node>
      <node id="29752">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29753" relation="include">
        </childnode>
        <childnode refid="29913" relation="include">
        </childnode>
        <childnode refid="29754" relation="include">
        </childnode>
        <childnode refid="29914" relation="include">
        </childnode>
        <childnode refid="29815" relation="include">
        </childnode>
        <childnode refid="29915" relation="include">
        </childnode>
        <childnode refid="29917" relation="include">
        </childnode>
        <childnode refid="29921" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
        <childnode refid="29922" relation="include">
        </childnode>
      </node>
      <node id="29828">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="29822">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="29732">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29734" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29764">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="29765" relation="include">
        </childnode>
      </node>
      <node id="29992">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="29772" relation="include">
        </childnode>
        <childnode refid="29773" relation="include">
        </childnode>
        <childnode refid="29774" relation="include">
        </childnode>
      </node>
      <node id="29786">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29927">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="29928" relation="include">
        </childnode>
      </node>
      <node id="29751">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="29752" relation="include">
        </childnode>
      </node>
      <node id="29761">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29747" relation="include">
        </childnode>
        <childnode refid="29759" relation="include">
        </childnode>
        <childnode refid="29762" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
        <childnode refid="29766" relation="include">
        </childnode>
        <childnode refid="29767" relation="include">
        </childnode>
        <childnode refid="29768" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29770" relation="include">
        </childnode>
        <childnode refid="29771" relation="include">
        </childnode>
        <childnode refid="29772" relation="include">
        </childnode>
        <childnode refid="29773" relation="include">
        </childnode>
        <childnode refid="29774" relation="include">
        </childnode>
        <childnode refid="29775" relation="include">
        </childnode>
        <childnode refid="29776" relation="include">
        </childnode>
        <childnode refid="29777" relation="include">
        </childnode>
        <childnode refid="29778" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
      </node>
      <node id="29869">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="29940">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="29738">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="29986">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29987" relation="include">
        </childnode>
        <childnode refid="29988" relation="include">
        </childnode>
      </node>
      <node id="30025">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="29867" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
      </node>
      <node id="30004">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.H</label>
        <link refid="AMReX__EBToPVD_8H"/>
        <childnode refid="30005" relation="include">
        </childnode>
        <childnode refid="29871" relation="include">
        </childnode>
      </node>
      <node id="30000">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="29971" relation="include">
        </childnode>
        <childnode refid="29865" relation="include">
        </childnode>
        <childnode refid="29874" relation="include">
        </childnode>
        <childnode refid="29749" relation="include">
        </childnode>
        <childnode refid="30001" relation="include">
        </childnode>
        <childnode refid="30002" relation="include">
        </childnode>
        <childnode refid="29870" relation="include">
        </childnode>
        <childnode refid="29975" relation="include">
        </childnode>
        <childnode refid="29789" relation="include">
        </childnode>
        <childnode refid="29970" relation="include">
        </childnode>
        <childnode refid="29976" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29977" relation="include">
        </childnode>
        <childnode refid="30004" relation="include">
        </childnode>
        <childnode refid="29922" relation="include">
        </childnode>
        <childnode refid="29986" relation="include">
        </childnode>
      </node>
      <node id="29877">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.cpp</label>
        <link refid="AMReX__EB__STL__utils_8cpp"/>
      </node>
      <node id="29967">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="29882">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="29883" relation="include">
        </childnode>
        <childnode refid="29884" relation="include">
        </childnode>
        <childnode refid="29886" relation="include">
        </childnode>
      </node>
      <node id="29902">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="29851">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="29791" relation="include">
        </childnode>
        <childnode refid="29852" relation="include">
        </childnode>
      </node>
      <node id="29778">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1detail">amrex::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_GPU_LAUNCH_FUNCTS_C_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_GPU_LAUNCH_FUNCTS_C_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="10" refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/>N<sp/>i)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0))</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/>N<sp/>i)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref>{}))</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref>{});</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="26" refid="namespaceamrex_1_1detail_1ac02794506750edcf0d39acedf4ddb19d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0,<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref>{}))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k,<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref>{});</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="42" refid="namespaceamrex_1_1detail_1a58cd3a1197191b66f72a97cbd1d11544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>T<sp/>n)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0,0))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>T<sp/>n)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0,0,<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref>{}))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k,n,<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref>{});</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="58" refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">launch</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/>L&amp;&amp;<sp/>f,<sp/>std::size_t<sp/></highlight><highlight class="comment">/*shared_mem_bytes*/</highlight><highlight class="normal">=0)<sp/>noexcept</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>f(n);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="64" refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">detail::call_f</ref>(f,i);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="72" refid="namespaceamrex_1a58f6305adbac638674782f274ce8bb80" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(n,<sp/>std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="78" refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">detail::call_f</ref>(f,i);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="87" refid="namespaceamrex_1a3402f6ed86316371198e6c2ff17ac5ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(n,<sp/>std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="93" refid="namespaceamrex_1a6daa7b128f7df0ad214eb964c3467cdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">detail::call_f</ref>(f,i,j,k);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="105" refid="namespaceamrex_1a897ec22faf83646115076a4520a5abbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box,<sp/>std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="111" refid="namespaceamrex_1ac96f4d9630c4ea1445766061b3fed3f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">detail::call_f</ref>(f,i,j,k);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="124" refid="namespaceamrex_1a4508b95a3ecc4f15b0b66d7520981f4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box,<sp/>std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="130" refid="namespaceamrex_1a27afa434166c6cd6925b63f2729f1e76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">detail::call_f</ref>(f,i,j,k,n);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="144" refid="namespaceamrex_1a71600bb098640c24e93a816035b4a254" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box,<sp/>ncomp,<sp/>std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="150" refid="namespaceamrex_1a53fa136d7eac223e2fad334c8b15e138" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">detail::call_f</ref>(f,i,j,k,n);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="165" refid="namespaceamrex_1a9744823a175d8d361c9ad0f48d6d2ca7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box,<sp/>ncomp,<sp/>std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="171" refid="namespaceamrex_1a88a534ac7f6788df74e2a3b69f36d5ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="178" refid="namespaceamrex_1ac4fca0bbf870bf63e6410d5bfb8f6cec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(box1,<sp/>box2,<sp/>std::forward&lt;L1&gt;(f1),<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="184" refid="namespaceamrex_1aa3d67648733b6d47b6f579e9f157ee11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box3,<sp/>std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="192" refid="namespaceamrex_1a12ef8f8c8150215890fcf56e024ffe54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,<sp/>box2,<sp/>box3,<sp/>std::forward&lt;L1&gt;(f1),<sp/>std::forward&lt;L2&gt;(f2),<sp/>std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="200" refid="namespaceamrex_1a3410871e25fe94c964b94bdc5a5af600" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,<sp/>ncomp1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box2,<sp/>ncomp2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="210" refid="namespaceamrex_1aeeba5c10b16807384e4d6fbc84843f28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),box2,ncomp2,std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="221" refid="namespaceamrex_1a7421bdf4eb985c8246d56cb401862eec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,<sp/>ncomp1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box2,<sp/>ncomp2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box3,<sp/>ncomp3,<sp/>std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="234" refid="namespaceamrex_1a24ce492df29f97eea1da6d4d6a0e5bdc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,ncomp2,std::forward&lt;L2&gt;(f2),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box3,ncomp3,std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="245" refid="namespaceamrex_1a10d0f241ad4d9d28d20fa84630e7c476" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="252" refid="namespaceamrex_1a3176ade9b263bdb8eff5d6899c1b44bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,box2,f1,f2);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="258" refid="namespaceamrex_1a723dc684ea9fb13ba007143c904d0b45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box3,<sp/>std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="266" refid="namespaceamrex_1ae29d0bf15408a1011f1efe2268bc02c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,box2,box3,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2),std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="274" refid="namespaceamrex_1a6f268bb50cb57088d5321ed0c04c61b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,<sp/>ncomp1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box2,<sp/>ncomp2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="284" refid="namespaceamrex_1ad72c9207638dee72b9c2ccedc35868d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,ncomp2,std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="296" refid="namespaceamrex_1ac9332ec3412332457a7273412131b24a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,<sp/>ncomp1,<sp/>std::forward&lt;L1&gt;(f1));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box2,<sp/>ncomp2,<sp/>std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box3,<sp/>ncomp3,<sp/>std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="309" refid="namespaceamrex_1a410d6b1d4212f6b2cd1166ab26a693c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,<sp/>ncomp1,<sp/>std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,<sp/>ncomp2,<sp/>std::forward&lt;L2&gt;(f2),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box3,<sp/>ncomp3,<sp/>std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="321" refid="namespaceamrex_1a5a1395d7a528a4346d3abbbf457bf078" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5a1395d7a528a4346d3abbbf457bf078" kindref="member">FabReduce</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>N<sp/>ncomp,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>init_val,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>std::size_t<sp/></highlight><highlight class="comment">/*shared_mem_bytes*/</highlight><highlight class="normal">=0)<sp/>noexcept</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1(i,j,k,n,&amp;r);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>f2(r);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="338" refid="namespaceamrex_1a6fbc9ce751f84cb6447998a0ef18da98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5a1395d7a528a4346d3abbbf457bf078" kindref="member">FabReduce</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>init_val,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>std::size_t<sp/></highlight><highlight class="comment">/*shared_mem_bytes*/</highlight><highlight class="normal">=0)<sp/>noexcept</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1(i,j,k,&amp;r);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>f2(r);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="354" refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">VecReduce</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>init_val,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>std::size_t<sp/></highlight><highlight class="comment">/*shared_mem_bytes*/</highlight><highlight class="normal">=0)<sp/>noexcept</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1(i,&amp;r);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>f2(r);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="365" refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(n,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="371" refid="namespaceamrex_1ada9330c731a48fc44471ebc3c6487231" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="377" refid="namespaceamrex_1a0cccddb84fe8782da9ad7a41659db4a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box,ncomp,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="383" refid="namespaceamrex_1a8a34ce92315500abfec2cd2f5a6e5874" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,box2,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="389" refid="namespaceamrex_1a291ee384b7b8dfe9bbfd673ea01e1116" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,box2,box3,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2),std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="398" refid="namespaceamrex_1a868eed399e45cf6ec37ef16d6a3fe52c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),box2,ncomp2,std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="408" refid="namespaceamrex_1a5203186b0e34bf6cea673cd5a84b5a65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,ncomp2,std::forward&lt;L2&gt;(f2),</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box3,ncomp3,std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="418" refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(n,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="424" refid="namespaceamrex_1a674b3cdfb298f33ab148c79b1a8f864e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="430" refid="namespaceamrex_1aa8e17ba59ac39be36ae9b30b2a79a9a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box,ncomp,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="436" refid="namespaceamrex_1ab2dc88579a70cfe068381de5523e4e6a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,box2,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="442" refid="namespaceamrex_1ab85f87612e22364c1d3e310670c9fef0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,box2,box3,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2),std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="451" refid="namespaceamrex_1ac4cd096351a9069431300195029519db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),box2,ncomp2,std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="461" refid="namespaceamrex_1a6857dbe043af9dfc73a2bc572b14e918" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,ncomp2,std::forward&lt;L2&gt;(f2),</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box3,ncomp3,std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="471" refid="namespaceamrex_1aaa43ade38dff5d2e3eea8085d5c2e99e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(n,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="477" refid="namespaceamrex_1ae691b4150bbebc8fa1a0ad685c42a15b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="483" refid="namespaceamrex_1ac8ee3123268c4e941ac44214a7e5f9f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box,ncomp,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="489" refid="namespaceamrex_1afff3ae3db80c80c67b8a89f72c7fad01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,box2,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="495" refid="namespaceamrex_1a49077d5108dc85db1db7938f039a778b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,box2,box3,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2),std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="505" refid="namespaceamrex_1a35d0951b57ea7c93629e68e42c3a6807" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),box2,ncomp2,std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="516" refid="namespaceamrex_1aa928415b2afda06373493941877c8daa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fbd6b37b492537aed607bfd14595409" kindref="member">HostDeviceParallelFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">ParallelFor</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,ncomp2,std::forward&lt;L2&gt;(f2),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box3,ncomp3,std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="527" refid="namespaceamrex_1aad398246e65a7d7102beb5169e03a04d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(n,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="533" refid="namespaceamrex_1a5b26a31faefa1749b9fb899d1818244b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="539" refid="namespaceamrex_1a3b9faf23e1d7db427410543fb90dfe54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box,ncomp,std::forward&lt;L&gt;(f));</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2&gt;</highlight></codeline>
<codeline lineno="545" refid="namespaceamrex_1a5484386a731a820195e419b9ff0d0fc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,box2,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3&gt;</highlight></codeline>
<codeline lineno="551" refid="namespaceamrex_1aec488f9795341de5cb922ba7ad08066c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1&amp;&amp;<sp/>f1,<sp/>L2&amp;&amp;<sp/>f2,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,box2,box3,std::forward&lt;L1&gt;(f1),std::forward&lt;L2&gt;(f2),std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="561" refid="namespaceamrex_1a440c08a8f25cc712e02cefb709238206" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2)<sp/>noexcept</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),box2,ncomp2,std::forward&lt;L2&gt;(f2));</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L3,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M1=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T1&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M2=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T2&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M3=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;T3&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="572" refid="namespaceamrex_1ad6c49d13c537803899b8c4cc0cce7516" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a7272329c4c5b06cda2ee47e4ee3f46e2" kindref="member">HostDeviceFor</ref><sp/>(<ref refid="classamrex_1_1Gpu_1_1KernelInfo" kindref="compound">Gpu::KernelInfo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box1,<sp/>T1<sp/>ncomp1,<sp/>L1&amp;&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box2,<sp/>T2<sp/>ncomp2,<sp/>L2&amp;&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box3,<sp/>T3<sp/>ncomp3,<sp/>L3&amp;&amp;<sp/>f3)<sp/>noexcept</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a254b157995b540641c02a74d2ad65ebe" kindref="member">For</ref>(box1,ncomp1,std::forward&lt;L1&gt;(f1),</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box2,ncomp2,std::forward&lt;L2&gt;(f2),</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box3,ncomp3,std::forward&lt;L3&gt;(f3));</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="583" refid="namespaceamrex_1a2de21a574a15104cfa7e94e52dd6ab67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2de21a574a15104cfa7e94e52dd6ab67" kindref="member">ParallelForRNG</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,<ref refid="structamrex_1_1RandomEngine" kindref="compound">RandomEngine</ref>{});</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="591" refid="namespaceamrex_1a6b36710af5d429b6ee50b3d6ff67c240" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2de21a574a15104cfa7e94e52dd6ab67" kindref="member">ParallelForRNG</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k,<ref refid="structamrex_1_1RandomEngine" kindref="compound">RandomEngine</ref>{});</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="603" refid="namespaceamrex_1ae0528e001d631f2240d2d111fed2607d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2de21a574a15104cfa7e94e52dd6ab67" kindref="member">ParallelForRNG</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k,n,<ref refid="structamrex_1_1RandomEngine" kindref="compound">RandomEngine</ref>{});</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H"/>
  </compounddef>
</doxygen>
