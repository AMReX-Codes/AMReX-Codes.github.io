<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1MLMGBndryT" kind="class" language="C++" prot="public">
    <compoundname>amrex::MLMGBndryT</compoundname>
    <basecompoundref refid="classamrex_1_1InterpBndryDataT" prot="public" virt="non-virtual">amrex::InterpBndryDataT&lt; MF &gt;</basecompoundref>
    <includes refid="AMReX__MLMGBndry_8H" local="no">AMReX_MLMGBndry.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1MLMGBndryT_1a15ee28dffde2cfba2184e2364fc2ed8b" prot="public" static="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref>, 2 *<ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref> &gt;</type>
        <definition>using amrex::MLMGBndryT&lt; MF &gt;::BCTuple =  Array&lt;BoundCond,2*BL_SPACEDIM&gt;</definition>
        <argsstring></argsstring>
        <name>BCTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="15" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGBndryT_1a4c838dd743d5d205ae6efa4e880faf8b" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1BndryDataT" kindref="compound">BndryDataT</ref>&lt; MF &gt;::<ref refid="classamrex_1_1BndryDataT_1a635d69fddbe9b8785a9f16e6874273d0" kindref="member">RealTuple</ref></type>
        <definition>using amrex::MLMGBndryT&lt; MF &gt;::RealTuple =  typename BndryDataT&lt;MF&gt;::RealTuple</definition>
        <argsstring></argsstring>
        <name>RealTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="16" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1ae61807ee9974355077b5bc78d35895d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGBndryT&lt; MF &gt;::MLMGBndryT</definition>
        <argsstring>(const BoxArray &amp;_grids, const DistributionMapping &amp;_dmap, int _ncomp, const Geometry &amp;_geom)</argsstring>
        <name>MLMGBndryT</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>_grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>_dmap</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_ncomp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>_geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1a5be1bbaf9ed18dc6066dba2cfd41c105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGBndryT&lt; MF &gt;::~MLMGBndryT</definition>
        <argsstring>()=default</argsstring>
        <name>~MLMGBndryT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1aee4434da8700f0e3f1b9677350b5431e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGBndryT&lt; MF &gt;::MLMGBndryT</definition>
        <argsstring>(MLMGBndryT&lt; MF &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>MLMGBndryT</name>
        <param>
          <type><ref refid="classamrex_1_1MLMGBndryT" kindref="compound">MLMGBndryT</ref>&lt; MF &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1a6e0eb064c1f1e0e1f440566f0ca05cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGBndryT&lt; MF &gt;::MLMGBndryT</definition>
        <argsstring>(const MLMGBndryT&lt; MF &gt; &amp;rhs)=delete</argsstring>
        <name>MLMGBndryT</name>
        <param>
          <type>const <ref refid="classamrex_1_1MLMGBndryT" kindref="compound">MLMGBndryT</ref>&lt; MF &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1ad1673d011d8870ba9f46ace36c6d66d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGBndryT" kindref="compound">MLMGBndryT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLMGBndryT&lt;MF&gt;&amp; amrex::MLMGBndryT&lt; MF &gt;::operator=</definition>
        <argsstring>(const MLMGBndryT&lt; MF &gt; &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MLMGBndryT" kindref="compound">MLMGBndryT</ref>&lt; MF &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="25" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1aa8a439394be7cfb8b38f2d6e3b1a465b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGBndryT" kindref="compound">MLMGBndryT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLMGBndryT&lt;MF&gt;&amp; amrex::MLMGBndryT&lt; MF &gt;::operator=</definition>
        <argsstring>(MLMGBndryT&lt; MF &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1MLMGBndryT" kindref="compound">MLMGBndryT</ref>&lt; MF &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="26" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1a5bbc49856950306b611947cac8a5867a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGBndryT&lt; MF &gt;::setLOBndryConds</definition>
        <argsstring>(const Vector&lt; Array&lt; LinOpBCType, AMREX_SPACEDIM &gt; &gt; &amp;lo, const Vector&lt; Array&lt; LinOpBCType, AMREX_SPACEDIM &gt; &gt; &amp;hi, int ratio, const RealVect &amp;a_loc)</argsstring>
        <name>setLOBndryConds</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; LinOpBCType, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; LinOpBCType, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>hi</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref> &amp;</type>
          <declname>a_loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="28" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" bodystart="51" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1MLMGBndryT_1a2cd0153d78d66eedbefd62318389cd73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGBndryT&lt; MF &gt;::setBoxBC</definition>
        <argsstring>(RealTuple &amp;bloc, BCTuple &amp;bctag, const Box &amp;bx, const Box &amp;domain, const Array&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;lo, const Array&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;hi, const Real *dx, int ratio, const RealVect &amp;interior_bloc, const Array&lt; Real, AMREX_SPACEDIM &gt; &amp;domain_bloc_lo, const Array&lt; Real, AMREX_SPACEDIM &gt; &amp;domain_bloc_hi, const GpuArray&lt; int, AMREX_SPACEDIM &gt; &amp;is_periodic)</argsstring>
        <name>setBoxBC</name>
        <param>
          <type><ref refid="classamrex_1_1BndryDataT_1a635d69fddbe9b8785a9f16e6874273d0" kindref="member">RealTuple</ref> &amp;</type>
          <declname>bloc</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGBndryT_1a15ee28dffde2cfba2184e2364fc2ed8b" kindref="member">BCTuple</ref> &amp;</type>
          <declname>bctag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref> &amp;</type>
          <declname>interior_bloc</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; Real, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>domain_bloc_lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; Real, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>domain_bloc_hi</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>is_periodic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="32" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" bodystart="85" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::InterpBndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1InterpBndryDataT"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MLMGBndryT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGBndryT"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="44" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="15">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>K</label>
      </node>
      <node id="16">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="11">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="11" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>T</label>
      </node>
      <node id="55">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>Real</label>
      </node>
      <node id="38">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::GpuArray&lt; float, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="27">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="49" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="34">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="11" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::InterpBndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1InterpBndryDataT"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="8">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MLMGBndryT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGBndryT"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="20" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="11" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="5" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="39">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="40" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="19">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="20" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="40">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="46">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="33" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="18">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>roundoff_hi_f</edgelabel>
          <edgelabel>roundoff_lo_f</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>roundoff_hi_d</edgelabel>
          <edgelabel>roundoff_lo_d</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="24">
        <label>amrex::GpuArray&lt; double, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="25">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="34" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="44">
        <label>std::string</label>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" line="10" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H" bodystart="12" bodyend="41"/>
    <listofallmembers>
      <member refid="classamrex_1_1BndryDataT_1af7bb1a70a4e8bb07247e07f9de03c3ab" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bcloc</name></member>
      <member refid="classamrex_1_1BndryDataT_1a043be8a7bc1486ff3e42dde8d785023c" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bcond</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1a15ee28dffde2cfba2184e2364fc2ed8b" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BCTuple</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a885dd729158b9a96cc833b5a291be3bf" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndry</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae3a893425723763871fed2b8f6727abf" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1BndryDataT_1a06c546aa81b72020efdddf748a5d0164" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1BndryDataT_1a0b38594755407961cf669679bd5f2827" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae449a1eee7596c48ad129d92e02e79c4" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1a48956cc70261a5b28ab7a2559d2df611" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1a0997f3f226667e9d93136128fcfaf798" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1af48fcbe60dd847da0a52181bf10ef7aa" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1BndryDataT_1a311921844eeca8b18621c7199a86729b" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1BndryDataT_1a61899ec60817d524fd886e0b6d9f361a" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndryMasks</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a6723dc52b95f787f439cd19109d41086" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a669440b13ff12d665b4a732a77aa6658" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a2922ba0d4eff802a4460e33c950a1ad9" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a13afc3531affff7230330514f2b0725a" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae0d643450444b8374f35e761564d075b" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>bndryValues</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a50efdc257f760e9e25399c37af9e6cc1" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>boxes</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a691927d0b6e40f9923bacd565c590a91" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>clear</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a859e565c8590d0c8dbe88bede09a35d6" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>Copy</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a1c8fdfc61237f7b6a8d6c040d8daadf2" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>copyFrom</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a1a2056eb03f81ff6a627850c9b05e2c3" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>covered</name></member>
      <member refid="classamrex_1_1BndryDataT_1a90495c408f01aebfc13f916272d48c5c" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a9f157b615e14c68633617c6e2031d027" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::MLMGBndryT</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1aac2ef4b2b53e50f002404a507fa667c6" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::MLMGBndryT</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a092a134a6f7fd3ba7abb9a0922d08b6d" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae4436ce0d60dc60cd15ff3ab3c2ed7a7" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>geom</name></member>
      <member refid="classamrex_1_1BndryDataT_1aac632701a65ebb8b2d429ee83da1e34e" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>getDomain</name></member>
      <member refid="classamrex_1_1BndryDataT_1a7ae9f7791272299abb7f27b53208288a" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>getGeom</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a3661eefa8a7bc8f810c39fdc6f8fb350" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>grids</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a258eb38558243a71923bbc3fc82990ba" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>IBD_max_order_DEF</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a71ecda5638e531eb2f2c81496b3a3422" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1ab3867a4fd0a4d8e7eba5d2847576bd74" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1aca339f6cfefd2b60592adb0bb79a01ea" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a58930dee10ca630b2f499dc6f20aa0ac" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ae8f5e1195457dc7f2204abbcaf2fe148" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>linComb</name></member>
      <member refid="classamrex_1_1BndryDataT_1a1c152f39fdeb4881636df629cc0d8077" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>m_defined</name></member>
      <member refid="classamrex_1_1BndryDataT_1adabe55330d4668477240acc170ab6032" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1BndryDataT_1abb734566f5eab0761ad80aec4f7dfa3d" prot="protected" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>masks</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>MaskVal</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1ae61807ee9974355077b5bc78d35895d8" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>MLMGBndryT</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1aee4434da8700f0e3f1b9677350b5431e" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>MLMGBndryT</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1a6e0eb064c1f1e0e1f440566f0ca05cf5" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>MLMGBndryT</name></member>
      <member refid="classamrex_1_1BndryDataT_1a1052f19a1566840110263a9ebe9c3587" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>nComp</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a08dba959557635494bd0b8ca5e561288" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>not_covered</name></member>
      <member refid="classamrex_1_1BndryDataT_1af24fa42fa7ee1bcbb9fb775c5ab192d6" prot="private" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>NTangHalfWidth</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a139601a0038d30ced2a28a0e4f6763e7" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>NumMaskVals</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a305048fb353b663f23b3562bc793d4d9" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1ad1673d011d8870ba9f46ace36c6d66d5" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1aa8a439394be7cfb8b38f2d6e3b1a465b" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a86e3caeebf11d0a7786aedf4c4e2281b" prot="public" virt="non-virtual" ambiguityscope="amrex::InterpBndryDataT::"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1ac8f05912699e2607b569431b1c608d36" prot="public" virt="non-virtual" ambiguityscope="amrex::InterpBndryDataT::"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae7e3bc077f7e5695cfef56a57075d164" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryDataT::"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryDataT_1a536257808c5792850bdeaf82cf76f85d" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryDataT::"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a453a8fc604e77bc263b7ea91bf8920d3" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a3d277d77c5e0fb1bb42e5834196c6783" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::MLMGBndryT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryDataT_1aa362341b91354c3efb2b604549e3319c" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryDataT_1a2d7ae73be4e090c02d93dee4b5d22370" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a60efc76c5d4cabbf71077b1aa4700077" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>outside_domain</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a5176cafd217bf9069ed83feba52d71c2" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>plus</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a58d2309f0eb636417e763b5a1e74599c" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>plusFrom</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ad918f23e64a2d59ba453b09617e5ac15" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>read</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1a4c838dd743d5d205ae6efa4e880faf8b" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>RealTuple</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a2bcedbc8be8b49fe6678c2d2d2127d42" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1BndryDataT_1aa8cb046e06f3de6cb1db4be12ec87010" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBoundCond</name></member>
      <member refid="classamrex_1_1BndryDataT_1afd3fdc202fd316dff91863242679263f" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBoundCond</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac308c460f9c083f2fd2326ca62cd1811" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBoundLoc</name></member>
      <member refid="classamrex_1_1BndryDataT_1a85f08d239e69b27930ba8ba4e4c163c1" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBoundLoc</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1a2cd0153d78d66eedbefd62318389cd73" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBoxBC</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a31f3e491669d858c7c73e04d2ad6cb00" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setBoxes</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a772640cb8d0030c7b6e69714d055d8e3" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setHomogValues</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1a5bbc49856950306b611947cac8a5867a" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setLOBndryConds</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a24af38cde0573af0a4557b5e165690ff" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setPhysBndryValues</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a005714dcfffa4635a7261f525892ac37" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BndryDataT_1acf8b7ee0ecbe4e7a753b470251c106d0" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>setValue</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a132f07148e07fdae3f891ab726e467fb" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>size</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a961ddc9421552e67d0397b7523e6280e" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>updateBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1ad2de450062127ddfed6337961fdcf3c0" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>value_type</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a18c2a8b193ac63488ae4d1ef4acad7b8" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>write</name></member>
      <member refid="classamrex_1_1BndryDataT_1a5516fe31e846fc0e58ac78628938940b" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>~BndryDataT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a2d267bc0d735366bae8c6843d4cc79e3" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>~BndryRegisterT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a62be51bb2441bc950b73e4ced3870ed9" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>~InterpBndryDataT</name></member>
      <member refid="classamrex_1_1MLMGBndryT_1a5be1bbaf9ed18dc6066dba2cfd41c105" prot="public" virt="non-virtual"><scope>amrex::MLMGBndryT</scope><name>~MLMGBndryT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
