<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__Particle_8H" kind="file" language="C++">
    <compoundname>AMReX_Particle.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes local="no">string</includes>
    <includes refid="AMReX__REAL_8H" local="no">AMReX_REAL.H</includes>
    <includes refid="AMReX__FArrayBox_8H" local="no">AMReX_FArrayBox.H</includes>
    <includes refid="AMReX__IntVect_8H" local="no">AMReX_IntVect.H</includes>
    <includes refid="AMReX__RealVect_8H" local="no">AMReX_RealVect.H</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__Geometry_8H" local="no">AMReX_Geometry.H</includes>
    <includedby refid="AMReX__ArrayOfStructs_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <includedby refid="AMReX__ParticleTile_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</includedby>
    <incdepgraph>
      <node id="78175">
        <label>list</label>
      </node>
      <node id="78171">
        <label>atomic</label>
      </node>
      <node id="78174">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78128" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78175" relation="include">
        </childnode>
        <childnode refid="78094" relation="include">
        </childnode>
      </node>
      <node id="78179">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
      </node>
      <node id="78066">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78068" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
      </node>
      <node id="78139">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78144">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78092">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78165">
        <label>iomanip</label>
      </node>
      <node id="78084">
        <label>functional</label>
      </node>
      <node id="78088">
        <label>limits</label>
      </node>
      <node id="78114">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
      </node>
      <node id="78101">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78076" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
      </node>
      <node id="78152">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
      </node>
      <node id="78121">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78122" relation="include">
        </childnode>
        <childnode refid="78101" relation="include">
        </childnode>
        <childnode refid="78106" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
      </node>
      <node id="78167">
        <label>iterator</label>
      </node>
      <node id="78063">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78104" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78172" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
      </node>
      <node id="78062">
        <label>float.h</label>
      </node>
      <node id="78158">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78070">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
      </node>
      <node id="78074">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78075" relation="include">
        </childnode>
      </node>
      <node id="78134">
        <label>cstdint</label>
      </node>
      <node id="78178">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78173" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78094" relation="include">
        </childnode>
      </node>
      <node id="78117">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78119" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78100" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78120" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78121" relation="include">
        </childnode>
        <childnode refid="78123" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
        <childnode refid="78132" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78135" relation="include">
        </childnode>
      </node>
      <node id="78163">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78164" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
      </node>
      <node id="78150">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78151" relation="include">
        </childnode>
        <childnode refid="78153" relation="include">
        </childnode>
        <childnode refid="78152" relation="include">
        </childnode>
      </node>
      <node id="78154">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78094" relation="include">
        </childnode>
        <childnode refid="78155" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78156" relation="include">
        </childnode>
        <childnode refid="78152" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
      </node>
      <node id="78099">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
      </node>
      <node id="78127">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78128" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
      </node>
      <node id="78098">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
      </node>
      <node id="78082">
        <label>cmath</label>
      </node>
      <node id="78075">
        <label>cassert</label>
      </node>
      <node id="78060">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78062" relation="include">
        </childnode>
      </node>
      <node id="78078">
        <label>stdexcept</label>
      </node>
      <node id="78076">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78130">
        <label>numeric</label>
      </node>
      <node id="78059">
        <label>string</label>
      </node>
      <node id="78142">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78094" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78117" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78143" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78144" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
      </node>
      <node id="78118">
        <label>map</label>
      </node>
      <node id="78113">
        <label>unordered_set</label>
      </node>
      <node id="78108">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
      </node>
      <node id="78143">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78117" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
      </node>
      <node id="78067">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78120">
        <label>cfloat</label>
      </node>
      <node id="78068">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
      </node>
      <node id="78125">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78126" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78076" relation="include">
        </childnode>
      </node>
      <node id="78126">
        <label>fstream</label>
      </node>
      <node id="78106">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78101" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
      </node>
      <node id="78057">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78063" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78173" relation="include">
        </childnode>
        <childnode refid="78174" relation="include">
        </childnode>
        <childnode refid="78176" relation="include">
        </childnode>
      </node>
      <node id="78148">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78143" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
      </node>
      <node id="78097">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
      </node>
      <node id="78159">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78160" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
      </node>
      <node id="78071">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78072" relation="include">
        </childnode>
        <childnode refid="78074" relation="include">
        </childnode>
        <childnode refid="78076" relation="include">
        </childnode>
        <childnode refid="78077" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
      </node>
      <node id="78132">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
        <childnode refid="78133" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78134" relation="include">
        </childnode>
      </node>
      <node id="78061">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78133">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
      </node>
      <node id="78136">
        <label>sys/types.h</label>
      </node>
      <node id="78161">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
      </node>
      <node id="78107">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
      </node>
      <node id="78137">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78138" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
      </node>
      <node id="78129">
        <label>typeinfo</label>
      </node>
      <node id="78072">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
      </node>
      <node id="78176">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78177" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
        <childnode refid="78178" relation="include">
        </childnode>
        <childnode refid="78179" relation="include">
        </childnode>
      </node>
      <node id="78110">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78111" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78112" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
      </node>
      <node id="78058">
        <label>AMReX_Config.H</label>
      </node>
      <node id="78073">
        <label>cstdio</label>
      </node>
      <node id="78155">
        <label>tuple</label>
      </node>
      <node id="78123">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
      </node>
      <node id="78103">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78072" relation="include">
        </childnode>
      </node>
      <node id="78124">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78076" relation="include">
        </childnode>
        <childnode refid="78125" relation="include">
        </childnode>
        <childnode refid="78127" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78129" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78130" relation="include">
        </childnode>
        <childnode refid="78131" relation="include">
        </childnode>
      </node>
      <node id="78102">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
      </node>
      <node id="78145">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
      </node>
      <node id="78173">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78117" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
      </node>
      <node id="78128">
        <label>stack</label>
      </node>
      <node id="78085">
        <label>vector</label>
      </node>
      <node id="78105">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
      </node>
      <node id="78169">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78138" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78134" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
      </node>
      <node id="78095">
        <label>utility</label>
      </node>
      <node id="78064">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="78090" relation="include">
        </childnode>
        <childnode refid="78076" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78101" relation="include">
        </childnode>
        <childnode refid="78102" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78103" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
      </node>
      <node id="78094">
        <label>array</label>
      </node>
      <node id="78162">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
      </node>
      <node id="78096">
        <label>sstream</label>
      </node>
      <node id="78166">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78130" relation="include">
        </childnode>
        <childnode refid="78167" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78168" relation="include">
        </childnode>
        <childnode refid="78163" relation="include">
        </childnode>
        <childnode refid="78169" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
      </node>
      <node id="78079">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78080" relation="include">
        </childnode>
      </node>
      <node id="78147">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78139" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78143" relation="include">
        </childnode>
        <childnode refid="78148" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78149" relation="include">
        </childnode>
        <childnode refid="78150" relation="include">
        </childnode>
        <childnode refid="78140" relation="include">
        </childnode>
        <childnode refid="78154" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78105" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78145" relation="include">
        </childnode>
        <childnode refid="78133" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78157" relation="include">
        </childnode>
        <childnode refid="78158" relation="include">
        </childnode>
      </node>
      <node id="78157">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78151">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78152" relation="include">
        </childnode>
      </node>
      <node id="78065">
        <label>iosfwd</label>
      </node>
      <node id="78083">
        <label>cstdlib</label>
      </node>
      <node id="78116">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78156">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
      </node>
      <node id="78104">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78105" relation="include">
        </childnode>
        <childnode refid="78106" relation="include">
        </childnode>
        <childnode refid="78107" relation="include">
        </childnode>
        <childnode refid="78110" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
        <childnode refid="78115" relation="include">
        </childnode>
        <childnode refid="78116" relation="include">
        </childnode>
        <childnode refid="78117" relation="include">
        </childnode>
        <childnode refid="78137" relation="include">
        </childnode>
        <childnode refid="78138" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78100" relation="include">
        </childnode>
        <childnode refid="78094" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78171" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
      </node>
      <node id="78069">
        <label>iostream</label>
      </node>
      <node id="78093">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78094" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="78068" relation="include">
        </childnode>
      </node>
      <node id="78109">
        <label>cstddef</label>
      </node>
      <node id="78153">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78103" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
      </node>
      <node id="78122">
        <label>unordered_map</label>
      </node>
      <node id="78100">
        <label>climits</label>
      </node>
      <node id="78091">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78076" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78068" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78100" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
      </node>
      <node id="78112">
        <label>mutex</label>
      </node>
      <node id="78168">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78138" relation="include">
        </childnode>
        <childnode refid="78163" relation="include">
        </childnode>
        <childnode refid="78166" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
      </node>
      <node id="78119">
        <label>chrono</label>
      </node>
      <node id="78131">
        <label>csignal</label>
      </node>
      <node id="78172">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78164" relation="include">
        </childnode>
        <childnode refid="78116" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
      </node>
      <node id="78140">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78145" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
      </node>
      <node id="78081">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
      </node>
      <node id="78138">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78139" relation="include">
        </childnode>
        <childnode refid="78072" relation="include">
        </childnode>
        <childnode refid="78074" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78140" relation="include">
        </childnode>
        <childnode refid="78147" relation="include">
        </childnode>
        <childnode refid="78143" relation="include">
        </childnode>
        <childnode refid="78151" relation="include">
        </childnode>
        <childnode refid="78153" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78159" relation="include">
        </childnode>
        <childnode refid="78161" relation="include">
        </childnode>
        <childnode refid="78162" relation="include">
        </childnode>
        <childnode refid="78149" relation="include">
        </childnode>
        <childnode refid="78148" relation="include">
        </childnode>
        <childnode refid="78150" relation="include">
        </childnode>
        <childnode refid="78163" relation="include">
        </childnode>
        <childnode refid="78166" relation="include">
        </childnode>
        <childnode refid="78170" relation="include">
        </childnode>
      </node>
      <node id="78149">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
      </node>
      <node id="78090">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
      </node>
      <node id="78077">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78078" relation="include">
        </childnode>
      </node>
      <node id="78089">
        <label>type_traits</label>
      </node>
      <node id="78111">
        <label>set</label>
      </node>
      <node id="78177">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
      </node>
      <node id="78087">
        <label>algorithm</label>
      </node>
      <node id="78135">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78136" relation="include">
        </childnode>
      </node>
      <node id="78146">
        <label>cstring</label>
      </node>
      <node id="78170">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
      </node>
      <node id="78086">
        <label>memory</label>
      </node>
      <node id="78160">
        <label>initializer_list</label>
      </node>
      <node id="78080">
        <label>inttypes.h</label>
      </node>
      <node id="78141">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
      </node>
      <node id="78164">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
        <childnode refid="78126" relation="include">
        </childnode>
        <childnode refid="78165" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78125" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
      </node>
      <node id="78115">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="78193">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="78182" relation="include">
        </childnode>
      </node>
      <node id="78183">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="78194">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="78185" relation="include">
        </childnode>
        <childnode refid="78182" relation="include">
        </childnode>
        <childnode refid="78193" relation="include">
        </childnode>
        <childnode refid="78195" relation="include">
        </childnode>
        <childnode refid="78190" relation="include">
        </childnode>
      </node>
      <node id="78180">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="78181" relation="include">
        </childnode>
        <childnode refid="78182" relation="include">
        </childnode>
        <childnode refid="78192" relation="include">
        </childnode>
      </node>
      <node id="78188">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="78189" relation="include">
        </childnode>
      </node>
      <node id="78184">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="78185" relation="include">
        </childnode>
      </node>
      <node id="78186">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="78182" relation="include">
        </childnode>
      </node>
      <node id="78189">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="78195">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="78181">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="78182" relation="include">
        </childnode>
        <childnode refid="78192" relation="include">
        </childnode>
      </node>
      <node id="78187">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="78183" relation="include">
        </childnode>
        <childnode refid="78188" relation="include">
        </childnode>
        <childnode refid="78189" relation="include">
        </childnode>
      </node>
      <node id="78192">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="78185" relation="include">
        </childnode>
        <childnode refid="78182" relation="include">
        </childnode>
        <childnode refid="78193" relation="include">
        </childnode>
        <childnode refid="78194" relation="include">
        </childnode>
      </node>
      <node id="78190">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="78191" relation="include">
        </childnode>
      </node>
      <node id="78182">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="78183" relation="include">
        </childnode>
        <childnode refid="78184" relation="include">
        </childnode>
        <childnode refid="78185" relation="include">
        </childnode>
        <childnode refid="78186" relation="include">
        </childnode>
        <childnode refid="78187" relation="include">
        </childnode>
        <childnode refid="78190" relation="include">
        </childnode>
      </node>
      <node id="78191">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="78182" relation="include">
        </childnode>
      </node>
      <node id="78185">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1ParticleIDWrapper" prot="public">amrex::ParticleIDWrapper</innerclass>
    <innerclass refid="structamrex_1_1ParticleCPUWrapper" prot="public">amrex::ParticleCPUWrapper</innerclass>
    <innerclass refid="structamrex_1_1ConstParticleIDWrapper" prot="public">amrex::ConstParticleIDWrapper</innerclass>
    <innerclass refid="structamrex_1_1ConstParticleCPUWrapper" prot="public">amrex::ConstParticleCPUWrapper</innerclass>
    <innerclass refid="structamrex_1_1ParticleBase" prot="public">amrex::ParticleBase</innerclass>
    <innerclass refid="structamrex_1_1ParticleBase_3_01T_00_010_00_01NInt_01_4" prot="public">amrex::ParticleBase&lt; T, 0, NInt &gt;</innerclass>
    <innerclass refid="structamrex_1_1ParticleBase_3_01T_00_01NReal_00_010_01_4" prot="public">amrex::ParticleBase&lt; T, NReal, 0 &gt;</innerclass>
    <innerclass refid="structamrex_1_1ParticleBase_3_01T_00_010_00_010_01_4" prot="public">amrex::ParticleBase&lt; T, 0, 0 &gt;</innerclass>
    <innerclass refid="structamrex_1_1Particle" prot="public">amrex::Particle</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__REAL_8H" kindref="compound">AMReX_REAL.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FArrayBox_8H" kindref="compound">AMReX_FArrayBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IntVect_8H" kindref="compound">AMReX_IntVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__RealVect_8H" kindref="compound">AMReX_RealVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Geometry_8H" kindref="compound">AMReX_Geometry.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Long<sp/>GhostParticleID<sp/><sp/><sp/><sp/>=<sp/>549755813887L;<sp/></highlight><highlight class="comment">//<sp/>2**39-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Long<sp/>VirtualParticleID<sp/><sp/>=<sp/>GhostParticleID-1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Long<sp/>LastParticleID<sp/><sp/><sp/><sp/><sp/>=<sp/>GhostParticleID-2;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Long<sp/>DoSplitParticleID<sp/><sp/>=<sp/>GhostParticleID-3;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Long<sp/>NoSplitParticleID<sp/><sp/>=<sp/>GhostParticleID-4;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structamrex_1_1ParticleIDWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t&amp;<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="31" refid="structamrex_1_1ParticleIDWrapper_1ab7e13cdf60396c11caf880dde0226a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleIDWrapper_1ab7e13cdf60396c11caf880dde0226a7a" kindref="member">ParticleIDWrapper</ref><sp/>(uint64_t&amp;<sp/>idata)<sp/>noexcept</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>(idata)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleIDWrapper_1ab7e13cdf60396c11caf880dde0226a7a" kindref="member">ParticleIDWrapper</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="39" refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref>&amp;<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref>&amp;<sp/>pidw)<sp/>noexcept</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" kindref="member">operator=</ref>(Long(pidw));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="45" refid="structamrex_1_1ParticleIDWrapper_1a8e40011be01f4bed4d022c5682b7893f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref>&amp;<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>noexcept</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>out<sp/>the<sp/>40<sp/>leftmost<sp/>bits,<sp/>which<sp/>store<sp/>the<sp/>sign<sp/>and<sp/>the<sp/>abs<sp/>of<sp/>the<sp/>id;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idata<sp/>&amp;=<sp/>0x00FFFFFF;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>val;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>sign<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2**39-1,<sp/>the<sp/>max<sp/>value<sp/>representible<sp/>in<sp/>this<sp/>fashion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>549755813887L);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-2**39-1,<sp/>the<sp/>min<sp/>value<sp/>representible<sp/>in<sp/>this<sp/>fashion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>-549755813887L);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>-id;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idata<sp/>|=<sp/>(sign<sp/>&lt;&lt;<sp/>63);<sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>sign<sp/>in<sp/>the<sp/>leftmost<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idata<sp/>|=<sp/>(val<sp/>&lt;&lt;<sp/>24);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>val<sp/>in<sp/>the<sp/>next<sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="71" refid="structamrex_1_1ParticleIDWrapper_1ac56fb16abaa09d4358f0ca5c94760249" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>Long<sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>sign<sp/>=<sp/>m_idata<sp/>&gt;&gt;<sp/>63;<sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>leftmost<sp/>sign<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>val<sp/><sp/>=<sp/>((m_idata<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0x7FFFFFFFFF);<sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>next<sp/>39<sp/>id<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>lval<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);<sp/><sp/></highlight><highlight class="comment">//<sp/>bc<sp/>we<sp/>take<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(sign)<sp/>?<sp/>lval<sp/>:<sp/>-lval;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structamrex_1_1ParticleCPUWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86" refid="structamrex_1_1ParticleCPUWrapper_1a520a3c045d3f58574b07526ab92c5447" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t&amp;<sp/><ref refid="structamrex_1_1ParticleCPUWrapper_1a520a3c045d3f58574b07526ab92c5447" kindref="member">m_idata</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="89" refid="structamrex_1_1ParticleCPUWrapper_1af9e50d6270a5543e66514c8cf1f53c32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleCPUWrapper_1af9e50d6270a5543e66514c8cf1f53c32" kindref="member">ParticleCPUWrapper</ref><sp/>(uint64_t&amp;<sp/>idata)<sp/>noexcept</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>(idata)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="97" refid="structamrex_1_1ParticleCPUWrapper_1af6657f6d31454f318967fea9de69680a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref>&amp;<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref>&amp;<sp/>pcpuw)<sp/>noexcept</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" kindref="member">operator=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(pcpuw));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="103" refid="structamrex_1_1ParticleCPUWrapper_1a7095b6d59f347b9eba53e48da3e6b861" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref>&amp;<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpu)<sp/>noexcept</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>out<sp/>the<sp/>first<sp/>24<sp/>bits,<sp/>which<sp/>are<sp/>used<sp/>to<sp/>store<sp/>the<sp/>cpu<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idata<sp/>&amp;=<sp/>(~<sp/>0x00FFFFFF);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(cpu<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(cpu<sp/>&lt;=<sp/>16777215);<sp/><sp/></highlight><highlight class="comment">//<sp/>2**24-1,<sp/>the<sp/>max<sp/>representable<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idata<sp/>|=<sp/>cpu;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="116" refid="structamrex_1_1ParticleCPUWrapper_1adbad723fe9c47434ede4210f5570bbbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_idata<sp/>&amp;<sp/>0x00FFFFFF);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structamrex_1_1ConstParticleIDWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ConstParticleIDWrapper" kindref="compound">ConstParticleIDWrapper</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124" refid="structamrex_1_1ConstParticleIDWrapper_1a7c40ef9b50d83e8fb05a043693cb113c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/><ref refid="structamrex_1_1ConstParticleIDWrapper_1a7c40ef9b50d83e8fb05a043693cb113c" kindref="member">m_idata</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="127" refid="structamrex_1_1ConstParticleIDWrapper_1adf2a77f58d6a97cc26e97148ddc18da3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ConstParticleIDWrapper_1adf2a77f58d6a97cc26e97148ddc18da3" kindref="member">ConstParticleIDWrapper</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/>idata)<sp/>noexcept</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>(idata)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="132" refid="structamrex_1_1ConstParticleIDWrapper_1abff2f0c9c9b1085b37f4225ffc10e5c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>Long<sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>sign<sp/>=<sp/>m_idata<sp/>&gt;&gt;<sp/>63;<sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>leftmost<sp/>sign<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>val<sp/><sp/>=<sp/>((m_idata<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0x7FFFFFFFFF);<sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>next<sp/>39<sp/>id<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>lval<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);<sp/><sp/></highlight><highlight class="comment">//<sp/>bc<sp/>we<sp/>take<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(sign)<sp/>?<sp/>lval<sp/>:<sp/>-lval;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structamrex_1_1ConstParticleCPUWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ConstParticleCPUWrapper" kindref="compound">ConstParticleCPUWrapper</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147" refid="structamrex_1_1ConstParticleCPUWrapper_1a39cb23985859cd25127c1f64640ee174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/><ref refid="structamrex_1_1ConstParticleCPUWrapper_1a39cb23985859cd25127c1f64640ee174" kindref="member">m_idata</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="150" refid="structamrex_1_1ConstParticleCPUWrapper_1af4f4d1636b5c535f1a4ecef1632a78a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ConstParticleCPUWrapper_1af4f4d1636b5c535f1a4ecef1632a78a6" kindref="member">ConstParticleCPUWrapper</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/>idata)<sp/>noexcept</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>(idata)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="155" refid="structamrex_1_1ConstParticleCPUWrapper_1ac0bdeeacaba5fefe28b95118ff705bf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_idata<sp/>&amp;<sp/>0x00FFFFFF);<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="160" refid="structamrex_1_1ParticleBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleBase" kindref="compound">ParticleBase</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162" refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>m_pos[AMREX_SPACEDIM];</highlight></codeline>
<codeline lineno="163" refid="structamrex_1_1ParticleBase_1a366f10b761dd77036582e32b7bdb2c77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>m_rdata[NReal];</highlight></codeline>
<codeline lineno="164" refid="structamrex_1_1ParticleBase_1a4b5338d7a319166690ec546dd547869e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>m_idcpu<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165" refid="structamrex_1_1ParticleBase_1a5f5d3842528f32c5c7551b84d0b14374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>[NInt];</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="169" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_01NInt_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleBase" kindref="compound">ParticleBase</ref>&lt;T,0,NInt&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_01NInt_01_4_1aab64d84387cf94f9ce8589049ec9ad9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>m_pos[AMREX_SPACEDIM];</highlight></codeline>
<codeline lineno="172" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_01NInt_01_4_1a283940f2680bb7c20e2f82975db086d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>m_idcpu<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_01NInt_01_4_1a26cc52a679bd8acec80cf5677f109480" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>[NInt];</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal&gt;</highlight></codeline>
<codeline lineno="177" refid="structamrex_1_1ParticleBase_3_01T_00_01NReal_00_010_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleBase" kindref="compound">ParticleBase</ref>&lt;T,NReal,0&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179" refid="structamrex_1_1ParticleBase_3_01T_00_01NReal_00_010_01_4_1aa9f0b1bb9d369e5c204d1b6b6f7f6d67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>m_pos[AMREX_SPACEDIM];</highlight></codeline>
<codeline lineno="180" refid="structamrex_1_1ParticleBase_3_01T_00_01NReal_00_010_01_4_1a1fb1e5ea06a345e33563fe09729a8ee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>m_rdata[NReal];</highlight></codeline>
<codeline lineno="181" refid="structamrex_1_1ParticleBase_3_01T_00_01NReal_00_010_01_4_1a51427d204fb68f910c4a707da1ee5d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>m_idcpu<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="185" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_010_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleBase" kindref="compound">ParticleBase</ref>&lt;T,0,0&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_010_01_4_1a705b1e5e27e52766ed56b20e98a0ece2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>m_pos[AMREX_SPACEDIM];</highlight></codeline>
<codeline lineno="188" refid="structamrex_1_1ParticleBase_3_01T_00_010_00_010_01_4_1a0721aeee066f4dce4294ef22a899d6e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>m_idcpu<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>T_NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>T_NInt=0&gt;</highlight></codeline>
<codeline lineno="198" refid="structamrex_1_1Particle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1ParticleBase" kindref="compound">ParticleBase</ref>&lt;ParticleReal,T_NReal,T_NInt&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202" refid="structamrex_1_1Particle_1aae7d12b94a847462c64456654db316e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal<sp/>=<sp/>T_NReal;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structamrex_1_1Particle_1ad437c33b5c87125048830cee2775b50c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt<sp/>=<sp/>T_NInt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref><sp/>=<sp/>ParticleReal;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structamrex_1_1Particle_1a46b64285f66ebd66e86258462b440c51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="structamrex_1_1Particle_1a46b64285f66ebd66e86258462b440c51" kindref="member">the_next_id</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="structamrex_1_1Particle_1acb4bed9db89d0476474a26000f9b74ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref><sp/><ref refid="structamrex_1_1Particle_1acb4bed9db89d0476474a26000f9b74ed" kindref="member">cpu</ref><sp/>()<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref>(this-&gt;m_idcpu);<sp/>}</highlight></codeline>
<codeline lineno="213" refid="structamrex_1_1Particle_1a801e1732b89fd4c71632cf38a7dfcab5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref><sp/><ref refid="structamrex_1_1Particle_1a801e1732b89fd4c71632cf38a7dfcab5" kindref="member">id</ref><sp/>()<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleIDWrapper_1ab7e13cdf60396c11caf880dde0226a7a" kindref="member">ParticleIDWrapper</ref>(this-&gt;m_idcpu);<sp/>}</highlight></codeline>
<codeline lineno="214" refid="structamrex_1_1Particle_1af7230b4ac47a3f02afe82f6c6418b742" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1ConstParticleCPUWrapper" kindref="compound">ConstParticleCPUWrapper</ref><sp/><ref refid="structamrex_1_1Particle_1af7230b4ac47a3f02afe82f6c6418b742" kindref="member">cpu</ref><sp/>()<sp/>const<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ConstParticleCPUWrapper" kindref="compound">ConstParticleCPUWrapper</ref>(this-&gt;m_idcpu);<sp/>}</highlight></codeline>
<codeline lineno="215" refid="structamrex_1_1Particle_1a2a4aa459bb332952b8cc5094c8145086" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1ConstParticleIDWrapper" kindref="compound">ConstParticleIDWrapper</ref><sp/><ref refid="structamrex_1_1Particle_1a2a4aa459bb332952b8cc5094c8145086" kindref="member">id</ref><sp/>()<sp/>const<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ConstParticleIDWrapper" kindref="compound">ConstParticleIDWrapper</ref>(this-&gt;m_idcpu);<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structamrex_1_1Particle_1aa2de40d8448837bccd5c66e977d70f90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref><sp/><ref refid="structamrex_1_1Particle_1aa2de40d8448837bccd5c66e977d70f90" kindref="member">pos</ref><sp/>()<sp/>const<sp/>&amp;<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(this-&gt;m_pos[0],<sp/>this-&gt;m_pos[1],<sp/>this-&gt;m_pos[2]));}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structamrex_1_1Particle_1a48fae2ae532d9872ee11e088bc055347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref>&amp;<sp/><ref refid="structamrex_1_1Particle_1a48fae2ae532d9872ee11e088bc055347" kindref="member">pos</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>&amp;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(index<sp/>&lt;<sp/>AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_pos[index];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structamrex_1_1Particle_1a5c243ae5f4f28ab97bfe9e14dfe2b9cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1a5c243ae5f4f28ab97bfe9e14dfe2b9cb" kindref="member">pos</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(index<sp/>&lt;<sp/>AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_pos[index];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>!=<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="232" refid="structamrex_1_1Particle_1a8957add47f1570230b24f92ea2c2a190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref>&amp;<sp/><ref refid="structamrex_1_1Particle_1a8957add47f1570230b24f92ea2c2a190" kindref="member">rdata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>&amp;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(index<sp/>&lt;<sp/>NReal);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_rdata[index];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>==<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="239" refid="structamrex_1_1Particle_1adb41424caee35ab295b7fde3820df10d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref>&amp;<sp/><ref refid="structamrex_1_1Particle_1adb41424caee35ab295b7fde3820df10d" kindref="member">rdata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*index*/</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;pos(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>bc<sp/>we<sp/>must<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>!=<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="246" refid="structamrex_1_1Particle_1aebc71de83dcdaccbaa255b8ed5bd25b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1aebc71de83dcdaccbaa255b8ed5bd25b6" kindref="member">rdata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(index<sp/>&lt;<sp/>NReal);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_rdata[index];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>==<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="253" refid="structamrex_1_1Particle_1af90bbc1d38c5f55a08f4b160fdfe4bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">RealType</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1af90bbc1d38c5f55a08f4b160fdfe4bcc" kindref="member">rdata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*index*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;pos(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>we<sp/>must<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>!=<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="260" refid="structamrex_1_1Particle_1a9e473fafa90f05f4376cfa1be5b99748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1a9e473fafa90f05f4376cfa1be5b99748" kindref="member">rvec</ref><sp/>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indz))<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(AMREX_D_TERM(indx<sp/>&lt;<sp/>NReal,<sp/>&amp;&amp;<sp/>indy<sp/>&lt;<sp/>NReal,<sp/>&amp;&amp;<sp/>indz<sp/>&lt;<sp/>NReal));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(this-&gt;m_rdata[indx],</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_rdata[indy],</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_rdata[indz]));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>==<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="269" refid="structamrex_1_1Particle_1a0fbc12863cfe05cac7c5f1027a0d3268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1a0fbc12863cfe05cac7c5f1027a0d3268" kindref="member">rvec</ref><sp/>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*indx*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*indy*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*indz*/</highlight><highlight class="normal">))<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(0.0,<sp/>0.0,<sp/>0.0));<sp/></highlight><highlight class="comment">//<sp/>bc<sp/>we<sp/>must<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>!=<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="276" refid="structamrex_1_1Particle_1ac4ef4f676a755b5ea39383e141ccc1f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1ac4ef4f676a755b5ea39383e141ccc1f4" kindref="member">rvec</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>indices)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(indices.max()<sp/>&lt;<sp/>NReal);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(this-&gt;m_rdata[indices[0]],</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_rdata[indices[1]],</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_rdata[indices[2]]));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NReal,<sp/>typename<sp/>std::enable_if&lt;U<sp/>==<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="285" refid="structamrex_1_1Particle_1a4819a6873b5fd622efa1f87e17208b35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref><sp/><sp/><ref refid="structamrex_1_1Particle_1a4819a6873b5fd622efa1f87e17208b35" kindref="member">rvec</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/></highlight><highlight class="comment">/*indices*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(0.0,<sp/>0.0,<sp/>0.0));<sp/></highlight><highlight class="comment">//<sp/>bc<sp/>we<sp/>must<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NInt,<sp/>typename<sp/>std::enable_if&lt;U<sp/>!=<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="292" refid="structamrex_1_1Particle_1ac9797a328622c447e5b1f87a48a90f1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="structamrex_1_1Particle_1ac9797a328622c447e5b1f87a48a90f1c" kindref="member">idata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>&amp;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(index<sp/>&lt;<sp/>NInt);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>[index];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NInt,<sp/>typename<sp/>std::enable_if&lt;U<sp/>==<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="299" refid="structamrex_1_1Particle_1aca7a314a9cacbec90a509417269636b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/>uint64_t&amp;<sp/><ref refid="structamrex_1_1Particle_1aca7a314a9cacbec90a509417269636b3" kindref="member">idata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*index*/</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_idcpu;<sp/><sp/></highlight><highlight class="comment">//bc<sp/>we<sp/>must<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NInt,<sp/>typename<sp/>std::enable_if&lt;U<sp/>!=<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="306" refid="structamrex_1_1Particle_1a96069e426390607dc1c9f96d8ebce7d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structamrex_1_1Particle_1a96069e426390607dc1c9f96d8ebce7d6" kindref="member">idata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(index<sp/>&lt;<sp/>NInt);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" kindref="member">m_idata</ref>[index];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;int<sp/>U<sp/>=<sp/>T_NInt,<sp/>typename<sp/>std::enable_if&lt;U<sp/>==<sp/>0,<sp/>int&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="313" refid="structamrex_1_1Particle_1aec522453911a7e80d342c01560359093" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle_1aec522453911a7e80d342c01560359093" kindref="member">idata</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*index*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_idcpu;<sp/><sp/></highlight><highlight class="comment">//bc<sp/>we<sp/>must<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Real<sp/>InterpDoit<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/>fab,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>fracs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>*<sp/>cells,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Real<sp/>InterpDoit<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/>fab,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>hi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>frac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interp<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>prt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;<sp/>geom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/>fab,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>idx,<sp/>Real*<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespaceamrex_1ad4158723bb78d3d5f19e396a20c0ce2d" kindref="member">Version</ref><sp/>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>DataPrefix<sp/>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetGravity<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/>gfab,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;<sp/>geom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,<sp/>Real*<sp/>grav);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxReaders<sp/>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/>MaxParticlesPerRead<sp/>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/>NextID<sp/>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/>UnprotectedNextID<sp/>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NextID<sp/>(Long<sp/>nextid);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CIC_Fracs<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>frac,<sp/>Real*<sp/>fracs);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CIC_Cells<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>hicell,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>*<sp/>cells);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CIC_Cells_Fracs_Basic<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plo,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CIC_Cells_Fracs<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plo,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Real&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;IntVect&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CIC_Cells_Fracs<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plo,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx_geom,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx_part,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Real&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;IntVect&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;<sp/>Long<sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;::the_next_id</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="structamrex_1_1Particle_1a85c36134c6d1455fd5d4c2ff8be5c696" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a85c36134c6d1455fd5d4c2ff8be5c696" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Fracs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>frac,<sp/>Real*<sp/>fracs)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;frac&quot;<sp/><sp/>should<sp/>be<sp/>dimensioned:<sp/>Real<sp/>frac[AMREX_SPACEDIM]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;fracs&quot;<sp/>should<sp/>be<sp/>dimensioned:<sp/>Real<sp/>fracs[AMREX_D_TERM(2,+2,+4)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[0]<sp/>=<sp/>frac[0];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[1]<sp/>=<sp/>(1-frac[0]);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[0]<sp/>=<sp/>frac[0]<sp/>*<sp/>frac[1]<sp/>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[1]<sp/>=<sp/>(1-frac[0])<sp/>*<sp/>frac[1];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[2]<sp/>=<sp/>(1-frac[0])<sp/>*<sp/>(1-frac[1]);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[3]<sp/>=<sp/>frac[0]<sp/>*<sp/>(1-frac[1]);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[0]<sp/>=<sp/>frac[0]<sp/>*<sp/>frac[1]<sp/>*<sp/>frac[2];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LHH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[1]<sp/>=<sp/>(1-frac[0])<sp/>*<sp/>frac[1]<sp/>*<sp/>frac[2];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[2]<sp/>=<sp/>(1-frac[0])<sp/>*<sp/>(1-frac[1])<sp/>*<sp/>frac[2];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HLH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[3]<sp/>=<sp/>frac[0]<sp/>*<sp/>(1-frac[1])<sp/>*<sp/>frac[2];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HHL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[4]<sp/>=<sp/>frac[0]<sp/>*<sp/>frac[1]<sp/>*<sp/>(1-frac[2]);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LHL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[5]<sp/>=<sp/>(1-frac[0])<sp/>*<sp/>frac[1]<sp/>*<sp/>(1-frac[2]);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[6]<sp/>=<sp/>(1-frac[0])<sp/>*<sp/>(1-frac[1])<sp/>*<sp/>(1-frac[2]);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs[7]<sp/>=<sp/>frac[0]<sp/>*<sp/>(1-frac[1])<sp/>*<sp/>(1-frac[2]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="structamrex_1_1Particle_1aa60b356e158e411342c612691f687692" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1aa60b356e158e411342c612691f687692" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>hicell,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>*<sp/>cells)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>cell<sp/>=<sp/>hicell;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[0]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[1]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[0]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[1]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[1]<sp/><sp/>=<sp/>cell[1]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[2]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[3]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[0]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LHH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[1]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[1]<sp/><sp/>=<sp/>cell[1]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[2]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HLH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[3]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>cell<sp/>=<sp/>hicell;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HHL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[2]<sp/><sp/>=<sp/>cell[2]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[4]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LHL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[5]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[1]<sp/><sp/>=<sp/>cell[1]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[6]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>cell[0]<sp/><sp/>=<sp/>cell[0]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>cells[7]<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="structamrex_1_1Particle_1a7b8ffd010e11d3cc3920c4ea19dd7a0a" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a7b8ffd010e11d3cc3920c4ea19dd7a0a" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells_Fracs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plo,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Real&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;IntVect&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/>cells)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle_1a7b8ffd010e11d3cc3920c4ea19dd7a0a" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells_Fracs</ref>(p,plo,dx,dx,fracs,cells);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="structamrex_1_1Particle_1ac9042a452011340705ddd5e55c986cc6" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1ac9042a452011340705ddd5e55c986cc6" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells_Fracs_Basic</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plo,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::CIC_Cells_Fracs_B()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;fracs&quot;<sp/>should<sp/>be<sp/>dimensioned:<sp/>Real<sp/><sp/><sp/><sp/>fracs[AMREX_D_TERM(2,+2,+4)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;cells&quot;<sp/>should<sp/>be<sp/>dimensioned:<sp/>IntVect<sp/>cells[AMREX_D_TERM(2,+2,+4)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>len[AMREX_SPACEDIM]<sp/>=<sp/>{<sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(static_cast&lt;Real&gt;((p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[0]-plo[0])/dx[0]<sp/>+<sp/>Real(0.5)),</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;Real&gt;((p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[1]-plo[1])/dx[1]<sp/>+<sp/>Real(0.5)),</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;Real&gt;((p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[2]-plo[2])/dx[2]<sp/>+<sp/>Real(0.5)))<sp/>};</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>cell(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(static_cast&lt;int&gt;(amrex::Math::floor(len[0])),</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(amrex::Math::floor(len[1])),</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(amrex::Math::floor(len[2]))));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>frac[AMREX_SPACEDIM]<sp/>=<sp/>{<sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(len[0]-cell[0],<sp/>len[1]-cell[1],<sp/>len[2]-cell[2])<sp/>};</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1a85c36134c6d1455fd5d4c2ff8be5c696" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Fracs</ref>(frac,<sp/>fracs);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1aa60b356e158e411342c612691f687692" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells</ref>(cell,<sp/>cells);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="structamrex_1_1Particle_1a45ed240539a5cfa83c7142a882ebb3f9" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a7b8ffd010e11d3cc3920c4ea19dd7a0a" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells_Fracs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plo,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx_geom,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx_part,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Real&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;IntVect&gt;</ref>&amp;<sp/><sp/><sp/><sp/><sp/>cells)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::CIC_Cells_Fracs()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx_geom<sp/>==<sp/>dx_part)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>AMREX_D_TERM(2,+2,+4);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs.resize(M);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells.resize(M);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1ac9042a452011340705ddd5e55c986cc6" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells_Fracs_Basic</ref>(p,plo,dx_geom,fracs.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>(),cells.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>element<sp/>in<sp/>fracs<sp/>and<sp/>cells<sp/>is<sp/>the<sp/>lowest<sp/>corner,<sp/>the<sp/>last<sp/>is<sp/>the<sp/>highest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>hilen[AMREX_SPACEDIM]<sp/>=<sp/>{<sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>((p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[0]-plo[0]+dx_part[0]/2)/dx_geom[0],</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[1]-plo[1]+dx_part[1]/2)/dx_geom[1],</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[2]-plo[2]+dx_part[2]/2)/dx_geom[2])<sp/>};</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>lolen[AMREX_SPACEDIM]<sp/>=<sp/>{<sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>((p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[0]-plo[0]-dx_part[0]/2)/dx_geom[0],</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[1]-plo[1]-dx_part[1]/2)/dx_geom[1],</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.<ref refid="structamrex_1_1ParticleBase_1a93ebe9c4ff3729d52843f9d48eed9a53" kindref="member">m_pos</ref>[2]-plo[2]-dx_part[2]/2)/dx_geom[2])<sp/>};</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>hicell(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(static_cast&lt;int&gt;(amrex::Math::floor(hilen[0])),</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(amrex::Math::floor(hilen[1])),</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(amrex::Math::floor(hilen[2]))));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>locell(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(static_cast&lt;int&gt;(amrex::Math::floor(lolen[0])),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(amrex::Math::floor(lolen[1])),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(amrex::Math::floor(lolen[2]))));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>cell_density<sp/>=<sp/>AMREX_D_TERM(dx_geom[0]/dx_part[0],*dx_geom[1]/dx_part[1],*dx_geom[2]/dx_part[2]);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>AMREX_D_TERM((hicell[0]-locell[0]+1),*(hicell[1]-locell[1]+1),*(hicell[2]-locell[2]+1));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>fracs.resize(M);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>cells.resize(M);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xi<sp/>=<sp/>locell[0];<sp/>xi<sp/>&lt;=<sp/>hicell[0];<sp/>xi++)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells[i][0]<sp/>=<sp/>xi;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs[i]<sp/>=<sp/>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(hilen[0]-xi,Real(1.0))-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(lolen[0]-xi,Real(0.0)))*cell_density;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yi<sp/>=<sp/>locell[1];<sp/>yi<sp/>&lt;=<sp/>hicell[1];<sp/>yi++)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>yf<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(hilen[1]-yi,Real(1.0))-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(lolen[1]-yi,Real(0.0));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xi<sp/>=<sp/>locell[0];<sp/>xi<sp/>&lt;=<sp/>hicell[0];<sp/>xi<sp/>++)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells[i][0]<sp/>=<sp/>xi;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells[i][1]<sp/>=<sp/>yi;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs[i]<sp/>=<sp/>yf<sp/>*<sp/>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(hilen[0]-xi,Real(1.0))-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(lolen[0]-xi,Real(0.0)))*cell_density;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zi<sp/>=<sp/>locell[2];<sp/>zi<sp/>&lt;=<sp/>hicell[2];<sp/>zi++)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>zf<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(hilen[2]-zi,Real(1.0))-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(lolen[2]-zi,Real(0.0));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yi<sp/>=<sp/>locell[1];<sp/>yi<sp/>&lt;=<sp/>hicell[1];<sp/>yi++)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>yf<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(hilen[1]-yi,Real(1.0))-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(lolen[1]-yi,Real(0.0));</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xi<sp/>=<sp/>locell[0];<sp/>xi<sp/>&lt;=<sp/>hicell[0];<sp/>xi++)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells[i][0]<sp/>=<sp/>xi;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells[i][1]<sp/>=<sp/>yi;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells[i][2]<sp/>=<sp/>zi;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracs[i]<sp/>=<sp/>zf<sp/>*<sp/>yf<sp/>*<sp/>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(hilen[0]-xi,Real(1.0))-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(lolen[0]-xi,Real(0.0)))<sp/>*<sp/>cell_density;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="structamrex_1_1Particle_1aad16dc8f295a9f057509d7c72b5e33c0" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1aad16dc8f295a9f057509d7c72b5e33c0" kindref="member">Particle&lt;NReal, NInt&gt;::MaxReaders</ref><sp/>()</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Max_Readers_def<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Max_Readers;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref><sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>(</highlight><highlight class="stringliteral">&quot;particles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max_Readers<sp/>=<sp/>Max_Readers_def;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;nreaders&quot;</highlight><highlight class="normal">,<sp/>Max_Readers);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max_Readers<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>(),Max_Readers);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Max_Readers<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;particles.nreaders<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Max_Readers;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="699"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="700" refid="structamrex_1_1Particle_1a29e8619004d74cd4d7b1d6226006fd31" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a29e8619004d74cd4d7b1d6226006fd31" kindref="member">Particle&lt;NReal, NInt&gt;::MaxParticlesPerRead</ref><sp/>()</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>maximum<sp/>particles<sp/>that<sp/>&quot;each&quot;<sp/>reader<sp/>will<sp/>attempt<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>doing<sp/>a<sp/>Redistribute().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long<sp/>Max_Particles_Per_Read_def<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/>Max_Particles_Per_Read;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref><sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>(</highlight><highlight class="stringliteral">&quot;particles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max_Particles_Per_Read<sp/>=<sp/>Max_Particles_Per_Read_def;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;nparts_per_read&quot;</highlight><highlight class="normal">,<sp/>Max_Particles_Per_Read);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Max_Particles_Per_Read<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;particles.nparts_per_read<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Max_Particles_Per_Read;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="732" refid="structamrex_1_1Particle_1afe760b4bd9a5592257a33394fe9f3fa2" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1afe760b4bd9a5592257a33394fe9f3fa2" kindref="member">Particle&lt;NReal, NInt&gt;::DataPrefix</ref><sp/>()</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>particle<sp/>data<sp/>is<sp/>stored<sp/>in<sp/>files<sp/>of<sp/>the<sp/>form:<sp/>DATA_nnnn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>data(</highlight><highlight class="stringliteral">&quot;DATA_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;</highlight></codeline>
<codeline lineno="744" refid="structamrex_1_1Particle_1abe858dc473078ebe14aaad1231e671a2" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1abe858dc473078ebe14aaad1231e671a2" kindref="member">Particle&lt;NReal, NInt&gt;::Version</ref><sp/>()</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>change<sp/>the<sp/>Checkpoint/Restart<sp/>format<sp/>we<sp/>should<sp/>increment<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>version<sp/>strings:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&quot;Version_One_Dot_Zero&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&quot;Version_One_Dot_One&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>version(</highlight><highlight class="stringliteral">&quot;Version_Two_Dot_Zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="761" refid="structamrex_1_1Particle_1a2fcbaec8aac910c864f4a210d48d9c93" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a2fcbaec8aac910c864f4a210d48d9c93" kindref="member">Particle&lt;NReal, NInt&gt;::NextID</ref><sp/>()</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>next;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>be<sp/>able<sp/>to<sp/>test<sp/>on<sp/>_OPENMP<sp/>&lt;<sp/>201107<sp/>for<sp/>capture<sp/>(version<sp/>3.1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>must<sp/>work<sp/>around<sp/>a<sp/>bug<sp/>in<sp/>gcc<sp/>&lt;<sp/>4.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_OPENMP)<sp/>&amp;&amp;<sp/>_OPENMP<sp/>&lt;<sp/>201307</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(amrex_particle_nextid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_OPENMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>atomic<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/>the_next_id++;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;<sp/>LastParticleID)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::NextID()<sp/>--<sp/>too<sp/>many<sp/>particles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="781" refid="structamrex_1_1Particle_1a90b34785c758b4423ca560d3796fcd7a" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a90b34785c758b4423ca560d3796fcd7a" kindref="member">Particle&lt;NReal, NInt&gt;::UnprotectedNextID</ref><sp/>()</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>next<sp/>=<sp/>the_next_id++;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;<sp/>LastParticleID)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::NextID()<sp/>--<sp/>too<sp/>many<sp/>particles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="structamrex_1_1Particle_1acfec109fc6821c1e45db900b4adc6779" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a2fcbaec8aac910c864f4a210d48d9c93" kindref="member">Particle&lt;NReal, NInt&gt;::NextID</ref><sp/>(Long<sp/>nextid)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>the_next_id<sp/>=<sp/>nextid;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="797"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="798" refid="structamrex_1_1Particle_1a9f0503bbdca2d87308b8eb9a5d002ca3" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a978fa793824d54757dac33400fb43e87" kindref="member">Particle&lt;NReal, NInt&gt;::InterpDoit</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/>fab,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/><sp/><sp/>cell,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/>frac,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::InterpDoit(fcfc)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>AMREX_D_TERM(2,+2,+4);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/>fracs[M];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>cells[M];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1a85c36134c6d1455fd5d4c2ff8be5c696" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Fracs</ref>(frac,<sp/>fracs);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1aa60b356e158e411342c612691f687692" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells</ref>(cell,<sp/>cells);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>val<sp/>=<sp/><ref refid="structamrex_1_1Particle_1a978fa793824d54757dac33400fb43e87" kindref="member">Particle&lt;NReal, NInt&gt;::InterpDoit</ref>(fab,fracs,cells,comp);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="818"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="819" refid="structamrex_1_1Particle_1a978fa793824d54757dac33400fb43e87" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a978fa793824d54757dac33400fb43e87" kindref="member">Particle&lt;NReal, NInt&gt;::InterpDoit</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/>fab,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/>fracs,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>*<sp/><sp/><sp/>cells,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::InterpDoit(ffcc)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>AMREX_D_TERM(2,+2,+4);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>fab(cells[i],comp)<sp/>*<sp/>fracs[i];</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="structamrex_1_1Particle_1a40e74ab5b2a9313b1ec1b2f30230f879" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a40e74ab5b2a9313b1ec1b2f30230f879" kindref="member">Particle&lt;NReal, NInt&gt;::Interp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>prt,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;<sp/><sp/><sp/><sp/><sp/>geom,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/><sp/><sp/><sp/>fab,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::Interp()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(idx<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(val<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/><sp/><sp/>=<sp/>AMREX_D_TERM(2,+2,+4);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/>plo<sp/>=<sp/>geom.<ref refid="classamrex_1_1Geometry_1a02ef0d522174b99ca75e569def4c091c" kindref="member">ProbLo</ref>();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/>dx<sp/><sp/>=<sp/>geom.<ref refid="classamrex_1_1CoordSys_1ade9815d7413549b5bb09000f1c9ede76" kindref="member">CellSize</ref>();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/>fracs[M];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>cells[M];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>&quot;fracs&quot;<sp/>and<sp/>&quot;cells&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1ac9042a452011340705ddd5e55c986cc6" kindref="member">Particle&lt;NReal, NInt&gt;::CIC_Cells_Fracs_Basic</ref>(prt,<sp/>plo,<sp/>dx,<sp/>fracs,<sp/>cells);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cnt;<sp/>i++)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(idx[i]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>idx[i]<sp/>&lt;<sp/>fab.<ref refid="classamrex_1_1BaseFab_1ae16c6f70417dc8f84e2196afe27b2b15" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[i]<sp/>=<sp/><ref refid="structamrex_1_1Particle_1a978fa793824d54757dac33400fb43e87" kindref="member">Particle&lt;NReal, NInt&gt;::InterpDoit</ref>(fab,fracs,cells,idx[i]);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="structamrex_1_1Particle_1a92d50a0cfc06c857c16d7d072bf77e95" refkind="member"><highlight class="normal"><ref refid="structamrex_1_1Particle_1a92d50a0cfc06c857c16d7d072bf77e95" kindref="member">Particle&lt;NReal, NInt&gt;::GetGravity</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/><sp/><sp/><sp/>gfab,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;<sp/><sp/><sp/><sp/><sp/>geom,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Particle" kindref="compound">Particle&lt;NReal, NInt&gt;</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grav)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Particle&lt;NReal,<sp/>NInt&gt;::GetGravity()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(grav<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx[AMREX_SPACEDIM]<sp/>=<sp/>{<sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(0,1,2)<sp/>};</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Particle_1a40e74ab5b2a9313b1ec1b2f30230f879" kindref="member">Particle&lt;NReal, NInt&gt;::Interp</ref>(p,geom,gfab,idx,grav,AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="886" refid="namespaceamrex_1ab612cdff7b506fd2884de82a842e95b8" refkind="member"><highlight class="normal">operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>os,<sp/>const<sp/>Particle&lt;NReal,<sp/>NInt&gt;&amp;<sp/>p)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.id()<sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>p.cpu()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>i++)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.pos(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NReal;<sp/>i++)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.rdata(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>NInt;<sp/>i++)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.idata(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!os.good())</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;operator&lt;&lt;(ostream&amp;,Particle&lt;NReal,<sp/>NInt&gt;&amp;)<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal&gt;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="908" refid="namespaceamrex_1a637e0edc81c99a33f11e048fa4f7fc09" refkind="member"><highlight class="normal">operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>os,<sp/>const<sp/>Particle&lt;NReal,<sp/>0&gt;&amp;<sp/>p)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.id()<sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>p.cpu()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>i++)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.pos(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NReal;<sp/>i++)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.rdata(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!os.good())</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;operator&lt;&lt;(ostream&amp;,Particle&lt;NReal,<sp/>NInt&gt;&amp;)<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt&gt;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="927" refid="namespaceamrex_1ab4ab9b3e6200e633cbf452f97880f267" refkind="member"><highlight class="normal">operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>os,<sp/>const<sp/>Particle&lt;0,<sp/>NInt&gt;&amp;<sp/>p)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.id()<sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>p.cpu()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>i++)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.pos(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>NInt;<sp/>i++)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.idata(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!os.good())</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;operator&lt;&lt;(ostream&amp;,Particle&lt;NReal,<sp/>NInt&gt;&amp;)<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NReal=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NInt=0&gt;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="946" refid="namespaceamrex_1a6ee44abe4e92e171a76c83cc8edfdec8" refkind="member"><highlight class="normal">operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>os,<sp/>const<sp/>Particle&lt;0,<sp/>0&gt;&amp;<sp/>p)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.id()<sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>p.cpu()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>i++)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>p.pos(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!os.good())</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;operator&lt;&lt;(ostream&amp;,Particle&lt;NReal,<sp/>NInt&gt;&amp;)<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amrex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_PARTICLE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H"/>
  </compounddef>
</doxygen>
