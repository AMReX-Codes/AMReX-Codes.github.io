<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1ParallelContext_1_1Frame" kind="class" language="C++" prot="public">
    <compoundname>amrex::ParallelContext::Frame</compoundname>
    <includes refid="AMReX__ParallelContext_8H" local="no">AMReX_ParallelContext.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a00076c4be0a8a1fa1a56d8d9c3fdfa2f" prot="public" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a161d2f0d69c09838316e4ea9a74f02d7" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::Frame::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9eb867d9cda6acfce33985d67a31d5fc" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
<para>sub-communicator associated with frame </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="39" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a2cb41a80f7a3c545e1e537bf84acbbc9" prot="public" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a3bb76afe62d9b415f238c21a9a15aa51" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::Frame::group</definition>
        <argsstring></argsstring>
        <name>group</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a0257f8e71ae2f8fb4d9689ad25a7d2d7" kindref="member">MPI_GROUP_NULL</ref></initializer>
        <briefdescription>
<para>to avoid repeatedly creating groups in rank translation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="40" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a72eda643c9080e17e52e8aea8756cd35" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>frame ID </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="43" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1aa5b185e14618f1bef2f4a7bbd9be3f35" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::m_rank_me</definition>
        <argsstring></argsstring>
        <name>m_rank_me</name>
        <initializer>=  0</initializer>
        <briefdescription>
<para>local rank </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="44" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a31bfd44f2e4c7e7fe623b14eb62b81c6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::m_nranks</definition>
        <argsstring></argsstring>
        <name>m_nranks</name>
        <initializer>=  1</initializer>
        <briefdescription>
<para>local # of ranks </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="45" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a0c03450ec8650e511181fb540b42e880" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::m_mpi_tag</definition>
        <argsstring></argsstring>
        <name>m_mpi_tag</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="46" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a2b4c46fb1ac3129d8c997f52241de7a1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::m_io_rank</definition>
        <argsstring></argsstring>
        <name>m_io_rank</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="47" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a3ae9cdc97369e2f1381f095af24e497e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::ParallelContext::Frame::m_out_filename</definition>
        <argsstring></argsstring>
        <name>m_out_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="48" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParallelContext_1_1Frame_1a9137c45cc574cabfd0194ab8ed082116" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; std::ofstream &gt;</type>
        <definition>std::unique_ptr&lt;std::ofstream&gt; amrex::ParallelContext::Frame::m_out</definition>
        <argsstring></argsstring>
        <name>m_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="49" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1ad61cafd4a0e7503e8cd29810f57736e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParallelContext::Frame::Frame</definition>
        <argsstring>(MPI_Comm c, int id, int io_rank)</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a161d2f0d69c09838316e4ea9a74f02d7" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>io_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="11" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a390e863e597de7ee5742e950baa2544e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParallelContext::Frame::Frame</definition>
        <argsstring>(MPI_Comm c)</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a161d2f0d69c09838316e4ea9a74f02d7" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="19" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a84ed11cec20f015349e7edd5fe0bccf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParallelContext::Frame::Frame</definition>
        <argsstring>(Frame const &amp;)=delete</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="20" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a4167f396f181d93b61fbb630eca5f0b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
        <definition>Frame&amp; amrex::ParallelContext::Frame::operator=</definition>
        <argsstring>(Frame const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="21" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1add7bceedba4bbaf9f2172c82e2775c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
        <definition>Frame&amp; amrex::ParallelContext::Frame::operator=</definition>
        <argsstring>(Frame &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="22" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1ac3367d337ca17031766061b36fac376b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParallelContext::Frame::Frame</definition>
        <argsstring>(Frame &amp;&amp;rhs) noexcept</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="27" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a7a812b3ef64087f0bcc566deaffbcb16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParallelContext::Frame::~Frame</definition>
        <argsstring>()</argsstring>
        <name>~Frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1afc192eadbbc8aaafa7ff32cacdc8488b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::MyID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>MyID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="26" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a2fe4785cdf596f485e0087fcdf771579" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::MyProc</definition>
        <argsstring>() const noexcept</argsstring>
        <name>MyProc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a9b529bc7c103b596cb3c24ce70c28e93" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::NProcs</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NProcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="28" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a21e190c33a495b59fa05c1cee0e4e60a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::IOProc</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IOProc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1ac7e3ccd77b7a012c1c66b7c3bbdf6509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::get_inc_mpi_tag</definition>
        <argsstring>()</argsstring>
        <name>get_inc_mpi_tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="34" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a1bc1579142503db5584556389166c169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::Frame::set_ofs_name</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>set_ofs_name</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="35" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1abf278a69530b55db1c0156e40db89e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream * amrex::ParallelContext::Frame::get_ofs_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_ofs_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="36" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="119" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a0b1d7ebb925ad002bfb7d05913ae116a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::local_to_global_rank</definition>
        <argsstring>(int lrank)</argsstring>
        <name>local_to_global_rank</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lrank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="30" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1ac60250687a1fd30ef799d90099b42f3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::Frame::local_to_global_rank</definition>
        <argsstring>(int *global, const int *local, int n)</argsstring>
        <name>local_to_global_rank</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="31" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="59" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1a9c3018c1265c14c261a42175d7b6087f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::Frame::global_to_local_rank</definition>
        <argsstring>(int *local, const int *global, int n)</argsstring>
        <name>global_to_local_rank</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>global</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="32" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="85" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParallelContext_1_1Frame_1ae2790aa092fed9f8af98330581ee416c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParallelContext::Frame::global_to_local_rank</definition>
        <argsstring>(int grank)</argsstring>
        <name>global_to_local_rank</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="33" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::unique_ptr&lt; std::ofstream &gt;</label>
      </node>
      <node id="1">
        <label>amrex::ParallelContext::Frame</label>
        <link refid="classamrex_1_1ParallelContext_1_1Frame"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_out_filename</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_out</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="14" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="15" bodyend="50"/>
    <listofallmembers>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a00076c4be0a8a1fa1a56d8d9c3fdfa2f" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>comm</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1ad61cafd4a0e7503e8cd29810f57736e9" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a390e863e597de7ee5742e950baa2544e" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a84ed11cec20f015349e7edd5fe0bccf4" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1ac3367d337ca17031766061b36fac376b" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1ac7e3ccd77b7a012c1c66b7c3bbdf6509" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>get_inc_mpi_tag</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1abf278a69530b55db1c0156e40db89e0c" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>get_ofs_ptr</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a9c3018c1265c14c261a42175d7b6087f" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>global_to_local_rank</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1ae2790aa092fed9f8af98330581ee416c" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>global_to_local_rank</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a2cb41a80f7a3c545e1e537bf84acbbc9" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>group</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a21e190c33a495b59fa05c1cee0e4e60a" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>IOProc</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a0b1d7ebb925ad002bfb7d05913ae116a" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>local_to_global_rank</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1ac60250687a1fd30ef799d90099b42f3d" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>local_to_global_rank</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a72eda643c9080e17e52e8aea8756cd35" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_id</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a2b4c46fb1ac3129d8c997f52241de7a1" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_io_rank</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a0c03450ec8650e511181fb540b42e880" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_mpi_tag</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a31bfd44f2e4c7e7fe623b14eb62b81c6" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_nranks</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a9137c45cc574cabfd0194ab8ed082116" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_out</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a3ae9cdc97369e2f1381f095af24e497e" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_out_filename</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1aa5b185e14618f1bef2f4a7bbd9be3f35" prot="private" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>m_rank_me</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1afc192eadbbc8aaafa7ff32cacdc8488b" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>MyID</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a2fe4785cdf596f485e0087fcdf771579" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>MyProc</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a9b529bc7c103b596cb3c24ce70c28e93" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>NProcs</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a4167f396f181d93b61fbb630eca5f0b1" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1add7bceedba4bbaf9f2172c82e2775c04" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a1bc1579142503db5584556389166c169" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>set_ofs_name</name></member>
      <member refid="classamrex_1_1ParallelContext_1_1Frame_1a7a812b3ef64087f0bcc566deaffbcb16" prot="public" virt="non-virtual"><scope>amrex::ParallelContext::Frame</scope><name>~Frame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
