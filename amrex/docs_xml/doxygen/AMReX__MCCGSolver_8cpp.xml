<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MCCGSolver_8cpp" kind="file" language="C++">
    <compoundname>AMReX_MCCGSolver.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__MCCGSolver_8H" local="no">AMReX_MCCGSolver.H</includes>
    <incdepgraph>
      <node id="57502">
        <label>list</label>
      </node>
      <node id="57515">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57516" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
      </node>
      <node id="57592">
        <label>iomanip</label>
      </node>
      <node id="57511">
        <label>functional</label>
      </node>
      <node id="57552">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57545" relation="include">
        </childnode>
        <childnode refid="57554" relation="include">
        </childnode>
        <childnode refid="57539" relation="include">
        </childnode>
        <childnode refid="57555" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
      </node>
      <node id="57569">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
      </node>
      <node id="57537">
        <label>limits</label>
      </node>
      <node id="57525">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
      </node>
      <node id="57593">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="57543" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57590" relation="include">
        </childnode>
      </node>
      <node id="57531">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57532" relation="include">
        </childnode>
        <childnode refid="57534" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
        <childnode refid="57539" relation="include">
        </childnode>
        <childnode refid="57540" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57541" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
      </node>
      <node id="57580">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57577" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57541" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57536" relation="include">
        </childnode>
      </node>
      <node id="57495">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.cpp</label>
        <link refid="AMReX_MCCGSolver.cpp"/>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57497" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
        <childnode refid="57544" relation="include">
        </childnode>
        <childnode refid="57557" relation="include">
        </childnode>
      </node>
      <node id="57559">
        <label>cstdint</label>
      </node>
      <node id="57557">
        <label>AMReX_MCCGSolver.H</label>
        <link refid="AMReX__MCCGSolver_8H"/>
        <childnode refid="57536" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57558" relation="include">
        </childnode>
        <childnode refid="57612" relation="include">
        </childnode>
        <childnode refid="57619" relation="include">
        </childnode>
      </node>
      <node id="57604">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57552" relation="include">
        </childnode>
        <childnode refid="57556" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
        <childnode refid="57572" relation="include">
        </childnode>
      </node>
      <node id="57556">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="57545" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
      </node>
      <node id="57581">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57535">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57536" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57538" relation="include">
        </childnode>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57533" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57505">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57508" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57511" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57512" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
      </node>
      <node id="57570">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="57586">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="57574">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="57544" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
      </node>
      <node id="57612">
        <label>AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57552" relation="include">
        </childnode>
        <childnode refid="57558" relation="include">
        </childnode>
        <childnode refid="57613" relation="include">
        </childnode>
      </node>
      <node id="57517">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
      </node>
      <node id="57591">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="57520" relation="include">
        </childnode>
        <childnode refid="57516" relation="include">
        </childnode>
        <childnode refid="57592" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57515" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
      </node>
      <node id="57536">
        <label>cmath</label>
      </node>
      <node id="57602">
        <label>cassert</label>
      </node>
      <node id="57509">
        <label>stdexcept</label>
      </node>
      <node id="57543">
        <label>numeric</label>
      </node>
      <node id="57582">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="57503" relation="include">
        </childnode>
        <childnode refid="57583" relation="include">
        </childnode>
        <childnode refid="57511" relation="include">
        </childnode>
        <childnode refid="57547" relation="include">
        </childnode>
        <childnode refid="57519" relation="include">
        </childnode>
        <childnode refid="57576" relation="include">
        </childnode>
        <childnode refid="57584" relation="include">
        </childnode>
        <childnode refid="57581" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57555">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
        <childnode refid="57539" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
      </node>
      <node id="57561">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="57536" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57538" relation="include">
        </childnode>
        <childnode refid="57503" relation="include">
        </childnode>
        <childnode refid="57547" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57562" relation="include">
        </childnode>
        <childnode refid="57555" relation="include">
        </childnode>
        <childnode refid="57563" relation="include">
        </childnode>
        <childnode refid="57565" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57525" relation="include">
        </childnode>
        <childnode refid="57569" relation="include">
        </childnode>
        <childnode refid="57570" relation="include">
        </childnode>
        <childnode refid="57544" relation="include">
        </childnode>
        <childnode refid="57571" relation="include">
        </childnode>
        <childnode refid="57572" relation="include">
        </childnode>
      </node>
      <node id="57499">
        <label>string</label>
      </node>
      <node id="57590">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="57545" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
        <childnode refid="57577" relation="include">
        </childnode>
      </node>
      <node id="57619">
        <label>AMReX_MCMultiGrid.H</label>
        <link refid="AMReX__MCMultiGrid_8H"/>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57558" relation="include">
        </childnode>
        <childnode refid="57612" relation="include">
        </childnode>
      </node>
      <node id="57562">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="57531" relation="include">
        </childnode>
      </node>
      <node id="57545">
        <label>map</label>
      </node>
      <node id="57558">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="57559" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57560" relation="include">
        </childnode>
        <childnode refid="57596" relation="include">
        </childnode>
        <childnode refid="57611" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
      </node>
      <node id="57568">
        <label>unordered_set</label>
      </node>
      <node id="57613">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57552" relation="include">
        </childnode>
        <childnode refid="57560" relation="include">
        </childnode>
        <childnode refid="57540" relation="include">
        </childnode>
        <childnode refid="57614" relation="include">
        </childnode>
        <childnode refid="57616" relation="include">
        </childnode>
        <childnode refid="57618" relation="include">
        </childnode>
        <childnode refid="57598" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57607" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57545" relation="include">
        </childnode>
      </node>
      <node id="57608">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="57609" relation="include">
        </childnode>
        <childnode refid="57610" relation="include">
        </childnode>
      </node>
      <node id="57584">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="57519" relation="include">
        </childnode>
      </node>
      <node id="57548">
        <label>cfloat</label>
      </node>
      <node id="57607">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57606" relation="include">
        </childnode>
      </node>
      <node id="57571">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="57572" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
      </node>
      <node id="57516">
        <label>fstream</label>
      </node>
      <node id="57598">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57545" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57599" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
        <childnode refid="57600" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
      </node>
      <node id="57606">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
        <childnode refid="57560" relation="include">
        </childnode>
        <childnode refid="57600" relation="include">
        </childnode>
        <childnode refid="57572" relation="include">
        </childnode>
      </node>
      <node id="57618">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57534">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="57526" relation="include">
        </childnode>
      </node>
      <node id="57600">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57503" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57601" relation="include">
        </childnode>
      </node>
      <node id="57528">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="57503" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57519" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57520" relation="include">
        </childnode>
        <childnode refid="57512" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
      </node>
      <node id="57579">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57580" relation="include">
        </childnode>
        <childnode refid="57581" relation="include">
        </childnode>
      </node>
      <node id="57530">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="57605">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57547" relation="include">
        </childnode>
      </node>
      <node id="57527">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="57573">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57574" relation="include">
        </childnode>
        <childnode refid="57575" relation="include">
        </childnode>
        <childnode refid="57577" relation="include">
        </childnode>
        <childnode refid="57578" relation="include">
        </childnode>
        <childnode refid="57579" relation="include">
        </childnode>
        <childnode refid="57582" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57562" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57576" relation="include">
        </childnode>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57519" relation="include">
        </childnode>
        <childnode refid="57585" relation="include">
        </childnode>
        <childnode refid="57586" relation="include">
        </childnode>
      </node>
      <node id="57609">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="57549">
        <label>sys/types.h</label>
      </node>
      <node id="57603">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="57535" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
      </node>
      <node id="57542">
        <label>typeinfo</label>
      </node>
      <node id="57512">
        <label>cstdio</label>
      </node>
      <node id="57576">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="57547" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
      </node>
      <node id="57529">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57583">
        <label>tuple</label>
      </node>
      <node id="57615">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="57558" relation="include">
        </childnode>
        <childnode refid="57598" relation="include">
        </childnode>
      </node>
      <node id="57518">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="57498" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57519" relation="include">
        </childnode>
        <childnode refid="57520" relation="include">
        </childnode>
        <childnode refid="57512" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57522" relation="include">
        </childnode>
        <childnode refid="57523" relation="include">
        </childnode>
        <childnode refid="57524" relation="include">
        </childnode>
      </node>
      <node id="57550">
        <label>unistd.h</label>
      </node>
      <node id="57610">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="57501">
        <label>vector</label>
      </node>
      <node id="57498">
        <label>stack</label>
      </node>
      <node id="57595">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57570" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
      </node>
      <node id="57504">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="57505" relation="include">
        </childnode>
      </node>
      <node id="57506">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="57519">
        <label>utility</label>
      </node>
      <node id="57503">
        <label>array</label>
      </node>
      <node id="57596">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57588" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57545" relation="include">
        </childnode>
        <childnode refid="57519" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57566" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57552" relation="include">
        </childnode>
        <childnode refid="57597" relation="include">
        </childnode>
        <childnode refid="57595" relation="include">
        </childnode>
        <childnode refid="57556" relation="include">
        </childnode>
        <childnode refid="57598" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
        <childnode refid="57544" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57525" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57606" relation="include">
        </childnode>
        <childnode refid="57570" relation="include">
        </childnode>
        <childnode refid="57576" relation="include">
        </childnode>
        <childnode refid="57607" relation="include">
        </childnode>
        <childnode refid="57561" relation="include">
        </childnode>
        <childnode refid="57572" relation="include">
        </childnode>
        <childnode refid="57608" relation="include">
        </childnode>
      </node>
      <node id="57560">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57561" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57595" relation="include">
        </childnode>
        <childnode refid="57536" relation="include">
        </childnode>
      </node>
      <node id="57520">
        <label>sstream</label>
      </node>
      <node id="57611">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="57596" relation="include">
        </childnode>
        <childnode refid="57607" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
      </node>
      <node id="57508">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="57509" relation="include">
        </childnode>
      </node>
      <node id="57532">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
        <childnode refid="57533" relation="include">
        </childnode>
      </node>
      <node id="57575">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57574" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57576" relation="include">
        </childnode>
      </node>
      <node id="57514">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57515" relation="include">
        </childnode>
        <childnode refid="57518" relation="include">
        </childnode>
        <childnode refid="57525" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57542" relation="include">
        </childnode>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57511" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57543" relation="include">
        </childnode>
      </node>
      <node id="57544">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57545" relation="include">
        </childnode>
        <childnode refid="57546" relation="include">
        </childnode>
        <childnode refid="57547" relation="include">
        </childnode>
        <childnode refid="57538" relation="include">
        </childnode>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57548" relation="include">
        </childnode>
        <childnode refid="57549" relation="include">
        </childnode>
        <childnode refid="57550" relation="include">
        </childnode>
        <childnode refid="57551" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57552" relation="include">
        </childnode>
        <childnode refid="57556" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
      </node>
      <node id="57564">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
      </node>
      <node id="57540">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57533">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
      </node>
      <node id="57551">
        <label>sys/wait.h</label>
      </node>
      <node id="57500">
        <label>iosfwd</label>
      </node>
      <node id="57521">
        <label>cstdlib</label>
      </node>
      <node id="57524">
        <label>cfenv</label>
      </node>
      <node id="57510">
        <label>iostream</label>
      </node>
      <node id="57539">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
      </node>
      <node id="57614">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="57552" relation="include">
        </childnode>
        <childnode refid="57615" relation="include">
        </childnode>
      </node>
      <node id="57541">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="57535" relation="include">
        </childnode>
      </node>
      <node id="57553">
        <label>cstddef</label>
      </node>
      <node id="57554">
        <label>unordered_map</label>
      </node>
      <node id="57597">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57539" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
        <childnode refid="57555" relation="include">
        </childnode>
      </node>
      <node id="57572">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57573" relation="include">
        </childnode>
        <childnode refid="57574" relation="include">
        </childnode>
        <childnode refid="57580" relation="include">
        </childnode>
        <childnode refid="57577" relation="include">
        </childnode>
        <childnode refid="57587" relation="include">
        </childnode>
        <childnode refid="57589" relation="include">
        </childnode>
        <childnode refid="57578" relation="include">
        </childnode>
        <childnode refid="57575" relation="include">
        </childnode>
        <childnode refid="57579" relation="include">
        </childnode>
        <childnode refid="57590" relation="include">
        </childnode>
        <childnode refid="57593" relation="include">
        </childnode>
        <childnode refid="57594" relation="include">
        </childnode>
      </node>
      <node id="57538">
        <label>climits</label>
      </node>
      <node id="57594">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="57567">
        <label>mutex</label>
      </node>
      <node id="57546">
        <label>chrono</label>
      </node>
      <node id="57585">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="57523">
        <label>csignal</label>
      </node>
      <node id="57616">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="57617" relation="include">
        </childnode>
        <childnode refid="57596" relation="include">
        </childnode>
        <childnode refid="57598" relation="include">
        </childnode>
      </node>
      <node id="57617">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="57561" relation="include">
        </childnode>
        <childnode refid="57560" relation="include">
        </childnode>
      </node>
      <node id="57565">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57566" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57567" relation="include">
        </childnode>
        <childnode refid="57568" relation="include">
        </childnode>
        <childnode refid="57511" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
      </node>
      <node id="57547">
        <label>type_traits</label>
      </node>
      <node id="57566">
        <label>set</label>
      </node>
      <node id="57563">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="57564" relation="include">
        </childnode>
      </node>
      <node id="57507">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="57589">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="57564" relation="include">
        </childnode>
      </node>
      <node id="57497">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="57498" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57502" relation="include">
        </childnode>
        <childnode refid="57503" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
      </node>
      <node id="57496">
        <label>algorithm</label>
      </node>
      <node id="57577">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57503" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57544" relation="include">
        </childnode>
        <childnode refid="57574" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
      </node>
      <node id="57522">
        <label>execinfo.h</label>
      </node>
      <node id="57588">
        <label>cstring</label>
      </node>
      <node id="57601">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57588" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57536" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57602" relation="include">
        </childnode>
        <childnode refid="57535" relation="include">
        </childnode>
      </node>
      <node id="57599">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="57537" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
      </node>
      <node id="57513">
        <label>memory</label>
      </node>
      <node id="57587">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="57553" relation="include">
        </childnode>
        <childnode refid="57588" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
        <childnode refid="57576" relation="include">
        </childnode>
        <childnode refid="57577" relation="include">
        </childnode>
      </node>
      <node id="57578">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
        <childnode refid="57577" relation="include">
        </childnode>
        <childnode refid="57576" relation="include">
        </childnode>
        <childnode refid="57564" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
      </node>
      <node id="57526">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="57527" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MCCGSolver_8H" kindref="compound">AMReX_MCCGSolver.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>values<sp/>for<sp/>these<sp/>in<sp/>Initialize()!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1ae05da5eb36acf3226889ff349b982cc5" kindref="member">MCCGSolver::def_maxiter</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1a00208f13edc6adf1d115624d2f0e5896" kindref="member">MCCGSolver::def_verbose</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1adbb2d6c25ce5d9a779e799534b5b90a3" kindref="member">MCCGSolver::def_isExpert</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MCCGSolver_1ab7c9edae0568cb7221b4f2a7a6c8bf89" kindref="member">MCCGSolver::def_unstable_criterion</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1a5bfc289cf8e870cc5b1f3c8bcbef259c" kindref="member">MCCGSolver::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>defaults<sp/>here!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>MCCGSolver::def_maxiter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>MCCGSolver::def_verbose<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>MCCGSolver::def_isExpert<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>MCCGSolver::def_unstable_criterion<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ParmParse<sp/>pp(</highlight><highlight class="stringliteral">&quot;cg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;maxiter&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1ae05da5eb36acf3226889ff349b982cc5" kindref="member">def_maxiter</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1a00208f13edc6adf1d115624d2f0e5896" kindref="member">def_verbose</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;isExpert&quot;</highlight><highlight class="normal">,<sp/><ref refid="classamrex_1_1MCCGSolver_1adbb2d6c25ce5d9a779e799534b5b90a3" kindref="member">def_isExpert</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;unstable_criterion&quot;</highlight><highlight class="normal">,<sp/><ref refid="classamrex_1_1MCCGSolver_1ab7c9edae0568cb7221b4f2a7a6c8bf89" kindref="member">def_unstable_criterion</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/><ref refid="classamrex_1_1MCCGSolver_1a00208f13edc6adf1d115624d2f0e5896" kindref="member">def_verbose</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_maxiter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCCGSolver_1ae05da5eb36acf3226889ff349b982cc5" kindref="member">def_maxiter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_unstable_criterion<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCCGSolver_1ab7c9edae0568cb7221b4f2a7a6c8bf89" kindref="member">def_unstable_criterion</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_isExpert<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCCGSolver_1adbb2d6c25ce5d9a779e799534b5b90a3" kindref="member">def_isExpert</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref>(<ref refid="classamrex_1_1MCCGSolver_1af51e8dc97acea4a946ae8eab56ff01d2" kindref="member">MCCGSolver::Finalize</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1af51e8dc97acea4a946ae8eab56ff01d2" kindref="member">MCCGSolver::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1ab55bf033f00e65a388658d9956f666c4" kindref="member">MCCGSolver::MCCGSolver</ref><sp/>(MCLinOp&amp;<sp/>_lp,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_use_mg_precond,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lev)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1aeee5195f76b84b035425eedc100bcf19" kindref="member">mg_precond</ref>(NULL),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1ad9b81280f291f125be775cfbcc43149b" kindref="member">use_mg_precond</ref>(_use_mg_precond),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1a67daa471cadd81cbb09965c635596445" kindref="member">isExpert</ref>((int)<ref refid="classamrex_1_1MCCGSolver_1adbb2d6c25ce5d9a779e799534b5b90a3" kindref="member">def_isExpert</ref>),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1a166d6c36b89a891affdcf6119ccd84be" kindref="member">Lp</ref>(_lp),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCCGSolver_1aed9b8949788d702a4f659f9edb7215a4" kindref="member">lev</ref>(_lev)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1a20ce8b97ab1c99080dd1cd36dc623200" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>maxiter<sp/>=<sp/>def_maxiter;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>=<sp/><ref refid="classamrex_1_1MCLinOp_1a46a805edef342618ac1dbc55736a6c7e" kindref="member">def_verbose</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>set_mg_precond();</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1a29525b43a69948599ddf8f28ee19ed16" kindref="member">MCCGSolver::set_mg_precond</ref><sp/>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mg_precond;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_mg_precond)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>mg_precond<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MCMultiGrid(Lp);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mg_precond-&gt;setNumIter(1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1a4c096b58139bcee0a597db9fe71d8655" kindref="member">MCCGSolver::~MCCGSolver</ref><sp/>()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mg_precond;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1aba7af676d39a70ba4eeedaf9a4d8b76c" kindref="member">MCCGSolver::norm</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>res)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>max-norm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0,<sp/>ncomp<sp/>=<sp/>res.nComp();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>restot<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:restot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(res,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>restot<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(restot,<sp/>res[mfi].<ref refid="classamrex_1_1MCLinOp_1abf551f80ea266a0968e23bd59aa18437" kindref="member">norm</ref>(mfi.tilebox(),<sp/>p,<sp/>0,<sp/>ncomp));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a552f084c17efd580d0962eb68e6b43ee" kindref="member">ParallelDescriptor::ReduceRealMax</ref>(restot);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>restot;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1ace6373248b084bc0f3bda2389408f32a" kindref="member">MCCGSolver::solve</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps_abs,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc_mode)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>algorithm:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>k=0;r=rhs-A*soln_0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>while<sp/>(||r_k||^2_2<sp/>&gt;<sp/>eps^2*||r_o||^2_2<sp/>&amp;&amp;<sp/>k<sp/>&lt;<sp/>maxiter<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>k++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>solve<sp/>Mz_k-1<sp/>=<sp/>r_k-1<sp/>(if<sp/>preconditioning,<sp/>else<sp/>z_k-1<sp/>=<sp/>r_k-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rho_k-1<sp/>=<sp/>r_k-1^T<sp/>z_k-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(k=1)<sp/>{<sp/>p_1<sp/>=<sp/>z_0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{<sp/>beta<sp/>=<sp/>rho_k-1/rho_k-2;<sp/>p<sp/>=<sp/>z<sp/>+<sp/>beta*p<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>Ap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>rho_k-1/p^tw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>alpha<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>alpha<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(sol.boxArray()<sp/>==<sp/>Lp.boxArray(lev));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(rhs.boxArray()<sp/>==<sp/>Lp.boxArray(lev));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost<sp/>=<sp/>1,<sp/>ncomp<sp/><sp/>=<sp/>sol.nComp();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba<sp/>=<sp/>sol.boxArray();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/>=<sp/>sol.DistributionMap();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>s(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>r(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>z(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>w(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>p(ba,<sp/>dm,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>initial<sp/>guess<sp/>into<sp/>a<sp/>temp<sp/>multifab<sp/>guaranteed<sp/>to<sp/>have<sp/>ghost<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp=0;<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp=0;<sp/><sp/>nghost=0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copy(sol,srccomp,destcomp,ncomp);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>assumes<sp/>the<sp/>MCLinOp<sp/>is<sp/>linear,<sp/>and<sp/>that<sp/>when<sp/>bc_mode<sp/>=</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>MCHomogeneous_BC,<sp/>MCLinOp::apply()<sp/>on<sp/>a<sp/>zero<sp/>vector<sp/>will<sp/>return<sp/>a<sp/>zero</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>vector.<sp/><sp/>Given<sp/>that,<sp/>we<sp/>define<sp/>the<sp/>problem<sp/>we<sp/>solve<sp/>here<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>original<sp/>equation:</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp(sol)<sp/>=<sp/>rhs<sp/>--&gt;<sp/>Lp(s)<sp/>+<sp/>Lp(sol,bc_mode=MCHomogeneous_BC)<sp/>=<sp/>rhs</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>where<sp/>s<sp/>is<sp/>set<sp/>to<sp/>the<sp/>incoming<sp/>solution<sp/>guess.<sp/><sp/>Rewriting,</highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp(sol,bc_mode=MCHomogeneous_BC)<sp/>=<sp/>r<sp/><sp/><sp/><sp/><sp/>[<sp/>=<sp/>rhs<sp/>-<sp/>Lp(s)<sp/>].</highlight></codeline>
<codeline lineno="164"><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>CG<sp/>needs<sp/>the<sp/>residual<sp/>of<sp/>this<sp/>equation<sp/>on<sp/>our<sp/>initial<sp/>guess.<sp/><sp/>But</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>because<sp/>we<sp/>made<sp/>the<sp/>above<sp/>assumption,</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-<sp/>Lp(sol,bc_mode=MCHomogeneous_BC)<sp/>=<sp/>r<sp/>=<sp/>rhs<sp/>-<sp/>Lp(s)</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Which<sp/>is<sp/>simply<sp/>the<sp/>residual<sp/>of<sp/>the<sp/>original<sp/>equation<sp/>evaluated<sp/>at</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>initial<sp/>guess.<sp/><sp/>Thus<sp/>we<sp/>get<sp/>by<sp/>with<sp/>only<sp/>one<sp/>call<sp/>to<sp/>Lp.residual.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Without<sp/>this<sp/>assumption,<sp/>we&apos;d<sp/>need<sp/>two.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.residual(r,<sp/>rhs,<sp/>s,<sp/>lev,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>guess<sp/>for<sp/>correction<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>sol.setVal(0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bc_mode=homogeneous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>temp_bc_mode=<ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7aea690909eddef5100a075a6465dc94537f" kindref="member">MCHomogeneous_BC</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>rnorm<sp/><sp/>=<sp/><ref refid="classamrex_1_1MCLinOp_1abf551f80ea266a0968e23bd59aa18437" kindref="member">norm</ref>(r);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>rnorm0<sp/>=<sp/>rnorm;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>minrnorm<sp/>=<sp/>rnorm;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>will<sp/>return<sp/>this<sp/>value<sp/>if<sp/>all<sp/>goes<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>lev;<sp/>k++)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCCGsolver:<sp/>Initial<sp/>error<sp/>(error0)<sp/>=<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rnorm0<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1DivVis_1a5eda3ced4c66caa08c7d18a51c470b81" kindref="member">beta</ref><sp/>=<sp/>0,<sp/>rho<sp/>=<sp/>0,<sp/>rhoold<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WARNING:</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>The<sp/>MultiFab<sp/>copies<sp/>used<sp/>below<sp/>to<sp/>update<sp/>z<sp/>and<sp/>p<sp/>require<sp/>nghost=0</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>to<sp/>avoid<sp/>the<sp/>possibility<sp/>of<sp/>filling<sp/>valid<sp/>regions<sp/>with<sp/>uninitialized</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>data<sp/>in<sp/>the<sp/>invalid<sp/>regions<sp/>of<sp/>neighboring<sp/>grids.<sp/><sp/>The<sp/>default</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>behavior<sp/>in<sp/>MultiFab<sp/>copies<sp/>will<sp/>likely<sp/>be<sp/>changed<sp/>in<sp/>the<sp/>future.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>if<sp/>eps_rel<sp/>or<sp/>eps_abs<sp/>&lt;<sp/>0:<sp/>that<sp/>test<sp/>is<sp/>effectively<sp/>bypassed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nit<sp/>&lt;<sp/>maxiter)<sp/>&amp;&amp;<sp/>(rnorm<sp/>&gt;<sp/>eps_rel*rnorm0)<sp/>&amp;&amp;<sp/>(rnorm<sp/>&gt;<sp/>eps_abs);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nit)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_mg_precond)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>Mz_k-1<sp/>=<sp/>r_k-1<sp/><sp/>and<sp/><sp/>rho_k-1<sp/>=<sp/>r_k-1^T<sp/>z_k-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.setVal(0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mg_precond-&gt;solve(<sp/>z,<sp/>r,<sp/>eps_rel,<sp/>eps_abs,<sp/>temp_bc_mode<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>preconditioner,<sp/>z_k-1<sp/>=<sp/>r_k-1<sp/><sp/>and<sp/><sp/>rho_k-1<sp/>=<sp/>r_k-1^T<sp/>r_k-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp=0;<sp/><sp/>destcomp=0;<sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.copy(r,<sp/>srccomp,<sp/>destcomp,<sp/>ncomp);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>rho<sp/>=<sp/><ref refid="classamrex_1_1MultiFab_1a891a75562cd2f21525d54eb493ae0e2c" kindref="member">MultiFab::Dot</ref>(r,<sp/>0,<sp/>z,<sp/>0,<sp/>ncomp,<sp/>0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nit<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k=1,<sp/>p_1<sp/>=<sp/>z_0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp=0;<sp/><sp/>destcomp=0;<sp/><sp/>nghost=0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.copy(z,<sp/>srccomp,<sp/>destcomp,<sp/>ncomp);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>k&gt;1,<sp/>beta<sp/>=<sp/>rho_k-1/rho_k-2<sp/>and<sp/><sp/>p<sp/>=<sp/>z<sp/>+<sp/>beta*p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>rho/rhoold;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advance(<sp/>p,<sp/>beta,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>w<sp/>=<sp/>Ap,<sp/>and<sp/>compute<sp/>Transpose(p).w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>pw<sp/>=<sp/>axp(<sp/>w,<sp/>p,<sp/>temp_bc_mode<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alpha<sp/>=<sp/>rho_k-1/p^tw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1DivVis_1ae044bb26690a4e3b989a12f93d5cb0ee" kindref="member">alpha</ref><sp/>=<sp/>rho/pw;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>2<sp/>&amp;&amp;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>lev;<sp/>k++)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCCGSolver:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nit<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nit</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pw<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>pw<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rho<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rho</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>alpha<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1DivVis_1ae044bb26690a4e3b989a12f93d5cb0ee" kindref="member">alpha</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nit<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>beta<sp/>undefined<sp/>...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>beta<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>beta<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>+=<sp/>alpha<sp/>p<sp/><sp/>and<sp/><sp/>r<sp/>-=<sp/>alpha<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>rhoold<sp/>=<sp/>rho;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>update(<sp/>sol,<sp/>alpha,<sp/>r,<sp/>p,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>rnorm<sp/>=<sp/><ref refid="classamrex_1_1MCLinOp_1abf551f80ea266a0968e23bd59aa18437" kindref="member">norm</ref>(r);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rnorm<sp/>&gt;<sp/>def_unstable_criterion*minrnorm)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rnorm<sp/>&lt;<sp/>minrnorm)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minrnorm<sp/>=<sp/>rnorm;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((eps_rel<sp/>&gt;<sp/>0.<sp/>&amp;&amp;<sp/>rnorm<sp/>&lt;<sp/>eps_rel*rnorm0)<sp/>||</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(eps_abs<sp/>&gt;<sp/>0.<sp/>&amp;&amp;<sp/>rnorm<sp/>&lt;<sp/>eps_abs))<sp/>&amp;&amp;<sp/><ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref>))</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>lev;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCCGSolver:<sp/>Iteration<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>nit</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>error/error0<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rnorm/rnorm0<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>isExpert<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;MCCGSolver::<sp/>apparent<sp/>accuracy<sp/>problem;<sp/>try<sp/>expert<sp/>setting<sp/>or<sp/>change<sp/>unstable_criterion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret==0<sp/>&amp;&amp;<sp/>rnorm<sp/>&gt;<sp/>eps_rel*rnorm0<sp/>&amp;&amp;<sp/>rnorm<sp/>&gt;<sp/>eps_abs)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;MCCGSolver::<sp/>failed<sp/>to<sp/>converge!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Omit<sp/>ghost<sp/>update<sp/>since<sp/>maybe<sp/>not<sp/>initialized<sp/>in<sp/>calling<sp/>routine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp=0;<sp/>nghost=0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol.plus(s,srccomp,ncomp,nghost);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1a1a14c82bd18f0e27f95922a978baa11c" kindref="member">MCCGSolver::advance</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>z)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>p<sp/>=<sp/>z<sp/><sp/>+<sp/><sp/>beta<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>p.nComp();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1aa06c264011c21bb5a97070ae7cf250d3" kindref="member">MultiFab::Xpay</ref>(p,<sp/>beta,<sp/>z,<sp/>0,<sp/>0,<sp/>ncomp,<sp/>nghost);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1ae50e37542d2b4e0541dadba8c6d70718" kindref="member">MCCGSolver::update</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>p,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>w)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>sol<sp/>=+<sp/>alpha<sp/>p<sp/><sp/>and<sp/><sp/>r<sp/>-=<sp/>alpha<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>r.nComp();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1a505eb471a78f4e0f8791b10cbb1bbd75" kindref="member">MultiFab::Saxpy</ref>(sol,<sp/><sp/>alpha,<sp/>p,<sp/>0,<sp/>0,<sp/>ncomp,<sp/>0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1a505eb471a78f4e0f8791b10cbb1bbd75" kindref="member">MultiFab::Saxpy</ref>(r<sp/><sp/>,<sp/>-alpha,<sp/>w,<sp/>0,<sp/>0,<sp/>ncomp,<sp/>0);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="classamrex_1_1MCCGSolver_1a7cc070d27df8fb7a2fae8791f02138d2" kindref="member">MCCGSolver::axp</ref><sp/>(MultiFab&amp;<sp/>w,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>p,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>w<sp/>=<sp/>A.p,<sp/>and<sp/>return<sp/>Transpose(p).w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.apply(w,<sp/>p,<sp/>lev,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MultiFab_1a891a75562cd2f21525d54eb493ae0e2c" kindref="member">MultiFab::Dot</ref>(w,0,p,0,p.nComp(),nghost);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.cpp"/>
  </compounddef>
</doxygen>
