<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="DfftC_8cpp" kind="file" language="C++">
    <compoundname>DfftC.cpp</compoundname>
    <includes refid="complex-type_8h" local="yes">complex-type.h</includes>
    <includes local="yes">Distribution.hpp</includes>
    <includes local="yes">Dfft.hpp</includes>
    <incdepgraph>
      <node id="70201">
        <label>complex-type.h</label>
        <link refid="complex-type_8h"/>
        <childnode refid="70202" relation="include">
        </childnode>
        <childnode refid="70203" relation="include">
        </childnode>
      </node>
      <node id="70204">
        <label>Distribution.hpp</label>
      </node>
      <node id="70205">
        <label>Dfft.hpp</label>
      </node>
      <node id="70202">
        <label>complex.h</label>
      </node>
      <node id="70203">
        <label>math.h</label>
      </node>
      <node id="70200">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp</label>
        <link refid="DfftC_8cpp"/>
        <childnode refid="70201" relation="include">
        </childnode>
        <childnode refid="70204" relation="include">
        </childnode>
        <childnode refid="70205" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="DfftC_8cpp_1a5abb7f78fab2e8daddbf5afee87027a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
        <definition>hacc::Dfft* Dfft__new</definition>
        <argsstring>(hacc::Distribution &amp;dist)</argsstring>
        <name>Dfft__new</name>
        <param>
          <type><ref refid="classhacc_1_1Distribution" kindref="compound">hacc::Distribution</ref> &amp;</type>
          <declname>dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="65" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a812ef28631621718d7df5c66db6517d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__makePlans</definition>
        <argsstring>(hacc::Dfft *This, complex_t *forward_output, complex_t *forward_scratch, complex_t *backward_input, complex_t *backward_scratch, unsigned int flags)</argsstring>
        <name>Dfft__makePlans</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>forward_output</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>forward_scratch</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>backward_input</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>backward_scratch</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="69" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a6b440f9b2f557fb5b8abdccf2cac27b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__forward</definition>
        <argsstring>(hacc::Dfft *This, complex_t const *in)</argsstring>
        <name>Dfft__forward</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> const *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="74" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a95144e8870a24236a140430fef294d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__backward</definition>
        <argsstring>(hacc::Dfft *This, complex_t *out)</argsstring>
        <name>Dfft__backward</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="78" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1ac465c6b0fd3926393182ceef728181dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Dfft__global_size</definition>
        <argsstring>(hacc::Dfft *This)</argsstring>
        <name>Dfft__global_size</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="82" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a4937929930691aed994ef4851accadd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Dfft__local_size</definition>
        <argsstring>(hacc::Dfft *This)</argsstring>
        <name>Dfft__local_size</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="86" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1ada1975d15faa8a6fff4f0e959bbe537a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__global_ng</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__global_ng</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a7c97912eb92004db47e8ce89b26b616e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__self_rspace</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__self_rspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="94" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1ace4b4d45329003c9736dff0d945d0b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__nproc_rspace</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__nproc_rspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="98" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a8bd0eba2f771735e6c76d8b8f7d6d07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__local_ng_rspace</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__local_ng_rspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="102" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a618f67a3b0d67c3cde0ca74a2e010d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__self_kspace</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__self_kspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="106" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1aac1b1cbdc84cab5376f2e1da18716a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__nproc_kspace</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__nproc_kspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="110" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a87a38025d08de558a6b376a5f67ea65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__local_ng_kspace</definition>
        <argsstring>(hacc::Dfft *This, int n[3])</argsstring>
        <name>Dfft__local_ng_kspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="114" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a89ddfb31a062ed50b1a049c0f1f24627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MPI_Fint</type>
        <definition>MPI_Fint Dfft__parent_comm</definition>
        <argsstring>(hacc::Dfft *This)</argsstring>
        <name>Dfft__parent_comm</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="118" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a459dee3e4c4234e3fd484adb7ccbf347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MPI_Fint</type>
        <definition>MPI_Fint Dfft__cartcomm_rspace</definition>
        <argsstring>(hacc::Dfft *This)</argsstring>
        <name>Dfft__cartcomm_rspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="123" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a74bbfab1483ec3b3d51ef756a0c0ba84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MPI_Fint</type>
        <definition>MPI_Fint Dfft__cartcomm_kspace</definition>
        <argsstring>(hacc::Dfft *This)</argsstring>
        <name>Dfft__cartcomm_kspace</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="128" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="DfftC_8cpp_1a75d54e326acd97b4e2aff6cf087265f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dfft__delete</definition>
        <argsstring>(hacc::Dfft *This)</argsstring>
        <name>Dfft__delete</name>
        <param>
          <type><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref> *</type>
          <declname>This</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" line="133" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2017,<sp/>UChicago<sp/>Argonne,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hardware/Hybrid<sp/>Cosmology<sp/>Code<sp/>(HACC),<sp/>Version<sp/>1.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Salman<sp/>Habib,<sp/>Adrian<sp/>Pope,<sp/>Hal<sp/>Finkel,<sp/>Nicholas<sp/>Frontiere,<sp/>Katrin<sp/>Heitmann,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Vitali<sp/>Morozov,<sp/>Jeffrey<sp/>Emberson,<sp/>Thomas<sp/>Uram,<sp/>Esteban<sp/>Rangel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Argonne<sp/>National<sp/>Laboratory)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>David<sp/>Daniel,<sp/>Patricia<sp/>Fasel,<sp/>Chung-Hsing<sp/>Hsu,<sp/>Zarija<sp/>Lukic,<sp/>James<sp/>Ahrens</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Los<sp/>Alamos<sp/>National<sp/>Laboratory)</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>George<sp/>Zagaris</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Kitware)</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPEN<sp/>SOURCE<sp/>LICENSE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/>Software<sp/>changes,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>modifications,<sp/>or<sp/>derivative<sp/>works,<sp/>should<sp/>be<sp/>noted<sp/>with<sp/>comments<sp/>and</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>author<sp/>and<sp/>organization&apos;s<sp/>name.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/>3.<sp/>Neither<sp/>the<sp/>names<sp/>of<sp/>UChicago<sp/>Argonne,<sp/>LLC<sp/>or<sp/>the<sp/>Department<sp/>of<sp/>Energy</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>permission.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/>4.<sp/>The<sp/>software<sp/>and<sp/>the<sp/>end-user<sp/>documentation<sp/>included<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>redistribution,<sp/>if<sp/>any,<sp/>must<sp/>include<sp/>the<sp/>following<sp/>acknowledgment:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>produced<sp/>by<sp/>UChicago<sp/>Argonne,<sp/>LLC<sp/>under</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Contract<sp/>No.<sp/>DE-AC02-06CH11357<sp/>with<sp/>the<sp/>Department<sp/>of<sp/>Energy.&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DISCLAIMER</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>SUPPLIED<sp/>&quot;AS<sp/>IS&quot;<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND.<sp/>NEITHER<sp/>THE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>UNITED<sp/>STATES<sp/>GOVERNMENT,<sp/>NOR<sp/>THE<sp/>UNITED<sp/>STATES<sp/>DEPARTMENT<sp/>OF<sp/>ENERGY,<sp/>NOR<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>UCHICAGO<sp/>ARGONNE,<sp/>LLC,<sp/>NOR<sp/>ANY<sp/>OF<sp/>THEIR<sp/>EMPLOYEES,<sp/>MAKES<sp/>ANY<sp/>WARRANTY,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>OR<sp/>ASSUMES<sp/>ANY<sp/>LEGAL<sp/>LIABILITY<sp/>OR<sp/>RESPONSIBILITY<sp/>FOR<sp/>THE</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>ACCURARY,<sp/>COMPLETENESS,<sp/>OR<sp/>USEFULNESS<sp/>OF<sp/>ANY<sp/>INFORMATION,<sp/>DATA,<sp/>APPARATUS,</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>PRODUCT,<sp/>OR<sp/>PROCESS<sp/>DISCLOSED,<sp/>OR<sp/>REPRESENTS<sp/>THAT<sp/>ITS<sp/>USE<sp/>WOULD<sp/>NOT<sp/>INFRINGE</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>PRIVATELY<sp/>OWNED<sp/>RIGHTS.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">//<sp/>Give<sp/>C<sp/>linkage<sp/>to<sp/>C++<sp/>Dfft<sp/>class<sp/>so<sp/>that<sp/>Fortran<sp/>can<sp/>access<sp/>its<sp/>functions.<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="complex-type_8h" kindref="compound">complex-type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Distribution.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Dfft.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/><ref refid="DfftC_8cpp_1a5abb7f78fab2e8daddbf5afee87027a3" kindref="member">Dfft__new</ref>(<ref refid="classhacc_1_1Distribution" kindref="compound">hacc::Distribution</ref><sp/>&amp;dist)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>(dist);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a812ef28631621718d7df5c66db6517d0" kindref="member">Dfft__makePlans</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*forward_output,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*forward_scratch,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*backward_input,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*backward_scratch,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a98aaf8b4a82c0802d0138e58b8437f28" kindref="member">makePlans</ref>(forward_output,<sp/>forward_scratch,<sp/>backward_input,<sp/>backward_scratch,<sp/>flags);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a6b440f9b2f557fb5b8abdccf2cac27b9" kindref="member">Dfft__forward</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*in)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a652ffd252711fcce9a5cc65d32da877e" kindref="member">forward</ref>(in);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a95144e8870a24236a140430fef294d93" kindref="member">Dfft__backward</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*out)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a74dd1b872a7f137e6d55d69b1444d2ba" kindref="member">backward</ref>(out);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1ac465c6b0fd3926393182ceef728181dc" kindref="member">Dfft__global_size</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1abbb83da0e457618c5996adb332acebba" kindref="member">global_size</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a4937929930691aed994ef4851accadd9" kindref="member">Dfft__local_size</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a0d0b051631c3eb9c462a7a443c84f497" kindref="member">local_size</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1ada1975d15faa8a6fff4f0e959bbe537a" kindref="member">Dfft__global_ng</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a09b95c8056554177f0d12989a4e4347a" kindref="member">global_ng</ref>(i);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a7c97912eb92004db47e8ce89b26b616e" kindref="member">Dfft__self_rspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1ae54bac8976186442b13938414aa4825b" kindref="member">self_rspace</ref>(i);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1ace4b4d45329003c9736dff0d945d0b7b" kindref="member">Dfft__nproc_rspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1addd454e0e45d8052ce1c5cbace27e643" kindref="member">nproc_rspace</ref>(i);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a8bd0eba2f771735e6c76d8b8f7d6d07d" kindref="member">Dfft__local_ng_rspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a80cda3f267109eace9820179fea3028b" kindref="member">local_ng_rspace</ref>(i);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a618f67a3b0d67c3cde0ca74a2e010d62" kindref="member">Dfft__self_kspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1ae48de8e54139379a38236176c624ecc3" kindref="member">self_kspace</ref>(i);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1aac1b1cbdc84cab5376f2e1da18716a4e" kindref="member">Dfft__nproc_kspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a7acb4a231d8f4ac7cebe7290e154e32c" kindref="member">nproc_kspace</ref>(i);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a87a38025d08de558a6b376a5f67ea65c" kindref="member">Dfft__local_ng_kspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[3])<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>n[i]<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a8f5425ac672068dbfff3467676171ead" kindref="member">local_ng_kspace</ref>(i);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>MPI_Fint<sp/><ref refid="DfftC_8cpp_1a89ddfb31a062ed50b1a049c0f1f24627" kindref="member">Dfft__parent_comm</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a147c850d5f2d2f2a825382bac8724f06" kindref="member">parent_comm</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_Comm_c2f(comm);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>MPI_Fint<sp/><ref refid="DfftC_8cpp_1a459dee3e4c4234e3fd484adb7ccbf347" kindref="member">Dfft__cartcomm_rspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1a2c5dcf97c4702a0223c16e2318aceeab" kindref="member">cartcomm_rspace</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_Comm_c2f(comm);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>MPI_Fint<sp/><ref refid="DfftC_8cpp_1a74bbfab1483ec3b3d51ef756a0c0ba84" kindref="member">Dfft__cartcomm_kspace</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/>This-&gt;<ref refid="classhacc_1_1Dfft_1afb4b5d0e56a4434cc632221e5b5d595f" kindref="member">cartcomm_kspace</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_Comm_c2f(comm);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="DfftC_8cpp_1a75d54e326acd97b4e2aff6cf087265f5" kindref="member">Dfft__delete</ref>(<ref refid="classhacc_1_1Dfft" kindref="compound">hacc::Dfft</ref>*<sp/>This)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>This;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/SWFFT/DfftC.cpp"/>
  </compounddef>
</doxygen>
