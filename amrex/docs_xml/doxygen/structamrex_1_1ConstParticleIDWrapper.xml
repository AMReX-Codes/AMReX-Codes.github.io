<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1ConstParticleIDWrapper" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ConstParticleIDWrapper</compoundname>
    <includes refid="AMReX__Particle_8H" local="no">AMReX_Particle.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ConstParticleIDWrapper_1a3034f52dc837cdb8c2e04fdd15572955" prot="public" static="no" mutable="no">
        <type>const uint64_t *</type>
        <definition>const uint64_t* amrex::ConstParticleIDWrapper::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="192" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ConstParticleIDWrapper_1a23992ae324f3497aa1cb29dbfbf31f1d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ConstParticleIDWrapper::ConstParticleIDWrapper</definition>
        <argsstring>(const uint64_t &amp;idata) noexcept</argsstring>
        <name>ConstParticleIDWrapper</name>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>idata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="195" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleIDWrapper_1acd09e1f256d86bd0c812c2e996943e8d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ConstParticleIDWrapper::operator Long</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="200" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="200" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleIDWrapper_1a99ca4e7f4965c5e182f8f3deec969e54" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE bool amrex::ConstParticleIDWrapper::is_valid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check the sign of the id.</para>
<para>Returns true if the id is positive, otherwise false (invalid particle). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="217" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="217" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="190" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="191" bodyend="222"/>
    <listofallmembers>
      <member refid="structamrex_1_1ConstParticleIDWrapper_1a23992ae324f3497aa1cb29dbfbf31f1d" prot="public" virt="non-virtual"><scope>amrex::ConstParticleIDWrapper</scope><name>ConstParticleIDWrapper</name></member>
      <member refid="structamrex_1_1ConstParticleIDWrapper_1a99ca4e7f4965c5e182f8f3deec969e54" prot="public" virt="non-virtual"><scope>amrex::ConstParticleIDWrapper</scope><name>is_valid</name></member>
      <member refid="structamrex_1_1ConstParticleIDWrapper_1a3034f52dc837cdb8c2e04fdd15572955" prot="public" virt="non-virtual"><scope>amrex::ConstParticleIDWrapper</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ConstParticleIDWrapper_1acd09e1f256d86bd0c812c2e996943e8d" prot="public" virt="non-virtual"><scope>amrex::ConstParticleIDWrapper</scope><name>operator Long</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
