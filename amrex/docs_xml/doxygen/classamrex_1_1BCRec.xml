<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1BCRec" kind="class" language="C++" prot="public">
    <compoundname>amrex::BCRec</compoundname>
    <includes refid="AMReX__BCRec_8H" local="no">AMReX_BCRec.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1BCRec_1acd3cc14f58d5b646f9baef5eeee57253" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::BCRec::bc[2 *3]</definition>
        <argsstring>[2 *3]</argsstring>
        <name>bc</name>
        <qualifiedname>amrex::BCRec::bc</qualifiedname>
        <initializer>{ BCType::bogus , BCType::bogus , BCType::bogus ,
               BCType::bogus , BCType::bogus , BCType::bogus }</initializer>
        <briefdescription>
<para>Array of integer values describing boundary conditions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="144" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="144" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1BCRec_1affeac94615b2dec72ac2ebe71ed34982" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::BCRec::BCRec</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>BCRec</name>
        <qualifiedname>amrex::BCRec::BCRec</qualifiedname>
        <briefdescription>
<para>The default constructor, which does NOT set valid boundary types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1af8e99e3eb1255f0b59e241ed3bc17913" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::BCRec::BCRec</definition>
        <argsstring>(int loX, int loY, int loZ, int hiX, int hiY, int hiZ) noexcept</argsstring>
        <name>BCRec</name>
        <qualifiedname>amrex::BCRec::BCRec</qualifiedname>
        <param>
          <type>int</type>
          <declname>loX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hiX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hiY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hiZ</declname>
        </param>
        <briefdescription>
<para>The constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="30" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a5d506d94ab62ffb36df24e19646851c9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::BCRec::BCRec</definition>
        <argsstring>(const int *a_lo, const int *a_hi) noexcept</argsstring>
        <name>BCRec</name>
        <qualifiedname>amrex::BCRec::BCRec</qualifiedname>
        <param>
          <type>const int *</type>
          <declname>a_lo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>a_hi</declname>
        </param>
        <briefdescription>
<para>Another constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="39" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a21adb1217a4c6ddbcfd0b02ed5ad93f3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::BCRec::BCRec</definition>
        <argsstring>(const Box &amp;bx, const Box &amp;domain, const BCRec &amp;bc_domain) noexcept</argsstring>
        <name>BCRec</name>
        <qualifiedname>amrex::BCRec::BCRec</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>bc_domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="48" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="48" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a9e129477429bab2c49de73c41964c5fa" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::BCRec::setLo</definition>
        <argsstring>(int dir, int bc_val) noexcept</argsstring>
        <name>setLo</name>
        <qualifiedname>amrex::BCRec::setLo</qualifiedname>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bc_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="68" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1ad7661b7b3aa77687283eaa1e879b70c3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::BCRec::setHi</definition>
        <argsstring>(int dir, int bc_val) noexcept</argsstring>
        <name>setHi</name>
        <qualifiedname>amrex::BCRec::setHi</qualifiedname>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bc_val</declname>
        </param>
        <briefdescription>
<para>Explicitly set hi bndry value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="73" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1afaee2a2ee262fd0eedba130c32dbaad8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::BCRec::set</definition>
        <argsstring>(Orientation face, int bc_val) noexcept</argsstring>
        <name>set</name>
        <qualifiedname>amrex::BCRec::set</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bc_val</declname>
        </param>
        <briefdescription>
<para>Explicitly set bndry value for given face. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="78" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a853953b57bb4580004a23d1e725f1640" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ const int *</type>
        <definition>__host__ __device__ const int * amrex::BCRec::vect</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>vect</name>
        <qualifiedname>amrex::BCRec::vect</qualifiedname>
        <briefdescription>
<para>Return bndry values (used in calls to FORTRAN). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="89" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a0bd8779fb0529f60bb7c0aae9ddbc72e" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>const int *</type>
        <definition>const int * amrex::BCRec::vect</definition>
        <argsstring>() &amp;&amp;=delete</argsstring>
        <name>vect</name>
        <qualifiedname>amrex::BCRec::vect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="90" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a531d56a5dd6ec35a0d6203bd82e8fad3" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ const int *</type>
        <definition>__host__ __device__ const int * amrex::BCRec::data</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>data</name>
        <qualifiedname>amrex::BCRec::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="93" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a105bd635055a3ee6287960f131666965" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>const int *</type>
        <definition>const int * amrex::BCRec::data</definition>
        <argsstring>() &amp;&amp;=delete</argsstring>
        <name>data</name>
        <qualifiedname>amrex::BCRec::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="94" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a6aa075e8e6b0c22588c8441285eef926" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ const int *</type>
        <definition>__host__ __device__ const int * amrex::BCRec::lo</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>lo</name>
        <qualifiedname>amrex::BCRec::lo</qualifiedname>
        <briefdescription>
<para>Return low-end boundary data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="100" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a9c1107a9df49a03985577c3286be0f0f" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>const int *</type>
        <definition>const int * amrex::BCRec::lo</definition>
        <argsstring>() &amp;&amp;=delete</argsstring>
        <name>lo</name>
        <qualifiedname>amrex::BCRec::lo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="101" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a653a844fb1d7621cc28b1a17fa3eb5e3" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ const int *</type>
        <definition>__host__ __device__ const int * amrex::BCRec::hi</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>hi</name>
        <qualifiedname>amrex::BCRec::hi</qualifiedname>
        <briefdescription>
<para>Return high-end boundary data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="106" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a6cd8d75c01a0df14b456e20865113b5e" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>const int *</type>
        <definition>const int * amrex::BCRec::hi</definition>
        <argsstring>() &amp;&amp;=delete</argsstring>
        <name>hi</name>
        <qualifiedname>amrex::BCRec::hi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="107" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a269f720df8015ce3493f9bc27e1cef88" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int amrex::BCRec::lo</definition>
        <argsstring>(int dir) const noexcept</argsstring>
        <name>lo</name>
        <qualifiedname>amrex::BCRec::lo</qualifiedname>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Return low-end boundary data in direction &lt;dir&gt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="112" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1aa9cb6e9a033e4624361abf3bf380e904" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int amrex::BCRec::hi</definition>
        <argsstring>(int dir) const noexcept</argsstring>
        <name>hi</name>
        <qualifiedname>amrex::BCRec::hi</qualifiedname>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Return high-end boundary data in direction &lt;dir&gt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="117" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a6ef475f006053e1079d2567bb2268214" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ bool</type>
        <definition>__host__ __device__ bool amrex::BCRec::operator==</definition>
        <argsstring>(const BCRec &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>amrex::BCRec::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equal test. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="122" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a669494c3d523ef4dc0fdb022ce9a8bb0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ bool</type>
        <definition>__host__ __device__ bool amrex::BCRec::operator!=</definition>
        <argsstring>(const BCRec &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>amrex::BCRec::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Not equal test. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="134" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="134" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1BCRec_1a9581c3a2335a29038935fd0897e288c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const BCRec &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>amrex::BCRec::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <defname>b</defname>
        </param>
        <briefdescription>
<para>ASCII write to ostream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="138" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.cpp" bodystart="35" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Boundary Condition Records. Necessary information and functions for computing boundary conditions. </para>
    </briefdescription>
    <detaileddescription>
<para>This class has standard layout. And we should keep it so! </para>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BCRec.H" bodystart="17" bodyend="146"/>
    <listofallmembers>
      <member refid="classamrex_1_1BCRec_1acd3cc14f58d5b646f9baef5eeee57253" prot="private" virt="non-virtual"><scope>amrex::BCRec</scope><name>bc</name></member>
      <member refid="classamrex_1_1BCRec_1affeac94615b2dec72ac2ebe71ed34982" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1af8e99e3eb1255f0b59e241ed3bc17913" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1a5d506d94ab62ffb36df24e19646851c9" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1a21adb1217a4c6ddbcfd0b02ed5ad93f3" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1a531d56a5dd6ec35a0d6203bd82e8fad3" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>data</name></member>
      <member refid="classamrex_1_1BCRec_1a105bd635055a3ee6287960f131666965" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>data</name></member>
      <member refid="classamrex_1_1BCRec_1a653a844fb1d7621cc28b1a17fa3eb5e3" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>hi</name></member>
      <member refid="classamrex_1_1BCRec_1a6cd8d75c01a0df14b456e20865113b5e" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>hi</name></member>
      <member refid="classamrex_1_1BCRec_1aa9cb6e9a033e4624361abf3bf380e904" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>hi</name></member>
      <member refid="classamrex_1_1BCRec_1a6aa075e8e6b0c22588c8441285eef926" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>lo</name></member>
      <member refid="classamrex_1_1BCRec_1a9c1107a9df49a03985577c3286be0f0f" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>lo</name></member>
      <member refid="classamrex_1_1BCRec_1a269f720df8015ce3493f9bc27e1cef88" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>lo</name></member>
      <member refid="classamrex_1_1BCRec_1a669494c3d523ef4dc0fdb022ce9a8bb0" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>operator!=</name></member>
      <member refid="classamrex_1_1BCRec_1a9581c3a2335a29038935fd0897e288c2" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>operator&lt;&lt;</name></member>
      <member refid="classamrex_1_1BCRec_1a6ef475f006053e1079d2567bb2268214" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>operator==</name></member>
      <member refid="classamrex_1_1BCRec_1afaee2a2ee262fd0eedba130c32dbaad8" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>set</name></member>
      <member refid="classamrex_1_1BCRec_1ad7661b7b3aa77687283eaa1e879b70c3" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>setHi</name></member>
      <member refid="classamrex_1_1BCRec_1a9e129477429bab2c49de73c41964c5fa" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>setLo</name></member>
      <member refid="classamrex_1_1BCRec_1a853953b57bb4580004a23d1e725f1640" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>vect</name></member>
      <member refid="classamrex_1_1BCRec_1a0bd8779fb0529f60bb7c0aae9ddbc72e" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>vect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
