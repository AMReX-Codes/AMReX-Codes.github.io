<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1TagVector" kind="struct" language="C++" prot="public">
    <compoundname>amrex::TagVector</compoundname>
    <includes refid="AMReX__TagParallelFor_8H" local="no">AMReX_TagParallelFor.H</includes>
    <templateparamlist>
      <param>
        <type>class TagType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1TagVector_1a1c9fbfab8dd3f9bf1b0a4ee38565f557" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::TagVector&lt; TagType &gt;::h_buffer</definition>
        <argsstring></argsstring>
        <name>h_buffer</name>
        <qualifiedname>amrex::TagVector::h_buffer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="161" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1aaf744066f8a2dfc5a64a2d9e385c70a1" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::TagVector&lt; TagType &gt;::d_buffer</definition>
        <argsstring></argsstring>
        <name>d_buffer</name>
        <qualifiedname>amrex::TagVector::d_buffer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="162" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1a48496a433dea988096c36113440def57" prot="public" static="no" mutable="no">
        <type>TagType *</type>
        <definition>TagType* amrex::TagVector&lt; TagType &gt;::d_tags</definition>
        <argsstring></argsstring>
        <name>d_tags</name>
        <qualifiedname>amrex::TagVector::d_tags</qualifiedname>
        <initializer>=  nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="163" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1a85b4b629401412ebbea2860622652333" prot="public" static="no" mutable="no">
        <type>int *</type>
        <definition>int* amrex::TagVector&lt; TagType &gt;::d_nwarps</definition>
        <argsstring></argsstring>
        <name>d_nwarps</name>
        <qualifiedname>amrex::TagVector::d_nwarps</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="164" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1ad253e12a5290c844b64d2b5d733872f9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::TagVector&lt; TagType &gt;::ntags</definition>
        <argsstring></argsstring>
        <name>ntags</name>
        <qualifiedname>amrex::TagVector::ntags</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="165" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1aad8fe5f64043014457983e3619506da4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::TagVector&lt; TagType &gt;::ntotwarps</definition>
        <argsstring></argsstring>
        <name>ntotwarps</name>
        <qualifiedname>amrex::TagVector::ntotwarps</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="166" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1ad84621ddfd1f19af5952f62f8ffc2c51" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::TagVector&lt; TagType &gt;::nblocks</definition>
        <argsstring></argsstring>
        <name>nblocks</name>
        <qualifiedname>amrex::TagVector::nblocks</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="167" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1TagVector_1a5ffca8fb6f3f39f520ed404c1d6e8c15" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::TagVector&lt; TagType &gt;::defined</definition>
        <argsstring></argsstring>
        <name>defined</name>
        <qualifiedname>amrex::TagVector::defined</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="168" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="168" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1TagVector_1ae7f50b15f949c3799aee9bc08755f094" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::TagVector&lt; TagType &gt;::nthreads</definition>
        <argsstring></argsstring>
        <name>nthreads</name>
        <qualifiedname>amrex::TagVector::nthreads</qualifiedname>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="169" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="169" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1TagVector_1af4f6b9f8b5332fab939ba59797bb3ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TagVector&lt; TagType &gt;::TagVector</definition>
        <argsstring>()=default</argsstring>
        <name>TagVector</name>
        <qualifiedname>amrex::TagVector::TagVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="171" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1aa06bf83ea754bcf65335430eabe3640e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TagVector&lt; TagType &gt;::TagVector</definition>
        <argsstring>(Vector&lt; TagType &gt; const &amp;tags)</argsstring>
        <name>TagVector</name>
        <qualifiedname>amrex::TagVector::TagVector</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; TagType &gt; const &amp;</type>
          <declname>tags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="173" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1a0fd15bb6193536f2603b35e16b0dde2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TagVector&lt; TagType &gt;::~TagVector</definition>
        <argsstring>()</argsstring>
        <name>~TagVector</name>
        <qualifiedname>amrex::TagVector::~TagVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="177" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1a40abbdbc5d73b68489187108e9ab1479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TagVector&lt; TagType &gt;::TagVector</definition>
        <argsstring>(const TagVector &amp;other)=delete</argsstring>
        <name>TagVector</name>
        <qualifiedname>amrex::TagVector::TagVector</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1TagVector" kindref="compound">TagVector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="183" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1ad7b52b6c5d741594d1e823f419d79892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1TagVector" kindref="compound">TagVector</ref> &amp;</type>
        <definition>TagVector &amp; amrex::TagVector&lt; TagType &gt;::operator=</definition>
        <argsstring>(const TagVector &amp;other)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::TagVector::operator=</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1TagVector" kindref="compound">TagVector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="184" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1a05e94d62226f2259f9d1c3afe0621cbe" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TagVector&lt; TagType &gt;::TagVector</definition>
        <argsstring>(TagVector &amp;&amp;other) noexcept</argsstring>
        <name>TagVector</name>
        <qualifiedname>amrex::TagVector::TagVector</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1TagVector" kindref="compound">TagVector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="185" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="185" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1ab01e5340039e0395cdb9c0cdc6fd0fcf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1TagVector" kindref="compound">TagVector</ref> &amp;</type>
        <definition>TagVector &amp; amrex::TagVector&lt; TagType &gt;::operator=</definition>
        <argsstring>(TagVector &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::TagVector::operator=</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1TagVector" kindref="compound">TagVector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="204" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="204" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1aa50872435c05b37a441e370bcc1056c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::TagVector&lt; TagType &gt;::is_defined</definition>
        <argsstring>() const</argsstring>
        <name>is_defined</name>
        <qualifiedname>amrex::TagVector::is_defined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="228" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1af55f404062e55bd61f372f0aa7a49ca1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagVector&lt; TagType &gt;::define</definition>
        <argsstring>(Vector&lt; TagType &gt; const &amp;tags)</argsstring>
        <name>define</name>
        <qualifiedname>amrex::TagVector::define</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; TagType &gt; const &amp;</type>
          <declname>tags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="230" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="230" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1TagVector_1aec1614ffb611fd37cfa4f5b11027b764" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagVector&lt; TagType &gt;::undefine</definition>
        <argsstring>()</argsstring>
        <name>undefine</name>
        <qualifiedname>amrex::TagVector::undefine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="291" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="291" bodyend="305"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" line="159" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H" bodystart="159" bodyend="306"/>
    <listofallmembers>
      <member refid="structamrex_1_1TagVector_1aaf744066f8a2dfc5a64a2d9e385c70a1" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>d_buffer</name></member>
      <member refid="structamrex_1_1TagVector_1a85b4b629401412ebbea2860622652333" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>d_nwarps</name></member>
      <member refid="structamrex_1_1TagVector_1a48496a433dea988096c36113440def57" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>d_tags</name></member>
      <member refid="structamrex_1_1TagVector_1af55f404062e55bd61f372f0aa7a49ca1" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>define</name></member>
      <member refid="structamrex_1_1TagVector_1a5ffca8fb6f3f39f520ed404c1d6e8c15" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>defined</name></member>
      <member refid="structamrex_1_1TagVector_1a1c9fbfab8dd3f9bf1b0a4ee38565f557" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>h_buffer</name></member>
      <member refid="structamrex_1_1TagVector_1aa50872435c05b37a441e370bcc1056c9" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>is_defined</name></member>
      <member refid="structamrex_1_1TagVector_1ad84621ddfd1f19af5952f62f8ffc2c51" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>nblocks</name></member>
      <member refid="structamrex_1_1TagVector_1ad253e12a5290c844b64d2b5d733872f9" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>ntags</name></member>
      <member refid="structamrex_1_1TagVector_1ae7f50b15f949c3799aee9bc08755f094" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>nthreads</name></member>
      <member refid="structamrex_1_1TagVector_1aad8fe5f64043014457983e3619506da4" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>ntotwarps</name></member>
      <member refid="structamrex_1_1TagVector_1ad7b52b6c5d741594d1e823f419d79892" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>operator=</name></member>
      <member refid="structamrex_1_1TagVector_1ab01e5340039e0395cdb9c0cdc6fd0fcf" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>operator=</name></member>
      <member refid="structamrex_1_1TagVector_1af4f6b9f8b5332fab939ba59797bb3ca8" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>TagVector</name></member>
      <member refid="structamrex_1_1TagVector_1aa06bf83ea754bcf65335430eabe3640e" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>TagVector</name></member>
      <member refid="structamrex_1_1TagVector_1a40abbdbc5d73b68489187108e9ab1479" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>TagVector</name></member>
      <member refid="structamrex_1_1TagVector_1a05e94d62226f2259f9d1c3afe0621cbe" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>TagVector</name></member>
      <member refid="structamrex_1_1TagVector_1aec1614ffb611fd37cfa4f5b11027b764" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>undefine</name></member>
      <member refid="structamrex_1_1TagVector_1a0fd15bb6193536f2603b35e16b0dde2e" prot="public" virt="non-virtual"><scope>amrex::TagVector</scope><name>~TagVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
