<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="AMReX__EB2__IndexSpaceI_8H" kind="file" language="C++">
    <compoundname>AMReX_EB2_IndexSpaceI.H</compoundname>
    <includedby refid="AMReX__EB2_8H" local="no">/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</includedby>
    <invincdepgraph>
      <node id="9">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="8">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="10">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="7">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H</label>
        <link refid="AMReX__FillPatcher_8H"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="12">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H</label>
        <link refid="AMReX__EB2__IndexSpaceI_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_STL.H</label>
        <link refid="AMReX__EB2__IndexSpace__STL_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_STL.cpp</label>
        <link refid="AMReX__EB2__IndexSpace__STL_8cpp"/>
      </node>
      <node id="16">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_chkpt_file.H</label>
        <link refid="AMReX__EB2__IndexSpace__chkpt__file_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_chkpt_file.cpp</label>
        <link refid="AMReX__EB2__IndexSpace__chkpt__file_8cpp"/>
      </node>
      <node id="18">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="20">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_FluxRedistribute.cpp</label>
        <link refid="AMReX__EB__FluxRedistribute_8cpp"/>
      </node>
      <node id="19">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Redistribution.H</label>
        <link refid="AMReX__EB__Redistribution_8H"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Redistribution.cpp</label>
        <link refid="AMReX__EB__Redistribution_8cpp"/>
      </node>
      <node id="22">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_RedistributionApply.cpp</label>
        <link refid="AMReX__EB__RedistributionApply_8cpp"/>
      </node>
      <node id="23">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistItracker.cpp</label>
        <link refid="AMReX__EB__StateRedistItracker_8cpp"/>
      </node>
      <node id="24">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistUtils.cpp</label>
        <link refid="AMReX__EB__StateRedistUtils_8cpp"/>
      </node>
      <node id="25">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistribute.cpp</label>
        <link refid="AMReX__EB__StateRedistribute_8cpp"/>
      </node>
      <node id="26">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="28">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="29">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="30">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLaplacian.cpp</label>
        <link refid="AMReX__MLEBNodeFDLaplacian_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="3" refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ad6b841229e1fb87dc97f4ee2845ec152" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp" kindref="compound">IndexSpaceImp&lt;G&gt;::IndexSpaceImp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G&amp;<sp/>gshop,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;<sp/>geom,</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>required_coarsening_level,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_coarsening_level,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngrow,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>build_coarse_level_by_coarsening,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extend_domain_face,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_coarsen_opt)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_gshop(gshop),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_build_coarse_level_by_coarsening(build_coarse_level_by_coarsening),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_extend_domain_face(<ref refid="namespaceamrex_1_1EB2_1aacfb27dff7f9916a9ff6b261672ca715" kindref="member">extend_domain_face</ref>),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_num_coarsen_opt(<ref refid="namespaceamrex_1_1EB2_1a87408955c0fa835eb58386e859dcd4f6" kindref="member">num_coarsen_opt</ref>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>finest<sp/>level<sp/>(i.e.,<sp/>level<sp/>0)<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(required_coarsening_level<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>required_coarsening_level<sp/>&lt;=<sp/>30);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>max_coarsening_level<sp/>=<sp/>std::max(required_coarsening_level,max_coarsening_level);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>max_coarsening_level<sp/>=<sp/>std::min(30,max_coarsening_level);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngrow_finest<sp/>=<sp/>std::max(ngrow,0);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>required_coarsening_level;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngrow_finest<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.push_back(geom);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a961c595a3d22b06da38b244becb9f3e3" kindref="member">m_domain</ref>.push_back(geom.<ref refid="classamrex_1_1Geometry_1a66c00602d2e3c0a2ed1404f2ced3932a" kindref="member">Domain</ref>());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" kindref="member">m_ngrow</ref>.push_back(ngrow_finest);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.reserve(max_coarsening_level+1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.emplace_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>gshop,<sp/>geom,<sp/><ref refid="namespaceamrex_1_1EB2_1a6a03e6a896276bd89190ad6eee9566e1" kindref="member">EB2::max_grid_size</ref>,<sp/>ngrow_finest,<sp/><ref refid="namespaceamrex_1_1EB2_1aacfb27dff7f9916a9ff6b261672ca715" kindref="member">extend_domain_face</ref>,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1EB2_1a87408955c0fa835eb58386e859dcd4f6" kindref="member">num_coarsen_opt</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilev<sp/>=<sp/>1;<sp/>ilev<sp/>&lt;=<sp/>max_coarsening_level;<sp/>++ilev)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>coarsenable<sp/>=<sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.back().Domain().coarsenable(2,2);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!coarsenable)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ilev<sp/>&lt;=<sp/>required_coarsening_level)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;IndexSpaceImp:<sp/>domain<sp/>is<sp/>not<sp/>coarsenable<sp/>at<sp/>level<sp/>&quot;</highlight><highlight class="normal">+std::to_string(ilev));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>(ilev<sp/>&gt;<sp/>required_coarsening_level)<sp/>?<sp/>0<sp/>:<sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" kindref="member">m_ngrow</ref>.back()/2;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoxND" kindref="compound">Box</ref><sp/>cdomain<sp/>=<sp/><ref refid="namespaceamrex_1a5af1ac4b7471ba90a59e111dd0dd2b22" kindref="member">amrex::coarsen</ref>(<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.back().Domain(),2);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref><sp/>cgeom<sp/>=<sp/><ref refid="namespaceamrex_1a5af1ac4b7471ba90a59e111dd0dd2b22" kindref="member">amrex::coarsen</ref>(<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.back(),2);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.emplace_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ilev,<sp/><ref refid="namespaceamrex_1_1EB2_1a6a03e6a896276bd89190ad6eee9566e1" kindref="member">EB2::max_grid_size</ref>,<sp/>ng,<sp/>cgeom,<sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>[ilev-1]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.back().isOK())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.pop_back();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ilev<sp/>&lt;=<sp/>required_coarsening_level)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(build_coarse_level_by_coarsening)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>build<sp/>required<sp/>coarse<sp/>EB<sp/>level<sp/>&quot;</highlight><highlight class="normal">+std::to_string(ilev));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.emplace_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>gshop,<sp/>cgeom,<sp/><ref refid="namespaceamrex_1_1EB2_1a6a03e6a896276bd89190ad6eee9566e1" kindref="member">EB2::max_grid_size</ref>,<sp/>ng,<sp/><ref refid="namespaceamrex_1_1EB2_1aacfb27dff7f9916a9ff6b261672ca715" kindref="member">extend_domain_face</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1EB2_1a87408955c0fa835eb58386e859dcd4f6" kindref="member">num_coarsen_opt</ref>-ilev);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.push_back(cgeom);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a961c595a3d22b06da38b244becb9f3e3" kindref="member">m_domain</ref>.push_back(cdomain);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" kindref="member">m_ngrow</ref>.push_back(ng);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref>&amp;</highlight></codeline>
<codeline lineno="68" refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a1eeaab4266c11166a3072eea2f888f52" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a1eeaab4266c11166a3072eea2f888f52" kindref="member">IndexSpaceImp&lt;G&gt;::getLevel</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find(std::begin(m_domain),<sp/>std::end(m_domain),<sp/>geom.<ref refid="classamrex_1_1Geometry_1a66c00602d2e3c0a2ed1404f2ced3932a" kindref="member">Domain</ref>());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>std::distance(m_domain.begin(),<sp/>it);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_gslevel[i];</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp;</highlight></codeline>
<codeline lineno="77" refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ac216284322537eefb6a3817e784a716d" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ac216284322537eefb6a3817e784a716d" kindref="member">IndexSpaceImp&lt;G&gt;::getGeometry</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxND" kindref="compound">Box</ref>&amp;<sp/>dom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="78"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find(std::begin(m_domain),<sp/>std::end(m_domain),<sp/>dom);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>std::distance(m_domain.begin(),<sp/>it);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_geom[i];</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a5be42585336a617690b28a56e5c3bc1e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a5be42585336a617690b28a56e5c3bc1e" kindref="member">IndexSpaceImp&lt;G&gt;::addFineLevels</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_new_fine_levels)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_new_fine_levels<sp/>&lt;=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_num_coarsen_opt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_num_coarsen_opt<sp/>+=<sp/>num_new_fine_levels;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp" kindref="compound">IndexSpaceImp&lt;G&gt;</ref><sp/>fine_isp(m_gshop,<sp/><ref refid="namespaceamrex_1ae102526cec1dc978897cc1d9a4ebae65" kindref="member">amrex::refine</ref>(m_geom[0],<sp/>1&lt;&lt;num_new_fine_levels),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_new_fine_levels-1,<sp/>num_new_fine_levels-1,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ngrow[0],<sp/>m_build_coarse_level_by_coarsening,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_extend_domain_face,<sp/>m_num_coarsen_opt);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.reserve(m_domain.size()+num_new_fine_levels);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_domain.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>.emplace_back(std::move(m_gslevel[i]));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" kindref="member">m_gslevel</ref>,<sp/>m_gslevel);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m_geom.insert(m_geom.begin(),<sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.begin(),<sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" kindref="member">m_geom</ref>.end());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_domain.insert(m_domain.begin(),<sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a961c595a3d22b06da38b244becb9f3e3" kindref="member">m_domain</ref>.begin(),<sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a961c595a3d22b06da38b244becb9f3e3" kindref="member">m_domain</ref>.end());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ngrow.insert(m_ngrow.begin(),<sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" kindref="member">m_ngrow</ref>.begin(),<sp/>fine_isp.<ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" kindref="member">m_ngrow</ref>.end());</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a6a7071824d8cf842a187f86b15683537" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a6a7071824d8cf842a187f86b15683537" kindref="member">IndexSpaceImp&lt;G&gt;::addRegularCoarseLevels</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_new_coarse_levels)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_new_coarse_levels<sp/>&lt;=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nlevs_old<sp/>=<sp/>int(m_gslevel.size());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlevs_new<sp/>=<sp/>nlevs_old<sp/>+<sp/>num_new_coarse_levels;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;GShopLevel&lt;G&gt;</ref>&gt;<sp/>new_gslevel;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>new_gslevel.reserve(nlevs_new);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Geometry&gt;</ref><sp/>new_geom;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>new_geom.reserve(nlevs_new);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Box&gt;</ref><sp/>new_domain;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>new_domain.reserve(nlevs_new);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>new_ngrow;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>new_ngrow.reserve(nlevs_new);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilev<sp/>=<sp/>0;<sp/>ilev<sp/>&lt;<sp/>num_new_coarse_levels;<sp/>++ilev)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>(num_new_coarse_levels-ilev);<sp/></highlight><highlight class="comment">//<sp/>2^(num_new_coarse_levels-ilev)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_geom.push_back(<ref refid="namespaceamrex_1a5af1ac4b7471ba90a59e111dd0dd2b22" kindref="member">amrex::coarsen</ref>(m_geom[0],<sp/>rr));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_domain.push_back(new_geom.back().Domain());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_ngrow.push_back(m_ngrow[0]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_gslevel.push_back(<ref refid="classamrex_1_1EB2_1_1GShopLevel" kindref="compound">GShopLevel&lt;G&gt;::makeAllRegular</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>new_geom.back()));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilev<sp/>=<sp/>0;<sp/>ilev<sp/>&lt;<sp/>nlevs_old;<sp/>++ilev)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_gslevel.emplace_back(std::move(m_gslevel[ilev]));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_geom.push_back<sp/><sp/>(m_geom<sp/><sp/>[ilev]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_domain.push_back(m_domain[ilev]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_ngrow.push_back<sp/>(m_ngrow<sp/>[ilev]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(new_gslevel,<sp/>m_gslevel);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(new_geom<sp/><sp/><sp/>,<sp/>m_geom);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(new_domain<sp/>,<sp/>m_domain);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(new_ngrow<sp/><sp/>,<sp/>m_ngrow);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilev<sp/>=<sp/>num_new_coarse_levels-1;<sp/>ilev<sp/>&gt;=<sp/>0;<sp/>--ilev)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gslevel[ilev].buildCutCellMask(m_gslevel[ilev+1]);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ae4467aff16a7f41a2e985fd833d36130" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ae4467aff16a7f41a2e985fd833d36130" kindref="member">IndexSpaceImp&lt;G&gt;::setShift</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nlevs<sp/>=<sp/>int(m_gslevel.size());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilev<sp/>=<sp/>nlevs-1;<sp/>ilev<sp/>&gt;=<sp/>0;<sp/>--ilev)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gslevel[ilev].setShift(direction,<sp/>ncells);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H"/>
  </compounddef>
</doxygen>
