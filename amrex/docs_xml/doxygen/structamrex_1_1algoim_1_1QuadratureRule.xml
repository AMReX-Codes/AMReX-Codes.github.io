<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1algoim_1_1QuadratureRule" kind="struct" language="C++" prot="public">
    <compoundname>amrex::algoim::QuadratureRule</compoundname>
    <includes refid="AMReX__algoim__K_8H" local="no">AMReX_algoim_K.H</includes>
    <innerclass refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" prot="public">amrex::algoim::QuadratureRule::Node</innerclass>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1QuadratureRule_1af7ae531fe1e05325b891c107d2276c12" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::algoim::QuadratureRule::nnodes</definition>
        <argsstring></argsstring>
        <name>nnodes</name>
        <qualifiedname>amrex::algoim::QuadratureRule::nnodes</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="68" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1QuadratureRule_1aff9ac4f971a67e107e2cf55dd95fad21" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" kindref="compound">Node</ref>, 256 &gt;</type>
        <definition>GpuArray&lt;Node,256&gt; amrex::algoim::QuadratureRule::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <qualifiedname>amrex::algoim::QuadratureRule::nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="69" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1algoim_1_1QuadratureRule_1a2cf1e6ee6cb31106437be98512b87e1e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref></type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ Real</type>
        <definition>__host__ __device__ Real amrex::algoim::QuadratureRule::operator()</definition>
        <argsstring>(const F &amp;f) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::algoim::QuadratureRule::operator()</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="74" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1QuadratureRule_1a8c0ecbe8007302198ad334d402db0f1c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref></type>
          </param>
        </templateparamlist>
        <type>__host__ Real</type>
        <definition>__host__ Real amrex::algoim::QuadratureRule::eval</definition>
        <argsstring>(const F &amp;f) const noexcept</argsstring>
        <name>eval</name>
        <qualifiedname>amrex::algoim::QuadratureRule::eval</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="86" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1QuadratureRule_1ad47ba3066274b8b2570045a32345d0b5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::algoim::QuadratureRule::evalIntegrand</definition>
        <argsstring>(const GpuArray&lt; Real, 3 &gt; &amp;x_, Real w_) noexcept</argsstring>
        <name>evalIntegrand</name>
        <qualifiedname>amrex::algoim::QuadratureRule::evalIntegrand</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt; &amp;</type>
          <declname>x_</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>w_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="99" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="99" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::GpuArray&lt; amrex::algoim::QuadratureRule::Node, 256 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
        <childnode refid="3" relation="usage">
          <edgelabel>arr</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::algoim::QuadratureRule</label>
        <link refid="structamrex_1_1algoim_1_1QuadratureRule"/>
        <childnode refid="2" relation="usage">
          <edgelabel>nodes</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::algoim::QuadratureRule::Node</label>
        <link refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="62" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="63" bodyend="107"/>
    <listofallmembers>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1a8c0ecbe8007302198ad334d402db0f1c" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>eval</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1ad47ba3066274b8b2570045a32345d0b5" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>evalIntegrand</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1af7ae531fe1e05325b891c107d2276c12" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>nnodes</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1aff9ac4f971a67e107e2cf55dd95fad21" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>nodes</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1a2cf1e6ee6cb31106437be98512b87e1e" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
