<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1algoim_1_1QuadratureRule" kind="struct" language="C++" prot="public">
    <compoundname>amrex::algoim::QuadratureRule</compoundname>
    <includes refid="AMReX__algoim__K_8H" local="no">AMReX_algoim_K.H</includes>
    <innerclass refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" prot="public">amrex::algoim::QuadratureRule::Node</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1QuadratureRule_1af7ae531fe1e05325b891c107d2276c12" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::algoim::QuadratureRule::nnodes</definition>
        <argsstring></argsstring>
        <name>nnodes</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="68" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1QuadratureRule_1aff9ac4f971a67e107e2cf55dd95fad21" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" kindref="compound">Node</ref>, 256 &gt;</type>
        <definition>GpuArray&lt;Node,256&gt; amrex::algoim::QuadratureRule::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="69" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1algoim_1_1QuadratureRule_1ab49f0d215d0f61cdc48cefdfda4ed845" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE Real amrex::algoim::QuadratureRule::operator()</definition>
        <argsstring>(const F &amp;f) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="74" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1QuadratureRule_1ade3a8b7cb056567a40e8be98e24d3260" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1af7feff7858c7b1d3557509d883c46674" kindref="member">AMREX_GPU_HOST</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> Real</type>
        <definition>AMREX_GPU_HOST AMREX_FORCE_INLINE Real amrex::algoim::QuadratureRule::eval</definition>
        <argsstring>(const F &amp;f) const noexcept</argsstring>
        <name>eval</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="86" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1QuadratureRule_1a93e5266e3de3f1d636f081e118526ea2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::algoim::QuadratureRule::evalIntegrand</definition>
        <argsstring>(const GpuArray&lt; Real, 3 &gt; &amp;x_, Real w_) noexcept</argsstring>
        <name>evalIntegrand</name>
        <param>
          <type>const <ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt; &amp;</type>
          <declname>x_</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>w_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="99" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="99" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4376">
        <label>Real</label>
      </node>
      <node id="4373">
        <label>amrex::algoim::QuadratureRule</label>
        <link refid="structamrex_1_1algoim_1_1QuadratureRule"/>
        <childnode refid="4374" relation="usage">
          <edgelabel>nodes</edgelabel>
        </childnode>
      </node>
      <node id="4374">
        <label>amrex::GpuArray&lt; amrex::algoim::QuadratureRule::Node, 256 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
        <childnode refid="4375" relation="usage">
          <edgelabel>arr</edgelabel>
        </childnode>
      </node>
      <node id="4375">
        <label>amrex::algoim::QuadratureRule::Node</label>
        <link refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node"/>
        <childnode refid="4376" relation="usage">
          <edgelabel>w</edgelabel>
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="63" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="62" bodyend="107"/>
    <listofallmembers>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1ade3a8b7cb056567a40e8be98e24d3260" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>eval</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1a93e5266e3de3f1d636f081e118526ea2" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>evalIntegrand</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1af7ae531fe1e05325b891c107d2276c12" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>nnodes</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1aff9ac4f971a67e107e2cf55dd95fad21" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>nodes</name></member>
      <member refid="structamrex_1_1algoim_1_1QuadratureRule_1ab49f0d215d0f61cdc48cefdfda4ed845" prot="public" virt="non-virtual"><scope>amrex::algoim::QuadratureRule</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
