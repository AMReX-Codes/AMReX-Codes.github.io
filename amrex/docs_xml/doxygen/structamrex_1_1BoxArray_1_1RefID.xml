<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1BoxArray_1_1RefID" kind="struct" language="C++" prot="public">
    <compoundname>amrex::BoxArray::RefID</compoundname>
    <includes refid="AMReX__BoxArray_8H" local="no">AMReX_BoxArray.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1BoxArray_1_1RefID_1ad5adc4256ccddb386c4d491ae958c5c6" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> *</type>
        <definition>BARef* amrex::BoxArray::RefID::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>amrex::BoxArray::RefID::data</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="834" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="834" bodyend="834"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1BoxArray_1_1RefID_1a3afae958bb4bf99b0eb1705208e3e1b5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoxArray::RefID::RefID</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>RefID</name>
        <qualifiedname>amrex::BoxArray::RefID::RefID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="827" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BoxArray_1_1RefID_1a0adac980947d771e29e1420e5adc4e06" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoxArray::RefID::RefID</definition>
        <argsstring>(BARef *data_) noexcept</argsstring>
        <name>RefID</name>
        <qualifiedname>amrex::BoxArray::RefID::RefID</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> *</type>
          <declname>data_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="828" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="828" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BoxArray_1_1RefID_1a6e0ad88f090537be644ffd04d1e729c8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BoxArray::RefID::operator&lt;</definition>
        <argsstring>(const RefID &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>amrex::BoxArray::RefID::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="829" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="829" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BoxArray_1_1RefID_1ac87a2a13371616bc353f2f0ab21a95d1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BoxArray::RefID::operator==</definition>
        <argsstring>(const RefID &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>amrex::BoxArray::RefID::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="830" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="830" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BoxArray_1_1RefID_1ab9afafb3f06bd646649bc865668e874a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BoxArray::RefID::operator!=</definition>
        <argsstring>(const RefID &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>amrex::BoxArray::RefID::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="831" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="831" bodyend="831"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1BoxArray_1_1RefID_1a0a9c036b70f92f7b043d2e3af67c7135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const RefID &amp;id)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>amrex::BoxArray::RefID::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="832" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="2114" bodyend="2118"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="7">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="826" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="826" bodyend="835"/>
    <listofallmembers>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1ad5adc4256ccddb386c4d491ae958c5c6" prot="private" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>data</name></member>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1ab9afafb3f06bd646649bc865668e874a" prot="public" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1a6e0ad88f090537be644ffd04d1e729c8" prot="public" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>operator&lt;</name></member>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1a0a9c036b70f92f7b043d2e3af67c7135" prot="public" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>operator&lt;&lt;</name></member>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1ac87a2a13371616bc353f2f0ab21a95d1" prot="public" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>operator==</name></member>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1a3afae958bb4bf99b0eb1705208e3e1b5" prot="public" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>RefID</name></member>
      <member refid="structamrex_1_1BoxArray_1_1RefID_1a0adac980947d771e29e1420e5adc4e06" prot="public" virt="non-virtual"><scope>amrex::BoxArray::RefID</scope><name>RefID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
