<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1Math" kind="namespace" language="C++">
    <compoundname>amrex::Math</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Math_1ab79268d67f8a70c6e85ad3dfbbc622a3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; std::is_floating_point&lt; T &gt;::value, T &gt;</type>
        <definition>constexpr std::enable_if_t&lt;std::is_floating_point&lt;T&gt;::value,T&gt; amrex::Math::pi</definition>
        <argsstring>()</argsstring>
        <name>pi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="60" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1ada7d7d19433d7d59ac03689f8b55631d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> double</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE double amrex::Math::cospi</definition>
        <argsstring>(double x)</argsstring>
        <name>cospi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return cos(x*pi) given x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="67" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="67" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1adbc23685ea37023206db656ff45973f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> float</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE float amrex::Math::cospi</definition>
        <argsstring>(float x)</argsstring>
        <name>cospi</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return cos(x*pi) given x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="81" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1a0568425c35018cd1be09a3b08a245585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> double</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE double amrex::Math::sinpi</definition>
        <argsstring>(double x)</argsstring>
        <name>sinpi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return sin(x*pi) given x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="95" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1a209b6bc6888f6b26a5337094aa3b5900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> float</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE float amrex::Math::sinpi</definition>
        <argsstring>(float x)</argsstring>
        <name>sinpi</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return sin(x*pi) given x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="109" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="109" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1ac235809e73ad52f2d6b8c7cf324e9a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> std::pair&lt; double, double &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE std::pair&lt;double,double&gt; amrex::Math::sincos</definition>
        <argsstring>(double x)</argsstring>
        <name>sincos</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return sine and cosine of given number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="123" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1a132a1933870ca2c349d598c1a634dd30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> std::pair&lt; float, float &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE std::pair&lt;float,float&gt; amrex::Math::sincos</definition>
        <argsstring>(float x)</argsstring>
        <name>sincos</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return sine and cosine of given number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="141" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="141" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1af9868b2887bd7c4758a04d4603d10a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> std::pair&lt; double, double &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE std::pair&lt;double,double&gt; amrex::Math::sincospi</definition>
        <argsstring>(double x)</argsstring>
        <name>sincospi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return sin(pi*x) and cos(pi*x) given x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="159" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Math_1aecf367b723c8148d80df1abf95f5dfb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> std::pair&lt; float, float &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE std::pair&lt;float,float&gt; amrex::Math::sincospi</definition>
        <argsstring>(float x)</argsstring>
        <name>sincospi</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return sin(pi*x) and cos(pi*x) given x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="173" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" bodystart="173" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Math.H" line="31" column="1"/>
  </compounddef>
</doxygen>
