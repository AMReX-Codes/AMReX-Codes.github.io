<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__TagBox_8cpp" kind="file" language="C++">
    <compoundname>AMReX_TagBox.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cmath</includes>
    <includes local="no">climits</includes>
    <includes refid="AMReX__TagBox_8H" local="no">AMReX_TagBox.H</includes>
    <includes refid="AMReX__Geometry_8H" local="no">AMReX_Geometry.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__BLProfiler_8H" local="no">AMReX_BLProfiler.H</includes>
    <includes refid="AMReX__ccse-mpi_8H" local="no">AMReX_ccse-mpi.H</includes>
    <incdepgraph>
      <node id="5255">
        <label>atomic</label>
      </node>
      <node id="5292">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
      </node>
      <node id="5312">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="5281" relation="include">
        </childnode>
        <childnode refid="5313" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5314" relation="include">
        </childnode>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5315" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
      </node>
      <node id="5276">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5277" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
      </node>
      <node id="5311">
        <label>iomanip</label>
      </node>
      <node id="5239">
        <label>functional</label>
      </node>
      <node id="5272">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5273" relation="include">
        </childnode>
        <childnode refid="5251" relation="include">
        </childnode>
        <childnode refid="5257" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
      </node>
      <node id="5266">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
      </node>
      <node id="5248">
        <label>limits</label>
      </node>
      <node id="5265">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
      </node>
      <node id="5313">
        <label>iterator</label>
      </node>
      <node id="5249">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5244" relation="include">
        </childnode>
        <childnode refid="5250" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5251" relation="include">
        </childnode>
        <childnode refid="5252" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5253" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
      </node>
      <node id="5237">
        <label>float.h</label>
      </node>
      <node id="5301">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5242" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5215" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5253" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
      </node>
      <node id="5316">
        <label>cstdint</label>
      </node>
      <node id="5326">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5274" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5327" relation="include">
        </childnode>
        <childnode refid="5325" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
      </node>
      <node id="5274">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
      </node>
      <node id="5300">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
      </node>
      <node id="5214">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="5215" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5245" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5238" relation="include">
        </childnode>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5212" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
      </node>
      <node id="5228">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5230" relation="include">
        </childnode>
        <childnode refid="5231" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5233" relation="include">
        </childnode>
        <childnode refid="5215" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5238" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5239" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5226" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
      </node>
      <node id="5267">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="5230">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="5226" relation="include">
        </childnode>
      </node>
      <node id="5306">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="5291">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
      </node>
      <node id="5208">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX_TagBox.cpp"/>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5212" relation="include">
        </childnode>
        <childnode refid="5213" relation="include">
        </childnode>
        <childnode refid="5321" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
      </node>
      <node id="5246">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5215" relation="include">
        </childnode>
      </node>
      <node id="5310">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="5225" relation="include">
        </childnode>
        <childnode refid="5277" relation="include">
        </childnode>
        <childnode refid="5311" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5276" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
      </node>
      <node id="5211">
        <label>cmath</label>
      </node>
      <node id="5232">
        <label>cassert</label>
      </node>
      <node id="5234">
        <label>stdexcept</label>
      </node>
      <node id="5281">
        <label>numeric</label>
      </node>
      <node id="5302">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="5220" relation="include">
        </childnode>
        <childnode refid="5303" relation="include">
        </childnode>
        <childnode refid="5239" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5304" relation="include">
        </childnode>
        <childnode refid="5300" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
      </node>
      <node id="5257">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5251" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
      </node>
      <node id="5254">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5212" relation="include">
        </childnode>
        <childnode refid="5220" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5255" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5256" relation="include">
        </childnode>
        <childnode refid="5257" relation="include">
        </childnode>
        <childnode refid="5258" relation="include">
        </childnode>
        <childnode refid="5261" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5266" relation="include">
        </childnode>
        <childnode refid="5267" relation="include">
        </childnode>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5286" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5238" relation="include">
        </childnode>
      </node>
      <node id="5223">
        <label>string</label>
      </node>
      <node id="5256">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="5249" relation="include">
        </childnode>
      </node>
      <node id="5269">
        <label>map</label>
      </node>
      <node id="5264">
        <label>unordered_set</label>
      </node>
      <node id="5331">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="5332" relation="include">
        </childnode>
        <childnode refid="5333" relation="include">
        </childnode>
      </node>
      <node id="5283">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
      </node>
      <node id="5304">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="5222" relation="include">
        </childnode>
      </node>
      <node id="5271">
        <label>cfloat</label>
      </node>
      <node id="5330">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="5326" relation="include">
        </childnode>
        <childnode refid="5328" relation="include">
        </childnode>
      </node>
      <node id="5286">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
      </node>
      <node id="5277">
        <label>fstream</label>
      </node>
      <node id="5321">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5322" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5323" relation="include">
        </childnode>
        <childnode refid="5325" relation="include">
        </childnode>
      </node>
      <node id="5328">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5326" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5329" relation="include">
        </childnode>
        <childnode refid="5323" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
      </node>
      <node id="5250">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="5235" relation="include">
        </childnode>
      </node>
      <node id="5323">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5220" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5324" relation="include">
        </childnode>
      </node>
      <node id="5219">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="5220" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5225" relation="include">
        </childnode>
        <childnode refid="5226" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5244" relation="include">
        </childnode>
        <childnode refid="5245" relation="include">
        </childnode>
      </node>
      <node id="5298">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5242" relation="include">
        </childnode>
        <childnode refid="5299" relation="include">
        </childnode>
        <childnode refid="5301" relation="include">
        </childnode>
        <childnode refid="5300" relation="include">
        </childnode>
      </node>
      <node id="5218">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="5213">
        <label>AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5254" relation="include">
        </childnode>
        <childnode refid="5318" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5321" relation="include">
        </childnode>
      </node>
      <node id="5327">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
      </node>
      <node id="5242">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="5236">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="5309">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
      </node>
      <node id="5295">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5242" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
        <childnode refid="5296" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5297" relation="include">
        </childnode>
        <childnode refid="5298" relation="include">
        </childnode>
        <childnode refid="5302" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5256" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5293" relation="include">
        </childnode>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5305" relation="include">
        </childnode>
        <childnode refid="5306" relation="include">
        </childnode>
      </node>
      <node id="5332">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
        <childnode refid="5253" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5245" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
      </node>
      <node id="5285">
        <label>sys/types.h</label>
      </node>
      <node id="5325">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
      </node>
      <node id="5280">
        <label>typeinfo</label>
      </node>
      <node id="5226">
        <label>cstdio</label>
      </node>
      <node id="5289">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
      </node>
      <node id="5241">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5242" relation="include">
        </childnode>
      </node>
      <node id="5303">
        <label>tuple</label>
      </node>
      <node id="5278">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="5279" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5225" relation="include">
        </childnode>
        <childnode refid="5226" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
      </node>
      <node id="5315">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5316" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
      </node>
      <node id="5284">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5285" relation="include">
        </childnode>
      </node>
      <node id="5333">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="5279">
        <label>stack</label>
      </node>
      <node id="5240">
        <label>vector</label>
      </node>
      <node id="5320">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5267" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
      </node>
      <node id="5243">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="5228" relation="include">
        </childnode>
      </node>
      <node id="5238">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
      </node>
      <node id="5229">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="5222">
        <label>utility</label>
      </node>
      <node id="5220">
        <label>array</label>
      </node>
      <node id="5318">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5294" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5262" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5319" relation="include">
        </childnode>
        <childnode refid="5320" relation="include">
        </childnode>
        <childnode refid="5274" relation="include">
        </childnode>
        <childnode refid="5321" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5325" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5326" relation="include">
        </childnode>
        <childnode refid="5328" relation="include">
        </childnode>
        <childnode refid="5267" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5330" relation="include">
        </childnode>
        <childnode refid="5254" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5331" relation="include">
        </childnode>
      </node>
      <node id="5329">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5254" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5320" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
      </node>
      <node id="5225">
        <label>sstream</label>
      </node>
      <node id="5233">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="5234" relation="include">
        </childnode>
      </node>
      <node id="5244">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5245" relation="include">
        </childnode>
      </node>
      <node id="5215">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="5216" relation="include">
        </childnode>
      </node>
      <node id="5296">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
      </node>
      <node id="5275">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5276" relation="include">
        </childnode>
        <childnode refid="5278" relation="include">
        </childnode>
        <childnode refid="5265" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5215" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5280" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5239" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5281" relation="include">
        </childnode>
        <childnode refid="5282" relation="include">
        </childnode>
      </node>
      <node id="5268">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5225" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5270" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5212" relation="include">
        </childnode>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5271" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5215" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5274" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5283" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5284" relation="include">
        </childnode>
      </node>
      <node id="5259">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
      </node>
      <node id="5252">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5243" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
      </node>
      <node id="5245">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
      </node>
      <node id="5247">
        <label>iosfwd</label>
      </node>
      <node id="5210">
        <label>cstdlib</label>
      </node>
      <node id="5224">
        <label>iostream</label>
      </node>
      <node id="5251">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
      </node>
      <node id="5253">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5230" relation="include">
        </childnode>
      </node>
      <node id="5260">
        <label>cstddef</label>
      </node>
      <node id="5273">
        <label>unordered_map</label>
      </node>
      <node id="5319">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="5247" relation="include">
        </childnode>
        <childnode refid="5251" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5257" relation="include">
        </childnode>
      </node>
      <node id="5314">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5312" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5294" relation="include">
        </childnode>
      </node>
      <node id="5287">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5230" relation="include">
        </childnode>
        <childnode refid="5231" relation="include">
        </childnode>
        <childnode refid="5242" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5288" relation="include">
        </childnode>
        <childnode refid="5295" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
        <childnode refid="5299" relation="include">
        </childnode>
        <childnode refid="5301" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5307" relation="include">
        </childnode>
        <childnode refid="5308" relation="include">
        </childnode>
        <childnode refid="5297" relation="include">
        </childnode>
        <childnode refid="5296" relation="include">
        </childnode>
        <childnode refid="5298" relation="include">
        </childnode>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5312" relation="include">
        </childnode>
        <childnode refid="5317" relation="include">
        </childnode>
      </node>
      <node id="5212">
        <label>climits</label>
      </node>
      <node id="5317">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="5263">
        <label>mutex</label>
      </node>
      <node id="5270">
        <label>chrono</label>
      </node>
      <node id="5305">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="5282">
        <label>csignal</label>
      </node>
      <node id="5288">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5293" relation="include">
        </childnode>
        <childnode refid="5294" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
      </node>
      <node id="5293">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
      </node>
      <node id="5261">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5262" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5264" relation="include">
        </childnode>
        <childnode refid="5239" relation="include">
        </childnode>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
      </node>
      <node id="5227">
        <label>type_traits</label>
      </node>
      <node id="5262">
        <label>set</label>
      </node>
      <node id="5258">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="5259" relation="include">
        </childnode>
      </node>
      <node id="5217">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="5308">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="5259" relation="include">
        </childnode>
      </node>
      <node id="5209">
        <label>algorithm</label>
      </node>
      <node id="5290">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5220" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5242" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5292" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
      </node>
      <node id="5231">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="5232" relation="include">
        </childnode>
      </node>
      <node id="5299">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5300" relation="include">
        </childnode>
      </node>
      <node id="5294">
        <label>cstring</label>
      </node>
      <node id="5324">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5294" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5240" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5238" relation="include">
        </childnode>
      </node>
      <node id="5322">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="5248" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5246" relation="include">
        </childnode>
        <childnode refid="5249" relation="include">
        </childnode>
      </node>
      <node id="5221">
        <label>memory</label>
      </node>
      <node id="5307">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="5260" relation="include">
        </childnode>
        <childnode refid="5294" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
      </node>
      <node id="5216">
        <label>inttypes.h</label>
      </node>
      <node id="5297">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5241" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5259" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
      </node>
      <node id="5235">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="5236" relation="include">
        </childnode>
        <childnode refid="5237" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="AMReX__TagBox_8cpp_1abc1eab952af4119e0dd12a9cd006daa3" prot="public" static="no">
        <name>OFF</name>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>k</defname></param>
        <param><defname>lo</defname></param>
        <param><defname>len</defname></param>
        <initializer>AMREX_D_TERM(i-lo[0], +(j-lo[1])*len[0] , +(k-lo[2])*len[0]*len[1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp" line="93" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TagBox_8H" kindref="compound">AMReX_TagBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Geometry_8H" kindref="compound">AMReX_Geometry.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLProfiler_8H" kindref="compound">AMReX_BLProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ccse-mpi_8H" kindref="compound">AMReX_ccse-mpi.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1adda034b74e7dc88d8cd42301b61b8285" kindref="member">TagBox::TagBox</ref><sp/>()<sp/>noexcept<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1adda034b74e7dc88d8cd42301b61b8285" kindref="member">TagBox::TagBox</ref><sp/>(Arena*<sp/>ar)<sp/>noexcept</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>BaseFab&lt;TagBox::TagType&gt;(ar)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1adda034b74e7dc88d8cd42301b61b8285" kindref="member">TagBox::TagBox</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>Arena*<sp/>ar)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab</ref>&lt;<ref refid="classamrex_1_1TagBox_1adda034b74e7dc88d8cd42301b61b8285" kindref="member">TagBox</ref>::<ref refid="classamrex_1_1TagBox_1aa3eab6b001470948ab883ec074459049" kindref="member">TagType</ref>&gt;(bx,n,ar)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>setVal&lt;RunOn::Host&gt;(<ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1adda034b74e7dc88d8cd42301b61b8285" kindref="member">TagBox::TagBox</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alloc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shared,<sp/>Arena*<sp/>ar)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>BaseFab&lt;TagBox::TagType&gt;(bx,n,alloc,shared,ar)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alloc)<sp/>setVal&lt;RunOn::Host&gt;(<ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1adda034b74e7dc88d8cd42301b61b8285" kindref="member">TagBox::TagBox</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagBox&amp;<sp/>rhs,<sp/><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6" kindref="member">MakeType</ref><sp/>make_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>BaseFab&lt;TagBox::TagType&gt;(rhs,make_type,scomp,ncomp)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a4c5cdfe01aa0372001178bc376795e47" kindref="member">TagBox::coarsen</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><ref refid="classamrex_1_1InterpolaterBoxCoarsener_1a38dd7e762f41ec784b5dfd70109bb3a8" kindref="member">ratio</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>cbox)<sp/>noexcept</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nComp()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Array4&lt;char<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>farr<sp/>=<sp/>this-&gt;const_array();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>TagBox<sp/>cfab(cbox,<sp/>1,<sp/><ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Array4&lt;char&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>carr<sp/>=<sp/>cfab.array();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>flo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(domain);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fhi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(domain);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Dim3<sp/>r{1,1,1};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(r.x<sp/>=<sp/><ref refid="classamrex_1_1InterpolaterBoxCoarsener_1a38dd7e762f41ec784b5dfd70109bb3a8" kindref="member">ratio</ref>[0];,<sp/>r.y<sp/>=<sp/><ref refid="classamrex_1_1InterpolaterBoxCoarsener_1a38dd7e762f41ec784b5dfd70109bb3a8" kindref="member">ratio</ref>[1];,<sp/>r.z<sp/>=<sp/><ref refid="classamrex_1_1InterpolaterBoxCoarsener_1a38dd7e762f41ec784b5dfd70109bb3a8" kindref="member">ratio</ref>[2]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>flo.z;<sp/>k<sp/>&lt;=<sp/>fhi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kc<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(k,r.z);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>flo.y;<sp/>j<sp/>&lt;=<sp/>fhi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jc<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(j,r.y);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>flo.x;<sp/>i<sp/>&lt;=<sp/>fhi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ic<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(i,r.x);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carr(ic,jc,kc)<sp/>=<sp/>carr(ic,jc,kc)<sp/>||<sp/>farr(i,j,k);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(this-&gt;dataPtr(),<sp/>cfab.dataPtr(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TagType)*cbox.numPts());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;domain<sp/>=<sp/>cbox;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1aa6324edaf14ada2c319e1a5c92062331" kindref="member">TagBox::buffer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>nbuff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>nwid)<sp/>noexcept</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>routine<sp/>assumes<sp/>cell<sp/>with<sp/>TagBox::SET<sp/>tag<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interior<sp/>of<sp/>tagbox<sp/>(region<sp/>=<sp/>grow(domain,-nwid)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>inside(domain);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>inside.grow(-nwid);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>inlo<sp/>=<sp/>inside.loVect();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>inhi<sp/>=<sp/>inside.hiVect();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klo<sp/>=<sp/>0,<sp/>khi<sp/>=<sp/>0,<sp/>jlo<sp/>=<sp/>0,<sp/>jhi<sp/>=<sp/>0,<sp/>ilo,<sp/>ihi;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(ilo=inlo[0];<sp/>ihi=inhi[0];<sp/>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jlo=inlo[1];<sp/>jhi=inhi[1];<sp/>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>klo=inlo[2];<sp/>khi=inhi[2];)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ni<sp/>=<sp/>0,<sp/>nj<sp/>=<sp/>0,<sp/>nk<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(ni=nbuff[0];,<sp/>nj=nbuff[1];,<sp/>nk=nbuff[2];)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>IntVect<sp/>d_length<sp/>=<sp/>domain.size();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>len<sp/>=<sp/>d_length.getVect();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lo<sp/>=<sp/>domain.loVect();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>TagType*<sp/>d<sp/>=<sp/>dataPtr();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(len);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFF(i,j,k,lo,len)<sp/>AMREX_D_TERM(i-lo[0],<sp/>+(j-lo[1])*len[0]<sp/>,<sp/>+(k-lo[2])*len[0]*len[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>klo;<sp/>k<sp/>&lt;=<sp/>khi;<sp/>k++)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>jlo;<sp/>j<sp/>&lt;=<sp/>jhi;<sp/>j++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>ilo;<sp/>i<sp/>&lt;=<sp/>ihi;<sp/>i++)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TagType*<sp/>d_check<sp/>=<sp/>d<sp/>+<sp/><ref refid="AMReX__TagBox_8cpp_1abc1eab952af4119e0dd12a9cd006daa3" kindref="member">OFF</ref>(i,j,k,lo,len);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*d_check<sp/>==<sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa0a8540b96d3e93084532672dad69790c" kindref="member">TagBox::SET</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>-nk;<sp/>kk<sp/>&lt;=<sp/>nk;<sp/>kk++)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>-nj;<sp/>jj<sp/>&lt;=<sp/>nj;<sp/>jj++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>-ni;<sp/>ii<sp/>&lt;=<sp/>ni;<sp/>ii++)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TagType*<sp/>dn<sp/>=<sp/>d_check+<sp/>AMREX_D_TERM(ii,<sp/>+jj*len[0],<sp/>+kk*len[0]*len[1]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*dn<sp/>!=<ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa0a8540b96d3e93084532672dad69790c" kindref="member">TagBox::SET</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dn<sp/>=<sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa5c2d81c416e8ee0e1bd9d475e73d31cf" kindref="member">TagBox::BUF</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a74f54549dc1e225bcbcb312618cfcd17" kindref="member">TagBox::numTags</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>nt<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>len<sp/>=<sp/>domain.numPts();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType*<sp/>d<sp/>=<sp/>dataPtr();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Long<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>len;<sp/>++n)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d[n]<sp/>!=<sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a74f54549dc1e225bcbcb312618cfcd17" kindref="member">TagBox::numTags</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>TagBox<sp/>tempTagBox(b,1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>tempTagBox.copy&lt;<ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2ac2ca16d048ec66e04bca283eab048ec2" kindref="member">RunOn::Host</ref>&gt;(*this);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tempTagBox.numTags();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1ab8219de6cc72d8259c923f063fe3f81a" kindref="member">TagBox::collate</ref><sp/>(Vector&lt;IntVect&gt;&amp;<sp/>ar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(start<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>at<sp/>given<sp/>offset<sp/>of<sp/>array<sp/>ar,<sp/>enter<sp/>location<sp/>(IntVect)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>tagged<sp/>cell<sp/>in<sp/>tagbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>count<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>IntVect<sp/>d_length<sp/>=<sp/>domain.size();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>len<sp/><sp/><sp/>=<sp/>d_length.getVect();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lo<sp/><sp/><sp/><sp/>=<sp/>domain.loVect();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType*<sp/>d<sp/>=<sp/>dataPtr();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ni<sp/>=<sp/>1,<sp/>nj<sp/>=<sp/>1,<sp/>nk<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(ni<sp/>=<sp/>len[0];<sp/>,<sp/>nj<sp/>=<sp/>len[1];<sp/>,<sp/>nk<sp/>=<sp/>len[2];)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>nk;<sp/>k++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nj;<sp/>j++)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ni;<sp/>i++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType*<sp/>dn<sp/>=<sp/>d<sp/>+<sp/>AMREX_D_TERM(i,<sp/>+j*len[0],<sp/>+k*len[0]*len[1]);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*dn<sp/>!=<sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar[start++]<sp/>=<sp/>IntVect(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(lo[0]+i,lo[1]+j,lo[2]+k));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">Vector&lt;int&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a9023e58bfadedd84fa003f9b10712949" kindref="member">TagBox::tags</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>ar(domain.numPts(),<sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType*<sp/>cptr<sp/>=<sp/>dataPtr();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iptr<sp/>=<sp/>ar.dataPtr();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ar.size();<sp/>i++,<sp/>cptr++,<sp/>iptr++)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cptr)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iptr<sp/>=<sp/>*cptr;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ar;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>values<sp/>as<sp/>specified<sp/>by<sp/>the<sp/>array<sp/>--<sp/>this<sp/>only<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>an<sp/>error<sp/>if<sp/>ar.length()<sp/>!=<sp/>domain.numPts().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a9023e58bfadedd84fa003f9b10712949" kindref="member">TagBox::tags</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>ar)<sp/>noexcept</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ar.size()<sp/>==<sp/>domain.numPts());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>TagType*<sp/><sp/><sp/>cptr<sp/>=<sp/>dataPtr();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iptr<sp/>=<sp/>ar.dataPtr();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ar.size();<sp/>i++,<sp/>cptr++,<sp/>iptr++)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iptr)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>*iptr;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>values<sp/>as<sp/>specified<sp/>by<sp/>the<sp/>array<sp/>--<sp/>this<sp/>tags<sp/>and<sp/>untags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>an<sp/>error<sp/>if<sp/>ar.length()<sp/>!=<sp/>domain.numPts().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1af03179052f9fb5a076f95d2bb33e94e2" kindref="member">TagBox::tags_and_untags</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>ar)<sp/>noexcept</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ar.size()<sp/>==<sp/>domain.numPts());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>TagType*<sp/><sp/><sp/>cptr<sp/>=<sp/>dataPtr();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iptr<sp/>=<sp/>ar.dataPtr();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>clears<sp/>as<sp/>well<sp/>as<sp/>sets<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ar.size();<sp/>i++,<sp/>cptr++,<sp/>iptr++)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>*iptr;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>a<sp/>TagBox<sp/>is<sp/>a<sp/>BaseFab&lt;char&gt;,<sp/>we<sp/>can<sp/>use<sp/>this<sp/>utility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>to<sp/>allocate<sp/>an<sp/>integer<sp/>array<sp/>to<sp/>have<sp/>the<sp/>same<sp/>number<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>elements<sp/>as<sp/>cells<sp/>in<sp/>tilebx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a43dbc9ccdad55205e4a95d7ccf6f3691" kindref="member">TagBox::get_itags</ref>(Vector&lt;int&gt;&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tilebx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlen<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lbx[]<sp/>=<sp/>{1,1,1};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim&lt;AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lbx[idim]<sp/>=<sp/>dlen[idim];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride[]<sp/>=<sp/>{1,<sp/>Lbx[0],<sp/>Long(Lbx[0])*Long(Lbx[1])};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>Ntb<sp/>=<sp/>1,<sp/>stb=0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ltb[]<sp/>=<sp/>{1,1,1};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim&lt;AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ltb[idim]<sp/>=<sp/>tilebx.length(idim);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ntb<sp/>*=<sp/>Ltb[idim];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb<sp/>+=<sp/>stride[idim]<sp/>*<sp/>(tilebx.smallEnd(idim)<sp/>-<sp/>domain.smallEnd(idim));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ar.size()<sp/>&lt;<sp/>Ntb)<sp/>ar.resize(Ntb);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p0<sp/><sp/><sp/>=<sp/>dataPtr()<sp/>+<sp/>stb;<sp/><sp/></highlight><highlight class="comment">//<sp/>+stb<sp/>to<sp/>the<sp/>lower<sp/>corner<sp/>of<sp/>tilebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iptr<sp/>=<sp/>ar.dataPtr();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;Ltb[2];<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;Ltb[1];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType*<sp/>cptr<sp/>=<sp/>p0<sp/>+<sp/>j*stride[1]<sp/>+<sp/>k*stride[2];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Ltb[0];<sp/>i++,<sp/>cptr++,<sp/>iptr++)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cptr)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iptr<sp/>=<sp/>*cptr;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iptr<sp/>=<sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>values<sp/>as<sp/>specified<sp/>by<sp/>the<sp/>array<sp/>--<sp/>this<sp/>only<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>changes<sp/>values<sp/>in<sp/>the<sp/>tilebx<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1a9023e58bfadedd84fa003f9b10712949" kindref="member">TagBox::tags</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tilebx)<sp/>noexcept</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlen<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lbx[]<sp/>=<sp/>{1,1,1};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim&lt;AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lbx[idim]<sp/>=<sp/>dlen[idim];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride[]<sp/>=<sp/>{1,<sp/>Lbx[0],<sp/>Long(Lbx[0])*Long(Lbx[1])};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stb=0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ltb[]<sp/>=<sp/>{1,1,1};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim&lt;AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ltb[idim]<sp/>=<sp/>tilebx.length(idim);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb<sp/>+=<sp/>stride[idim]<sp/>*<sp/>(tilebx.smallEnd(idim)<sp/>-<sp/>domain.smallEnd(idim));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>TagType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p0<sp/><sp/><sp/>=<sp/>dataPtr()<sp/>+<sp/>stb;<sp/><sp/></highlight><highlight class="comment">//<sp/>+stb<sp/>to<sp/>the<sp/>lower<sp/>corner<sp/>of<sp/>tilebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>iptr<sp/>=<sp/>ar.dataPtr();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;Ltb[2];<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;Ltb[1];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TagType*<sp/>cptr<sp/>=<sp/>p0<sp/>+<sp/>j*stride[1]<sp/>+<sp/>k*stride[2];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Ltb[0];<sp/>i++,<sp/>cptr++,<sp/>iptr++)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iptr)<sp/>*cptr<sp/>=<sp/>*iptr;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>values<sp/>as<sp/>specified<sp/>by<sp/>the<sp/>array<sp/>--<sp/>this<sp/>tags<sp/>and<sp/>untags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>changes<sp/>values<sp/>in<sp/>the<sp/>tilebx<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><ref refid="classamrex_1_1TagBox_1af03179052f9fb5a076f95d2bb33e94e2" kindref="member">TagBox::tags_and_untags</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tilebx)<sp/>noexcept</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlen<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lbx[]<sp/>=<sp/>{1,1,1};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim&lt;AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lbx[idim]<sp/>=<sp/>dlen[idim];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride[]<sp/>=<sp/>{1,<sp/>Lbx[0],<sp/>Long(Lbx[0])*Long(Lbx[1])};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stb=0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ltb[]<sp/>=<sp/>{1,1,1};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim&lt;AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ltb[idim]<sp/>=<sp/>tilebx.length(idim);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb<sp/>+=<sp/>stride[idim]<sp/>*<sp/>(tilebx.smallEnd(idim)<sp/>-<sp/>domain.smallEnd(idim));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>TagType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p0<sp/><sp/><sp/>=<sp/>dataPtr()<sp/>+<sp/>stb;<sp/><sp/></highlight><highlight class="comment">//<sp/>+stb<sp/>to<sp/>the<sp/>lower<sp/>corner<sp/>of<sp/>tilebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>iptr<sp/>=<sp/>ar.dataPtr();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;Ltb[2];<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;Ltb[1];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TagType*<sp/>cptr<sp/>=<sp/>p0<sp/>+<sp/>j*stride[1]<sp/>+<sp/>k*stride[2];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Ltb[0];<sp/>i++,<sp/>cptr++,<sp/>iptr++)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>*iptr;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a904fcd1905c4871508426269dd4cc14d" kindref="member">TagBoxArray::TagBoxArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ngrow)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>FabArray&lt;TagBox&gt;(ba,dm,1,_ngrow,MFInfo(),DefaultFabFactory&lt;TagBox&gt;())</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SharedMemory())<sp/>setVal(<ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a904fcd1905c4871508426269dd4cc14d" kindref="member">TagBoxArray::TagBoxArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><sp/>_ngrow)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>FabArray&lt;TagBox&gt;(ba,dm,1,_ngrow,MFInfo(),DefaultFabFactory&lt;TagBox&gt;())</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SharedMemory())<sp/>setVal(<ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffaa4711806dfba8eb0c37ad5bb4abde7814" kindref="member">TagBox::CLEAR</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1abb7286cc2647bb4359101e4fafae159d" kindref="member">TagBoxArray::buffer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>nbuf)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::LaunchSafeGuard<sp/>lsg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(nbuf.allLE(n_grow));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbuf.max()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(mfi).buffer(nbuf,<sp/>n_grow);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a3173610e281bd7542514a433a704cd9a" kindref="member">TagBoxArray::mapPeriodicRemoveDuplicates</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;TagBoxArray::mapPRD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::LaunchSafeGuard<sp/>lsg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>TagBoxArray<sp/>tmp(boxArray(),DistributionMap(),0);<sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>tmp<sp/>is<sp/>filled<sp/>w/<sp/>CLEAR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.ParallelAdd(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>nGrowVect(),<sp/>IntVect{0},<sp/>geom.periodicity());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">std::swap</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp);</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a4d717be2a92435644622a931fe75a4c3" kindref="member">TagBoxArray::numTags</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>ntag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::LaunchSafeGuard<sp/>lsg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(+:ntag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntag<sp/>+=<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(mfi).numTags();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a98c9e67e17bd55e681d9e790611a1289" kindref="member">ParallelDescriptor::ReduceLongSum</ref>(ntag);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ntag;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a84132a67bd1a60277dde5c1ca51d7111" kindref="member">TagBoxArray::collate</ref><sp/>(Vector&lt;IntVect&gt;&amp;<sp/>TheGlobalCollateSpace)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="410"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;TagBoxArray::collate()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::LaunchSafeGuard<sp/>lsg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(+:count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>fai(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>fai.isValid();<sp/>++fai)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(fai).numTags();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local<sp/>space<sp/>for<sp/>holding<sp/>just<sp/>those<sp/>tags<sp/>we<sp/>want<sp/>to<sp/>gather<sp/>to<sp/>the<sp/>root<sp/>cpu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;IntVect&gt;<sp/>TheLocalCollateSpace(count);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsafe<sp/>to<sp/>do<sp/>OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>fai(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>fai.isValid();<sp/>++fai)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(fai).collate(TheLocalCollateSpace,count);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>total<sp/>number<sp/>of<sp/>tags<sp/>system<sp/>wide<sp/>that<sp/>must<sp/>be<sp/>collated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>numtags<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a98c9e67e17bd55e681d9e790611a1289" kindref="member">ParallelDescriptor::ReduceLongSum</ref>(numtags);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numtags<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheGlobalCollateSpace.clear();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numtags<sp/>&gt;<sp/>static_cast&lt;Long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>todo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;TagBoxArray::collate:<sp/>Too<sp/>many<sp/>tags.<sp/>Using<sp/>a<sp/>larger<sp/>blocking<sp/>factor<sp/>might<sp/>help.<sp/>Please<sp/>file<sp/>an<sp/>issue<sp/>on<sp/>github&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>I/O<sp/>proc.<sp/>this<sp/>holds<sp/>all<sp/>tags<sp/>after<sp/>they&apos;ve<sp/>been<sp/>gather&apos;d.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>other<sp/>procs.<sp/>non-mempty<sp/>signals<sp/>size<sp/>is<sp/>not<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheGlobalCollateSpace.resize(numtags);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheGlobalCollateSpace.resize(1);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>root<sp/>CPU<sp/>how<sp/>many<sp/>tags<sp/>each<sp/>CPU<sp/>will<sp/>be<sp/>sending.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IOProcNumber<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>countvec<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a5e16712b9f4c3f14537cd0b561758aa5" kindref="member">ParallelDescriptor::Gather</ref>(static_cast&lt;int&gt;(count),</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IOProcNumber);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>offset(countvec.size(),0);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1,<sp/>N<sp/>=<sp/>offset.size();<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset[i]<sp/>=<sp/>offset[i-1]<sp/>+<sp/>countvec[i-1];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>all<sp/>the<sp/>tags<sp/>to<sp/>IOProcNumber<sp/>into<sp/>TheGlobalCollateSpace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect*<sp/>psend<sp/>=<sp/>(count<sp/>&gt;<sp/>0)<sp/>?<sp/>TheLocalCollateSpace.data()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>IntVect*<sp/>precv<sp/>=<sp/>TheGlobalCollateSpace.data();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a211110d15cfcd5d09168c6d415476ce6" kindref="member">ParallelDescriptor::Gatherv</ref>(psend,<sp/>count,<sp/>precv,<sp/>countvec,<sp/>offset,<sp/>IOProcNumber);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>TheGlobalCollateSpace<sp/>=<sp/>std::move(TheLocalCollateSpace);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a5fd4ebbc9753cdded9af8d5e59f0a531" kindref="member">TagBoxArray::setVal</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList&amp;<sp/>bl,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffa" kindref="member">TagBox::TagVal</ref><sp/>val)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxArray<sp/>ba(bl);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>setVal(ba,val);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a5fd4ebbc9753cdded9af8d5e59f0a531" kindref="member">TagBoxArray::setVal</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxDomain&amp;<sp/>bd,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffa" kindref="member">TagBox::TagVal</ref><sp/><sp/><sp/>val)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>setVal(bd.boxList(),val);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1a5fd4ebbc9753cdded9af8d5e59f0a531" kindref="member">TagBoxArray::setVal</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffa" kindref="member">TagBox::TagVal</ref><sp/><sp/>val)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::LaunchSafeGuard<sp/>lsg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.intersections(mfi.fabbox(),isects);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TagBox&amp;<sp/>tags<sp/>=<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(mfi);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>N<sp/>=<sp/>isects.size();<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tags.setVal&lt;<ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2ac2ca16d048ec66e04bca283eab048ec2" kindref="member">RunOn::Host</ref>&gt;(val,isects[i].second,0);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="classamrex_1_1TagBoxArray_1ae1c70eba84405176aafd0353098d02a4" kindref="member">TagBoxArray::coarsen</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect<sp/>&amp;<sp/><ref refid="classamrex_1_1InterpolaterBoxCoarsener_1a38dd7e762f41ec784b5dfd70109bb3a8" kindref="member">ratio</ref>)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>team<sp/>is<sp/>used,<sp/>all<sp/>team<sp/>workers<sp/>need<sp/>to<sp/>go<sp/>through<sp/>all<sp/>the<sp/>fabs,<sp/>including<sp/>ones<sp/>they<sp/>don&apos;t<sp/>own.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>teamsize<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9854dea7eb2ee59093ed0bd80af9063e" kindref="member">ParallelDescriptor::TeamSize</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>(teamsize<sp/>==<sp/>1)<sp/>?<sp/>0<sp/>:<sp/><ref refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a96650cf6d7f0f21d0f4b118ae897d008" kindref="member">MFIter::AllBoxes</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::LaunchSafeGuard<sp/>lsg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>TODO:<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>IntVect<sp/>new_n_grow;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_n_grow[idim]<sp/>=<sp/>(n_grow[idim]+ratio[idim]-1)/ratio[idim];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_OPENMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(teamsize<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,flags);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cbox<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(<ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(mfi.validbox(),<ref refid="classamrex_1_1InterpolaterBoxCoarsener_1a38dd7e762f41ec784b5dfd70109bb3a8" kindref="member">ratio</ref>),new_n_grow);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fabPtr(mfi)-&gt;coarsen(ratio,cbox);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>boxarray.coarsen(ratio);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>n_grow<sp/>=<sp/>new_n_grow;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp"/>
  </compounddef>
</doxygen>
