<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc" kind="class" language="C++" prot="protected">
    <compoundname>amrex::MLCellLinOp::BndryCondLoc</compoundname>
    <includes refid="AMReX__MLCellLinOp_8H" local="no">AMReX_MLCellLinOp.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a141ef07902ecbdd351bb14b58ce08901" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLCellLinOp_1a622b7c2ecc46a6b476aba4fb470f3dcf" kindref="member">BCTuple</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Vector&lt;BCTuple&gt; &gt; amrex::MLCellLinOp::BndryCondLoc::bcond</definition>
        <argsstring></argsstring>
        <name>bcond</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="185" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a6ff8aad355f631f7d119403ca460a782" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLCellLinOp_1ae233eeb511516448492f38fe53fa9cd9" kindref="member">RealTuple</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Vector&lt;RealTuple&gt; &gt; amrex::MLCellLinOp::BndryCondLoc::bcloc</definition>
        <argsstring></argsstring>
        <name>bcloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="186" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a17bbd9eb1d5f4d3355a31313d9b02760" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLCellLinOp::BndryCondLoc::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="187" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1ae866d33d753ff22df426e18cb8ba422c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLCellLinOp::BndryCondLoc::BndryCondLoc</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp)</argsstring>
        <name>BndryCondLoc</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="163" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp" bodystart="839" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1ae2e9e9cd5085a60c6cede09fc5ac03db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLCellLinOp::BndryCondLoc::setLOBndryConds</definition>
        <argsstring>(const Geometry &amp;geom, const Real *dx, const Vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt; &amp;lobc, const Vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt; &amp;hibc, int ratio, const RealVect &amp;interior_bloc, const Array&lt; Real, AMREX_SPACEDIM &gt; &amp;domain_bloc_lo, const Array&lt; Real, AMREX_SPACEDIM &gt; &amp;domain_bloc_hi)</argsstring>
        <name>setLOBndryConds</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MLLinOp_1ac2e55c34bf6b5c0ed53d0ef6a4625a3f" kindref="member">BCType</ref>, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>lobc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MLLinOp_1ac2e55c34bf6b5c0ed53d0ef6a4625a3f" kindref="member">BCType</ref>, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>hibc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1RealVect" kindref="compound">RealVect</ref> &amp;</type>
          <declname>interior_bloc</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; Real, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>domain_bloc_lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; Real, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>domain_bloc_hi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="165" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp" bodystart="851" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a4718c49441ffa63747c12c0e4613fe6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLCellLinOp_1a622b7c2ecc46a6b476aba4fb470f3dcf" kindref="member">BCTuple</ref> &gt; &amp;</type>
        <definition>const Vector&lt;BCTuple&gt;&amp; amrex::MLCellLinOp::BndryCondLoc::bndryConds</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>bndryConds</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="172" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a4743698695d4d5318888dde27a48f860" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLCellLinOp_1ae233eeb511516448492f38fe53fa9cd9" kindref="member">RealTuple</ref> &gt; &amp;</type>
        <definition>const Vector&lt;RealTuple&gt;&amp; amrex::MLCellLinOp::BndryCondLoc::bndryLocs</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>bndryLocs</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="175" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a0682ebf88aa6ec77c22de7b7862f4383" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MLCellLinOp_1a622b7c2ecc46a6b476aba4fb470f3dcf" kindref="member">BCTuple</ref> &amp;</type>
        <definition>const BCTuple&amp; amrex::MLCellLinOp::BndryCondLoc::bndryConds</definition>
        <argsstring>(const MFIter &amp;mfi, int icomp) const noexcept</argsstring>
        <name>bndryConds</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>icomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="178" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1ad7781aca5acd91bc926efdfc84f05b99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MLCellLinOp_1ae233eeb511516448492f38fe53fa9cd9" kindref="member">RealTuple</ref> &amp;</type>
        <definition>const RealTuple&amp; amrex::MLCellLinOp::BndryCondLoc::bndryLocs</definition>
        <argsstring>(const MFIter &amp;mfi, int icomp) const noexcept</argsstring>
        <name>bndryLocs</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>icomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="181" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="181" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="654">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="655" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="658">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="657">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="657" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="651">
        <label>amrex::MLCellLinOp::BndryCondLoc</label>
        <link refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc"/>
        <childnode refid="652" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="669" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="659">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="660" relation="public-inheritance">
        </childnode>
      </node>
      <node id="655">
        <label>string</label>
      </node>
      <node id="667">
        <label>amrex::Vector&lt; amrex::Vector&lt; RealTuple &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="668" relation="public-inheritance">
        </childnode>
      </node>
      <node id="669">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; BCTuple &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
        <childnode refid="670" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="668">
        <label>std::vector&lt; amrex::Vector&lt; RealTuple &gt;, std::allocator&lt; amrex::Vector&lt; RealTuple &gt; &gt; &gt;</label>
      </node>
      <node id="660">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="665">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="657" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="666" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="671">
        <label>std::vector&lt; amrex::Vector&lt; BCTuple &gt;, std::allocator&lt; amrex::Vector&lt; BCTuple &gt; &gt; &gt;</label>
      </node>
      <node id="663">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="664" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="666">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="664">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="659" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="652">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; RealTuple &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
        <childnode refid="667" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="656">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="661">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="662" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="663" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="670">
        <label>amrex::Vector&lt; amrex::Vector&lt; BCTuple &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="662">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="653">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="654" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="656" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="657" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="658" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="659" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="661" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="665" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" line="161" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H" bodystart="160" bodyend="188"/>
    <listofallmembers>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a6ff8aad355f631f7d119403ca460a782" prot="private" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>bcloc</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a141ef07902ecbdd351bb14b58ce08901" prot="private" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>bcond</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1ae866d33d753ff22df426e18cb8ba422c" prot="public" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>BndryCondLoc</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a4718c49441ffa63747c12c0e4613fe6f" prot="public" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a0682ebf88aa6ec77c22de7b7862f4383" prot="public" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a4743698695d4d5318888dde27a48f860" prot="public" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1ad7781aca5acd91bc926efdfc84f05b99" prot="public" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1a17bbd9eb1d5f4d3355a31313d9b02760" prot="private" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1MLCellLinOp_1_1BndryCondLoc_1ae2e9e9cd5085a60c6cede09fc5ac03db" prot="public" virt="non-virtual"><scope>amrex::MLCellLinOp::BndryCondLoc</scope><name>setLOBndryConds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
