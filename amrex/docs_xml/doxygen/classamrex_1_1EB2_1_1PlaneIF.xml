<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EB2_1_1PlaneIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::PlaneIF</compoundname>
    <basecompoundref refid="structamrex_1_1GPUable" prot="private" virt="non-virtual">amrex::GPUable</basecompoundref>
    <includes refid="AMReX__EB2__IF__Plane_8H" local="no">AMReX_EB2_IF_Plane.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1PlaneIF_1acd2eb5b291fa7b4f4be7cad13c797274" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::PlaneIF::m_point</definition>
        <argsstring></argsstring>
        <name>m_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1PlaneIF_1acfd09edde6beeedfbac972b29a0bfa65" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::PlaneIF::m_normal</definition>
        <argsstring></argsstring>
        <name>m_normal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="44" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1PlaneIF_1a13d4b5d3d37df39a577f5238cf23394e" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::PlaneIF::m_sign</definition>
        <argsstring></argsstring>
        <name>m_sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="46" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1acd11423cba9d7c283e96167dedd124d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::PlaneIF::PlaneIF</definition>
        <argsstring>(const RealArray &amp;a_point, const RealArray &amp;a_normal, bool a_inside=true)</argsstring>
        <name>PlaneIF</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_point</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_normal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1ae26e8d74379f167d515bb7af573941f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::PlaneIF::PlaneIF</definition>
        <argsstring>(const PlaneIF &amp;rhs) noexcept=default</argsstring>
        <name>PlaneIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1PlaneIF" kindref="compound">PlaneIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1a1714128d8d5122b4346d5d38128c523f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::PlaneIF::PlaneIF</definition>
        <argsstring>(PlaneIF &amp;&amp;rhs) noexcept=default</argsstring>
        <name>PlaneIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1PlaneIF" kindref="compound">PlaneIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1a30f2114b7eed08bec633a777c33b33a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1PlaneIF" kindref="compound">PlaneIF</ref> &amp;</type>
        <definition>PlaneIF&amp; amrex::EB2::PlaneIF::operator=</definition>
        <argsstring>(const PlaneIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1PlaneIF" kindref="compound">PlaneIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1a641b8b7863dfc1f3c6ee1af75ae1ccd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1PlaneIF" kindref="compound">PlaneIF</ref> &amp;</type>
        <definition>PlaneIF&amp; amrex::EB2::PlaneIF::operator=</definition>
        <argsstring>(PlaneIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1PlaneIF" kindref="compound">PlaneIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1af0b5e7421a5c1919ada54ae7d323aa0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::PlaneIF::operator()</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z)) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1PlaneIF_1a59d3e8ae75b3d5d083da3255eab14693" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::PlaneIF::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="36" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="36" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4285">
        <label>amrex::EB2::PlaneIF</label>
        <link refid="classamrex_1_1EB2_1_1PlaneIF"/>
        <childnode refid="4286" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4286">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4287">
        <label>amrex::EB2::PlaneIF</label>
        <link refid="classamrex_1_1EB2_1_1PlaneIF"/>
        <childnode refid="4288" relation="private-inheritance">
        </childnode>
        <childnode refid="4289" relation="usage">
          <edgelabel>m_point</edgelabel>
          <edgelabel>m_normal</edgelabel>
        </childnode>
        <childnode refid="4290" relation="usage">
          <edgelabel>m_sign</edgelabel>
        </childnode>
      </node>
      <node id="4290">
        <label>Real</label>
      </node>
      <node id="4289">
        <label>amrex::XDim3</label>
        <link refid="structamrex_1_1XDim3"/>
        <childnode refid="4290" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
      <node id="4288">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" line="14" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H" bodystart="12" bodyend="48"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1acfd09edde6beeedfbac972b29a0bfa65" prot="protected" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>m_normal</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1acd2eb5b291fa7b4f4be7cad13c797274" prot="protected" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>m_point</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1a13d4b5d3d37df39a577f5238cf23394e" prot="protected" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>m_sign</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1af0b5e7421a5c1919ada54ae7d323aa0f" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1a59d3e8ae75b3d5d083da3255eab14693" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1a30f2114b7eed08bec633a777c33b33a6" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1a641b8b7863dfc1f3c6ee1af75ae1ccd9" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1acd11423cba9d7c283e96167dedd124d5" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>PlaneIF</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1ae26e8d74379f167d515bb7af573941f0" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>PlaneIF</name></member>
      <member refid="classamrex_1_1EB2_1_1PlaneIF_1a1714128d8d5122b4346d5d38128c523f" prot="public" virt="non-virtual"><scope>amrex::EB2::PlaneIF</scope><name>PlaneIF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
