<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1TagBoxArray" kind="class" language="C++" prot="public">
    <compoundname>amrex::TagBoxArray</compoundname>
    <basecompoundref refid="classamrex_1_1FabArray" prot="public" virt="non-virtual">amrex::FabArray&lt; TagBox &gt;</basecompoundref>
    <includes refid="AMReX__TagBox_8H" local="no">AMReX_TagBox.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1TagBoxArray_1aacc3ef7b971c8c55ba4a0bb74492b019" prot="public" static="no">
        <type><ref refid="classamrex_1_1TagBox_1aa3eab6b001470948ab883ec074459049" kindref="member">TagBox::TagType</ref></type>
        <definition>typedef TagBox::TagType amrex::TagBoxArray::TagType</definition>
        <argsstring></argsstring>
        <name>TagType</name>
        <briefdescription>
<para>The type of each tag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="158" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a904fcd1905c4871508426269dd4cc14d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TagBoxArray::TagBoxArray</definition>
        <argsstring>(const BoxArray &amp;bs, const DistributionMapping &amp;dm, int _ngrow=0)</argsstring>
        <name>TagBoxArray</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_ngrow</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>The constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_ngrow</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="167" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="290" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a7f8015bb7729283383dd0d3b0265e0ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TagBoxArray::TagBoxArray</definition>
        <argsstring>(const BoxArray &amp;bs, const DistributionMapping &amp;dm, const IntVect &amp;_ngrow)</argsstring>
        <name>TagBoxArray</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>_ngrow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="168" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="299" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1aa39754ad9270741af7aa6f6278cf8229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TagBoxArray::~TagBoxArray</definition>
        <argsstring>() override=default</argsstring>
        <name>~TagBoxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="170" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1ad2857940d22b1f8c7718cc530bb29d3e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TagBoxArray::TagBoxArray</definition>
        <argsstring>(TagBoxArray &amp;&amp;rhs) noexcept=default</argsstring>
        <name>TagBoxArray</name>
        <param>
          <type><ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="172" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a1eb204c4fb9cbe4d9660d642a7a0ee13" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> &amp;</type>
        <definition>TagBoxArray&amp; amrex::TagBoxArray::operator=</definition>
        <argsstring>(TagBoxArray &amp;&amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="173" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a1b309c4b244d311888eb013b34693620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TagBoxArray::TagBoxArray</definition>
        <argsstring>(const TagBoxArray &amp;rhs)=delete</argsstring>
        <name>TagBoxArray</name>
        <param>
          <type>const <ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="175" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a1b2dcd181de443438540b7b107aadd04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> &amp;</type>
        <definition>TagBoxArray&amp; amrex::TagBoxArray::operator=</definition>
        <argsstring>(const TagBoxArray &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="176" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1abb7286cc2647bb4359101e4fafae159d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::buffer</definition>
        <argsstring>(const IntVect &amp;nbuf)</argsstring>
        <name>buffer</name>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>nbuf</declname>
        </param>
        <briefdescription>
<para>Calls <ref refid="classamrex_1_1TagBoxArray_1abb7286cc2647bb4359101e4fafae159d" kindref="member">buffer()</ref> on all contained TagBoxes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbuf</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="183" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="309" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a3173610e281bd7542514a433a704cd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::mapPeriodicRemoveDuplicates</definition>
        <argsstring>(const Geometry &amp;geom)</argsstring>
        <name>mapPeriodicRemoveDuplicates</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>This funciton does two things. Map tagged cells through a periodic boundary to other grids in <ref refid="classamrex_1_1TagBoxArray" kindref="compound">TagBoxArray</ref> cells, and remove duplicates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="191" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="325" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a5fd4ebbc9753cdded9af8d5e59f0a531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::setVal</definition>
        <argsstring>(const BoxList &amp;bl, TagBox::TagVal val)</argsstring>
        <name>setVal</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> &amp;</type>
          <declname>bl</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffa" kindref="member">TagBox::TagVal</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set values in bl to val. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bl</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="199" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="665" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a13addf200966767a4eb192186115163e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::setVal</definition>
        <argsstring>(const BoxDomain &amp;bd, TagBox::TagVal val)</argsstring>
        <name>setVal</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxDomain" kindref="compound">BoxDomain</ref> &amp;</type>
          <declname>bd</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffa" kindref="member">TagBox::TagVal</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set values in bd to val. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bd</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="207" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="672" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a6c6aeca9f57fbbdab3eb907b9b495bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::setVal</definition>
        <argsstring>(const BoxArray &amp;ba, TagBox::TagVal val)</argsstring>
        <name>setVal</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1TagBox_1ac8c350e6c62e1f2fd736b52d1b7caffa" kindref="member">TagBox::TagVal</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set values in ba to val. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ba</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="215" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="678" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1ae1c70eba84405176aafd0353098d02a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::coarsen</definition>
        <argsstring>(const IntVect &amp;ratio)</argsstring>
        <name>coarsen</name>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Calls <ref refid="classamrex_1_1TagBoxArray_1ae1c70eba84405176aafd0353098d02a4" kindref="member">coarsen()</ref> on all contained TagBoxes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="223" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="713" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a758d51e6e915561d03a0f9cdf1ce026f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::collate</definition>
        <argsstring>(Gpu::PinnedVector&lt; IntVect &gt; &amp;TheGlobalCollateSpace) const</argsstring>
        <name>collate</name>
        <param>
          <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &gt; &amp;</type>
          <declname>TheGlobalCollateSpace</declname>
        </param>
        <briefdescription>
<para>Calls <ref refid="classamrex_1_1TagBoxArray_1a758d51e6e915561d03a0f9cdf1ce026f" kindref="member">collate()</ref> on all contained TagBoxes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TheGlobalCollateSpace</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="230" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="599" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a9a0e6af06afa677b79adf8cc2a2f763c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::TagBoxArray::hasTags</definition>
        <argsstring>(Box const &amp;bx) const</argsstring>
        <name>hasTags</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="233" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="739" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1a62994a11c6b9211c7d459571caf99d56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::local_collate_cpu</definition>
        <argsstring>(Gpu::PinnedVector&lt; IntVect &gt; &amp;v) const</argsstring>
        <name>local_collate_cpu</name>
        <param>
          <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="235" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="383" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TagBoxArray_1ae151c3feb479bcc695e279915e2a068c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TagBoxArray::local_collate_gpu</definition>
        <argsstring>(Gpu::PinnedVector&lt; IntVect &gt; &amp;v) const</argsstring>
        <name>local_collate_gpu</name>
        <param>
          <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="237" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp" bodystart="432" bodyend="595"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An array of TagBoxes. </para>
    </briefdescription>
    <detaileddescription>
<para>A container class for TagBoxes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::FabArray&lt; TagBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
      </node>
      <node id="1">
        <label>amrex::TagBoxArray</label>
        <link refid="classamrex_1_1TagBoxArray"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="8">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="5">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="5" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="7">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="8" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="5" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="2">
        <label>amrex::FabArray&lt; TagBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3" relation="usage">
          <edgelabel>pc_recv_size</edgelabel>
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
          <edgelabel>pc_dnghost</edgelabel>
          <edgelabel>pc_snghost</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>pc_src</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>pc_recv_from</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
          <edgelabel>pc_recv_data</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>pc_recv_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
          <edgelabel>pc_send_reqs</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>fb_period</edgelabel>
          <edgelabel>pc_period</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="19">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="10">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="16">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::TagBoxArray</label>
        <link refid="classamrex_1_1TagBoxArray"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" line="154" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H" bodystart="151" bodyend="239"/>
    <listofallmembers>
      <member refid="classamrex_1_1FabArray_1a3f6af498b285e95985a51f95c48a6379" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>abs</name></member>
      <member refid="classamrex_1_1FabArray_1a7a069464ee13b5497c41bb501f4fdf30" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>abs</name></member>
      <member refid="classamrex_1_1FabArray_1ab7135858e136a96334d492724c02f2f1" prot="private" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>AllocFabs</name></member>
      <member refid="classamrex_1_1FabArray_1acfab6e1a9aaaffd0c875021c5f10c0bb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>arena</name></member>
      <member refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1a7d3d77aaf852452dd793e107eb784925" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1ac907b6c39f6d2ea0ab87ad3e74286c83" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1abbd458e11bca4e99e5409e864467fea0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1a1f012a06273cbacc44f65f9fbf22b65b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1ada70f3e79e1fc98346262f5c4e202b56" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1a26817d3c7daad0d94c38f599dfb48aaf" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1af577de2923ead0696295f5a3960af026" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>array</name></member>
      <member refid="classamrex_1_1FabArray_1ac8cc160bbc8e86e227c77ac768740eeb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>atLocalIdx</name></member>
      <member refid="classamrex_1_1FabArray_1ad78e2ef302657d35d53cfe6a494d6f12" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>atLocalIdx</name></member>
      <member refid="classamrex_1_1TagBoxArray_1abb7286cc2647bb4359101e4fafae159d" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>buffer</name></member>
      <member refid="classamrex_1_1FabArray_1a4f4a269de9e494ef89075265e5b8ecb2" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>BuildMask</name></member>
      <member refid="classamrex_1_1FabArray_1a7544c03f72d87f3f49ea0683848dc8aa" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>clear</name></member>
      <member refid="classamrex_1_1FabArray_1a202d8ada102cc6fc40749039c0e1f3a7" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>CMD_local_setVal_gpu</name></member>
      <member refid="classamrex_1_1FabArray_1a2064856b8d0efe0ae3e92d91a72f3274" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>CMD_remote_setVal_gpu</name></member>
      <member refid="classamrex_1_1TagBoxArray_1ae1c70eba84405176aafd0353098d02a4" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>coarsen</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a758d51e6e915561d03a0f9cdf1ce026f" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>collate</name></member>
      <member refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>const_array</name></member>
      <member refid="classamrex_1_1FabArray_1a69cbd579804bcf2d56900787806a3361" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>const_array</name></member>
      <member refid="classamrex_1_1FabArray_1acf86ed0530ed660096a54e699b402940" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>const_array</name></member>
      <member refid="classamrex_1_1FabArray_1ab9b3285ee8d8f8d97703a9e997bbd8ec" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>const_array</name></member>
      <member refid="classamrex_1_1FabArray_1ad5437f2b6689074e7e4e2abc25662daa" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copy</name></member>
      <member refid="classamrex_1_1FabArray_1a960ecb1ed695a7e13cbc7c3cff3f934a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copy</name></member>
      <member refid="classamrex_1_1FabArray_1a0194c55a13a8695b863eec146146335c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copy</name></member>
      <member refid="classamrex_1_1FabArray_1a097eb48c84133dcf0c0cb0fa40ca5f50" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copy</name></member>
      <member refid="classamrex_1_1FabArray_1a9d247d17dd40dc29f57f87556b50b62a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copyTo</name></member>
      <member refid="classamrex_1_1FabArray_1aa19dd0482e00be1e43cd9c37d60aa0b2" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copyTo</name></member>
      <member refid="classamrex_1_1FabArray_1a307d4ba571507f21248861f1755fcb7c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copyTo</name></member>
      <member refid="classamrex_1_1FabArray_1a81b037f6ed7b60e5dc95d11512468187" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>copyTo</name></member>
      <member refid="classamrex_1_1FabArray_1a4b2db0304bc84a002692917c83bc1626" prot="public" virt="virtual"><scope>amrex::TagBoxArray</scope><name>define</name></member>
      <member refid="classamrex_1_1FabArray_1ae978e4109861cb21bbb90d389fee4a01" prot="public" virt="virtual"><scope>amrex::TagBoxArray</scope><name>define</name></member>
      <member refid="classamrex_1_1FabArray_1a8a547f660eb49f5b25df2a1eddcd7eef" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>define_function_called</name></member>
      <member refid="classamrex_1_1FabArray_1a53470efa9a430b70e65faf9025f485dc" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>defined</name></member>
      <member refid="classamrex_1_1FabArray_1a27dbf4d9c26df790485a219856f9d2e5" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>defined</name></member>
      <member refid="classamrex_1_1FabArray_1adb282b42c0eb97cbb55037bc7bdea04a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>EnforcePeriodicity</name></member>
      <member refid="classamrex_1_1FabArray_1aecf0e342dcbe19b9bb23e73c326155ff" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>EnforcePeriodicity</name></member>
      <member refid="classamrex_1_1FabArray_1a076781df7b9077c51fecd6a62172ed74" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>EnforcePeriodicity</name></member>
      <member refid="classamrex_1_1FabArray_1aed34744a8326118324307052aef407d9" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FabArray</name></member>
      <member refid="classamrex_1_1FabArray_1a7ab314f12326cda647aa1fe94644653e" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FabArray</name></member>
      <member refid="classamrex_1_1FabArray_1a2797eff487b1b16ec6cb075cfdd2fb1d" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FabArray</name></member>
      <member refid="classamrex_1_1FabArray_1a4e5969fd37c641e0b9bb849f812c1199" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FabArray</name></member>
      <member refid="classamrex_1_1FabArray_1a24c8625dbbdf687a2f44a071b97badeb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FabArray</name></member>
      <member refid="classamrex_1_1FabArray_1a2f8ab656cb0ef985199be4e578ec91b5" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FabArray</name></member>
      <member refid="classamrex_1_1FabArray_1ad9691d1c35c1ed43c824db2401cfafba" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1FabArray_1af389f3c3b3cdc88a85bfcf5d30148acc" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1FabArray_1a8d3bc775d510dacd5b2f4e03854795f2" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1FabArray_1a3ac14bd473ccfd86adaf7418017b2f33" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1FabArray_1a362cb84f113b8019a6f8b03129d1cf48" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>Factory</name></member>
      <member refid="classamrex_1_1FabArray_1a1de730376dd381a0e0aaf26cee0565b4" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_cross</name></member>
      <member refid="classamrex_1_1FabArray_1a895064ef39dcc1b70cab62ef59243c15" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_epo</name></member>
      <member refid="classamrex_1_1FabArray_1a5fbf15f2a4abd1397a6474713b122824" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FB_local_copy_cpu</name></member>
      <member refid="classamrex_1_1FabArray_1a60891bcadc0382dfc1aaf4df8ad34771" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FB_local_copy_gpu</name></member>
      <member refid="classamrex_1_1FabArray_1aae76a45a4f6107d123d1f12123017515" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_ncomp</name></member>
      <member refid="classamrex_1_1FabArray_1aa14d5a982abbba95b4879b453d6e884b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_nghost</name></member>
      <member refid="classamrex_1_1FabArray_1afa2c5f52dddbe274a661b57fa60abf49" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_period</name></member>
      <member refid="classamrex_1_1FabArray_1a03fbd0e37ccb140399d5111ad8a9173a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_recv_data</name></member>
      <member refid="classamrex_1_1FabArray_1a256a4c5d1f5d93ed4f69baba008fd293" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_recv_from</name></member>
      <member refid="classamrex_1_1FabArray_1a9ded15081c72b00f3649cb6890b03a31" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_recv_reqs</name></member>
      <member refid="classamrex_1_1FabArray_1a54045911503ef590eee3c7a0badc648b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_recv_size</name></member>
      <member refid="classamrex_1_1FabArray_1a2c94d11906514b3f8290a85682eb02b8" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_recv_stat</name></member>
      <member refid="classamrex_1_1FabArray_1addcd803413e8691d103bd137cabf5406" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_scomp</name></member>
      <member refid="classamrex_1_1FabArray_1a6d78698d8d519bd122eb9c3d405d535b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_send_data</name></member>
      <member refid="classamrex_1_1FabArray_1a7a8376a51b48f1310d3d350ac70fe345" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_send_reqs</name></member>
      <member refid="classamrex_1_1FabArray_1ac557f1eed392826db1eec4119103134a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_tag</name></member>
      <member refid="classamrex_1_1FabArray_1a74208704b8f6fd0320efbab5b6d84c33" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_the_recv_data</name></member>
      <member refid="classamrex_1_1FabArray_1acdbdf6b190956f4aea653b4a8668daf3" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>fb_the_send_data</name></member>
      <member refid="classamrex_1_1FabArray_1a2eb7f1c8a1ad0b253f6b4dc3445b5ac6" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FBEP_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a0e0073142d1598838048317216fa6d12" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FBEP_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1ae2a65f54013f600fa7dab70c171f098f" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1FabArray_1ad83cd23ca9de6bc255fab20b0e3349e0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1FabArray_1a1ed9770416d4f7f30e3ff2e194d028f0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1FabArray_1a63f39e8a1dbd16c2a12f1f9c09f8e86d" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1FabArray_1a653f81fb7647cbb92e4996116f5f2b98" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1FabArray_1a7819663deb9f09aba2dfb7c2d97b8008" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1FabArray_1a6ab6171d0c8b5e44260c328d0582621b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_finish</name></member>
      <member refid="classamrex_1_1FabArray_1a6ab6171d0c8b5e44260c328d0582621b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_finish</name></member>
      <member refid="classamrex_1_1FabArray_1ac2d0be5fcc4f1d0ca3bc90326479e6a4" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a42e0c1a45de59b4b0b3aa9179045c2da" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a5953b66baae9e84da1bfe301aeb0f584" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a35b5ac9091040a386f3c6e80ee598edb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a9cee2171946118a9d537329dc11b73ba" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a31ac8478feaa72ab3960bb08c69b082b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>FillBoundary_test</name></member>
      <member refid="classamrex_1_1FabArray_1a0776aa41d2309534c3d0792320eb6763" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>get</name></member>
      <member refid="classamrex_1_1FabArray_1ac9c35f9ba5d6042bc5fff01e5d5e295b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>get</name></member>
      <member refid="classamrex_1_1FabArray_1a427dc42c638a674461f8b98f16875114" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>get</name></member>
      <member refid="classamrex_1_1FabArray_1a40ad454f948a86047a3c9887f18eb2b2" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>get</name></member>
      <member refid="classamrex_1_1FabArray_1ac696f139b6cf56e02828264b09a48636" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>hasEBFabFactory</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a9a0e6af06afa677b79adf8cc2a2f763c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>hasTags</name></member>
      <member refid="classamrex_1_1FabArray_1a6024801773f82956d6cdfcd47edc15ef" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>invert</name></member>
      <member refid="classamrex_1_1FabArray_1a17da9b4e30ef5211cdc56747641a622a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>invert</name></member>
      <member refid="classamrex_1_1FabArray_1acf745741e899a140f64afeefbb903f5c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>isAllRegular</name></member>
      <member refid="classamrex_1_1FabArray_1a70fa91146151690cba92e359609650dc" prot="private" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>Iterator</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a62994a11c6b9211c7d459571caf99d56" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>local_collate_cpu</name></member>
      <member refid="classamrex_1_1TagBoxArray_1ae151c3feb479bcc695e279915e2a068c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>local_collate_gpu</name></member>
      <member refid="classamrex_1_1FabArray_1a6a2a60d3af361dde9463f2d586d0e358" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>m_dallocator</name></member>
      <member refid="classamrex_1_1FabArray_1a7ecd52e23e86db0f9e8e99166900e63c" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>m_fabs_v</name></member>
      <member refid="classamrex_1_1FabArray_1a9172b400e374666d6100fa61ccc586db" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1FabArray_1a5ea249e7b897909f9d01b4fed851d7af" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>m_tags</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a3173610e281bd7542514a433a704cd9a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>mapPeriodicRemoveDuplicates</name></member>
      <member refid="classamrex_1_1FabArray_1aabc2fcb2d3b6c12974d49d5aff23ef5d" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>mult</name></member>
      <member refid="classamrex_1_1FabArray_1a179ad441a231e9d09ffebfbc7ad674fb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>mult</name></member>
      <member refid="classamrex_1_1FabArray_1a1d7f20697c473d1186b4b3c290f5eb1f" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ok</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a1eb204c4fb9cbe4d9660d642a7a0ee13" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>operator=</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a1b2dcd181de443438540b7b107aadd04" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FabArray_1abfb756a609a97e842adfcb212390b506" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FabArray_1a0af3037790ff6d28e55abb56befa9217" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FabArray_1a25c18cdc7e890e0876df9a72a1278bf6" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FabArray_1aea4482f17a37031cb4d666bb0d35bb75" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1FabArray_1a5ba62a9af2c4595f5cc07658922e54dd" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1FabArray_1a0cff697750da98028349785f52862dd9" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1FabArray_1a075244874da3e2433d57ca6fa8b96dc2" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1FabArray_1a345e1546f8ae1dcca4a44a140abe8483" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pack_send_buffer_cpu</name></member>
      <member refid="classamrex_1_1FabArray_1a7904811e2a83af68b16bd6c6bd9bce6a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pack_send_buffer_gpu</name></member>
      <member refid="classamrex_1_1FabArray_1ae4b12e5942706dac23a5bef3d4781740" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd</name></member>
      <member refid="classamrex_1_1FabArray_1a8a59adcce54ed5ccf48f0849458cf123" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd</name></member>
      <member refid="classamrex_1_1FabArray_1a8e9e4a76679324f247d20d57d11293f0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd</name></member>
      <member refid="classamrex_1_1FabArray_1a89a8e2abc36a485e63a1b7976f13baf2" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd</name></member>
      <member refid="classamrex_1_1FabArray_1abde39eb49207b481b280b1386e828abb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a636aaec49f36b37c484e25146572cf41" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a9d8a8750be27ca5839abbbe2f3794e5a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a4b736a64c77081800aa312863d962048" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelAdd_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a4d5c152276e1e70438c9d7072cb7c6f0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy</name></member>
      <member refid="classamrex_1_1FabArray_1ac31d070f29eef2523b0af2d858b3e56d" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy</name></member>
      <member refid="classamrex_1_1FabArray_1a3d58cf8a0ddfeba8a8b52aa73fed2113" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy</name></member>
      <member refid="classamrex_1_1FabArray_1a1dfd3c30997fd9821219a8e39571a4bc" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy</name></member>
      <member refid="classamrex_1_1FabArray_1a066e3ab046b92e144075c8f9df4aaf04" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy_finish</name></member>
      <member refid="classamrex_1_1FabArray_1a27a082106b94896a38832117858407b9" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1af41fa096b33fbce8a896252ff39bbadb" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a6e55433b48ff77b9fcbfbc2c501e63c3" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a78457b34f328569ed1bc6065baff53c0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>ParallelCopy_nowait</name></member>
      <member refid="classamrex_1_1FabArray_1a5a19b5ac3391b3b4009ec7c3ccafd8ad" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_actual_n_rcvs</name></member>
      <member refid="classamrex_1_1FabArray_1aff254d6dd8fd15b836d0b7caf690dc85" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_cpc</name></member>
      <member refid="classamrex_1_1FabArray_1a9080d099b2aa4f82b99aaecfa3de8de1" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_DC</name></member>
      <member refid="classamrex_1_1FabArray_1ab03c4402374ae12a7025a0e7ddefc8c9" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_dnghost</name></member>
      <member refid="classamrex_1_1FabArray_1a43e9fa2e544bcbdf6d5517362812478a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_finished</name></member>
      <member refid="classamrex_1_1FabArray_1af001e3fed315af1165f42213a1042c09" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>PC_local_cpu</name></member>
      <member refid="classamrex_1_1FabArray_1a6479ffc5e154a5b21d80e1b6dedb44cf" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>PC_local_gpu</name></member>
      <member refid="classamrex_1_1FabArray_1a74ea3fc9de57d5c32ee47ca7e2b7fa0a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_NC</name></member>
      <member refid="classamrex_1_1FabArray_1acd459156e0298169038d8e9e25a4fc5c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_op</name></member>
      <member refid="classamrex_1_1FabArray_1a1063f67147a7d1a0fa08d648e2222134" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_period</name></member>
      <member refid="classamrex_1_1FabArray_1a227fee04d898cb38566728503cb44a70" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_recv_data</name></member>
      <member refid="classamrex_1_1FabArray_1a4a6c3426a40d9585978ccd6497d1cf8a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_recv_from</name></member>
      <member refid="classamrex_1_1FabArray_1a60edfeaa3cda4c59fc9a6d969595a028" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_recv_reqs</name></member>
      <member refid="classamrex_1_1FabArray_1a265d8bd1b1bdb80d7c1c253b1bd5f5c0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_recv_size</name></member>
      <member refid="classamrex_1_1FabArray_1abab20cc977f9ec81d07c9dd9e4978400" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_SC</name></member>
      <member refid="classamrex_1_1FabArray_1a7792a53b1d33b3ec9183c54e676d1042" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_send_reqs</name></member>
      <member refid="classamrex_1_1FabArray_1aa59d4f4c67f53c9633283c0cbd027bf5" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_snghost</name></member>
      <member refid="classamrex_1_1FabArray_1a3d9f86cc0b8132e6b6b7baaf78f2e871" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_src</name></member>
      <member refid="classamrex_1_1FabArray_1a5bf4c33806175e260ac3e17f2a8821ad" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_tag</name></member>
      <member refid="classamrex_1_1FabArray_1a3bfc3399875a6f1059ee5b6d4ed0304b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_the_recv_data</name></member>
      <member refid="classamrex_1_1FabArray_1acc7c99b21bfc901f19c7a04405f206de" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>pc_the_send_data</name></member>
      <member refid="classamrex_1_1FabArray_1a69e2f8d4b7a834951fe4428b89134455" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>plus</name></member>
      <member refid="classamrex_1_1FabArray_1ad00c28754c2085f4ba386d2bb0f24f93" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>plus</name></member>
      <member refid="classamrex_1_1FabArray_1a1ad78902f6ce66d7f4d0557de26ee971" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>prefetchToDevice</name></member>
      <member refid="classamrex_1_1FabArray_1ae803504d641d86a8ba9e4b58e81f136b" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>prefetchToHost</name></member>
      <member refid="classamrex_1_1FabArray_1a59639f9d47c654200ffccda96ff78ae5" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>RecvLayoutMask</name></member>
      <member refid="classamrex_1_1FabArray_1a9b59622d2c87150475a4c2e290909421" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>Redistribute</name></member>
      <member refid="classamrex_1_1FabArray_1a4782a3068c5950a1838e1018f8ff69f5" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>release</name></member>
      <member refid="classamrex_1_1FabArray_1a4750acee26c62d569535b66ec2957bca" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>release</name></member>
      <member refid="classamrex_1_1FabArray_1a80a77e6c5521bb8b3ed838708e079432" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setBndry</name></member>
      <member refid="classamrex_1_1FabArray_1a9deababbf136398c5902f84ad2ea4f2c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setBndry</name></member>
      <member refid="classamrex_1_1FabArray_1ab9442a964296f689a711f4b2594d333c" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setDomainBndry</name></member>
      <member refid="classamrex_1_1FabArray_1ab81e0f54e2bf418568003fd4dc10b1c0" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setDomainBndry</name></member>
      <member refid="classamrex_1_1FabArray_1af68b446a1fcbac3b613ed9404ccb67d1" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setFab</name></member>
      <member refid="classamrex_1_1FabArray_1a7fe02e7cced6aadd20cee89b41afef8e" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setFab</name></member>
      <member refid="classamrex_1_1FabArray_1a0f8b639b019bb31429a51c718756cafd" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setFab</name></member>
      <member refid="classamrex_1_1FabArray_1a01d769a51d15314e0f36925aa2182c9a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setFab</name></member>
      <member refid="classamrex_1_1FabArray_1a693754f4ec64472c486d1d4431d71d8c" prot="private" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setFab_assert</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a5fd4ebbc9753cdded9af8d5e59f0a531" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a13addf200966767a4eb192186115163e" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a6c6aeca9f57fbbdab3eb907b9b495bd4" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1a3da4950419b2d1486fc639b4dc9c7f50" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1af5d4163748028384eed706a0505e26e1" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1aea9f29ddbd06aa7e6ed2fc4adab0105d" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1ae069b54a641daf3261a19fb4a7a69d39" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1a9b24249a457566178240d93e2379b791" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1a4ebf94d4f789343209c4bf0a4567bb15" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1af5dc7a3e98d5ebf9e3e7e42c8fe19b2e" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1a9f979a4eaf8ec5080794e9a45e24cefd" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1aaad9347944887bc14f15277d45585d84" prot="public" virt="non-virtual" ambiguityscope="FabArray&lt; TagBox &gt;::"><scope>amrex::TagBoxArray</scope><name>setVal</name></member>
      <member refid="classamrex_1_1FabArray_1a551575e2734ddbb455ce7d7ebd53cd9f" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>SharedMemory</name></member>
      <member refid="classamrex_1_1FabArray_1a1c267db3c144871fd12170f3c81d6562" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>shift</name></member>
      <member refid="classamrex_1_1FabArray_1abc3985ed98ddaf530bde81076c0295de" prot="protected" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>shmem</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a904fcd1905c4871508426269dd4cc14d" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>TagBoxArray</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a7f8015bb7729283383dd0d3b0265e0ea" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>TagBoxArray</name></member>
      <member refid="classamrex_1_1TagBoxArray_1ad2857940d22b1f8c7718cc530bb29d3e" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>TagBoxArray</name></member>
      <member refid="classamrex_1_1TagBoxArray_1a1b309c4b244d311888eb013b34693620" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>TagBoxArray</name></member>
      <member refid="classamrex_1_1FabArray_1acb7546f9b065a866641075708c3484ae" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>tags</name></member>
      <member refid="classamrex_1_1TagBoxArray_1aacc3ef7b971c8c55ba4a0bb74492b019" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>TagType</name></member>
      <member refid="classamrex_1_1FabArray_1add9c8df1fdfd199b240988bfd3a43d87" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>unpack_recv_buffer_cpu</name></member>
      <member refid="classamrex_1_1FabArray_1adb64751b92238db7f01db95d9ef45ed9" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>unpack_recv_buffer_gpu</name></member>
      <member refid="classamrex_1_1FabArray_1a2b04c30bcb209306838ed6a01bd7816a" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>value_type</name></member>
      <member refid="classamrex_1_1FabArray_1af9762647ad8ae52d39f2c51f51c06813" prot="public" virt="virtual"><scope>amrex::TagBoxArray</scope><name>~FabArray</name></member>
      <member refid="classamrex_1_1TagBoxArray_1aa39754ad9270741af7aa6f6278cf8229" prot="public" virt="non-virtual"><scope>amrex::TagBoxArray</scope><name>~TagBoxArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
