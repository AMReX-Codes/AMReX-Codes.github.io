<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="AMReX__TableData_8H" kind="file" language="C++">
    <compoundname>AMReX_TableData.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <includes refid="AMReX__Array_8H" local="no">AMReX_Array.H</includes>
    <includes refid="AMReX__DataAllocator_8H" local="no">AMReX_DataAllocator.H</includes>
    <includes refid="AMReX__GpuDevice_8H" local="no">AMReX_GpuDevice.H</includes>
    <includes refid="AMReX__GpuPrint_8H" local="no">AMReX_GpuPrint.H</includes>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="AMReX__GMRES_8H" local="no">/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES.H</includedby>
    <incdepgraph>
      <node id="73">
        <label>atomic</label>
      </node>
      <node id="61">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="72">
        <label>AMReX_ValLocPair.H</label>
        <link refid="AMReX__ValLocPair_8H"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>limits</label>
      </node>
      <node id="70">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>float.h</label>
      </node>
      <node id="24">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstdint</label>
      </node>
      <node id="44">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="26">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="9">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>numeric</label>
      </node>
      <node id="71">
        <label>AMReX_GpuComplex.H</label>
        <link refid="AMReX__GpuComplex_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="43">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>map</label>
      </node>
      <node id="64">
        <label>AMReX_Demangle.H</label>
        <link refid="AMReX__Demangle_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>cfloat</label>
      </node>
      <node id="29">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>limits.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H</label>
        <link refid="AMReX__TableData_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>sys/types.h</label>
      </node>
      <node id="76">
        <label>typeinfo</label>
      </node>
      <node id="5">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="6">
        <label>cstdio</label>
      </node>
      <node id="53">
        <label>tuple</label>
      </node>
      <node id="65">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>stack</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="23">
        <label>utility</label>
      </node>
      <node id="47">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>array</label>
      </node>
      <node id="58">
        <label>sstream</label>
      </node>
      <node id="31">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>iosfwd</label>
      </node>
      <node id="35">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>cstddef</label>
      </node>
      <node id="63">
        <label>unordered_map</label>
      </node>
      <node id="49">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>climits</label>
      </node>
      <node id="84">
        <label>chrono</label>
      </node>
      <node id="74">
        <label>csignal</label>
      </node>
      <node id="30">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>AMReX_DataAllocator.H</label>
        <link refid="AMReX__DataAllocator_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>algorithm</label>
      </node>
      <node id="81">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>curand.h</label>
      </node>
      <node id="87">
        <label>cstring</label>
      </node>
      <node id="52">
        <label>AMReX_TypeList.H</label>
        <link refid="AMReX__TypeList_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="32">
        <label>inttypes.h</label>
      </node>
      <node id="46">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>curand_kernel.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES.H</label>
        <link refid="AMReX__GMRES_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H</label>
        <link refid="AMReX__TableData_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H</label>
        <link refid="AMReX__GMRES__MLMG_8H"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1Table1D" prot="public">amrex::Table1D</innerclass>
    <innerclass refid="structamrex_1_1Table2D" prot="public">amrex::Table2D</innerclass>
    <innerclass refid="structamrex_1_1Table3D" prot="public">amrex::Table3D</innerclass>
    <innerclass refid="structamrex_1_1Table4D" prot="public">amrex::Table4D</innerclass>
    <innerclass refid="classamrex_1_1TableData" prot="public">amrex::TableData</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1detail">amrex::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_TABLE_DATA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_TABLE_DATA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Array_8H" kindref="compound">AMReX_Array.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__DataAllocator_8H" kindref="compound">AMReX_DataAllocator.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuDevice_8H" kindref="compound">AMReX_GpuDevice.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuPrint_8H" kindref="compound">AMReX_GpuPrint.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="structamrex_1_1Table1D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Table1D" kindref="compound">Table1D</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21" refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22" refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="23" refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structamrex_1_1Table1D_1ae57c577c6f51911b887e7f736c8a83dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table1D_1ae57c577c6f51911b887e7f736c8a83dd" kindref="member">Table1D</ref><sp/>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U=T,<sp/>std::enable_if_t&lt;std::is_const_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="29" refid="structamrex_1_1Table1D_1aab5cc99cdb1ebd55b6df669892343009" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table1D" kindref="compound">Table1D</ref><sp/>(<ref refid="structamrex_1_1Table1D" kindref="compound">Table1D</ref>&lt;std::remove_const_t&lt;T&gt;&gt;<sp/>const&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(rhs.<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(rhs.<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(rhs.<ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="36" refid="structamrex_1_1Table1D_1ad9e33e283ae88a75cf4b1d9cd99323a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table1D_1ad9e33e283ae88a75cf4b1d9cd99323a7" kindref="member">Table1D</ref><sp/>(T*<sp/>a_p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(a_p),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(a_begin),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(a_end)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="43" refid="structamrex_1_1Table1D_1aeb5e426687a441d87eb00628cdcc2706" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U=T,<sp/>std::enable_if_t&lt;!std::is_</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="47" refid="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>U&amp;<sp/><ref refid="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_assert(i);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>index_assert<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>begin<sp/>||<sp/>i<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuPrint_8H_1ac6c189884fc7e89c75eb6afe784026b4" kindref="member">AMREX_DEVICE_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(%d)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(%d:%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>,<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>-1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>&quot;<sp/>(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(&quot;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref><sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>-1<sp/>&lt;&lt;<sp/>&quot;)&quot;;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex" kindref="compound">amrex</ref>::<ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">Abort</ref>(ss.str());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER<sp/>=<sp/>Order::F&gt;</highlight></codeline>
<codeline lineno="76" refid="structamrex_1_1Table2D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Table2D" kindref="compound">Table2D</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="structamrex_1_1Table2D_1ac3751b8cb916e275afb6c3173ada2c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79" refid="structamrex_1_1Table2D_1acd2464cad98d33e77dbf181904ef9749" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80" refid="structamrex_1_1Table2D_1ac1b696dc13b05c84b613ae77eeb4c24c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,2&gt;</ref><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>{{1,1}};</highlight></codeline>
<codeline lineno="81" refid="structamrex_1_1Table2D_1a90068786b718833feac893cc831dd061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,2&gt;</ref><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>{{0,0}};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structamrex_1_1Table2D_1a39417841a68ab3c8b3fc853fbf0d29f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table2D_1a39417841a68ab3c8b3fc853fbf0d29f0" kindref="member">Table2D</ref><sp/>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U=T,<sp/>std::enable_if_t&lt;std::is_const_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="87" refid="structamrex_1_1Table2D_1a4d48381dac2b2a36b13d671c385a1f43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table2D" kindref="compound">Table2D</ref><sp/>(<ref refid="structamrex_1_1Table2D" kindref="compound">Table2D</ref>&lt;std::remove_const_t&lt;T&gt;,<sp/>ORDER&gt;<sp/>const&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(rhs.<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride1(rhs.stride1),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(rhs.<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(rhs.<ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1Table2D_1a18448ad6d53b9305e848122b2d8e263e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table2D_1a18448ad6d53b9305e848122b2d8e263e" kindref="member">Table2D</ref><sp/>(T*<sp/>a_p,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(a_p),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride1(len0(a_begin,a_end)),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(a_begin),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(a_end)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="105" refid="structamrex_1_1Table2D_1a8d5a1a77704c1c9a214e79b293afdad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U=T,<sp/>std::enable_if_t&lt;!std::is_</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="109" refid="structamrex_1_1Table2D_1a26fb98495d0fa2ebd0c6aabb32159065" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>U&amp;<sp/><ref refid="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_assert(i,j);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_same_v&lt;ORDER,Order::F&gt;<sp/>||</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;ORDER,Order::C&gt;);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[(i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0])+(j-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1])*stride1];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[(i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0])*stride1+(j-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1])];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>index_assert<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0]<sp/>||<sp/>i<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]<sp/>||</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1]<sp/>||<sp/>j<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuPrint_8H_1ac6c189884fc7e89c75eb6afe784026b4" kindref="member">AMREX_DEVICE_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(%d,%d)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(%d:%d,%d:%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]-1,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]-1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>&quot;<sp/>(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(&quot;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]-1</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]-1<sp/>&lt;&lt;<sp/>&quot;)&quot;;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex" kindref="compound">amrex</ref>::<ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">Abort</ref>(ss.str());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structamrex_1_1Table2D_1a2a93394c3acf4245fe4a27b808adac99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table2D_1a2a93394c3acf4245fe4a27b808adac99" kindref="member">len0</ref><sp/>(<ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[0]<sp/>-<sp/>a_begin[0];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[1]<sp/>-<sp/>a_begin[1];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER<sp/>=<sp/>Order::F&gt;</highlight></codeline>
<codeline lineno="158" refid="structamrex_1_1Table3D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Table3D" kindref="compound">Table3D</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160" refid="structamrex_1_1Table3D_1abb854fca4c9b2a1dd92ef8fee112ec2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161" refid="structamrex_1_1Table3D_1a2364337755de91dfe210ddb6e13d9917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162" refid="structamrex_1_1Table3D_1a3fd3906154fd716964cdd75b4694c9b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163" refid="structamrex_1_1Table3D_1ae6e3b01db1692caf20dae041275adec0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>{{1,1,1}};</highlight></codeline>
<codeline lineno="164" refid="structamrex_1_1Table3D_1a99916092c93df93da10a0bb582222174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>{{0,0,0}};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="structamrex_1_1Table3D_1a994877eb9b7819106bd25c3fb2932398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table3D_1a994877eb9b7819106bd25c3fb2932398" kindref="member">Table3D</ref><sp/>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U=T,<sp/>std::enable_if_t&lt;std::is_const_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="170" refid="structamrex_1_1Table3D_1aa5f0858c6996a581a0ab1b3507e901b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table3D" kindref="compound">Table3D</ref><sp/>(<ref refid="structamrex_1_1Table3D" kindref="compound">Table3D</ref>&lt;std::remove_const_t&lt;T&gt;,ORDER&gt;<sp/>const&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(rhs.<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride1(rhs.stride1),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride2(rhs.stride2),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(rhs.<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(rhs.<ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="179" refid="structamrex_1_1Table3D_1aec998d64bb74540871c46479ebb740b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table3D_1aec998d64bb74540871c46479ebb740b1" kindref="member">Table3D</ref><sp/>(T*<sp/>a_p,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(a_p),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride1(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len0(a_begin,a_end)),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride2(stride1*len1(a_begin,a_end)),</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(a_begin),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(a_end)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="190" refid="structamrex_1_1Table3D_1af5ee2df60cd5d9e513b645794478457b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U=T,<sp/>std::enable_if_t&lt;!std::is_</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="194" refid="structamrex_1_1Table3D_1a105b73e0e4a15d5df58f3543af1e1a63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>U&amp;<sp/><ref refid="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_assert(i,j,k);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_same_v&lt;ORDER,Order::F&gt;<sp/>||</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;ORDER,Order::C&gt;);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[(i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0])+(j-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1])*stride1+(k-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2])*stride2];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[(i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0])*stride2+(j-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1])*stride1+(k-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2])];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>index_assert<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="210"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0]<sp/>||<sp/>i<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]<sp/>||</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1]<sp/>||<sp/>j<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]<sp/>||</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2]<sp/>||<sp/>k<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[2])<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuPrint_8H_1ac6c189884fc7e89c75eb6afe784026b4" kindref="member">AMREX_DEVICE_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(%d,%d,%d)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(%d:%d,%d:%d,%d:%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/>k,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]-1,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]-1,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[2]-1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>&quot;<sp/>(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(&quot;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]-1</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]-1</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[2]-1<sp/>&lt;&lt;<sp/>&quot;)&quot;;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex" kindref="compound">amrex</ref>::<ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">Abort</ref>(ss.str());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structamrex_1_1Table3D_1accb55d2deb7abdb2c5fe9afd0f27046c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table3D_1accb55d2deb7abdb2c5fe9afd0f27046c" kindref="member">len0</ref><sp/>(<ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[0]<sp/>-<sp/>a_begin[0];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[2]<sp/>-<sp/>a_begin[2];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structamrex_1_1Table3D_1a8da09138b8d2468cc9898ba75700cdd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table3D_1a8da09138b8d2468cc9898ba75700cdd1" kindref="member">len1</ref><sp/>(<ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[1]<sp/>-<sp/>a_begin[1];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER<sp/>=<sp/>Order::F&gt;</highlight></codeline>
<codeline lineno="252" refid="structamrex_1_1Table4D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D</ref></highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254" refid="structamrex_1_1Table4D_1afc8bd190f06737a0bb3dbc412cb74d0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255" refid="structamrex_1_1Table4D_1a9f61817deacaa878d06ec111526eb676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256" refid="structamrex_1_1Table4D_1a57bde5d86b817e2779189949f8b589c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257" refid="structamrex_1_1Table4D_1a0084b4eab04a94241c76c5fc15c6e30a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>stride3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258" refid="structamrex_1_1Table4D_1acc728a4ffcef48eef5ef2ebe9b0a3ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>{{1,1,1,1}};</highlight></codeline>
<codeline lineno="259" refid="structamrex_1_1Table4D_1aee1a2d8e68a6221b68959f46f2bfad58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>{{0,0,0,0}};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structamrex_1_1Table4D_1a264e4a4265aee9986c1da7486a96a747" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table4D_1a264e4a4265aee9986c1da7486a96a747" kindref="member">Table4D</ref><sp/>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U=T,<sp/>std::enable_if_t&lt;std::is_const_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="265" refid="structamrex_1_1Table4D_1a1213dce4015d38c64724f1ed12a8589a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D</ref><sp/>(<ref refid="structamrex_1_1Table4D" kindref="compound">Table4D</ref>&lt;std::remove_const_t&lt;T&gt;,ORDER&gt;<sp/>const&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(rhs.<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride1(rhs.stride1),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride2(rhs.stride2),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride3(rhs.stride3),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(rhs.<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(rhs.<ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="275" refid="structamrex_1_1Table4D_1ab7617880b0a8e8e71b7e6ff3a0e9aae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Table4D_1ab7617880b0a8e8e71b7e6ff3a0e9aae0" kindref="member">Table4D</ref><sp/>(T*<sp/>a_p,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>(a_p),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride1(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len0(a_begin,a_end)),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride2(stride1*len1(a_begin,a_end)),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride3(stride2*len2(a_begin,a_end)),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>(a_begin),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>(a_end)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="287" refid="structamrex_1_1Table4D_1a5bdb603ccb81078e1f7ce2b5430ae76e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U=T,<sp/>std::enable_if_t&lt;!std::is_</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">_v&lt;U&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="291" refid="structamrex_1_1Table4D_1ad91320085ac8e7599dd38d7b067fa1b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>U&amp;<sp/><ref refid="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_assert(i,j,k,n);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_same_v&lt;ORDER,Order::F&gt;<sp/>||</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;ORDER,Order::C&gt;);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[(i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0])+(j-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1])*stride1+(k-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2])*stride2+(n-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[3])*stride3];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>[(i-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0])*stride3+(j-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1])*stride2+(k-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2])*stride1+(n-<ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[3])];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_BOUND_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>index_assert<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="307"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0]<sp/>||<sp/>i<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]<sp/>||</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1]<sp/>||<sp/>j<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]<sp/>||</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2]<sp/>||<sp/>k<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[2]<sp/>||</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[3]<sp/>||<sp/>n<sp/>&gt;=<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[3])<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuPrint_8H_1ac6c189884fc7e89c75eb6afe784026b4" kindref="member">AMREX_DEVICE_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(%d,%d,%d,%d)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(%d:%d,%d:%d,%d:%d,%d:%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/>k,<sp/>n,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]-1,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]-1,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[2]-1,<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[3],<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[3]-1);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>&quot;<sp/>(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>out<sp/>of<sp/>bound<sp/>(&quot;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[0]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[0]-1</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[1]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[1]-1</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[2]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[2]-1</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" kindref="member">begin</ref>[3]<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" kindref="member">end</ref>[3]-1<sp/>&lt;&lt;<sp/>&quot;)&quot;;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex" kindref="compound">amrex</ref>::<ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">Abort</ref>(ss.str());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="structamrex_1_1Table4D_1a3668191c352566d1d1c5835102b69e8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table4D_1a3668191c352566d1d1c5835102b69e8c" kindref="member">len0</ref><sp/>(<ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[0]<sp/>-<sp/>a_begin[0];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[3]<sp/>-<sp/>a_begin[3];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="structamrex_1_1Table4D_1a24f8a04409c92b85616e68e23ed0cb15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table4D_1a24f8a04409c92b85616e68e23ed0cb15" kindref="member">len1</ref><sp/>(<ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[1]<sp/>-<sp/>a_begin[1];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[2]<sp/>-<sp/>a_begin[2];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="structamrex_1_1Table4D_1a346a4f218664dc863f9082a7f1a13f6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table4D_1a346a4f218664dc863f9082a7f1a13f6b" kindref="member">len2</ref><sp/>(<ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_begin,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_end)<sp/>noexcept</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ORDER,Order::F&gt;)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[2]<sp/>-<sp/>a_begin[2];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_end[1]<sp/>-<sp/>a_begin[1];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">};</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER<sp/>=<sp/>Order::F&gt;</highlight></codeline>
<codeline lineno="403" refid="classamrex_1_1TableData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref></highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classamrex_1_1TableData_1a629989dacadbcb7af5a95b3c5e4aa23a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>O&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>;</highlight></codeline>
<codeline lineno="409" refid="classamrex_1_1TableData_1ad82ea827b5b1999cc86a3b075c7a3659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TableData_1ad82ea827b5b1999cc86a3b075c7a3659" kindref="member">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="410" refid="classamrex_1_1TableData_1a222e815d3c06ca047ebae80835044dc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TableData_1a222e815d3c06ca047ebae80835044dc4" kindref="member">table_type</ref><sp/>=<sp/>std::conditional_t&lt;N==1,<sp/>Table1D&lt;T&gt;,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;N==2,<sp/>Table2D&lt;T,<sp/>ORDER&gt;,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;N==3,<sp/>Table3D&lt;T,<sp/>ORDER&gt;,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D&lt;T, ORDER&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="414" refid="classamrex_1_1TableData_1a929878dbf8cc2587f3cd18ba3e5c1e85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TableData_1a929878dbf8cc2587f3cd18ba3e5c1e85" kindref="member">const_table_type</ref><sp/>=<sp/>std::conditional_t&lt;N==1,<sp/>Table1D&lt;T<sp/>const&gt;,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;N==2,<sp/>Table2D&lt;T<sp/>const,<sp/>ORDER&gt;,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;N==3,<sp/>Table3D&lt;T<sp/>const,<sp/>ORDER&gt;,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D&lt;T const, ORDER&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classamrex_1_1TableData_1a4239d08dc7ad7096ca5def06693b4558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TableData_1a4239d08dc7ad7096ca5def06693b4558" kindref="member">TableData</ref><sp/>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="classamrex_1_1TableData_1a4b1a33a23e97f246f878a2001d79b69d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref><sp/>(<ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)<sp/>noexcept;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref><sp/>(<ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>const&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>const&amp;<sp/>hi,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="classamrex_1_1TableData_1ab00d213d295a26cdf223d242d4fb3765" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref><sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;<sp/>const&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="426" refid="classamrex_1_1TableData_1acfa4c240bedc25768cb4a29f31a01e53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;&amp;<sp/>operator=<sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;<sp/>const&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref><sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;&amp;&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;&amp;<sp/>operator=<sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;<sp/>&amp;&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="classamrex_1_1TableData_1a78d40ceae2fb38ee7ca043a081231556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;<sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize<sp/>(<ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,N&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,N&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hi,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>Long<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref><sp/>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classamrex_1_1TableData_1af44163f840ea676ad8d51f6dd9d65998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>const&amp;<sp/>lo<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lo;<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classamrex_1_1TableData_1af4093a6730c7f7f4c45dae665b1ee35a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,N&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classamrex_1_1TableData_1af4093a6730c7f7f4c45dae665b1ee35a" kindref="member">hi</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hi;<sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear<sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1a2c1110b22670288daa9e2a01cbb70fbb" kindref="member">copy</ref><sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;<sp/>const&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>table_type<sp/>table<sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>const_table_type<sp/>table<sp/>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>const_table_type<sp/>const_table<sp/>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>define<sp/>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="classamrex_1_1TableData_1afdf4938ce386a4308e372944a4b5a394" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>m_dptr<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456" refid="classamrex_1_1TableData_1ad4346ff5843f027fe798ba9dfa0ebe51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>m_lo;</highlight></codeline>
<codeline lineno="457" refid="classamrex_1_1TableData_1a418711dcd50105d05161524f9137bb5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>m_hi;</highlight></codeline>
<codeline lineno="458" refid="classamrex_1_1TableData_1afe2cef7f8d8260130dc5640520f4062b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>m_truesize<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="459" refid="classamrex_1_1TableData_1a343632bf7caa49187def50cae53bf757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_ptr_owner<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">};</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/>typename<sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="463" refid="classamrex_1_1TableData_1a873c19168dc86fefbe7fc9d3f6b776cc" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref>&lt;T,N,ORDER&gt;::<ref refid="classamrex_1_1TableData" kindref="compound">TableData</ref><sp/>(<ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>const&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,N&gt;<sp/>const&amp;<sp/>hi,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{ar},<sp/>m_lo(lo),<sp/>m_hi(hi)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>define();</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="471" refid="classamrex_1_1TableData_1a58b2c8fc72d26a028d5c2102d3fef3bc" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1a629989dacadbcb7af5a95b3c5e4aa23a" kindref="member">TableData&lt;T,N,ORDER&gt;::TableData</ref><sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData&lt;T,N,ORDER&gt;</ref>&amp;&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{rhs.<ref refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" kindref="member">arena</ref>()},</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dptr(rhs.m_dptr),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lo(rhs.m_lo),</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_hi(rhs.m_hi),</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_truesize(rhs.m_truesize),</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr_owner(rhs.m_ptr_owner)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_dptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_ptr_owner<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">TableData&lt;T,N,ORDER&gt;&amp;</highlight></codeline>
<codeline lineno="485" refid="classamrex_1_1TableData_1ada3e19980c8c8664eca2bab1ddd46d71" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1acfa4c240bedc25768cb4a29f31a01e53" kindref="member">TableData&lt;T,N,ORDER&gt;::operator= </ref>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData&lt;T,N,ORDER&gt;</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_arena<sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.m_arena;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dptr<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.m_dptr;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.m_lo;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.m_hi;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_truesize<sp/><sp/>=<sp/>rhs.m_truesize;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr_owner<sp/>=<sp/>rhs.m_ptr_owner;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_ptr_owner<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="502" refid="classamrex_1_1TableData_1af6ca594ff322e1da97e1b6c1096dc183" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1af6ca594ff322e1da97e1b6c1096dc183" kindref="member">TableData&lt;T,N,ORDER&gt;::~TableData</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_trivially_copyable&lt;T&gt;()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_destructible&lt;T&gt;(),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TableData&lt;T,N,ORDER&gt;:<sp/>T<sp/>must<sp/>be<sp/>trivially<sp/>copyable<sp/>and<sp/>trivially<sp/>destructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(N&gt;=1<sp/>&amp;&amp;<sp/>N<sp/>&lt;=4,<sp/></highlight><highlight class="stringliteral">&quot;TableData&lt;T,N,ORDER&gt;:<sp/>N<sp/>must<sp/>be<sp/>in<sp/>the<sp/>range<sp/>of<sp/>[1,4]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same_v&lt;ORDER,Order::F&gt;<sp/>||</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;ORDER,Order::C&gt;,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TableDat&lt;T,N,ORDER&gt;:<sp/>ORDER<sp/>must<sp/>be<sp/>either<sp/>Order::F<sp/>or<sp/>Order::C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classamrex_1_1TableData_1a4fef621654e63850b94f6a969d14ed04" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1a4fef621654e63850b94f6a969d14ed04" kindref="member">TableData&lt;T,N,ORDER&gt;::resize</ref><sp/>(<ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,N&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,N&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hi,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lo<sp/>=<sp/>lo;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hi<sp/>=<sp/>hi;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ar<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>m_arena;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arena()<sp/>!=<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>(ar).arena())<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_arena<sp/>=<sp/>ar;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>!m_ptr_owner)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>()<sp/>&gt;<sp/>m_truesize)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="540" refid="classamrex_1_1TableData_1a95cfb01202068efe699062fad7263bb6" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1a95cfb01202068efe699062fad7263bb6" kindref="member">TableData&lt;T,N,ORDER&gt;::size</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a4b43b0aee35624cd95b910189b3dc231" kindref="member">r</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a4b43b0aee35624cd95b910189b3dc231" kindref="member">r</ref><sp/>*=<sp/>m_hi[i]<sp/>-<sp/>m_lo[i]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a4b43b0aee35624cd95b910189b3dc231" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="classamrex_1_1TableData_1afc56cd7ec5f96ca6966a277ea67e5641" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1afc56cd7ec5f96ca6966a277ea67e5641" kindref="member">TableData&lt;T,N,ORDER&gt;::clear</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dptr)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_ptr_owner)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="amrex__iparser_8tab_8nolint_8H_1af07d89f5ceaea0c7c8252cc41fd75f37" kindref="member">free</ref>(m_dptr);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_truesize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="classamrex_1_1TableData_1a980519b19e7ba7540cafbb896cc92484" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1a980519b19e7ba7540cafbb896cc92484" kindref="member">TableData&lt;T,N,ORDER&gt;::define</ref><sp/>()</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>m_truesize<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(m_truesize<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_truesize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr_owner<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;alloc(m_truesize*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="578" refid="namespaceamrex_1_1detail_1aea7d44c9cd549d72b1f3fa48c6c627c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table1D" kindref="compound">Table1D&lt;T&gt;</ref><sp/><ref refid="namespaceamrex_1_1detail_1a951cc75933e6ea9338ea3365ec337fb2" kindref="member">make_table</ref><sp/>(T*<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table1D" kindref="compound">Table1D&lt;T&gt;</ref>(<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/>lo[0],<sp/>hi[0]+1);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="582" refid="namespaceamrex_1_1detail_1a7cc30cb3974fb2a7e882c016a4b81e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table2D" kindref="compound">Table2D&lt;T,ORDER&gt;</ref><sp/><ref refid="namespaceamrex_1_1detail_1a951cc75933e6ea9338ea3365ec337fb2" kindref="member">make_table</ref><sp/>(T*<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table2D" kindref="compound">Table2D&lt;T,ORDER&gt;</ref>(<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/>{lo[0],lo[1]},<sp/>{hi[0]+1,hi[1]+1});</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="586" refid="namespaceamrex_1_1detail_1acafe50ccedfa64e02c41ae675f646a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table3D" kindref="compound">Table3D&lt;T&gt;</ref><sp/><ref refid="namespaceamrex_1_1detail_1a951cc75933e6ea9338ea3365ec337fb2" kindref="member">make_table</ref><sp/>(T*<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table3D" kindref="compound">Table3D&lt;T,ORDER&gt;</ref>(<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/>{lo[0],lo[1],lo[2]},<sp/>{hi[0]+1,hi[1]+1,hi[2]+1});</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="590" refid="namespaceamrex_1_1detail_1a951cc75933e6ea9338ea3365ec337fb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D&lt;T&gt;</ref><sp/><ref refid="namespaceamrex_1_1detail_1a951cc75933e6ea9338ea3365ec337fb2" kindref="member">make_table</ref><sp/>(T*<sp/><ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lo,<sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;int,4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Table4D" kindref="compound">Table4D&lt;T,ORDER&gt;</ref>(<ref refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" kindref="member">p</ref>,<sp/>{lo[0],lo[1],lo[2],lo[3]},<sp/>{hi[0]+1,hi[1]+1,hi[2]+1,hi[3]+1});</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TableData_1a222e815d3c06ca047ebae80835044dc4" kindref="member">TableData&lt;T,N,ORDER&gt;::table_type</ref></highlight></codeline>
<codeline lineno="597" refid="classamrex_1_1TableData_1afeffb10e16b9f5ef9e1f806bb5940796" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1afeffb10e16b9f5ef9e1f806bb5940796" kindref="member">TableData&lt;T,N,ORDER&gt;::table</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::make_table&lt;T,ORDER&gt;(m_dptr,<sp/>m_lo,<sp/>m_hi);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TableData_1a929878dbf8cc2587f3cd18ba3e5c1e85" kindref="member">TableData&lt;T,N,ORDER&gt;::const_table_type</ref></highlight></codeline>
<codeline lineno="604" refid="classamrex_1_1TableData_1a83a37d5f24b2a4cffeb5f658ca0bda78" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1afeffb10e16b9f5ef9e1f806bb5940796" kindref="member">TableData&lt;T,N,ORDER&gt;::table</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::make_table&lt;T<sp/>const,<sp/>ORDER&gt;(m_dptr,<sp/>m_lo,<sp/>m_hi);</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TableData_1a929878dbf8cc2587f3cd18ba3e5c1e85" kindref="member">TableData&lt;T,N,ORDER&gt;::const_table_type</ref></highlight></codeline>
<codeline lineno="611" refid="classamrex_1_1TableData_1a47894641211c75ff39ae19d25f894848" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1a47894641211c75ff39ae19d25f894848" kindref="member">TableData&lt;T,N,ORDER&gt;::const_table</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::make_table&lt;T<sp/>const,<sp/>ORDER&gt;(m_dptr,<sp/>m_lo,<sp/>m_hi);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ORDER&gt;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="classamrex_1_1TableData_1a782cfc237fbff9c3baa8793a6ee988cd" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1TableData_1a782cfc237fbff9c3baa8793a6ee988cd" kindref="member">TableData&lt;T,N,ORDER&gt;::copy</ref><sp/>(<ref refid="classamrex_1_1TableData" kindref="compound">TableData&lt;T,N,ORDER&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>count<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>this_on_device<sp/>=<sp/>arena()-&gt;isManaged()<sp/>||<sp/>arena()-&gt;isDevice();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rhs_on_device<sp/>=<sp/>rhs.arena()-&gt;isManaged()<sp/>||<sp/>rhs.arena()-&gt;isDevice();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_on_device<sp/>&amp;&amp;<sp/>rhs_on_device)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a00026ef5f8505586ed52acbbc11fdf91" kindref="member">Gpu::dtod_memcpy_async</ref>(m_dptr,<sp/>rhs.m_dptr,<sp/>count);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_on_device<sp/>&amp;&amp;<sp/>!rhs_on_device)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aacefe17a39734cb2475a36199ab1370b" kindref="member">Gpu::htod_memcpy_async</ref>(m_dptr,<sp/>rhs.m_dptr,<sp/>count);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this_on_device<sp/>&amp;&amp;<sp/>rhs_on_device)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a6cb0d90b937d4749b2219ad0e9fa8277" kindref="member">Gpu::dtoh_memcpy_async</ref>(m_dptr,<sp/>rhs.m_dptr,<sp/>count);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(m_dptr,<sp/>rhs.m_dptr,<sp/>count);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H"/>
  </compounddef>
</doxygen>
