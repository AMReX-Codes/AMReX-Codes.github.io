<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__BLBackTrace_8cpp" kind="file" language="C++">
    <compoundname>AMReX_BLBackTrace.cpp</compoundname>
    <includes refid="AMReX__BLBackTrace_8H" local="no">AMReX_BLBackTrace.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <includes refid="AMReX__VisMF_8H" local="no">AMReX_VisMF.H</includes>
    <includes refid="AMReX__AsyncOut_8H" local="no">AMReX_AsyncOut.H</includes>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">csignal</includes>
    <includes local="no">cfenv</includes>
    <includes local="no">execinfo.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="10930">
        <label>atomic</label>
      </node>
      <node id="10893">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
      </node>
      <node id="10849">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10850" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
      </node>
      <node id="10897">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10902">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10848">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10939">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="10864">
        <label>iomanip</label>
      </node>
      <node id="10841">
        <label>functional</label>
      </node>
      <node id="10868">
        <label>queue</label>
      </node>
      <node id="10855">
        <label>limits</label>
      </node>
      <node id="10842">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
      </node>
      <node id="10857">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
      </node>
      <node id="10909">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
      </node>
      <node id="10873">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10875" relation="include">
        </childnode>
        <childnode refid="10857" relation="include">
        </childnode>
        <childnode refid="10876" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
      </node>
      <node id="10928">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10929" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10878" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
      </node>
      <node id="10923">
        <label>iterator</label>
      </node>
      <node id="10837">
        <label>float.h</label>
      </node>
      <node id="10894">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10873" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10895" relation="include">
        </childnode>
        <childnode refid="10893" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
      </node>
      <node id="10916">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10825">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
      </node>
      <node id="10829">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10830" relation="include">
        </childnode>
      </node>
      <node id="10867">
        <label>cstdint</label>
      </node>
      <node id="10884">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10844" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10885" relation="include">
        </childnode>
      </node>
      <node id="10886">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10887" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10888" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10873" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10889" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10891" relation="include">
        </childnode>
      </node>
      <node id="10938">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="10939" relation="include">
        </childnode>
        <childnode refid="10940" relation="include">
        </childnode>
      </node>
      <node id="10921">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
      </node>
      <node id="10907">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10908" relation="include">
        </childnode>
        <childnode refid="10910" relation="include">
        </childnode>
        <childnode refid="10909" relation="include">
        </childnode>
      </node>
      <node id="10911">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10844" relation="include">
        </childnode>
        <childnode refid="10912" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10913" relation="include">
        </childnode>
        <childnode refid="10909" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
      </node>
      <node id="10822">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
      </node>
      <node id="10809">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10811" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
      </node>
      <node id="10847">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
      </node>
      <node id="10839">
        <label>cmath</label>
      </node>
      <node id="10830">
        <label>cassert</label>
      </node>
      <node id="10836">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10837" relation="include">
        </childnode>
      </node>
      <node id="10832">
        <label>stdexcept</label>
      </node>
      <node id="10818">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10861">
        <label>numeric</label>
      </node>
      <node id="10808">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
        <childnode refid="10809" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10865" relation="include">
        </childnode>
        <childnode refid="10942" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10821" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
        <childnode refid="10862" relation="include">
        </childnode>
        <childnode refid="10943" relation="include">
        </childnode>
        <childnode refid="10944" relation="include">
        </childnode>
        <childnode refid="10945" relation="include">
        </childnode>
      </node>
      <node id="10812">
        <label>string</label>
      </node>
      <node id="10900">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10844" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10901" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10902" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
      </node>
      <node id="10942">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
      </node>
      <node id="10871">
        <label>map</label>
      </node>
      <node id="10934">
        <label>unordered_set</label>
      </node>
      <node id="10880">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
      </node>
      <node id="10901">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
      </node>
      <node id="10827">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10888">
        <label>cfloat</label>
      </node>
      <node id="10850">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
      </node>
      <node id="10819">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10821" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
      </node>
      <node id="10821">
        <label>fstream</label>
      </node>
      <node id="10876">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10857" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
      </node>
      <node id="10865">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10821" relation="include">
        </childnode>
        <childnode refid="10866" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10867" relation="include">
        </childnode>
        <childnode refid="10868" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10869" relation="include">
        </childnode>
        <childnode refid="10928" relation="include">
        </childnode>
        <childnode refid="10941" relation="include">
        </childnode>
        <childnode refid="10942" relation="include">
        </childnode>
      </node>
      <node id="10905">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10901" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
      </node>
      <node id="10846">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
      </node>
      <node id="10917">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10918" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
      </node>
      <node id="10826">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10828" relation="include">
        </childnode>
        <childnode refid="10829" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10838" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
      </node>
      <node id="10889">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10890" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10867" relation="include">
        </childnode>
      </node>
      <node id="10833">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10890">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
      </node>
      <node id="10892">
        <label>sys/types.h</label>
      </node>
      <node id="10919">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
      </node>
      <node id="10931">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
      </node>
      <node id="10936">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
      </node>
      <node id="10860">
        <label>typeinfo</label>
      </node>
      <node id="10828">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
      </node>
      <node id="10882">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10883" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10884" relation="include">
        </childnode>
        <childnode refid="10893" relation="include">
        </childnode>
      </node>
      <node id="10932">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10872" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10933" relation="include">
        </childnode>
        <childnode refid="10934" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
      </node>
      <node id="10810">
        <label>AMReX_Config.H</label>
      </node>
      <node id="10815">
        <label>cstdio</label>
      </node>
      <node id="10940">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="10912">
        <label>tuple</label>
      </node>
      <node id="10881">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
      </node>
      <node id="10859">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10828" relation="include">
        </childnode>
      </node>
      <node id="10858">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
      </node>
      <node id="10817">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10819" relation="include">
        </childnode>
        <childnode refid="10809" relation="include">
        </childnode>
        <childnode refid="10842" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10860" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10861" relation="include">
        </childnode>
        <childnode refid="10862" relation="include">
        </childnode>
      </node>
      <node id="10903">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
      </node>
      <node id="10945">
        <label>unistd.h</label>
      </node>
      <node id="10885">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10838" relation="include">
        </childnode>
      </node>
      <node id="10824">
        <label>vector</label>
      </node>
      <node id="10811">
        <label>stack</label>
      </node>
      <node id="10914">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
      </node>
      <node id="10927">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10894" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10928" relation="include">
        </childnode>
        <childnode refid="10884" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
      </node>
      <node id="10925">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10867" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
      </node>
      <node id="10813">
        <label>utility</label>
      </node>
      <node id="10851">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10857" relation="include">
        </childnode>
        <childnode refid="10858" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10859" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
      </node>
      <node id="10877">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10857" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10876" relation="include">
        </childnode>
      </node>
      <node id="10844">
        <label>array</label>
      </node>
      <node id="10920">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
      </node>
      <node id="10814">
        <label>sstream</label>
      </node>
      <node id="10922">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10861" relation="include">
        </childnode>
        <childnode refid="10923" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10924" relation="include">
        </childnode>
        <childnode refid="10921" relation="include">
        </childnode>
        <childnode refid="10925" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
      </node>
      <node id="10834">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10835" relation="include">
        </childnode>
      </node>
      <node id="10904">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10897" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10901" relation="include">
        </childnode>
        <childnode refid="10905" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10906" relation="include">
        </childnode>
        <childnode refid="10907" relation="include">
        </childnode>
        <childnode refid="10898" relation="include">
        </childnode>
        <childnode refid="10911" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10914" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10903" relation="include">
        </childnode>
        <childnode refid="10890" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10915" relation="include">
        </childnode>
        <childnode refid="10916" relation="include">
        </childnode>
      </node>
      <node id="10915">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10908">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10909" relation="include">
        </childnode>
      </node>
      <node id="10937">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10894" relation="include">
        </childnode>
        <childnode refid="10927" relation="include">
        </childnode>
      </node>
      <node id="10852">
        <label>iosfwd</label>
      </node>
      <node id="10816">
        <label>cstdlib</label>
      </node>
      <node id="10879">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10929">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10844" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10930" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10914" relation="include">
        </childnode>
        <childnode refid="10876" relation="include">
        </childnode>
        <childnode refid="10931" relation="include">
        </childnode>
        <childnode refid="10932" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10842" relation="include">
        </childnode>
        <childnode refid="10935" relation="include">
        </childnode>
        <childnode refid="10879" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10936" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
        <childnode refid="10838" relation="include">
        </childnode>
      </node>
      <node id="10913">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
      </node>
      <node id="10943">
        <label>cfenv</label>
      </node>
      <node id="10840">
        <label>iostream</label>
      </node>
      <node id="10843">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10844" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10850" relation="include">
        </childnode>
      </node>
      <node id="10874">
        <label>cstddef</label>
      </node>
      <node id="10910">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10859" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
      </node>
      <node id="10875">
        <label>unordered_map</label>
      </node>
      <node id="10856">
        <label>climits</label>
      </node>
      <node id="10854">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10850" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10838" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
      </node>
      <node id="10933">
        <label>mutex</label>
      </node>
      <node id="10924">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
        <childnode refid="10921" relation="include">
        </childnode>
        <childnode refid="10922" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
      </node>
      <node id="10887">
        <label>chrono</label>
      </node>
      <node id="10941">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
      </node>
      <node id="10862">
        <label>csignal</label>
      </node>
      <node id="10878">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10879" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
      </node>
      <node id="10898">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10903" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
      </node>
      <node id="10866">
        <label>thread</label>
      </node>
      <node id="10895">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
      </node>
      <node id="10838">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
      </node>
      <node id="10896">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10897" relation="include">
        </childnode>
        <childnode refid="10828" relation="include">
        </childnode>
        <childnode refid="10829" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10898" relation="include">
        </childnode>
        <childnode refid="10904" relation="include">
        </childnode>
        <childnode refid="10901" relation="include">
        </childnode>
        <childnode refid="10908" relation="include">
        </childnode>
        <childnode refid="10910" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10917" relation="include">
        </childnode>
        <childnode refid="10919" relation="include">
        </childnode>
        <childnode refid="10920" relation="include">
        </childnode>
        <childnode refid="10906" relation="include">
        </childnode>
        <childnode refid="10905" relation="include">
        </childnode>
        <childnode refid="10907" relation="include">
        </childnode>
        <childnode refid="10921" relation="include">
        </childnode>
        <childnode refid="10922" relation="include">
        </childnode>
        <childnode refid="10926" relation="include">
        </childnode>
      </node>
      <node id="10906">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10900" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
      </node>
      <node id="10853">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
      </node>
      <node id="10831">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10832" relation="include">
        </childnode>
      </node>
      <node id="10845">
        <label>type_traits</label>
      </node>
      <node id="10872">
        <label>set</label>
      </node>
      <node id="10883">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
      </node>
      <node id="10869">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10872" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10873" relation="include">
        </childnode>
        <childnode refid="10877" relation="include">
        </childnode>
        <childnode refid="10878" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
        <childnode refid="10882" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10842" relation="include">
        </childnode>
        <childnode refid="10893" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10894" relation="include">
        </childnode>
        <childnode refid="10927" relation="include">
        </childnode>
        <childnode refid="10879" relation="include">
        </childnode>
        <childnode refid="10899" relation="include">
        </childnode>
        <childnode refid="10937" relation="include">
        </childnode>
        <childnode refid="10929" relation="include">
        </childnode>
        <childnode refid="10896" relation="include">
        </childnode>
        <childnode refid="10938" relation="include">
        </childnode>
      </node>
      <node id="10823">
        <label>algorithm</label>
      </node>
      <node id="10891">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10812" relation="include">
        </childnode>
        <childnode refid="10892" relation="include">
        </childnode>
      </node>
      <node id="10944">
        <label>execinfo.h</label>
      </node>
      <node id="10870">
        <label>cstring</label>
      </node>
      <node id="10926">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
      </node>
      <node id="10820">
        <label>memory</label>
      </node>
      <node id="10918">
        <label>initializer_list</label>
      </node>
      <node id="10835">
        <label>inttypes.h</label>
      </node>
      <node id="10899">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
      </node>
      <node id="10935">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
      </node>
      <node id="10863">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="10810" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10821" relation="include">
        </childnode>
        <childnode refid="10864" relation="include">
        </childnode>
        <childnode refid="10813" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10819" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLBackTrace_8H" kindref="compound">AMReX_BLBackTrace.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__VisMF_8H" kindref="compound">AMReX_VisMF.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__AsyncOut_8H" kindref="compound">AMReX_AsyncOut.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_TINY_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TinyProfiler_8H" kindref="compound">AMReX_TinyProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(__CUDACC__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//MSVC<sp/>can&apos;t<sp/>pre-processor<sp/>cfenv<sp/>with<sp/>`Zc:preprocessor`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//https://developercommunity.visualstudio.com/content/problem/1271183/zcpreprocessor-e-crashes-when-given.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfenv&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_EXPORT_DYNAMIC)<sp/>&amp;&amp;<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cxxabi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_BACKTRACE_SUPPORTED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_BACKTRACE_SUPPORTED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;execinfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">std::stack&lt;std::pair&lt;std::string,<sp/>std::string&gt;<sp/>&gt;<sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1aaf1d60939d82c0f1d794feed9222e8a0" kindref="member">BLBackTrace::bt_stack</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="structamrex_1_1BLBackTrace_1a24b1c852ff2149fe973fad9501e2b5ec" kindref="member">BLBackTrace::handler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(s,<sp/>SIG_DFL);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1AsyncOut_1a2040a56976bffbbfac29f5e01800ea3c" kindref="member">AsyncOut::Finalize</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SIGSEGV:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Segfault\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SIGFPE:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Erroneous<sp/>arithmetic<sp/>operation\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SIGTERM:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIGTERM\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SIGINT:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIGINT\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SIGABRT:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIGABRT\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_BACKTRACE_SUPPORTED)<sp/>||<sp/>defined(AMREX_TINY_PROFILING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errfilename;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Backtrace.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex__omp__module_1a1f5881f02905de2162615538e3989e36" kindref="member">omp_get_thread_num</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>errfilename<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FILE*<sp/>p<sp/>=<sp/>fopen(errfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_BACKTRACE_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1a33950310b32a51c70dd6f6960d83e2db" kindref="member">BLBackTrace::print_backtrace_info</ref>(p);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(p);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1e213ab52cdac41e691ab49370b30a34" kindref="member">amrex::ErrorStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;See<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>errfilename<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>file<sp/>for<sp/>details&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structamrex_1_1BLBackTrace_1aaf1d60939d82c0f1d794feed9222e8a0" kindref="member">bt_stack</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>errfile;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>errfile.open(errfilename.c_str(),<sp/>std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errfile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errfile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="structamrex_1_1BLBackTrace_1aaf1d60939d82c0f1d794feed9222e8a0" kindref="member">bt_stack</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==<sp/>BACKTRACE<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1BLBackTrace_1aaf1d60939d82c0f1d794feed9222e8a0" kindref="member">bt_stack</ref>.top().first</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structamrex_1_1BLBackTrace_1aaf1d60939d82c0f1d794feed9222e8a0" kindref="member">bt_stack</ref>.top().second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1aaf1d60939d82c0f1d794feed9222e8a0" kindref="member">bt_stack</ref>.pop();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errfile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_TINY_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>errfile;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errfile.open(errfilename.c_str(),<sp/>std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errfile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errfile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler_1a8a14bcc37603ec472c17a644428d3686" kindref="member">TinyProfiler::PrintCallStack</ref>(errfile);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errfile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae0cfc6441bbe3f6e424e8a3fdd99bfe8" kindref="member">amrex::Sleep</ref>(3);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ae6927a6804e22fedb86c1fe19d6567fc" kindref="member">ParallelDescriptor::Abort</ref>(s,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="structamrex_1_1BLBackTrace_1a33950310b32a51c70dd6f6960d83e2db" kindref="member">BLBackTrace::print_backtrace_info</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FILE*<sp/>p<sp/>=<sp/>fopen(filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1BLBackTrace_1a33950310b32a51c70dd6f6960d83e2db" kindref="member">BLBackTrace::print_backtrace_info</ref>(p);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(p);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning<sp/>@<sp/>BLBackTrace::print_backtrace_info:<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>output<sp/>file.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_BACKTRACE_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>run_command<sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cmd)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>r;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FILE<sp/>*<sp/>ps<sp/>=<sp/>popen(cmd.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>print_buff[512];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(print_buff,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(print_buff),<sp/>ps))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>print_buff;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclose(ps);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_exists<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FILE<sp/>*fp<sp/>=<sp/>fopen(file,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="structamrex_1_1BLBackTrace_1a33950310b32a51c70dd6f6960d83e2db" kindref="member">BLBackTrace::print_backtrace_info</ref><sp/>(FILE*<sp/>f)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_BACKTRACE_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbuf<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bt_buffer[nbuf];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nentries<sp/>=<sp/>backtrace(bt_buffer,<sp/>nbuf);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__linux__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**strings<sp/>=<sp/>backtrace_symbols(bt_buffer,<sp/>nentries);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strings<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>have_eu_addr2line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>have_addr2line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cmd;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_eu_addr2line<sp/>=<sp/>file_exists(</highlight><highlight class="stringliteral">&quot;/usr/bin/eu-addr2line&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have_eu_addr2line)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pid_t<sp/>pid<sp/>=<sp/>getpid();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cmd<sp/>=<sp/>&quot;/usr/bin/eu-addr2line<sp/>-C<sp/>-f<sp/>-i<sp/>--pretty-print<sp/>-p<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/usr/bin/eu-addr2line<sp/>-C<sp/>-f<sp/>-i<sp/>-p<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::to_string(pid);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!have_eu_addr2line)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_addr2line<sp/>=<sp/>file_exists(</highlight><highlight class="stringliteral">&quot;/usr/bin/addr2line&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have_addr2line)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/usr/bin/addr2line<sp/>-Cpfie<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">amrex::system::exename</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;===<sp/>If<sp/>no<sp/>file<sp/>names<sp/>and<sp/>line<sp/>numbers<sp/>are<sp/>shown<sp/>below,<sp/>one<sp/>can<sp/>run\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr2line<sp/>-Cpfie<sp/>my_exefile<sp/>my_line_address\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>to<sp/>convert<sp/>`my_line_address`<sp/>(e.g.,<sp/>0x4a6b)<sp/>into<sp/>file<sp/>name<sp/>and<sp/>line<sp/>number.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Or<sp/>one<sp/>can<sp/>use<sp/>amrex/Tools/Backtrace/parse_bt.py.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;===<sp/>Please<sp/>note<sp/>that<sp/>the<sp/>line<sp/>number<sp/>reported<sp/>by<sp/>addr2line<sp/>may<sp/>not<sp/>be<sp/>accurate.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>One<sp/>can<sp/>use\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readelf<sp/>-wl<sp/>my_exefile<sp/>|<sp/>grep<sp/>my_line_address&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>to<sp/>find<sp/>out<sp/>the<sp/>offset<sp/>for<sp/>that<sp/>line.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nentries;<sp/>++i)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%2d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>strings[i]);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_OPENMP)<sp/>||<sp/>!defined(__INTEL_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>addr2line_result;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a1ed2a732c93fe26dfa4fbb63c2a698eb" kindref="member">amrex::system::call_addr2line</ref><sp/>&amp;&amp;<sp/>have_eu_addr2line)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bt_buffer[i]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>print_buff[32];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::snprintf(print_buff,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(print_buff),</highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,bt_buffer[i]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>full_cmd<sp/>=<sp/>cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>print_buff;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr2line_result<sp/>=<sp/>run_command(full_cmd);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a1ed2a732c93fe26dfa4fbb63c2a698eb" kindref="member">amrex::system::call_addr2line</ref><sp/>&amp;&amp;<sp/>have_addr2line<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceamrex_1_1system_1ad7a31ac8f94796a39eaf2dc8c12c8e17" kindref="member">amrex::system::exename</ref>.empty())</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>line<sp/>=<sp/>strings[i];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>found_libc<sp/>=<sp/>line.find(</highlight><highlight class="stringliteral">&quot;libc.so&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_libc<sp/>==<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>addr;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>found1<sp/>=<sp/>line.rfind(</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>found2<sp/>=<sp/>line.rfind(</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>found3<sp/>=<sp/>line.rfind(</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found1<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>found2<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>found3<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found1<sp/>&lt;<sp/>found3<sp/>&amp;&amp;<sp/>found3<sp/>&lt;<sp/>found2)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>line.substr(found3+1,<sp/>found2-found3-1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addr.empty())<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>full_cmd<sp/>=<sp/>cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>addr;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr2line_result<sp/>=<sp/>run_command(full_cmd);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr2line_result.find(</highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr2line_result.clear();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr2line_result.empty())<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>print_buff[32];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::snprintf(print_buff,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(print_buff),</highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,bt_buffer[i]);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>full_cmd<sp/>=<sp/>cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>print_buff;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr2line_result<sp/>=<sp/>run_command(full_cmd);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addr2line_result.empty())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>addr2line_result.c_str());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::free(strings);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_BACKTRACE_SUPPORTED)<sp/>&amp;&amp;<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pid_t<sp/>pid<sp/>=<sp/>getpid();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/usr/bin/atos<sp/>-p<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(pid);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>have_atos<sp/>=<sp/>file_exists(</highlight><highlight class="stringliteral">&quot;/usr/bin/atos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nentries;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dl_info<sp/>info;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dladdr(bt_buffer[i],<sp/>&amp;info))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1a1ed2a732c93fe26dfa4fbb63c2a698eb" kindref="member">amrex::system::call_addr2line</ref><sp/>&amp;&amp;<sp/>have_atos)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>print_buff[32];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::snprintf(print_buff,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(print_buff),</highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,bt_buffer[i]);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>full_cmd<sp/>=<sp/>cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>print_buff;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>run_command(full_cmd);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.empty())<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>demangled_name<sp/>=<sp/>abi::__cxa_demangle(info.dli_sname,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>+=<sp/>demangled_name;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>+=<sp/>info.dli_fname;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::free(demangled_name);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%2d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>line.c_str());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="classamrex_1_1BLBTer_1acbd71a84437f500f76af1f585386c007" kindref="member">BLBTer::BLBTer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>line_file<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex__omp__module_1ad65feb81483b21194d98cfba40c0b8bb" kindref="member">omp_in_parallel</ref>())<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>ss0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Proc.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Thread<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex__omp__module_1a1f5881f02905de2162615538e3989e36" kindref="member">omp_get_thread_num</ref>()</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>BLBackTrace::bt_stack.push(std::make_pair(ss0.str(),<sp/>line_file));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Proc.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Master<sp/>Thread&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLBackTrace::bt_stack.push(std::make_pair(ss0.str(),<sp/>line_file));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>ss0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Proc.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>BLBackTrace::bt_stack.push(std::make_pair(ss0.str(),<sp/>line_file));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="classamrex_1_1BLBTer_1a40f6ea2be2071a89f148f4ca939077d7" kindref="member">BLBTer::~BLBTer</ref>()</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex__omp__module_1ad65feb81483b21194d98cfba40c0b8bb" kindref="member">omp_in_parallel</ref>())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_bt_stack();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_bt_stack();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_bt_stack();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><ref refid="classamrex_1_1BLBTer_1abe774b8eb0afd3dc4f530aaf3c509984" kindref="member">BLBTer::pop_bt_stack</ref>()</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BLBackTrace::bt_stack.empty())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BLBackTrace::bt_stack.top().<ref refid="namespaceamrex_1a6f975f843338c8eada684f0e8e2c0cb7" kindref="member">second</ref>.compare(line_file)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLBackTrace::bt_stack.pop();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp"/>
  </compounddef>
</doxygen>
