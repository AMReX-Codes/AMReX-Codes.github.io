<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1MultiCutFab" kind="class" language="C++" prot="public">
    <compoundname>amrex::MultiCutFab</compoundname>
    <includes refid="AMReX__MultiCutFab_8H" local="no">AMReX_MultiCutFab.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MultiCutFab_1aa57d6c13b3ffbf9dcc2bf1d3c3496852" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &gt;</type>
        <definition>FabArray&lt;CutFab&gt; amrex::MultiCutFab::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="125" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MultiCutFab_1acf458e03eaefec6d963a0b0e3b0453da" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; *</type>
        <definition>const FabArray&lt;EBCellFlagFab&gt;* amrex::MultiCutFab::m_cellflags</definition>
        <argsstring></argsstring>
        <name>m_cellflags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="126" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a6e72abb71404d338b7ddc2570277c430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>()</argsstring>
        <name>MultiCutFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="83" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1aaaef2d8067b4e79d9e8b222d82fffe3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp, int ngrow, const FabArray&lt; EBCellFlagFab &gt; &amp;cellflags)</argsstring>
        <name>MultiCutFab</name>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
          <declname>cellflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="85" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ab4e7bba2a1d004437f5175e6fba94282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::~MultiCutFab</definition>
        <argsstring>()</argsstring>
        <name>~MultiCutFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="88" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a791ee981722de3ea8241d09f96653a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>(MultiCutFab &amp;&amp;rhs) noexcept=default</argsstring>
        <name>MultiCutFab</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a13683ad147676d968ba83b1c7a1ce09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>(const MultiCutFab &amp;rhs)=delete</argsstring>
        <name>MultiCutFab</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a933d522f37c305e1517c6b3b09248254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>MultiCutFab&amp; amrex::MultiCutFab::operator=</definition>
        <argsstring>(const MultiCutFab &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a5d048b1c459102c5f3f038147a171ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>MultiCutFab&amp; amrex::MultiCutFab::operator=</definition>
        <argsstring>(MultiCutFab &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1aa7ea55e7f0a58e0f3b37dd08b3a337eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::define</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp, int ngrow, const FabArray&lt; EBCellFlagFab &gt; &amp;cellflags)</argsstring>
        <name>define</name>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
          <declname>cellflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="96" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a316297dac1bb8a86d2c72da43db652a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &amp;</type>
        <definition>const CutFab &amp; amrex::MultiCutFab::operator[]</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="99" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ade6f739eb789f2d3dc684a193be94971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &amp;</type>
        <definition>CutFab &amp; amrex::MultiCutFab::operator[]</definition>
        <argsstring>(const MFIter &amp;mfi) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="100" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a28cf664d141809833e9e86d0da19f71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;</type>
        <definition>Array4&lt; Real &gt; amrex::MultiCutFab::array</definition>
        <argsstring>(const MFIter &amp;mfi) noexcept</argsstring>
        <name>array</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="102" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a5dfa78cdf782516029bdcb3be0c25697" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const  &gt;</type>
        <definition>Array4&lt; Real const  &gt; amrex::MultiCutFab::array</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>array</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="103" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a50cae7c9c3be8c1acf784e0b2aa823f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const  &gt;</type>
        <definition>Array4&lt; Real const  &gt; amrex::MultiCutFab::const_array</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>const_array</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="104" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ad4fed4196dbde22c7aec7fa98b16b859" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::MultiCutFab::ok</definition>
        <argsstring>(const MFIter &amp;mfi) const noexcept</argsstring>
        <name>ok</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="106" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a22eb86768e17886d036bc065094ce343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::setVal</definition>
        <argsstring>(Real val)</argsstring>
        <name>setVal</name>
        <param>
          <type>Real</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="108" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="90" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a16717da298c94c764eaa8f309fc1a4aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &gt; &amp;</type>
        <definition>FabArray&lt;CutFab&gt;&amp; amrex::MultiCutFab::data</definition>
        <argsstring>() noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="110" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a033e611a5f48e7d975d4e5485d89e742" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &gt; &amp;</type>
        <definition>const FabArray&lt;CutFab&gt;&amp; amrex::MultiCutFab::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="111" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a4392470ed6648f18f0dbd5b986ff204c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BoxArray &amp;</type>
        <definition>const BoxArray&amp; amrex::MultiCutFab::boxArray</definition>
        <argsstring>() const noexcept</argsstring>
        <name>boxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="113" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a399e380fa767dede8285ab80c9237e77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping&amp; amrex::MultiCutFab::DistributionMap</definition>
        <argsstring>() const noexcept</argsstring>
        <name>DistributionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="114" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a3b4fcaf2fed76d9722c8a476ce1a5ce8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MultiCutFab::nComp</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nComp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="115" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ae8d90e43fe323739131b52c834c46dd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MultiCutFab::nGrow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nGrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="116" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a212f1455dd8018d3cd773107db0df62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::ParallelCopy</definition>
        <argsstring>(const MultiCutFab &amp;src, int scomp, int dcomp, int ncomp, int sng, int dng, const Periodicity &amp;period=Periodicity::NonPeriodic())</argsstring>
        <name>ParallelCopy</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>sng</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dng</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Periodicity" kindref="compound">Periodicity</ref> &amp;</type>
          <declname>period</declname>
          <defval><ref refid="classamrex_1_1Periodicity_1a194e779bf59d1700830a35cecb5271a5" kindref="member">Periodicity::NonPeriodic</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="118" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ac5f3026221c3cafbcb0e19f6583cfd9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::MultiCutFab::ToMultiFab</definition>
        <argsstring>(Real regular_value, Real covered_value) const</argsstring>
        <name>ToMultiFab</name>
        <param>
          <type>Real</type>
          <declname>regular_value</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>covered_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="121" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="115" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1abc1b348b3856266730d542e9148a6b31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="128" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="35" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3706">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3685">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3686" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3689">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3701">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="3688">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3688" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3707">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3708" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3699">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="3700" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="3698">
        <label>std::vector&lt; char *, std::allocator&lt; char *&gt; &gt;</label>
      </node>
      <node id="3703">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3700">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3701" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="3690">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3691" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3686">
        <label>string</label>
      </node>
      <node id="3682">
        <label>amrex::MultiCutFab</label>
        <link refid="classamrex_1_1MultiCutFab"/>
        <childnode refid="3683" relation="usage">
          <edgelabel>m_cellflags</edgelabel>
        </childnode>
        <childnode refid="3710" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3709">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3688" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3704">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3683">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3684" relation="public-inheritance">
        </childnode>
        <childnode refid="3695" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3697" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3688" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3699" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3690" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3702" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3704" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3705" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3707" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3709" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3697">
        <label>amrex::Vector&lt; char *&gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3698" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3708">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3691">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3693">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3694" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3705">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3706" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3710">
        <label>amrex::FabArray&lt; amrex::CutFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3684" relation="public-inheritance">
        </childnode>
        <childnode refid="3695" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3697" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3688" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3699" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3690" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3702" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3704" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3705" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3707" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3709" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3694">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3690" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3702">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3703" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3687">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3692">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3693" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3695">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3684">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3685" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3687" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3688" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3689" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3690" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3692" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="3696">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" line="80" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="79" bodyend="129"/>
    <listofallmembers>
      <member refid="classamrex_1_1MultiCutFab_1a28cf664d141809833e9e86d0da19f71c" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>array</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a5dfa78cdf782516029bdcb3be0c25697" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>array</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a4392470ed6648f18f0dbd5b986ff204c" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a50cae7c9c3be8c1acf784e0b2aa823f8" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>const_array</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a16717da298c94c764eaa8f309fc1a4aa" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>data</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a033e611a5f48e7d975d4e5485d89e742" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>data</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aa7ea55e7f0a58e0f3b37dd08b3a337eb" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>define</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a399e380fa767dede8285ab80c9237e77" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MultiCutFab_1acf458e03eaefec6d963a0b0e3b0453da" prot="private" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>m_cellflags</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aa57d6c13b3ffbf9dcc2bf1d3c3496852" prot="private" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>m_data</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a6e72abb71404d338b7ddc2570277c430" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aaaef2d8067b4e79d9e8b222d82fffe3f" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a791ee981722de3ea8241d09f96653a33" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a13683ad147676d968ba83b1c7a1ce09b" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a3b4fcaf2fed76d9722c8a476ce1a5ce8" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>nComp</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ae8d90e43fe323739131b52c834c46dd7" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>nGrow</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ad4fed4196dbde22c7aec7fa98b16b859" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>ok</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a933d522f37c305e1517c6b3b09248254" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a5d048b1c459102c5f3f038147a171ecb" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a316297dac1bb8a86d2c72da43db652a6" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ade6f739eb789f2d3dc684a193be94971" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a212f1455dd8018d3cd773107db0df62d" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>ParallelCopy</name></member>
      <member refid="classamrex_1_1MultiCutFab_1abc1b348b3856266730d542e9148a6b31" prot="private" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>remove</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a22eb86768e17886d036bc065094ce343" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ac5f3026221c3cafbcb0e19f6583cfd9d" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>ToMultiFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ab4e7bba2a1d004437f5175e6fba94282" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>~MultiCutFab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
