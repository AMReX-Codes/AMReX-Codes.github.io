<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1StateDataPhysBCFunct" kind="class" language="C++" prot="public">
    <compoundname>amrex::StateDataPhysBCFunct</compoundname>
    <includes refid="AMReX__StateData_8H" local="no">AMReX_StateData.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1StateDataPhysBCFunct_1a555d0d4c4ae81f45d2cd854bc9d64ead" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1StateData" kindref="compound">StateData</ref> *</type>
        <definition>StateData* amrex::StateDataPhysBCFunct::statedata</definition>
        <argsstring></argsstring>
        <name>statedata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="472" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1StateDataPhysBCFunct_1a9bdf3dc879b2ee93a3dd1b84ffdf294b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StateDataPhysBCFunct::src_comp</definition>
        <argsstring></argsstring>
        <name>src_comp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="473" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1StateDataPhysBCFunct_1a9ed7dada88b807adcc2d46ccbe6cbe53" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
        <definition>const Geometry&amp; amrex::StateDataPhysBCFunct::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="474" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" bodystart="474" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1StateDataPhysBCFunct_1ad8a15ee0d450436bc276a071e993e529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::StateDataPhysBCFunct::StateDataPhysBCFunct</definition>
        <argsstring>(StateData &amp;sd, int sc, const Geometry &amp;geom_)</argsstring>
        <name>StateDataPhysBCFunct</name>
        <param>
          <type><ref refid="classamrex_1_1StateData" kindref="compound">StateData</ref> &amp;</type>
          <declname>sd</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>sc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="462" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp" bodystart="860" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1StateDataPhysBCFunct_1ae69e2d6a2f6e5d200d68e403000fd9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StateDataPhysBCFunct::operator()</definition>
        <argsstring>(MultiFab &amp;mf, int dcomp, int ncomp, IntVect const &amp;nghost, Real time, int bccomp)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bccomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="464" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp" bodystart="867" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1StateDataPhysBCFunct_1a909b73b161e0c5d205738fdb8e082941" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StateDataPhysBCFunct::FillBoundary</definition>
        <argsstring>(MultiFab &amp;mf, int dcomp, int ncomp, IntVect const &amp;nghost, Real time, int bccomp)</argsstring>
        <name>FillBoundary</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bccomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="467" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" bodystart="467" bodyend="470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5787">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::StateDescriptor::BndryFunc &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::StateDescriptor::BndryFunc &gt; &gt; &gt;</label>
      </node>
      <node id="5784">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="5786">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::StateDescriptor::BndryFunc &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5787" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5777">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="5777" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="5774">
        <label>Real</label>
      </node>
      <node id="5785">
        <label>amrex::StateDescriptor</label>
        <link refid="classamrex_1_1StateDescriptor"/>
        <childnode refid="5786" relation="usage">
          <edgelabel>bc_func</edgelabel>
        </childnode>
        <childnode refid="5788" relation="usage">
          <edgelabel>bc</edgelabel>
        </childnode>
        <childnode refid="5790" relation="usage">
          <edgelabel>max_map_start_comp</edgelabel>
          <edgelabel>min_map_end_comp</edgelabel>
          <edgelabel>m_groupsize</edgelabel>
          <edgelabel>m_primary</edgelabel>
        </childnode>
        <childnode refid="5781" relation="usage">
          <edgelabel>names</edgelabel>
        </childnode>
        <childnode refid="5792" relation="usage">
          <edgelabel>mapper</edgelabel>
        </childnode>
        <childnode refid="5793" relation="usage">
          <edgelabel>mapper_comp</edgelabel>
        </childnode>
        <childnode refid="5778" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="5782">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="5783">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="5784" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="5790">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5791" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5789">
        <label>std::vector&lt; amrex::BCRec, std::allocator&lt; amrex::BCRec &gt; &gt;</label>
      </node>
      <node id="5771">
        <label>amrex::StateDataPhysBCFunct</label>
        <link refid="classamrex_1_1StateDataPhysBCFunct"/>
        <childnode refid="5772" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="5779" relation="usage">
          <edgelabel>statedata</edgelabel>
        </childnode>
      </node>
      <node id="5792">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
      </node>
      <node id="5788">
        <label>amrex::Vector&lt; amrex::BCRec &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5789" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5791">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="5775">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="5774" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="5795">
        <label>amrex::StateData::TimeInterval</label>
        <link refid="structamrex_1_1StateData_1_1TimeInterval"/>
        <childnode refid="5774" relation="usage">
          <edgelabel>stop</edgelabel>
          <edgelabel>start</edgelabel>
        </childnode>
      </node>
      <node id="5776">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="5777" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="5778" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="5794">
        <label>std::vector&lt; amrex::Interpolater *, std::allocator&lt; amrex::Interpolater * &gt; &gt;</label>
      </node>
      <node id="5773">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="5774" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="5793">
        <label>amrex::Vector&lt; amrex::Interpolater * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5794" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5778">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="5781">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5780">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="5779">
        <label>amrex::StateData</label>
        <link refid="classamrex_1_1StateData"/>
        <childnode refid="5780" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="5781" relation="usage">
          <edgelabel>fabArrayHeaderNames</edgelabel>
        </childnode>
        <childnode refid="5783" relation="usage">
          <edgelabel>arena</edgelabel>
        </childnode>
        <childnode refid="5785" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
        <childnode refid="5795" relation="usage">
          <edgelabel>new_time</edgelabel>
          <edgelabel>old_time</edgelabel>
        </childnode>
        <childnode refid="5776" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="5772">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="5773" relation="public-inheritance">
        </childnode>
        <childnode refid="5775" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="5776" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" line="459" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H" bodystart="458" bodyend="476"/>
    <listofallmembers>
      <member refid="classamrex_1_1StateDataPhysBCFunct_1a909b73b161e0c5d205738fdb8e082941" prot="public" virt="non-virtual"><scope>amrex::StateDataPhysBCFunct</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1StateDataPhysBCFunct_1a9ed7dada88b807adcc2d46ccbe6cbe53" prot="private" virt="non-virtual"><scope>amrex::StateDataPhysBCFunct</scope><name>geom</name></member>
      <member refid="classamrex_1_1StateDataPhysBCFunct_1ae69e2d6a2f6e5d200d68e403000fd9de" prot="public" virt="non-virtual"><scope>amrex::StateDataPhysBCFunct</scope><name>operator()</name></member>
      <member refid="classamrex_1_1StateDataPhysBCFunct_1a9bdf3dc879b2ee93a3dd1b84ffdf294b" prot="private" virt="non-virtual"><scope>amrex::StateDataPhysBCFunct</scope><name>src_comp</name></member>
      <member refid="classamrex_1_1StateDataPhysBCFunct_1a555d0d4c4ae81f45d2cd854bc9d64ead" prot="private" virt="non-virtual"><scope>amrex::StateDataPhysBCFunct</scope><name>statedata</name></member>
      <member refid="classamrex_1_1StateDataPhysBCFunct_1ad8a15ee0d450436bc276a071e993e529" prot="public" virt="non-virtual"><scope>amrex::StateDataPhysBCFunct</scope><name>StateDataPhysBCFunct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
