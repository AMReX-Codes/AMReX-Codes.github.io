<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1TinyProfiler" kind="class" language="C++" prot="public">
    <compoundname>amrex::TinyProfiler</compoundname>
    <includes refid="AMReX__TinyProfiler_8H" local="no">AMReX_TinyProfiler.H</includes>
    <innerclass refid="structamrex_1_1TinyProfiler_1_1MemProcStats" prot="private">amrex::TinyProfiler::MemProcStats</innerclass>
    <innerclass refid="structamrex_1_1TinyProfiler_1_1ProcStats" prot="private">amrex::TinyProfiler::ProcStats</innerclass>
    <innerclass refid="structamrex_1_1TinyProfiler_1_1Stats" prot="private">amrex::TinyProfiler::Stats</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a8691b33b40a313ca7ffe01a287f57dff" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::TinyProfiler::fname</definition>
        <argsstring></argsstring>
        <name>fname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="123" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a9949d2a62ee0e670c89942b622ef9ebb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::TinyProfiler::in_parallel_region</definition>
        <argsstring></argsstring>
        <name>in_parallel_region</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="124" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1ae7befef46d2ca9e3de4299f950647451" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::TinyProfiler::global_depth</definition>
        <argsstring></argsstring>
        <name>global_depth</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="125" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a5205c680d2a8d3fd69195aab83ce3b7a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1TinyProfiler_1_1Stats" kindref="compound">Stats</ref> * &gt;</type>
        <definition>std::vector&lt;Stats*&gt; amrex::TinyProfiler::stats</definition>
        <argsstring></argsstring>
        <name>stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="126" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a175f44d41236b9cd4b6268fc0488ac5e" prot="private" static="yes" mutable="no">
        <type>std::deque&lt; const <ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> * &gt;</type>
        <definition>std::deque&lt; const TinyProfiler * &gt; amrex::TinyProfiler::mem_stack</definition>
        <argsstring></argsstring>
        <name>mem_stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="128" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1adac60aa8448dcfb383a94e4f607dfc01" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; std::map&lt; std::string, <ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> &gt; * &gt;</type>
        <definition>std::vector&lt; std::map&lt; std::string, MemStat &gt; * &gt; amrex::TinyProfiler::all_memstats</definition>
        <argsstring></argsstring>
        <name>all_memstats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="138" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a4c5a66e30e341fc78c3e29f260fb7904" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; amrex::TinyProfiler::all_memnames</definition>
        <argsstring></argsstring>
        <name>all_memnames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="139" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a03febcd85f7ea80790cac0181b9c2b1b" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; amrex::TinyProfiler::regionstack</definition>
        <argsstring></argsstring>
        <name>regionstack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="141" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a55b136d8859480b76a1311cff89009a0" prot="private" static="yes" mutable="no">
        <type>std::deque&lt; std::tuple&lt; double, double, std::string * &gt; &gt;</type>
        <definition>std::deque&lt; std::tuple&lt; double, double, std::string * &gt; &gt; amrex::TinyProfiler::ttstack</definition>
        <argsstring></argsstring>
        <name>ttstack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="142" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1ac803023249064c812474a5aa120ef397" prot="private" static="yes" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, <ref refid="structamrex_1_1TinyProfiler_1_1Stats" kindref="compound">Stats</ref> &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::map&lt; std::string, TinyProfiler::Stats &gt; &gt; amrex::TinyProfiler::statsmap</definition>
        <argsstring></argsstring>
        <name>statsmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="143" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1abcb523d4f35aced1936bf2f559577201" prot="private" static="yes" mutable="no">
        <type>double</type>
        <definition>double amrex::TinyProfiler::t_init</definition>
        <argsstring></argsstring>
        <name>t_init</name>
        <initializer>= std::numeric_limits&lt;double&gt;::<ref refid="namespaceamrex_1a38d942498aebd0b51855a9b85ed184f5" kindref="member">max</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="144" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1ac2c4c05ecf95fbad73a0bb49012431ec" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::TinyProfiler::device_synchronize_around_region</definition>
        <argsstring></argsstring>
        <name>device_synchronize_around_region</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="145" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1af5020b8e813ceea3418f07d2529ae2cd" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::TinyProfiler::n_print_tabs</definition>
        <argsstring></argsstring>
        <name>n_print_tabs</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="146" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1TinyProfiler_1a42fc975e27a744624c255b0fad3f8cd7" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::TinyProfiler::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="147" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a8e1cc274bc1e92cc8466ea9b44911c33" prot="public" static="no" const="no" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::TinyProfiler</definition>
        <argsstring>(std::string funcname) noexcept</argsstring>
        <name>TinyProfiler</name>
        <param>
          <type>std::string</type>
          <declname>funcname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="41" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a238dc16dd99da96e07b526f5cd90f4fa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::TinyProfiler</definition>
        <argsstring>(std::string funcname, bool start_) noexcept</argsstring>
        <name>TinyProfiler</name>
        <param>
          <type>std::string</type>
          <declname>funcname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>start_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="42" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a0969b8312bde020f9c99c051dc51eeb5" prot="public" static="no" const="no" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::TinyProfiler</definition>
        <argsstring>(const char *funcname) noexcept</argsstring>
        <name>TinyProfiler</name>
        <param>
          <type>const char *</type>
          <declname>funcname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="43" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a5689250282f22646ec14959dc491f748" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::TinyProfiler</definition>
        <argsstring>(const char *funcname, bool start_) noexcept</argsstring>
        <name>TinyProfiler</name>
        <param>
          <type>const char *</type>
          <declname>funcname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>start_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="44" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1ac86f51f4e2e72d2b045260f22d50475d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::~TinyProfiler</definition>
        <argsstring>()</argsstring>
        <name>~TinyProfiler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="45" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a63cae02a5e649724bfc02c528e84ca18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::TinyProfiler</definition>
        <argsstring>(TinyProfiler const &amp;)=delete</argsstring>
        <name>TinyProfiler</name>
        <param>
          <type><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="47" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1aee36686bda9cf58b62055dca5818af46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::TinyProfiler::TinyProfiler</definition>
        <argsstring>(TinyProfiler &amp;&amp;)=delete</argsstring>
        <name>TinyProfiler</name>
        <param>
          <type><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a193278fa395ec2829a2e52816ea2e1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> &amp;</type>
        <definition>TinyProfiler&amp; amrex::TinyProfiler::operator=</definition>
        <argsstring>(TinyProfiler const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="49" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a1d34fcb098293a88b669234cd082c6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> &amp;</type>
        <definition>TinyProfiler&amp; amrex::TinyProfiler::operator=</definition>
        <argsstring>(TinyProfiler &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1aa79d79de0a3a1e592808ea80448e1637" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::start</definition>
        <argsstring>() noexcept</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="52" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="75" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a84199c5f792b3e60b33f6e7ea0fc5568" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::stop</definition>
        <argsstring>() noexcept</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="132" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1abcd103d902962eb392b8fc2867da7c85" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::memory_start</definition>
        <argsstring>() const noexcept</argsstring>
        <name>memory_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="55" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="201" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1abda7b021e9aab1a30edc75b2afee7d13" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::memory_stop</definition>
        <argsstring>() const noexcept</argsstring>
        <name>memory_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="56" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="215" bodyend="231"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a7973da4e33568c937969b5eec423e21e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> *</type>
        <definition>MemStat * amrex::TinyProfiler::memory_alloc</definition>
        <argsstring>(std::size_t nbytes, std::map&lt; std::string, MemStat &gt; &amp;memstats) noexcept</argsstring>
        <name>memory_alloc</name>
        <param>
          <type>std::size_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, <ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> &gt; &amp;</type>
          <declname>memstats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="58" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="234" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1acf44a0af5564add5abbde50e6b9aa570" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::memory_free</definition>
        <argsstring>(std::size_t nbytes, MemStat *stat) noexcept</argsstring>
        <name>memory_free</name>
        <param>
          <type>std::size_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="60" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="260" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1ae63aac3a7741cc60cb66504da479b50a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::Initialize</definition>
        <argsstring>() noexcept</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="62" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="272" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a2344d0f82665ec2e7efe266b015d163c" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::Finalize</definition>
        <argsstring>(bool bFlushing=false) noexcept</argsstring>
        <name>Finalize</name>
        <param>
          <type>bool</type>
          <declname>bFlushing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="63" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="293" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a106fc3c7abfb4df3cc62527b62c2aff4" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::MemoryInitialize</definition>
        <argsstring>() noexcept</argsstring>
        <name>MemoryInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="65" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="285" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a28131b0e3240b1df559a63c255fc6d72" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::MemoryFinalize</definition>
        <argsstring>(bool bFlushing=false) noexcept</argsstring>
        <name>MemoryFinalize</name>
        <param>
          <type>bool</type>
          <declname>bFlushing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="66" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="359" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1acf3b7bc8c1643be36ccc4d41df0dbec7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::RegisterArena</definition>
        <argsstring>(const std::string &amp;memory_name, std::map&lt; std::string, MemStat &gt; &amp;memstats) noexcept</argsstring>
        <name>RegisterArena</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>memory_name</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, <ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> &gt; &amp;</type>
          <declname>memstats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="68" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="388" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1af7c89134a317d3c1cb595a236bdaeff0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::DeregisterArena</definition>
        <argsstring>(std::map&lt; std::string, MemStat &gt; &amp;memstats) noexcept</argsstring>
        <name>DeregisterArena</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> &gt; &amp;</type>
          <declname>memstats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="71" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="396" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1abf8db78796b24b46b0483e5b61ed1d84" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::StartRegion</definition>
        <argsstring>(std::string regname) noexcept</argsstring>
        <name>StartRegion</name>
        <param>
          <type>std::string</type>
          <declname>regname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="73" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="724" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1ac96b507c36165550f9a2bf115aedc5fb" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::StopRegion</definition>
        <argsstring>(const std::string &amp;regname) noexcept</argsstring>
        <name>StopRegion</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>regname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="74" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="732" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a8a14bcc37603ec472c17a644428d3686" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::PrintCallStack</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>PrintCallStack</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="76" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="762" bodyend="768"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a1931e426fc1808e089917c1667f80adc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::PrintStats</definition>
        <argsstring>(std::map&lt; std::string, Stats &gt; &amp;regstats, double dt_max)</argsstring>
        <name>PrintStats</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="structamrex_1_1TinyProfiler_1_1Stats" kindref="compound">Stats</ref> &gt; &amp;</type>
          <declname>regstats</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="149" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="409" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1TinyProfiler_1a3d820a89ad5496d880091c25c2bae5da" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::TinyProfiler::PrintMemStats</definition>
        <argsstring>(std::map&lt; std::string, MemStat &gt; &amp;memstats, std::string const &amp;memname, double dt_max, double t_final)</argsstring>
        <name>PrintMemStats</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref> &gt; &amp;</type>
          <declname>memstats</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>memname</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_final</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="150" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp" bodystart="554" bodyend="721"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple profiler that returns basic performance information (e.g. min, max, and average running time) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>std::deque&lt; std::tuple&lt; double, double, std::string * &gt; &gt;</label>
      </node>
      <node id="10">
        <label>std::deque&lt; const amrex::TinyProfiler * &gt;</label>
        <childnode refid="1" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; std::map&lt; std::string, amrex::MemStat &gt; * &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>amrex::TinyProfiler</label>
        <link refid="classamrex_1_1TinyProfiler"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ttstack</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>all_memstats</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>stats</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mem_stack</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fname</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>statsmap</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>all_memnames</edgelabel>
          <edgelabel>regionstack</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::TinyProfiler::Stats</label>
        <link refid="structamrex_1_1TinyProfiler_1_1Stats"/>
      </node>
      <node id="12">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::map&lt; std::string, std::map&lt; std::string, amrex::TinyProfiler::Stats &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::vector&lt; amrex::TinyProfiler::Stats * &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="6">
        <label>std::string</label>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H" bodystart="39" bodyend="153"/>
    <listofallmembers>
      <member refid="classamrex_1_1TinyProfiler_1a4c5a66e30e341fc78c3e29f260fb7904" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>all_memnames</name></member>
      <member refid="classamrex_1_1TinyProfiler_1adac60aa8448dcfb383a94e4f607dfc01" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>all_memstats</name></member>
      <member refid="classamrex_1_1TinyProfiler_1af7c89134a317d3c1cb595a236bdaeff0" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>DeregisterArena</name></member>
      <member refid="classamrex_1_1TinyProfiler_1ac2c4c05ecf95fbad73a0bb49012431ec" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>device_synchronize_around_region</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a2344d0f82665ec2e7efe266b015d163c" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a8691b33b40a313ca7ffe01a287f57dff" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>fname</name></member>
      <member refid="classamrex_1_1TinyProfiler_1ae7befef46d2ca9e3de4299f950647451" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>global_depth</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a9949d2a62ee0e670c89942b622ef9ebb" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>in_parallel_region</name></member>
      <member refid="classamrex_1_1TinyProfiler_1ae63aac3a7741cc60cb66504da479b50a" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a175f44d41236b9cd4b6268fc0488ac5e" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>mem_stack</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a7973da4e33568c937969b5eec423e21e" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>memory_alloc</name></member>
      <member refid="classamrex_1_1TinyProfiler_1acf44a0af5564add5abbde50e6b9aa570" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>memory_free</name></member>
      <member refid="classamrex_1_1TinyProfiler_1abcd103d902962eb392b8fc2867da7c85" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>memory_start</name></member>
      <member refid="classamrex_1_1TinyProfiler_1abda7b021e9aab1a30edc75b2afee7d13" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>memory_stop</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a28131b0e3240b1df559a63c255fc6d72" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>MemoryFinalize</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a106fc3c7abfb4df3cc62527b62c2aff4" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>MemoryInitialize</name></member>
      <member refid="classamrex_1_1TinyProfiler_1af5020b8e813ceea3418f07d2529ae2cd" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>n_print_tabs</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a193278fa395ec2829a2e52816ea2e1b1" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>operator=</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a1d34fcb098293a88b669234cd082c6c9" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>operator=</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a8a14bcc37603ec472c17a644428d3686" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>PrintCallStack</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a3d820a89ad5496d880091c25c2bae5da" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>PrintMemStats</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a1931e426fc1808e089917c1667f80adc" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>PrintStats</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a03febcd85f7ea80790cac0181b9c2b1b" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>regionstack</name></member>
      <member refid="classamrex_1_1TinyProfiler_1acf3b7bc8c1643be36ccc4d41df0dbec7" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>RegisterArena</name></member>
      <member refid="classamrex_1_1TinyProfiler_1aa79d79de0a3a1e592808ea80448e1637" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>start</name></member>
      <member refid="classamrex_1_1TinyProfiler_1abf8db78796b24b46b0483e5b61ed1d84" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>StartRegion</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a5205c680d2a8d3fd69195aab83ce3b7a" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>stats</name></member>
      <member refid="classamrex_1_1TinyProfiler_1ac803023249064c812474a5aa120ef397" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>statsmap</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a84199c5f792b3e60b33f6e7ea0fc5568" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>stop</name></member>
      <member refid="classamrex_1_1TinyProfiler_1ac96b507c36165550f9a2bf115aedc5fb" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>StopRegion</name></member>
      <member refid="classamrex_1_1TinyProfiler_1abcb523d4f35aced1936bf2f559577201" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>t_init</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a8e1cc274bc1e92cc8466ea9b44911c33" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>TinyProfiler</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a238dc16dd99da96e07b526f5cd90f4fa" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>TinyProfiler</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a0969b8312bde020f9c99c051dc51eeb5" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>TinyProfiler</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a5689250282f22646ec14959dc491f748" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>TinyProfiler</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a63cae02a5e649724bfc02c528e84ca18" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>TinyProfiler</name></member>
      <member refid="classamrex_1_1TinyProfiler_1aee36686bda9cf58b62055dca5818af46" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>TinyProfiler</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a55b136d8859480b76a1311cff89009a0" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>ttstack</name></member>
      <member refid="classamrex_1_1TinyProfiler_1a42fc975e27a744624c255b0fad3f8cd7" prot="private" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>verbose</name></member>
      <member refid="classamrex_1_1TinyProfiler_1ac86f51f4e2e72d2b045260f22d50475d" prot="public" virt="non-virtual"><scope>amrex::TinyProfiler</scope><name>~TinyProfiler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
