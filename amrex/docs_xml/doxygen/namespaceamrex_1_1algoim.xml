<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1algoim" kind="namespace" language="C++">
    <compoundname>amrex::algoim</compoundname>
    <innerclass refid="structamrex_1_1algoim_1_1BoundingBox" prot="public">amrex::algoim::BoundingBox</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1EBPlane" prot="public">amrex::algoim::EBPlane</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1ImplicitIntegral" prot="public">amrex::algoim::ImplicitIntegral</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1ImplicitIntegral_3_010_00_01N_00_01Phi_00_01F_00_01S_01_4" prot="public">amrex::algoim::ImplicitIntegral&lt; 0, N, Phi, F, S &gt;</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1Interval" prot="public">amrex::algoim::Interval</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1PsiCode" prot="public">amrex::algoim::PsiCode</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1QuadratureRule" prot="public">amrex::algoim::QuadratureRule</innerclass>
    <innernamespace refid="namespaceamrex_1_1algoim_1_1detail">amrex::algoim::detail</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a83f836cfcb795ee2e7cf5f031f4e33a5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x</definition>
        <argsstring></argsstring>
        <name>i_S_x</name>
        <qualifiedname>amrex::algoim::i_S_x</qualifiedname>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="12" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a26347d2ffb8ae0e55a261293b75aae80" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_y</definition>
        <argsstring></argsstring>
        <name>i_S_y</name>
        <qualifiedname>amrex::algoim::i_S_y</qualifiedname>
        <initializer>=  1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="13" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1aa393d743c81287bc86ed10b61b86013d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_z</definition>
        <argsstring></argsstring>
        <name>i_S_z</name>
        <qualifiedname>amrex::algoim::i_S_z</qualifiedname>
        <initializer>=  2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="14" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a07474818cba158a836bada961168c817" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x2</definition>
        <argsstring></argsstring>
        <name>i_S_x2</name>
        <qualifiedname>amrex::algoim::i_S_x2</qualifiedname>
        <initializer>=  3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="15" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1ae9b79e8e177e12c5d430231f4fa56cee" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_y2</definition>
        <argsstring></argsstring>
        <name>i_S_y2</name>
        <qualifiedname>amrex::algoim::i_S_y2</qualifiedname>
        <initializer>=  4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="16" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1ad07a32fe98faf4bf2b079e31d5a63fc2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_z2</definition>
        <argsstring></argsstring>
        <name>i_S_z2</name>
        <qualifiedname>amrex::algoim::i_S_z2</qualifiedname>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="17" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a1563d162ff7c724b049f407982b9376a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x_y</definition>
        <argsstring></argsstring>
        <name>i_S_x_y</name>
        <qualifiedname>amrex::algoim::i_S_x_y</qualifiedname>
        <initializer>=  6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="18" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a319d09e3fac406d5c7435495783c51da" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x_z</definition>
        <argsstring></argsstring>
        <name>i_S_x_z</name>
        <qualifiedname>amrex::algoim::i_S_x_z</qualifiedname>
        <initializer>=  7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="19" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a035ca724de0232c06fb8f932f48dfb5b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_y_z</definition>
        <argsstring></argsstring>
        <name>i_S_y_z</name>
        <qualifiedname>amrex::algoim::i_S_y_z</qualifiedname>
        <initializer>=  8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="20" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a90a6f014a413b05f96c519b9dcab59dd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x2_y</definition>
        <argsstring></argsstring>
        <name>i_S_x2_y</name>
        <qualifiedname>amrex::algoim::i_S_x2_y</qualifiedname>
        <initializer>=  9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="21" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1ad88812a86b6d79fee7ad18f445312126" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x2_z</definition>
        <argsstring></argsstring>
        <name>i_S_x2_z</name>
        <qualifiedname>amrex::algoim::i_S_x2_z</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="22" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a59d00e52a1182ccb7556e0b34969d082" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x_y2</definition>
        <argsstring></argsstring>
        <name>i_S_x_y2</name>
        <qualifiedname>amrex::algoim::i_S_x_y2</qualifiedname>
        <initializer>= 11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="23" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a906f3ea1a1f5abffc2ce63a2f18c3097" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_y2_z</definition>
        <argsstring></argsstring>
        <name>i_S_y2_z</name>
        <qualifiedname>amrex::algoim::i_S_y2_z</qualifiedname>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="24" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1ad4374cfcd9fd0dcc582d0b7221c7d699" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x_z2</definition>
        <argsstring></argsstring>
        <name>i_S_x_z2</name>
        <qualifiedname>amrex::algoim::i_S_x_z2</qualifiedname>
        <initializer>= 13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="25" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a028434e66d37788b7c7aa354d73ed4b3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_y_z2</definition>
        <argsstring></argsstring>
        <name>i_S_y_z2</name>
        <qualifiedname>amrex::algoim::i_S_y_z2</qualifiedname>
        <initializer>= 14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="26" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a7b7ee4491a1bc96aef205aec9d4a3ccc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x2_y2</definition>
        <argsstring></argsstring>
        <name>i_S_x2_y2</name>
        <qualifiedname>amrex::algoim::i_S_x2_y2</qualifiedname>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="27" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a82ccbc9a6ef0f35640533a4432e150a7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_x2_z2</definition>
        <argsstring></argsstring>
        <name>i_S_x2_z2</name>
        <qualifiedname>amrex::algoim::i_S_x2_z2</qualifiedname>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="28" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a6dedc899a72f47e8eed563d439589b34" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_y2_z2</definition>
        <argsstring></argsstring>
        <name>i_S_y2_z2</name>
        <qualifiedname>amrex::algoim::i_S_y2_z2</qualifiedname>
        <initializer>= 17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="29" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a5b751a5f2c300635c47ad31a24157604" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_S_xyz</definition>
        <argsstring></argsstring>
        <name>i_S_xyz</name>
        <qualifiedname>amrex::algoim::i_S_xyz</qualifiedname>
        <initializer>= 18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="30" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a856a505f1340baf94d02a7585b467e1a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::numIntgs</definition>
        <argsstring></argsstring>
        <name>numIntgs</name>
        <qualifiedname>amrex::algoim::numIntgs</qualifiedname>
        <initializer>= 19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="31" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1aa2dc15a8317387997b7599ac5dfb3b36" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_x</definition>
        <argsstring></argsstring>
        <name>i_B_x</name>
        <qualifiedname>amrex::algoim::i_B_x</qualifiedname>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="36" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1ae87c1a6426de20a1c5f4573bf6f5a08a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_y</definition>
        <argsstring></argsstring>
        <name>i_B_y</name>
        <qualifiedname>amrex::algoim::i_B_y</qualifiedname>
        <initializer>=  1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="37" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a354fd3da392bde50d7c9e5fd31a10385" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_z</definition>
        <argsstring></argsstring>
        <name>i_B_z</name>
        <qualifiedname>amrex::algoim::i_B_z</qualifiedname>
        <initializer>=  2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="38" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a75831abb7b9935c452d91372042675cb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_x_y</definition>
        <argsstring></argsstring>
        <name>i_B_x_y</name>
        <qualifiedname>amrex::algoim::i_B_x_y</qualifiedname>
        <initializer>=  3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="39" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a7b1a77da2c5246064f18bb002865a9f5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_x_z</definition>
        <argsstring></argsstring>
        <name>i_B_x_z</name>
        <qualifiedname>amrex::algoim::i_B_x_z</qualifiedname>
        <initializer>=  4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="40" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a9817cf5b40676379c03bacf057a7a11c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_y_z</definition>
        <argsstring></argsstring>
        <name>i_B_y_z</name>
        <qualifiedname>amrex::algoim::i_B_y_z</qualifiedname>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="41" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a01c402173effc1376e1e121633ff5f40" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::i_B_xyz</definition>
        <argsstring></argsstring>
        <name>i_B_xyz</name>
        <qualifiedname>amrex::algoim::i_B_xyz</qualifiedname>
        <initializer>=  6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="42" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceamrex_1_1algoim_1a1431c6a34f2cb39592447caf369d3440" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::algoim::numSurfIntgs</definition>
        <argsstring></argsstring>
        <name>numSurfIntgs</name>
        <qualifiedname>amrex::algoim::numSurfIntgs</qualifiedname>
        <initializer>=  7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" line="43" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a6784c63be461e49a81c5c587605674e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::algoim::compute_integrals</definition>
        <argsstring>(MultiFab &amp;intg, int nghost)</argsstring>
        <name>compute_integrals</name>
        <qualifiedname>amrex::algoim::compute_integrals</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>intg</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" line="9" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" bodystart="9" bodyend="12" declfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" declline="9" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a3ccdff6c18c04f2fb7aa460f885333ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::algoim::compute_integrals</definition>
        <argsstring>(MultiFab &amp;intgmf, IntVect nghost)</argsstring>
        <name>compute_integrals</name>
        <qualifiedname>amrex::algoim::compute_integrals</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>intgmf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
          <declname>nghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" bodystart="15" bodyend="195" declfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a2c8ca6ff2da3fdde81370a1dd00c9416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::algoim::compute_surface_integrals</definition>
        <argsstring>(MultiFab &amp;sintg, int nghost)</argsstring>
        <name>compute_surface_integrals</name>
        <qualifiedname>amrex::algoim::compute_surface_integrals</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>sintg</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" line="198" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" bodystart="198" bodyend="201" declfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a73c808c0927111a6a5391aaad9f7c1e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::algoim::compute_surface_integrals</definition>
        <argsstring>(MultiFab &amp;sintgmf, IntVect nghost)</argsstring>
        <name>compute_surface_integrals</name>
        <qualifiedname>amrex::algoim::compute_surface_integrals</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>sintgmf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
          <declname>nghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" line="204" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" bodystart="204" bodyend="392" declfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a05434c8a13201e8af0f5dab5420e33d2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1algoim_1_1QuadratureRule" kindref="compound">QuadratureRule</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE QuadratureRule amrex::algoim::quadGen</definition>
        <argsstring>(EBPlane const &amp;phi) noexcept</argsstring>
        <name>quadGen</name>
        <qualifiedname>amrex::algoim::quadGen</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1algoim_1_1EBPlane" kindref="compound">EBPlane</ref> const &amp;</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="590" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="590" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1ae4ae5a6514e4fdd7deb24725de0b3444" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1algoim_1_1QuadratureRule" kindref="compound">QuadratureRule</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE QuadratureRule amrex::algoim::quadGenSurf</definition>
        <argsstring>(EBPlane const &amp;phi) noexcept</argsstring>
        <name>quadGenSurf</name>
        <qualifiedname>amrex::algoim::quadGenSurf</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1algoim_1_1EBPlane" kindref="compound">EBPlane</ref> const &amp;</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="602" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="602" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a9ddd20373173f3218e9adf472a02f119" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::algoim::set_regular</definition>
        <argsstring>(int i, int j, int k, Array4&lt; Real &gt; const &amp;intg) noexcept</argsstring>
        <name>set_regular</name>
        <qualifiedname>amrex::algoim::set_regular</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt; const &amp;</type>
          <declname>intg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="613" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="613" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1algoim_1a1d243dc8981384f1c0cb8b266c042735" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::algoim::set_regular_surface</definition>
        <argsstring>(int i, int j, int k, Array4&lt; Real &gt; const &amp;sintg) noexcept</argsstring>
        <name>set_regular_surface</name>
        <qualifiedname>amrex::algoim::set_regular_surface</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt; const &amp;</type>
          <declname>sintg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="639" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="639" bodyend="648"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp" line="6" column="1"/>
  </compounddef>
</doxygen>
