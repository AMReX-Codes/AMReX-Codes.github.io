<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__EB__utils_8cpp" kind="file" language="C++">
    <compoundname>AMReX_EB_utils.cpp</compoundname>
    <includes refid="AMReX__MultiFab_8H" local="no">AMReX_MultiFab.H</includes>
    <includes refid="AMReX__EB__utils_8H" local="no">AMReX_EB_utils.H</includes>
    <includes refid="AMReX__Geometry_8H" local="no">AMReX_Geometry.H</includes>
    <includes refid="AMReX__MultiCutFab_8H" local="no">AMReX_MultiCutFab.H</includes>
    <includes refid="AMReX__EBFabFactory_8H" local="no">AMReX_EBFabFactory.H</includes>
    <includes refid="AMReX__EBFArrayBox_8H" local="no">AMReX_EBFArrayBox.H</includes>
    <incdepgraph>
      <node id="59014">
        <label>list</label>
      </node>
      <node id="58925">
        <label>atomic</label>
      </node>
      <node id="59013">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58949" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="59014" relation="include">
        </childnode>
        <childnode refid="58912" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
      </node>
      <node id="58998">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
      </node>
      <node id="58905">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58907" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
      </node>
      <node id="58959">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="59022">
        <label>AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="59011" relation="include">
        </childnode>
        <childnode refid="59020" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="59002" relation="include">
        </childnode>
        <childnode refid="58876" relation="include">
        </childnode>
      </node>
      <node id="58964">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58910">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="59004">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="58985">
        <label>iomanip</label>
      </node>
      <node id="58898">
        <label>functional</label>
      </node>
      <node id="59017">
        <label>queue</label>
      </node>
      <node id="58919">
        <label>limits</label>
      </node>
      <node id="58935">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
      </node>
      <node id="58921">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
      </node>
      <node id="58972">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
      </node>
      <node id="58942">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58943" relation="include">
        </childnode>
        <childnode refid="58921" relation="include">
        </childnode>
        <childnode refid="58927" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
      </node>
      <node id="58987">
        <label>iterator</label>
      </node>
      <node id="58902">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58924" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58991" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
      </node>
      <node id="58893">
        <label>float.h</label>
      </node>
      <node id="59010">
        <label>AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
        <childnode refid="58938" relation="include">
        </childnode>
      </node>
      <node id="58999">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58942" relation="include">
        </childnode>
        <childnode refid="58944" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
        <childnode refid="59000" relation="include">
        </childnode>
        <childnode refid="58998" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
      </node>
      <node id="59021">
        <label>AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58992" relation="include">
        </childnode>
        <childnode refid="59020" relation="include">
        </childnode>
      </node>
      <node id="58978">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58879">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
      </node>
      <node id="58884">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58885" relation="include">
        </childnode>
      </node>
      <node id="58878">
        <label>cstdint</label>
      </node>
      <node id="58996">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58912" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58997" relation="include">
        </childnode>
      </node>
      <node id="58938">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58914" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58940" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58920" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58941" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58942" relation="include">
        </childnode>
        <childnode refid="58944" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
        <childnode refid="58953" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58955" relation="include">
        </childnode>
      </node>
      <node id="59003">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="59004" relation="include">
        </childnode>
        <childnode refid="59005" relation="include">
        </childnode>
      </node>
      <node id="58983">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
      </node>
      <node id="58970">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58917" relation="include">
        </childnode>
        <childnode refid="58971" relation="include">
        </childnode>
        <childnode refid="58973" relation="include">
        </childnode>
        <childnode refid="58972" relation="include">
        </childnode>
      </node>
      <node id="58974">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58912" relation="include">
        </childnode>
        <childnode refid="58975" relation="include">
        </childnode>
        <childnode refid="58898" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58976" relation="include">
        </childnode>
        <childnode refid="58972" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
      </node>
      <node id="58918">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
      </node>
      <node id="58948">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58949" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58914" relation="include">
        </childnode>
        <childnode refid="58883" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
      </node>
      <node id="59011">
        <label>AMReX_EB2_Graph.H</label>
        <link refid="AMReX__EB2__Graph_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58943" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58878" relation="include">
        </childnode>
      </node>
      <node id="59007">
        <label>AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58876" relation="include">
        </childnode>
        <childnode refid="59008" relation="include">
        </childnode>
        <childnode refid="59009" relation="include">
        </childnode>
      </node>
      <node id="58917">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58876">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58878" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58902" relation="include">
        </childnode>
        <childnode refid="58992" relation="include">
        </childnode>
        <childnode refid="59006" relation="include">
        </childnode>
        <childnode refid="58998" relation="include">
        </childnode>
      </node>
      <node id="58895">
        <label>cmath</label>
      </node>
      <node id="58885">
        <label>cassert</label>
      </node>
      <node id="58892">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58893" relation="include">
        </childnode>
      </node>
      <node id="59029">
        <label>AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58902" relation="include">
        </childnode>
      </node>
      <node id="58888">
        <label>stdexcept</label>
      </node>
      <node id="58886">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58951">
        <label>numeric</label>
      </node>
      <node id="59006">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58992" relation="include">
        </childnode>
        <childnode refid="59002" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
      </node>
      <node id="58899">
        <label>string</label>
      </node>
      <node id="58962">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58912" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58938" relation="include">
        </childnode>
        <childnode refid="58917" relation="include">
        </childnode>
        <childnode refid="58963" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58964" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
      </node>
      <node id="59019">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58898" relation="include">
        </childnode>
      </node>
      <node id="58939">
        <label>map</label>
      </node>
      <node id="58934">
        <label>unordered_set</label>
      </node>
      <node id="58929">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
      </node>
      <node id="58963">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58938" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
      </node>
      <node id="58881">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58941">
        <label>cfloat</label>
      </node>
      <node id="58907">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
      </node>
      <node id="58946">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58947" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
      </node>
      <node id="58947">
        <label>fstream</label>
      </node>
      <node id="58927">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58921" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
      </node>
      <node id="59015">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58947" relation="include">
        </childnode>
        <childnode refid="59016" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58878" relation="include">
        </childnode>
        <childnode refid="59017" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58992" relation="include">
        </childnode>
        <childnode refid="58902" relation="include">
        </childnode>
        <childnode refid="59018" relation="include">
        </childnode>
        <childnode refid="59019" relation="include">
        </childnode>
      </node>
      <node id="58968">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58963" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
      </node>
      <node id="58916">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58917" relation="include">
        </childnode>
      </node>
      <node id="58979">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58980" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
      </node>
      <node id="58880">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58882" relation="include">
        </childnode>
        <childnode refid="58884" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
        <childnode refid="58887" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58894" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58898" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58883" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
      </node>
      <node id="58953">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
        <childnode refid="58954" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58878" relation="include">
        </childnode>
      </node>
      <node id="59023">
        <label>AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58902" relation="include">
        </childnode>
        <childnode refid="59020" relation="include">
        </childnode>
        <childnode refid="59011" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
      </node>
      <node id="58889">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58954">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
      </node>
      <node id="58956">
        <label>sys/types.h</label>
      </node>
      <node id="58981">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
      </node>
      <node id="58928">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
      </node>
      <node id="58957">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
      </node>
      <node id="58950">
        <label>typeinfo</label>
      </node>
      <node id="58882">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58883" relation="include">
        </childnode>
      </node>
      <node id="58994">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58995" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
        <childnode refid="58996" relation="include">
        </childnode>
        <childnode refid="58998" relation="include">
        </childnode>
      </node>
      <node id="58931">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58932" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="58933" relation="include">
        </childnode>
        <childnode refid="58934" relation="include">
        </childnode>
        <childnode refid="58898" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
      </node>
      <node id="58877">
        <label>AMReX_Config.H</label>
      </node>
      <node id="58883">
        <label>cstdio</label>
      </node>
      <node id="59005">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="58975">
        <label>tuple</label>
      </node>
      <node id="58944">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
      </node>
      <node id="58923">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58882" relation="include">
        </childnode>
      </node>
      <node id="58945">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
        <childnode refid="58946" relation="include">
        </childnode>
        <childnode refid="58948" relation="include">
        </childnode>
        <childnode refid="58935" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58950" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58898" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58951" relation="include">
        </childnode>
        <childnode refid="58952" relation="include">
        </childnode>
      </node>
      <node id="58922">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
      </node>
      <node id="58965">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
      </node>
      <node id="58997">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58938" relation="include">
        </childnode>
        <childnode refid="58894" relation="include">
        </childnode>
      </node>
      <node id="58949">
        <label>stack</label>
      </node>
      <node id="58900">
        <label>vector</label>
      </node>
      <node id="58926">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
      </node>
      <node id="59001">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58999" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58902" relation="include">
        </childnode>
        <childnode refid="58996" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
      </node>
      <node id="58989">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58878" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
      </node>
      <node id="58913">
        <label>utility</label>
      </node>
      <node id="58903">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58905" relation="include">
        </childnode>
        <childnode refid="58908" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58921" relation="include">
        </childnode>
        <childnode refid="58922" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58923" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
      </node>
      <node id="58993">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58921" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58927" relation="include">
        </childnode>
      </node>
      <node id="58912">
        <label>array</label>
      </node>
      <node id="58982">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
      </node>
      <node id="58914">
        <label>sstream</label>
      </node>
      <node id="58986">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58951" relation="include">
        </childnode>
        <childnode refid="58987" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58988" relation="include">
        </childnode>
        <childnode refid="58983" relation="include">
        </childnode>
        <childnode refid="58989" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
      </node>
      <node id="58890">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58891" relation="include">
        </childnode>
      </node>
      <node id="58967">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58959" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58917" relation="include">
        </childnode>
        <childnode refid="58963" relation="include">
        </childnode>
        <childnode refid="58968" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58969" relation="include">
        </childnode>
        <childnode refid="58970" relation="include">
        </childnode>
        <childnode refid="58960" relation="include">
        </childnode>
        <childnode refid="58974" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58926" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58965" relation="include">
        </childnode>
        <childnode refid="58954" relation="include">
        </childnode>
        <childnode refid="58905" relation="include">
        </childnode>
        <childnode refid="58930" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58977" relation="include">
        </childnode>
        <childnode refid="58978" relation="include">
        </childnode>
      </node>
      <node id="58977">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58971">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58972" relation="include">
        </childnode>
      </node>
      <node id="59026">
        <label>AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58991" relation="include">
        </childnode>
        <childnode refid="59027" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="59028" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
      </node>
      <node id="59002">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58999" relation="include">
        </childnode>
        <childnode refid="59001" relation="include">
        </childnode>
      </node>
      <node id="59028">
        <label>AMReX_EBSupport.H</label>
        <link refid="AMReX__EBSupport_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="59027">
        <label>AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="59020" relation="include">
        </childnode>
        <childnode refid="59028" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
      </node>
      <node id="59009">
        <label>AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="59010" relation="include">
        </childnode>
        <childnode refid="59011" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="58924" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
      </node>
      <node id="58904">
        <label>iosfwd</label>
      </node>
      <node id="58896">
        <label>cstdlib</label>
      </node>
      <node id="58937">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58976">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
      </node>
      <node id="58924">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58920" relation="include">
        </childnode>
        <childnode refid="58912" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58925" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58926" relation="include">
        </childnode>
        <childnode refid="58927" relation="include">
        </childnode>
        <childnode refid="58928" relation="include">
        </childnode>
        <childnode refid="58931" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58935" relation="include">
        </childnode>
        <childnode refid="58936" relation="include">
        </childnode>
        <childnode refid="58937" relation="include">
        </childnode>
        <childnode refid="58938" relation="include">
        </childnode>
        <childnode refid="58957" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
        <childnode refid="58894" relation="include">
        </childnode>
      </node>
      <node id="59024">
        <label>AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="59010" relation="include">
        </childnode>
      </node>
      <node id="58897">
        <label>iostream</label>
      </node>
      <node id="59008">
        <label>AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="59009" relation="include">
        </childnode>
        <childnode refid="59012" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="59025" relation="include">
        </childnode>
      </node>
      <node id="58911">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58912" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58914" relation="include">
        </childnode>
        <childnode refid="58883" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58905" relation="include">
        </childnode>
        <childnode refid="58907" relation="include">
        </childnode>
      </node>
      <node id="58930">
        <label>cstddef</label>
      </node>
      <node id="58973">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58917" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58923" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
      </node>
      <node id="58943">
        <label>unordered_map</label>
      </node>
      <node id="58920">
        <label>climits</label>
      </node>
      <node id="58909">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58907" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58894" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58920" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
      </node>
      <node id="58933">
        <label>mutex</label>
      </node>
      <node id="58988">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
        <childnode refid="58983" relation="include">
        </childnode>
        <childnode refid="58986" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
      </node>
      <node id="58940">
        <label>chrono</label>
      </node>
      <node id="59018">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58904" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58890" relation="include">
        </childnode>
      </node>
      <node id="58952">
        <label>csignal</label>
      </node>
      <node id="58991">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58937" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
      </node>
      <node id="58960">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58965" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
        <childnode refid="58901" relation="include">
        </childnode>
      </node>
      <node id="59016">
        <label>thread</label>
      </node>
      <node id="59000">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
      </node>
      <node id="58894">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
      </node>
      <node id="58958">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58959" relation="include">
        </childnode>
        <childnode refid="58882" relation="include">
        </childnode>
        <childnode refid="58884" relation="include">
        </childnode>
        <childnode refid="58917" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58960" relation="include">
        </childnode>
        <childnode refid="58967" relation="include">
        </childnode>
        <childnode refid="58963" relation="include">
        </childnode>
        <childnode refid="58971" relation="include">
        </childnode>
        <childnode refid="58973" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58979" relation="include">
        </childnode>
        <childnode refid="58981" relation="include">
        </childnode>
        <childnode refid="58982" relation="include">
        </childnode>
        <childnode refid="58969" relation="include">
        </childnode>
        <childnode refid="58968" relation="include">
        </childnode>
        <childnode refid="58970" relation="include">
        </childnode>
        <childnode refid="58983" relation="include">
        </childnode>
        <childnode refid="58986" relation="include">
        </childnode>
        <childnode refid="58990" relation="include">
        </childnode>
      </node>
      <node id="59012">
        <label>AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="59013" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="58876" relation="include">
        </childnode>
        <childnode refid="59002" relation="include">
        </childnode>
        <childnode refid="59015" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="59020" relation="include">
        </childnode>
        <childnode refid="59021" relation="include">
        </childnode>
        <childnode refid="59022" relation="include">
        </childnode>
        <childnode refid="59023" relation="include">
        </childnode>
        <childnode refid="59024" relation="include">
        </childnode>
        <childnode refid="58943" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58895" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
      </node>
      <node id="58969">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58881" relation="include">
        </childnode>
        <childnode refid="58916" relation="include">
        </childnode>
        <childnode refid="58962" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="58929" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
      </node>
      <node id="58908">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
      </node>
      <node id="58887">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58888" relation="include">
        </childnode>
      </node>
      <node id="58915">
        <label>type_traits</label>
      </node>
      <node id="58932">
        <label>set</label>
      </node>
      <node id="58995">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
      </node>
      <node id="58992">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58966" relation="include">
        </childnode>
        <childnode refid="58919" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58900" relation="include">
        </childnode>
        <childnode refid="58906" relation="include">
        </childnode>
        <childnode refid="58932" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58918" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58942" relation="include">
        </childnode>
        <childnode refid="58993" relation="include">
        </childnode>
        <childnode refid="58991" relation="include">
        </childnode>
        <childnode refid="58944" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
        <childnode refid="58938" relation="include">
        </childnode>
        <childnode refid="58886" relation="include">
        </childnode>
        <childnode refid="58935" relation="include">
        </childnode>
        <childnode refid="58998" relation="include">
        </childnode>
        <childnode refid="58984" relation="include">
        </childnode>
        <childnode refid="58999" relation="include">
        </childnode>
        <childnode refid="59001" relation="include">
        </childnode>
        <childnode refid="58937" relation="include">
        </childnode>
        <childnode refid="58961" relation="include">
        </childnode>
        <childnode refid="59002" relation="include">
        </childnode>
        <childnode refid="58924" relation="include">
        </childnode>
        <childnode refid="58958" relation="include">
        </childnode>
        <childnode refid="59003" relation="include">
        </childnode>
      </node>
      <node id="58906">
        <label>algorithm</label>
      </node>
      <node id="58955">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58899" relation="include">
        </childnode>
        <childnode refid="58956" relation="include">
        </childnode>
      </node>
      <node id="59025">
        <label>AMReX_EB2_IndexSpaceI.H</label>
        <link refid="AMReX__EB2__IndexSpaceI_8H"/>
      </node>
      <node id="58966">
        <label>cstring</label>
      </node>
      <node id="58875">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
        <childnode refid="58876" relation="include">
        </childnode>
        <childnode refid="59007" relation="include">
        </childnode>
        <childnode refid="58994" relation="include">
        </childnode>
        <childnode refid="59021" relation="include">
        </childnode>
        <childnode refid="59026" relation="include">
        </childnode>
        <childnode refid="59029" relation="include">
        </childnode>
      </node>
      <node id="58990">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
      </node>
      <node id="58901">
        <label>memory</label>
      </node>
      <node id="59020">
        <label>AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58878" relation="include">
        </childnode>
        <childnode refid="58897" relation="include">
        </childnode>
        <childnode refid="58939" relation="include">
        </childnode>
        <childnode refid="58911" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
        <childnode refid="58924" relation="include">
        </childnode>
        <childnode refid="58991" relation="include">
        </childnode>
      </node>
      <node id="58980">
        <label>initializer_list</label>
      </node>
      <node id="58891">
        <label>inttypes.h</label>
      </node>
      <node id="58961">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58915" relation="include">
        </childnode>
        <childnode refid="58889" relation="include">
        </childnode>
      </node>
      <node id="58984">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58914" relation="include">
        </childnode>
        <childnode refid="58947" relation="include">
        </childnode>
        <childnode refid="58985" relation="include">
        </childnode>
        <childnode refid="58913" relation="include">
        </childnode>
        <childnode refid="58880" relation="include">
        </childnode>
        <childnode refid="58946" relation="include">
        </childnode>
        <childnode refid="58945" relation="include">
        </childnode>
      </node>
      <node id="58936">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="58877" relation="include">
        </childnode>
        <childnode refid="58896" relation="include">
        </childnode>
        <childnode refid="58879" relation="include">
        </childnode>
        <childnode refid="58903" relation="include">
        </childnode>
        <childnode refid="58892" relation="include">
        </childnode>
        <childnode refid="58910" relation="include">
        </childnode>
        <childnode refid="58909" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MultiFab_8H" kindref="compound">AMReX_MultiFab.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EB__utils_8H" kindref="compound">AMReX_EB_utils.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Geometry_8H" kindref="compound">AMReX_Geometry.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MultiCutFab_8H" kindref="compound">AMReX_MultiCutFab.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EBFabFactory_8H" kindref="compound">AMReX_EBFabFactory.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EBFArrayBox_8H" kindref="compound">AMReX_EBFArrayBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>small<sp/>cell<sp/>redistribution<sp/>on<sp/>one<sp/>FAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_eb_redistribution<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>div_mf,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>divc_mf,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MFIter*<sp/>mfi,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EBCellFlagFab&amp;<sp/>flags_fab,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab*<sp/>volfrac,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box&amp;<sp/></highlight><highlight class="comment">/*domain*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry<sp/>&amp;<sp/>geom)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>grid<sp/>is<sp/>uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>tolerance<sp/>=<sp/>std::numeric_limits&lt;Real&gt;::epsilon();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dx<sp/>=<sp/>geom.CellSize();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dx[0]<sp/>-<sp/>dx[1])<sp/>&gt;<sp/>tolerance)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;apply_eb_redistribution():<sp/>grid<sp/>spacing<sp/>must<sp/>be<sp/>uniform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dx[0]<sp/>-<sp/>dx[1])<sp/>&gt;<sp/>tolerance)<sp/>||</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dx[0]<sp/>-<sp/>dx[2])<sp/>&gt;<sp/>tolerance)<sp/>||</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(dx[1]<sp/>-<sp/>dx[2])<sp/>&gt;<sp/>tolerance)<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;apply_eb_redistribution():<sp/>grid<sp/>spacing<sp/>must<sp/>be<sp/>uniform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box<sp/>dbox<sp/>=<sp/>geom.growPeriodicDomain(2);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>array<sp/>from<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>div<sp/><sp/>=<sp/>div_mf.array(*mfi);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>divc<sp/>=<sp/>divc_mf.array(*mfi);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt<sp/><sp/><sp/>=<sp/>weights.array(*mfi);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>flags_fab.array();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfrac<sp/>=<sp/>volfrac-&gt;array(*mfi);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>grown1_bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>grown2_bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Working<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox<sp/><sp/>delm_fab(grown1_bx,ncomp);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox<sp/><sp/>optmp_fab(grown2_bx,ncomp);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox<sp/><sp/>mask_fab(grown2_bx);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>optmp<sp/>=<sp/>optmp_fab.array();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask<sp/><sp/>=<sp/>mask_fab.array();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>delm<sp/><sp/>=<sp/>delm_fab.array();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>&quot;mask&quot;<sp/>is<sp/>used<sp/>to<sp/>sever<sp/>the<sp/>link<sp/>to<sp/>ghost<sp/>cells<sp/>when<sp/>the<sp/>BCs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>not<sp/>periodic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>set<sp/>to<sp/>1<sp/>when<sp/>a<sp/>cell<sp/>can<sp/>be<sp/>used<sp/>in<sp/>computations,<sp/>0<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a1a2a3f6095bcdeb590ee81b4329c350d" kindref="member">AMREX_FOR_3D</ref>(grown2_bx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask(i,j,k)<sp/>=<sp/>(dbox.contains(IntVect(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k))))<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>to<sp/>zero<sp/>tmp<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1ac9a8d7b0c7a78713e4fdd55ee2e4fb83" kindref="member">AMREX_FOR_4D</ref>(grown2_bx,<sp/>ncomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optmp(i,j,k,n)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>compute<sp/>delta<sp/>M<sp/>(mass<sp/>gain<sp/>or<sp/>loss)<sp/>on<sp/>(lo-1,lo+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1ac9a8d7b0c7a78713e4fdd55ee2e4fb83" kindref="member">AMREX_FOR_4D</ref>(grown1_bx,<sp/>ncomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flags(i,j,k).isSingleValued())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>divnc(0.0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>vtot(0.0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>wted_frac(0.0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ks<sp/>=<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ke<sp/>=<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)<sp/>?<sp/><sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk(ks);<sp/>kk<sp/>&lt;=<sp/>ke;<sp/>++kk)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj(-1);<sp/>jj<sp/>&lt;=<sp/>1;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii(-1);<sp/>ii<sp/>&lt;=<sp/>1;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(ii<sp/>!=<sp/>0<sp/>||<sp/>jj<sp/>!=<sp/>0<sp/>||<sp/>kk<sp/>!=<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags(i,j,k).isConnected(ii,jj,kk)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbox.contains(IntVect(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i+ii,j+jj,k+kk))))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wted_frac<sp/>=<sp/>vfrac(i+ii,j+jj,k+kk)<sp/>*<sp/>wt(i+ii,j+jj,k+kk)<sp/>*<sp/>mask(i+ii,j+jj,k+kk);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtot<sp/><sp/><sp/>+=<sp/>wted_frac;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divnc<sp/><sp/>+=<sp/>wted_frac<sp/>*<sp/>divc(i+ii,j+jj,k+kk,n);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divnc<sp/>/=<sp/><sp/>(vtot<sp/>+<sp/>1.e-80);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>multiply<sp/>divc<sp/>by<sp/>mask<sp/>to<sp/>make<sp/>sure<sp/>optmp<sp/>is<sp/>zero<sp/>for<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outside<sp/>the<sp/>domain<sp/>for<sp/>non-cyclic<sp/>BCs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optmp(i,j,k,n)<sp/>=<sp/><sp/>(1<sp/>-<sp/>vfrac(i,j,k))<sp/>*<sp/>(divnc<sp/>-<sp/>divc(i,j,k,n)<sp/>*<sp/>mask(i,j,k));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delm(i,j,k,n)<sp/><sp/>=<sp/>-(<sp/><sp/><sp/><sp/>vfrac(i,j,k))<sp/>*<sp/>optmp(i,j,k,n);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delm(i,j,k,n)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>3:<sp/>redistribute<sp/>excess/loss<sp/>of<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1ac9a8d7b0c7a78713e4fdd55ee2e4fb83" kindref="member">AMREX_FOR_4D</ref>(grown1_bx,<sp/>ncomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flags(i,j,k).isSingleValued())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>wtot(0.0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ks<sp/>=<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ke<sp/>=<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)<sp/>?<sp/><sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk(ks);<sp/>kk<sp/>&lt;=<sp/>ke;<sp/>++kk)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj(-1);<sp/>jj<sp/>&lt;=<sp/>1;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii(-1);<sp/>ii<sp/>&lt;=<sp/>1;<sp/>++ii)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(ii<sp/>!=<sp/>0<sp/>||<sp/>jj<sp/>!=<sp/>0<sp/>||<sp/>kk<sp/>!=<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flags(i,j,k).isConnected(ii,jj,kk))<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtot<sp/>+=<sp/>wt(i+ii,j+jj,k+kk)<sp/>*<sp/>vfrac(i+ii,j+jj,k+kk)<sp/>*<sp/>mask(i+ii,j+jj,k+kk);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wtot<sp/>=<sp/>1.0/(wtot<sp/>+<sp/>1.e-80);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk(ks);<sp/>kk<sp/>&lt;=<sp/>ke;<sp/>++kk)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj(-1);<sp/>jj<sp/>&lt;=<sp/>1;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii(-1);<sp/>ii<sp/>&lt;=<sp/>1;<sp/>++ii)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(ii<sp/>!=<sp/>0<sp/>||<sp/>jj<sp/>!=<sp/>0<sp/>||<sp/>kk<sp/>!=<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flags(i,j,k).isConnected(ii,jj,kk))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.contains(IntVect(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i+ii,j+jj,k+kk)))<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aafa3ecc838e7a17251520a2ef125c963" kindref="member">Gpu::Atomic::AddNoRet</ref>(&amp;optmp(i+ii,j+jj,k+kk,n),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delm(i,j,k,n)<sp/>*<sp/>wtot<sp/>*<sp/>mask(i+ii,j+jj,k+kk)<sp/>*<sp/>wt(i+ii,j+jj,k+kk));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resume<sp/>the<sp/>correct<sp/>sign,<sp/>AKA<sp/>return<sp/>the<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1ac9a8d7b0c7a78713e4fdd55ee2e4fb83" kindref="member">AMREX_FOR_4D</ref>(bx,<sp/>ncomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div(i,j,k,icomp+n)<sp/>=<sp/>divc(i,j,k,n)<sp/>+<sp/>optmp(i,j,k,n);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a0040af3e7783b853140a6e13c755fc25" kindref="member">Gpu::synchronize</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>small<sp/>cell<sp/>redistribution<sp/>on<sp/>a<sp/>MultiFab<sp/>--<sp/>with<sp/>a<sp/>weighting<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>single_level_weighted_redistribute<sp/>(MultiFab&amp;<sp/>div_tmp_in,<sp/>MultiFab&amp;<sp/>div_out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>domain(geom.Domain());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>covered_val<sp/>=<sp/>1.e40;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(div_tmp_in.nGrow()<sp/>&gt;=<sp/>nghost);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3baedaa2c05dc91fb1b9b36dc61e128d" kindref="member">EB_set_covered</ref>(div_tmp_in,<sp/>0,<sp/>ncomp,<sp/>div_tmp_in.nGrow(),<sp/>covered_val);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div_tmp_in.FillBoundary(geom.periodicity());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>take<sp/>care<sp/>of<sp/>both<sp/>the<sp/>regular<sp/>and<sp/>covered<sp/>cases<sp/>...<sp/>all<sp/>we<sp/>do<sp/>below<sp/>is<sp/>the<sp/>cut<sp/>cell<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(div_out,<sp/>div_tmp_in,<sp/>0,<sp/>div_comp,<sp/>ncomp,<sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>EB<sp/>geometric<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ebfactory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(div_out.Factory());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab*<sp/>volfrac<sp/><sp/><sp/>=<sp/>&amp;(ebfactory.<sp/>getVolFrac());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(div_out,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tilebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox<sp/>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>to<sp/>check<sp/>efficiently<sp/>if<sp/>this<sp/>tile<sp/>contains<sp/>any<sp/>eb<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EBFArrayBox&amp;<sp/><sp/>div_fab<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">EBFArrayBox<sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(div_out[mfi]);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EBCellFlagFab&amp;<sp/><sp/>flags<sp/>=<sp/>div_fab.getEBCellFlagFab();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(flags.getType(<ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,<sp/><sp/><sp/><sp/><sp/>0))<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(flags.getType(<ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,nghost))<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>div(tau)<sp/>with<sp/>EB<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_eb_redistribution(bx,<sp/>div_out,<sp/>div_tmp_in,<sp/>weights,<sp/>&amp;mfi,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div_comp,<sp/>ncomp,<sp/>flags,<sp/>volfrac,<sp/>domain,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>small<sp/>cell<sp/>redistribution<sp/>on<sp/>a<sp/>MultiFab<sp/>--<sp/>without<sp/>a<sp/>weighting<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>single_level_redistribute<sp/>(MultiFab&amp;<sp/>div_tmp_in,<sp/>MultiFab&amp;<sp/>div_out,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>div_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>a<sp/>weighting<sp/>array<sp/>to<sp/>use<sp/>inside<sp/>the<sp/>redistribution<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab<sp/>weights(div_out.boxArray(),<sp/>div_out.DistributionMap(),<sp/>1,<sp/>div_tmp_in.nGrow());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights.setVal(1.0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_level_weighted_redistribute<sp/>(div_tmp_in,<sp/>div_out,<sp/>weights,<sp/>div_comp,<sp/>ncomp,<sp/>geom);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillSignedDistance<sp/>(MultiFab&amp;<sp/>mf,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fluid_has_positive_sign)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;(mf.Factory()));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factory)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillSignedDistance(mf,<sp/>*(factory-&gt;getEBLevel()),<sp/>*factory,<sp/>1,<sp/>fluid_has_positive_sign);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf.setVal(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Purpose:<sp/>Given<sp/>a<sp/>collision<sp/>between<sp/>particle<sp/>and<sp/>EB<sp/>surface,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>that<sp/>a<sp/>neighbour<sp/>cell<sp/>owns<sp/>the<sp/>EB<sp/>surface,<sp/>a<sp/>collision<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>particle<sp/>and<sp/>the<sp/>EDGE<sp/>of<sp/>the<sp/>EB<sp/>facet<sp/>might<sp/>occur.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>returns<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>closest<sp/>point<sp/>on<sp/>the<sp/>edge<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>EB<sp/>facet.<sp/>This<sp/>function<sp/>does<sp/>not<sp/>check<sp/>of<sp/>collisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="260"><highlight class="normal">RealVect</highlight></codeline>
<codeline lineno="261"><highlight class="normal">facets_nearest_pt<sp/>(IntVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ind_pt,<sp/>IntVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ind_loop,<sp/>RealVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r_vec,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>eb_normal,<sp/>RealVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>eb_p0,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;Real,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dx)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enumerate<sp/>the<sp/>possible<sp/>EB<sp/>facet<sp/>edges<sp/>invovlved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_facets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>IntVect<sp/>ind_facets<sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(0,<sp/>0,<sp/>0)};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ind_pt[d]<sp/>!=<sp/>ind_loop[d]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind_facets[n_facets++]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scalar<sp/>characterizing<sp/>EB<sp/>facet<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>eb_h<sp/>=<sp/>eb_normal.dotProduct(eb_p0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>min_dist<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>min_dist<sp/>=<sp/>3.4e38_rt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>RealVect<sp/>c_vec;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>EB<sp/>facet<sp/>edges<sp/>and<sp/>find<sp/>whichever<sp/>has<sp/>the<sp/>closest<sp/>nearest<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_facet=0;<sp/>i_facet&lt;n_facets;<sp/>++i_facet)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp_facet<sp/>=<sp/>ind_facets[i_facet];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>normal<sp/>of<sp/>the<sp/>cell&apos;s<sp/>facet<sp/>(cube<sp/>faces)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>facet_normal<sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(0._rt,<sp/>0._rt,<sp/>0._rt)};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facet_normal[tmp_facet]<sp/>=<sp/>1.;<sp/></highlight><highlight class="comment">//<sp/>whether<sp/>facing<sp/>inwards<sp/>or<sp/>outwards<sp/>is<sp/>not<sp/>important<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>cases<sp/>where<sp/>cell<sp/>faces<sp/>conincide<sp/>with<sp/>the<sp/>eb<sp/>facets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_D_TERM(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(eb_normal[0])<sp/>==<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(facet_normal[0]),</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(eb_normal[1])<sp/>==<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(facet_normal[1]),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(eb_normal[2])<sp/>==<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(facet_normal[2])))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind_cell<sp/>=<sp/>ind_loop[tmp_facet];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind_nb<sp/><sp/><sp/>=<sp/>ind_pt[tmp_facet];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>position<sp/>of<sp/>the<sp/>cell&apos;s<sp/>facet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>f_c;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ind_cell<sp/>&lt;<sp/>ind_nb)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_c<sp/>=<sp/>(<sp/>ind_cell<sp/>+<sp/>1<sp/>)<sp/>*<sp/>dx[tmp_facet];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_c<sp/>=<sp/><sp/><sp/>ind_cell<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dx[tmp_facet];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>facet_p0{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>((ind_loop[0]<sp/>+<sp/>0.5_rt)<sp/>*<sp/>dx[0],</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ind_loop[1]<sp/>+<sp/>0.5_rt)<sp/>*<sp/>dx[1],</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ind_loop[2]<sp/>+<sp/>0.5_rt)<sp/>*<sp/>dx[2])};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facet_p0[tmp_facet]<sp/>=<sp/>f_c;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scalar<sp/>characterizing<sp/>cell<sp/>facet<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>facet_h<sp/>=<sp/>facet_normal.dotProduct(facet_p0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>EB<sp/>facet<sp/>edge<sp/>by<sp/>finding<sp/>the<sp/>intercept<sp/>between<sp/>EB<sp/>surface<sp/>(first<sp/>plane)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>cell&apos;s<sp/>facet<sp/>(second<sp/>plane)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Purpose:<sp/>Calculates<sp/>the<sp/>line<sp/>(represented<sp/>by<sp/>a<sp/>position<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>direction<sp/>vector)<sp/>given<sp/>by<sp/>the<sp/>intersection<sp/>of<sp/>two<sp/>planes<sp/>(defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>by<sp/>two<sp/>normal<sp/>(n1,<sp/>n2)<sp/>and<sp/>two<sp/>positions<sp/>(h1<sp/>=<sp/>n1.p1,<sp/>h2<sp/>=<sp/>n2.p2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>When<sp/>one<sp/>plane<sp/>is<sp/>the<sp/>EB<sp/>surface,<sp/>and<sp/>the<sp/>other<sp/>is<sp/>a<sp/>face<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cell.<sp/>Then<sp/>this<sp/>line<sp/>represents<sp/>the<sp/>edge<sp/>of<sp/>the<sp/>EB<sp/>facet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>c_dp<sp/>=<sp/>eb_normal.dotProduct(facet_normal);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>c_norm<sp/>=<sp/>1._rt<sp/>-<sp/>c_dp*c_dp;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>c1<sp/>=<sp/>(<sp/>eb_h<sp/>-<sp/>facet_h<sp/>*<sp/>c_dp<sp/>)<sp/>/<sp/>c_norm;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>c2<sp/>=<sp/>(<sp/>facet_h<sp/>-<sp/>eb_h<sp/>*<sp/>c_dp<sp/>)<sp/>/<sp/>c_norm;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>edge_p0{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(c1*eb_normal[0]<sp/>+<sp/>c2*facet_normal[0],</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1*eb_normal[1]<sp/>+<sp/>c2*facet_normal[1],</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1*eb_normal[2]<sp/>+<sp/>c2*facet_normal[2])};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>edge_v<sp/>=<sp/>eb_normal.crossProduct(facet_normal);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>solution<sp/>is<sp/>a<sp/>line<sp/>representing<sp/>the<sp/>closest<sp/>EB<sp/>edge,<sp/>now<sp/>compute<sp/>the<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>line<sp/>which<sp/>minimizes<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Purpose:<sp/>Given<sp/>an<sp/>a<sp/>line<sp/>an<sp/>a<sp/>point,<sp/>this<sp/>finds<sp/>the<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>the<sp/>line<sp/>which<sp/>minimizes<sp/>the<sp/>cartesian<sp/>distance.<sp/>It<sp/>also<sp/>finds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>corresponing<sp/>distance<sp/>along<sp/>the<sp/>line<sp/>corresponding<sp/>to<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>c<sp/>=<sp/>edge_p0<sp/>-<sp/>r_vec;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lambda_tmp<sp/>=<sp/>-<sp/>edge_v.dotProduct(c)<sp/>/<sp/>edge_v.dotProduct(edge_v);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>c_vec_tmp{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(edge_p0[0]<sp/>+<sp/>lambda_tmp*edge_v[0],</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p0[1]<sp/>+<sp/>lambda_tmp*edge_v[1],</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p0[2]<sp/>+<sp/>lambda_tmp*edge_v[2])};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IMPORTANT:<sp/>this<sp/>point<sp/>might<sp/>be<sp/>outside<sp/>the<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>in<sp/>that<sp/>case,<sp/>it<sp/>will<sp/>be<sp/>one<sp/>of<sp/>the<sp/>cell&apos;s<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>closest<sp/>point<sp/>is<sp/>outside<sp/>cell,<sp/>determine<sp/>the<sp/>furthest<sp/>we<sp/>can<sp/>go<sp/>along<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EB<sp/>edge<sp/>line<sp/>whilst<sp/>staying<sp/>within<sp/>the<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Purpose:<sp/>Given<sp/>a<sp/>line<sp/>which<sp/>passes<sp/>through<sp/>a<sp/>box<sp/>in<sp/>three<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(it<sp/>can<sp/>pass<sp/>through<sp/>the<sp/>edges).<sp/>Let<sp/>lambda<sp/>be<sp/>a<sp/>real<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>representing<sp/>the<sp/>coordinate<sp/>along<sp/>the<sp/>line.<sp/>This<sp/>finds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>min/max<sp/>values<sp/>of<sp/>lambda,<sp/>in<sp/>order<sp/>for<sp/>the<sp/>point<sp/>described<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lambda<sp/>to<sp/>be<sp/>contained<sp/>within<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cx_lo<sp/>=<sp/>-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cy_lo<sp/>=<sp/>-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cz_lo<sp/>=<sp/>-<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cx_hi<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cy_hi<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cz_hi<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><ref refid="namespacesdcquadrature__mod_1a5996afecb06f0cfbc667e1fc7eff3f08" kindref="member">eps</ref><sp/>=<sp/>std::numeric_limits&lt;Real&gt;::epsilon();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cx_lo<sp/>=<sp/>-3.4e38_rt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cy_lo<sp/>=<sp/>-3.4e38_rt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cz_lo<sp/>=<sp/>-3.4e38_rt;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cx_hi<sp/>=<sp/><sp/>3.4e38_rt;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cy_hi<sp/>=<sp/><sp/>3.4e38_rt;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cz_hi<sp/>=<sp/><sp/>3.4e38_rt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>eps<sp/>=<sp/>1.e-7_rt;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>line<sp/>runs<sp/>parrallel<sp/>to<sp/>any<sp/>of<sp/>these<sp/>dimensions<sp/>(which<sp/>is<sp/>true<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EB<sp/>edges),<sp/>then<sp/>skip<sp/>-&gt;<sp/>the<sp/>min/max<sp/>functions<sp/>at<sp/>the<sp/>end<sp/>will<sp/>skip<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>the<sp/>+/-huge(c...)<sp/>defaults<sp/>(above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(edge_v[0])<sp/>&gt;<sp/>eps<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx_lo<sp/>=<sp/>-(<sp/>edge_p0[0]<sp/>-<sp/><sp/><sp/>ind_loop[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dx[0]<sp/>)<sp/>/<sp/>edge_v[0];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx_hi<sp/>=<sp/>-(<sp/>edge_p0[0]<sp/>-<sp/>(<sp/>ind_loop[0]<sp/>+<sp/>1<sp/>)<sp/>*<sp/>dx[0]<sp/>)<sp/>/<sp/>edge_v[0];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>edge_v[0]<sp/>&lt;<sp/>0._rt<sp/>)<sp/><ref refid="namespaceamrex_1a5311a5775a3f24d73376bdc6268b7a3d" kindref="member">amrex::Swap</ref>(cx_lo,<sp/>cx_hi);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(edge_v[1])<sp/>&gt;<sp/>eps<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cy_lo<sp/>=<sp/>-(<sp/>edge_p0[1]<sp/>-<sp/><sp/><sp/>ind_loop[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dx[1]<sp/>)<sp/>/<sp/>edge_v[1];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cy_hi<sp/>=<sp/>-(<sp/>edge_p0[1]<sp/>-<sp/>(<sp/>ind_loop[1]<sp/>+<sp/>1<sp/>)<sp/>*<sp/>dx[1]<sp/>)<sp/>/<sp/>edge_v[1];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>edge_v[1]<sp/>&lt;<sp/>0._rt<sp/>)<sp/><ref refid="namespaceamrex_1a5311a5775a3f24d73376bdc6268b7a3d" kindref="member">amrex::Swap</ref>(cy_lo,<sp/>cy_hi);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(edge_v[2])<sp/>&gt;<sp/>eps<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cz_lo<sp/>=<sp/>-(<sp/>edge_p0[2]<sp/>-<sp/><sp/><sp/>ind_loop[2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dx[2]<sp/>)<sp/>/<sp/>edge_v[2];</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cz_hi<sp/>=<sp/>-(<sp/>edge_p0[2]<sp/>-<sp/>(<sp/>ind_loop[2]<sp/>+<sp/>1<sp/>)<sp/>*<sp/>dx[2]<sp/>)<sp/>/<sp/>edge_v[2];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>edge_v[2]<sp/>&lt;<sp/>0._rt<sp/>)<sp/><ref refid="namespaceamrex_1a5311a5775a3f24d73376bdc6268b7a3d" kindref="member">amrex::Swap</ref>(cz_lo,<sp/>cz_hi);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lambda_min<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(cx_lo,<sp/>cy_lo,<sp/>cz_lo);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>lambda_max<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(cx_hi,<sp/>cy_hi,<sp/>cz_hi);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lambda_tmp<sp/>&lt;<sp/>lambda_min)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda_tmp<sp/>=<sp/>lambda_min;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lambda_tmp<sp/>&gt;<sp/>lambda_max)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda_tmp<sp/>=<sp/>lambda_max;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>rc_vec;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;AMREX_SPACEDIM;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vec_tmp[d]<sp/>=<sp/>edge_p0[d]<sp/>+<sp/>lambda_tmp*edge_v[d];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc_vec[d]<sp/>=<sp/>c_vec_tmp[d]<sp/>-<sp/>r_vec[d];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>new<sp/>distance<sp/>to<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>min_dist_tmp<sp/>=<sp/>rc_vec.dotProduct(rc_vec);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimize<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_dist_tmp<sp/>&lt;<sp/>min_dist)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>min_dist_tmp;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vec<sp/>=<sp/>c_vec_tmp;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_vec;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillSignedDistance<sp/>(MultiFab&amp;<sp/>mf,<sp/>EB2::Level<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ls_lev,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EBFArrayBoxFactory<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>eb_factory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refratio,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fluid_has_positive_sign)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_lev.fillLevelSet(mf,<sp/>ls_lev.Geom());<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>implicit<sp/>function,<sp/>not<sp/>the<sp/>SDF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bndrycent<sp/>=<sp/>eb_factory.getBndryCent();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>areafrac<sp/>=<sp/>eb_factory.getAreaFrac();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>flags<sp/>=<sp/>eb_factory.getMultiEBCellFlagFab();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eb_pad<sp/>=<sp/>bndrycent.nGrow();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dx_ls<sp/>=<sp/>ls_lev.Geom().CellSizeArray();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dx_eb<sp/>=<sp/>eb_factory.Geom().CellSizeArray();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>ls_roof<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(dx_eb[0],dx_eb[1],dx_eb[2]))<sp/>*<sp/>(flags.nGrow()+1);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(mf);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gbx<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>mf.array(mfi);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(gbx,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fab(i,j,k)<sp/>&lt;=<sp/>0._rt)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab(i,j,k)<sp/>=<sp/>(fluid_has_positive_sign)<sp/>?<sp/>ls_roof<sp/>:<sp/>-ls_roof;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab(i,j,k)<sp/>=<sp/>(fluid_has_positive_sign)<sp/>?<sp/>-ls_roof<sp/>:<sp/>ls_roof;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bndrycent.ok(mfi))</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>flag<sp/>=<sp/>flags.const_array(mfi);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>eb_search<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb_search.coarsen(refratio).enclosedCells().grow(eb_pad);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nallcells<sp/>=<sp/>eb_search.numPts();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::DeviceVector&lt;int&gt;<sp/>is_cut(nallcells);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_is_cut<sp/>=<sp/>is_cut.data();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(nallcells,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell)<sp/>noexcept</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;int,3&gt;<sp/>ijk<sp/>=<sp/>eb_search.atOffset3d(icell);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag(ijk[0],ijk[1],ijk[2]).isSingleValued())<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_is_cut[icell]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_is_cut[icell]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::DeviceVector&lt;int&gt;<sp/>cutcell_offset(nallcells);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_cutcell_offset<sp/>=<sp/>cutcell_offset.data();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncutcells<sp/>=<sp/><ref refid="namespaceamrex_1_1Scan_1a3d89941c9d430b31054150e45dbde440" kindref="member">Scan::ExclusiveSum</ref>(nallcells,<sp/>p_is_cut,<sp/>p_cutcell_offset);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncutcells<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::DeviceVector&lt;GpuArray&lt;Real,AMREX_SPACEDIM*2&gt;<sp/>&gt;<sp/>facets(ncutcells);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p_facets<sp/>=<sp/>facets.data();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcent<sp/>=<sp/>bndrycent.const_array(mfi);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apx<sp/>=<sp/>areafrac[0]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apy<sp/>=<sp/>areafrac[1]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apz<sp/>=<sp/>areafrac[2]-&gt;const_array(mfi));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(eb_search,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>eb_search.index(IntVect(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k)));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_is_cut[icell])<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;Real,AMREX_SPACEDIM*2&gt;&amp;<sp/>fac<sp/>=<sp/>p_facets[p_cutcell_offset[icell]];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(fac[0]<sp/>=<sp/>(bcent(i,j,k,0)+Real(i)+0.5_rt)<sp/>*<sp/>dx_eb[0];,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac[1]<sp/>=<sp/>(bcent(i,j,k,1)+Real(j)+0.5_rt)<sp/>*<sp/>dx_eb[1];,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac[2]<sp/>=<sp/>(bcent(i,j,k,2)+Real(k)+0.5_rt)<sp/>*<sp/>dx_eb[2]);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>axm<sp/>=<sp/>apx(i,<sp/><sp/>j<sp/><sp/>,<sp/>k<sp/><sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>axp<sp/>=<sp/>apx(i+1,j<sp/><sp/>,<sp/>k<sp/><sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>aym<sp/>=<sp/>apy(i,<sp/><sp/>j<sp/><sp/>,<sp/>k<sp/><sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ayp<sp/>=<sp/>apy(i,<sp/><sp/>j+1,<sp/>k<sp/><sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>azm<sp/>=<sp/>apz(i,<sp/><sp/>j<sp/><sp/>,<sp/>k<sp/><sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>azp<sp/>=<sp/>apz(i,<sp/><sp/>j<sp/><sp/>,<sp/>k+1);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>apnorm<sp/>=<sp/><ref refid="namespaceamrex_1afe1175c09892da177b5f5ecaf36936ab" kindref="member">std::sqrt</ref>((axm-axp)*(axm-axp)<sp/>+</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(aym-ayp)*(aym-ayp)<sp/>+</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(azm-azp)*(azm-azp));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>apnorm<sp/>=<sp/><ref refid="namespaceamrex_1afe1175c09892da177b5f5ecaf36936ab" kindref="member">std::sqrt</ref>((axm-axp)*(axm-axp)<sp/>+</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(aym-ayp)*(aym-ayp));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>apnorminv<sp/>=<sp/>1._rt<sp/>/<sp/>apnorm;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>anrmx<sp/>=<sp/>(axp-axm)<sp/>*<sp/>apnorminv;,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>to<sp/>the<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>anrmy<sp/>=<sp/>(ayp-aym)<sp/>*<sp/>apnorminv;,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>anrmz<sp/>=<sp/>(azp-azm)<sp/>*<sp/>apnorminv);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>to<sp/>the<sp/>fluid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(fac[AMREX_SPACEDIM+0]<sp/>=<sp/>-anrmx;,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac[AMREX_SPACEDIM+1]<sp/>=<sp/>-anrmy;,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac[AMREX_SPACEDIM+2]<sp/>=<sp/>-anrmz);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(gbx,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>dxinv<sp/>=<sp/>1._rt/dx_eb[0];,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dyinv<sp/>=<sp/>1._rt/dx_eb[1];,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dzinv<sp/>=<sp/>1._rt/dx_eb[2]);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>x<sp/>=<sp/>i*dx_ls[0];,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>y<sp/>=<sp/>j*dx_ls[1];,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>z<sp/>=<sp/>k*dx_ls[2]);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>min_dist2<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;Real&gt;::max</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>min_dist2<sp/>=<sp/>3.4e38_rt;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_nearest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ifac<sp/><sp/>=<sp/>0;<sp/>ifac<sp/>&lt;<sp/>ncutcells;<sp/>++ifac)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>cx<sp/>=<sp/>p_facets[ifac][0];,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cy<sp/>=<sp/>p_facets[ifac][1];,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cz<sp/>=<sp/>p_facets[ifac][2]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dist2<sp/>=<sp/>AMREX_D_TERM((x-cx)*(x-cx),+(y-cy)*(y-cy),+(z-cz)*(z-cz));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>min_dist2)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_nearest<sp/>=<sp/>ifac;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist2<sp/>=<sp/>dist2;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>pos<sp/>&quot;projects<sp/>onto&quot;<sp/>the<sp/>nearest<sp/>EB<sp/>facet&apos;s<sp/>interior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>cx<sp/>=<sp/>p_facets[i_nearest][0];,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cy<sp/>=<sp/>p_facets[i_nearest][1];,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>cz<sp/>=<sp/>p_facets[i_nearest][2]);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>nx<sp/>=<sp/>p_facets[i_nearest][AMREX_SPACEDIM+0];,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>ny<sp/>=<sp/>p_facets[i_nearest][AMREX_SPACEDIM+1];,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>nz<sp/>=<sp/>p_facets[i_nearest][AMREX_SPACEDIM+2]);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dist_proj<sp/>=<sp/>AMREX_D_TERM((x-cx)*(-nx),+(y-cy)*(-ny),+(z-cz)*(-nz));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Real<sp/>eb_min_x<sp/>=<sp/>x<sp/>+<sp/>nx*dist_proj;,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>eb_min_y<sp/>=<sp/>y<sp/>+<sp/>ny*dist_proj;,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>eb_min_z<sp/>=<sp/>z<sp/>+<sp/>nz*dist_proj);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi_cx<sp/>=<sp/>static_cast&lt;int&gt;(amrex::Math::floor(cx<sp/>*<sp/>dxinv));,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi_cy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor(cy<sp/>*<sp/>dyinv));,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi_cz<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor(cz<sp/>*<sp/>dzinv)));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi_x<sp/>=<sp/>static_cast&lt;int&gt;(amrex::Math::floor(eb_min_x<sp/>*<sp/>dxinv));,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi_y<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor(eb_min_y<sp/>*<sp/>dyinv));,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vi_z<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor(eb_min_z<sp/>*<sp/>dzinv)));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>min_pt_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_D_TERM(vi_cx<sp/>==<sp/>vi_x,<sp/>&amp;&amp;<sp/>vi_cy<sp/>==<sp/>vi_y,<sp/>&amp;&amp;<sp/>vi_cz<sp/>==<sp/>vi_z))<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_pt_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>rounding<sp/>error<sp/>might<sp/>give<sp/>false<sp/>negatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_shift<sp/>=<sp/>-1;<sp/>k_shift<sp/>&lt;=<sp/>1;<sp/>++k_shift)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j_shift<sp/>=<sp/>-1;<sp/>j_shift<sp/>&lt;=<sp/>1;<sp/>++j_shift)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_shift<sp/>=<sp/>-1;<sp/>i_shift<sp/>&lt;=<sp/>1;<sp/>++i_shift)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(vi_x<sp/>=<sp/>static_cast&lt;int&gt;(amrex::Math::floor((eb_min_x+i_shift*1.e-6_rt*dx_eb[0])*dxinv));,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi_y<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor((eb_min_y+j_shift*1.e-6_rt*dx_eb[1])*dyinv));,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi_z<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor((eb_min_z+k_shift*1.e-6_rt*dx_eb[2])*dzinv)));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_D_TERM(vi_cx<sp/>==<sp/>vi_x,<sp/>&amp;&amp;<sp/>vi_cy<sp/>==<sp/>vi_y,<sp/>&amp;&amp;<sp/>vi_cz<sp/>==<sp/>vi_z))<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_pt_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>after_loops;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after_loops:;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>projects<sp/>onto<sp/>nearest<sp/>EB<sp/>facet,<sp/>then<sp/>return<sp/>projected<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alternatively:<sp/>find<sp/>the<sp/>nearest<sp/>point<sp/>on<sp/>the<sp/>EB<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>min_dist;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>min_pt_valid<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>signed<sp/>distance<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>dist_proj;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fallback:<sp/>find<sp/>the<sp/>nearest<sp/>point<sp/>on<sp/>the<sp/>EB<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revert<sp/>the<sp/>value<sp/>of<sp/>vi_x,<sp/>vi_y<sp/>and<sp/>vi_z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(vi_x<sp/>=<sp/>static_cast&lt;int&gt;(amrex::Math::floor(eb_min_x<sp/>*<sp/>dxinv));,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi_y<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor(eb_min_y<sp/>*<sp/>dyinv));,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi_z<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(amrex::Math::floor(eb_min_z<sp/>*<sp/>dzinv)));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c_vec<sp/>=<sp/>detail::facets_nearest_pt</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>({<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(vi_x,vi_y,vi_z)},<sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(vi_cx,<sp/>vi_cy,<sp/>vi_cz)},</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(x,y,z)},<sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(nx,ny,nz)},</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(cx,cy,cz)},<sp/>dx_eb);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>min_edge_dist2<sp/>=<sp/>AMREX_D_TERM(<sp/>(c_vec[0]-x)*(c_vec[0]-x),</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(c_vec[1]-y)*(c_vec[1]-y),</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(c_vec[2]-z)*(c_vec[2]-z));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>-<ref refid="namespaceamrex_1afe1175c09892da177b5f5ecaf36936ab" kindref="member">std::sqrt</ref>(<ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(min_dist2,<sp/>min_edge_dist2));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab(i,j,k)<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(ls_roof,<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(min_dist))</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>amrex::Math::copysign(1._rt,fab(i,j,k));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a0040af3e7783b853140a6e13c755fc25" kindref="member">Gpu::synchronize</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>mf.FillBoundary(0,1,ls_lev.Geom().periodicity());</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp"/>
  </compounddef>
</doxygen>
