<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__compute__normals_8F90" kind="file" language="Fortran">
    <compoundname>AMReX_compute_normals.F90</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__compute__normals_8F90_1a9c473684f3783121403fb7053d493fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_eb_compute_normals</definition>
        <argsstring>(lo, hi, flag, fglo, fghi, normal, nlo, nhi, apx, axlo, axhi, apy, aylo, ayhi, apz, azlo, azhi)</argsstring>
        <name>amrex_eb_compute_normals</name>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>flag</type>
          <defname>flag</defname>
        </param>
        <param>
          <type>fglo</type>
          <defname>fglo</defname>
        </param>
        <param>
          <type>fghi</type>
          <defname>fghi</defname>
        </param>
        <param>
          <type>normal</type>
          <defname>normal</defname>
        </param>
        <param>
          <type>nlo</type>
          <defname>nlo</defname>
        </param>
        <param>
          <type>nhi</type>
          <defname>nhi</defname>
        </param>
        <param>
          <type>apx</type>
          <defname>apx</defname>
        </param>
        <param>
          <type>axlo</type>
          <defname>axlo</defname>
        </param>
        <param>
          <type>axhi</type>
          <defname>axhi</defname>
        </param>
        <param>
          <type>apy</type>
          <defname>apy</defname>
        </param>
        <param>
          <type>aylo</type>
          <defname>aylo</defname>
        </param>
        <param>
          <type>ayhi</type>
          <defname>ayhi</defname>
        </param>
        <param>
          <type>apz</type>
          <defname>apz</defname>
        </param>
        <param>
          <type>azlo</type>
          <defname>azlo</defname>
        </param>
        <param>
          <type>azhi</type>
          <defname>azhi</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_compute_normals.F90" line="2" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_compute_normals.F90" bodystart="9" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="AMReX__compute__normals_8F90_1a9c473684f3783121403fb7053d493fe8" kindref="member">amrex_eb_compute_normals</ref><sp/>(<sp/>lo,<sp/>hi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag,<sp/>fglo,<sp/>fghi,<sp/>&amp;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal,<sp/>nlo,<sp/>nhi,<sp/>&amp;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apx,<sp/>axlo,<sp/>axhi,<sp/><sp/>&amp;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apy,<sp/>aylo,<sp/>ayhi,<sp/><sp/>&amp;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apz,<sp/>azlo,<sp/>azhi<sp/>)<sp/>&amp;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;amrex_eb_compute_normals&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__fort__module" kindref="compound">amrex_fort_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/>c_real<sp/>=&gt;<sp/><ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal">iso_c_binding</highlight><highlight class="keywordtype">,<sp/><sp/><sp/><sp/><sp/>only</highlight><highlight class="normal">:<sp/>c_int</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex__ebcellflag__module" kindref="compound">amrex_ebcellflag_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal"><sp/>:<sp/><ref refid="namespaceamrex__ebcellflag__module_1a4734800da1613de79878005a47689862" kindref="member">is_single_valued_cell</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">intent(in<sp/><sp/><sp/>)</highlight><highlight class="normal"><sp/>::<sp/>lo(3),hi(3),nlo(3),nhi(3),fglo(3),fghi(3)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">intent(in<sp/><sp/><sp/>)</highlight><highlight class="normal"><sp/>::<sp/>axlo(3),axhi(3),aylo(3),ayhi(3),azlo(3),azhi(3)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">intent(in<sp/><sp/><sp/>)</highlight><highlight class="normal"><sp/>::<sp/>flag(fglo(1):fghi(1),fglo(2):fghi(2),fglo(3):fghi(3))</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real(c_real)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(<sp/><sp/>out)</highlight><highlight class="normal"><sp/>::<sp/>normal(nlo(1):nhi(1),nlo(2):nhi(2),nlo(3):nhi(3),3)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real(c_real)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in<sp/><sp/><sp/>)</highlight><highlight class="normal"><sp/>::<sp/>apx(axlo(1):axhi(1),axlo(2):axhi(2),axlo(3):axhi(3))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real(c_real)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in<sp/><sp/><sp/>)</highlight><highlight class="normal"><sp/>::<sp/>apy(aylo(1):ayhi(1),aylo(2):ayhi(2),aylo(3):ayhi(3))</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real(c_real)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in<sp/><sp/><sp/>)</highlight><highlight class="normal"><sp/>::<sp/>apz(azlo(1):azhi(1),azlo(2):azhi(2),azlo(3):azhi(3))</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real(c_real)</highlight><highlight class="normal"><sp/>::<sp/>axm,<sp/>axp,<sp/>aym,<sp/>ayp,<sp/>azm,<sp/>azp</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real(c_real)</highlight><highlight class="normal"><sp/>::<sp/>apnorm,<sp/>apnorminv,<sp/>anrmx,<sp/>anrmy,<sp/>anrmz</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/>::<sp/>i,<sp/>j,<sp/>k</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo(3),<sp/>hi(3)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo(2),<sp/>hi(2)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo(1),<sp/>hi(1)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex__ebcellflag__module_1a4734800da1613de79878005a47689862" kindref="member">is_single_valued_cell</ref>(flag(i,j,k))<sp/>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axm<sp/>=<sp/>apx(i,<sp/><sp/>j<sp/><sp/>,<sp/>k<sp/><sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axp<sp/>=<sp/>apx(i+1,j<sp/><sp/>,<sp/>k<sp/><sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aym<sp/>=<sp/>apy(i,<sp/><sp/>j<sp/><sp/>,<sp/>k<sp/><sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ayp<sp/>=<sp/>apy(i,<sp/><sp/>j+1,<sp/>k<sp/><sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>azm<sp/>=<sp/>apz(i,<sp/><sp/>j<sp/><sp/>,<sp/>k<sp/><sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>azp<sp/>=<sp/>apz(i,<sp/><sp/>j<sp/><sp/>,<sp/>k+1)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apnorm<sp/>=<sp/>sqrt((axm-axp)**2<sp/>+<sp/>(aym-ayp)**2<sp/>+<sp/>(azm-azp)**2)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apnorminv<sp/>=<sp/>1.d0<sp/>/<sp/>apnorm</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anrmx<sp/>=<sp/>(axp-axm)<sp/>*<sp/>apnorminv<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>pointing<sp/>to<sp/>the<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anrmy<sp/>=<sp/>(ayp-aym)<sp/>*<sp/>apnorminv</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anrmz<sp/>=<sp/>(azp-azm)<sp/>*<sp/>apnorminv</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>To<sp/>fit<sp/>the<sp/>convention<sp/>of<sp/>previous<sp/>mfix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal(i,j,k,1)<sp/>=<sp/>-anrmx</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal(i,j,k,2)<sp/>=<sp/>-anrmy</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal(i,j,k,3)<sp/>=<sp/>-anrmz</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/>end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="AMReX__compute__normals_8F90_1a9c473684f3783121403fb7053d493fe8" kindref="member">amrex_eb_compute_normals</ref></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_compute_normals.F90"/>
  </compounddef>
</doxygen>
