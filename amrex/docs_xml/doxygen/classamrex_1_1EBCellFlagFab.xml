<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1EBCellFlagFab" kind="class" language="C++" prot="public" final="yes">
    <compoundname>amrex::EBCellFlagFab</compoundname>
    <basecompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; EBCellFlag &gt;</basecompoundref>
    <includes refid="AMReX__EBCellFlag_8H" local="no">AMReX_EBCellFlag.H</includes>
    <innerclass refid="structamrex_1_1EBCellFlagFab_1_1NumCells" prot="public">amrex::EBCellFlagFab::NumCells</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EBCellFlagFab_1a625c1eeed8e477ce6df628fdf55059a9" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87a" kindref="member">FabType</ref></type>
        <definition>FabType amrex::EBCellFlagFab::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <qualifiedname>amrex::EBCellFlagFab::m_type</qualifiedname>
        <initializer>= <ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aa5e543256c480ac577d30f76f9120eb74" kindref="member">FabType::undefined</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="351" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBCellFlagFab_1a914a481cd7a1365cd6e02ebdf629131d" prot="private" static="no" mutable="yes">
        <type>std::map&lt; <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref>, <ref refid="structamrex_1_1EBCellFlagFab_1_1NumCells" kindref="compound">NumCells</ref> &gt;</type>
        <definition>std::map&lt;Box,NumCells&gt; amrex::EBCellFlagFab::m_typemap</definition>
        <argsstring></argsstring>
        <name>m_typemap</name>
        <qualifiedname>amrex::EBCellFlagFab::m_typemap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="352" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" bodystart="352" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a122af00c8e43d7f77b334e4ca8af8f3b" prot="public" static="no" const="no" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>(Arena *ar) noexcept</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="290" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a037a336832dd36e4e28e512fbbd366b0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>(const Box &amp;b, int ncomp, Arena *ar)</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="292" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1afe1ba5fba45c24e88e142673c68073f6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>(const Box &amp;b, int ncomp=1, bool alloc=true, bool shared=false, Arena *ar=nullptr)</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>alloc</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="294" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a950b4a82b4c1eb79a628f7f85509d97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>(const EBCellFlagFab &amp;rhs, MakeType make_type, int scomp, int ncomp)</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6" kindref="member">MakeType</ref></type>
          <declname>make_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="300" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a328da9c6a1ffe5ff87003fdc9d5a7e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>()=default</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="302" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1aa21ee05268cabb67bb200801168253b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>(EBCellFlagFab &amp;&amp;rhs)=default</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="303" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a56cf5fc06dc4b6e09eeed8f5139b4f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::~EBCellFlagFab</definition>
        <argsstring>() override=default</argsstring>
        <name>~EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::~EBCellFlagFab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="304" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1af6a0b6f99232ecdb6c7e7353c2166c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBCellFlagFab::EBCellFlagFab</definition>
        <argsstring>(const EBCellFlagFab &amp;)=delete</argsstring>
        <name>EBCellFlagFab</name>
        <qualifiedname>amrex::EBCellFlagFab::EBCellFlagFab</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="306" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a9c89f80f450184681a38687e725efeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
        <definition>EBCellFlagFab &amp; amrex::EBCellFlagFab::operator=</definition>
        <argsstring>(const EBCellFlagFab &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::EBCellFlagFab::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="307" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a2c2580334987a9e636bb506c7a4dcf11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
        <definition>EBCellFlagFab &amp; amrex::EBCellFlagFab::operator=</definition>
        <argsstring>(EBCellFlagFab &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::EBCellFlagFab::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="308" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1ad195d2769922a7376a690010b7cc569a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87a" kindref="member">FabType</ref></type>
        <definition>FabType amrex::EBCellFlagFab::getType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getType</name>
        <qualifiedname>amrex::EBCellFlagFab::getType</qualifiedname>
        <briefdescription>
<para>Returns FabType of the whole <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="313" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a5fbbd6cfac2268f9286c156e7ecd7ea6" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87a" kindref="member">FabType</ref></type>
        <definition>FabType amrex::EBCellFlagFab::getType</definition>
        <argsstring>(const Box &amp;bx) const noexcept</argsstring>
        <name>getType</name>
        <qualifiedname>amrex::EBCellFlagFab::getType</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
<para>Returns FabType in the given Box of this <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="318" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="92" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a624ea91ea2b7bf09dcf7702764afb41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EBCellFlagFab::resetType</definition>
        <argsstring>(int ng)</argsstring>
        <name>resetType</name>
        <qualifiedname>amrex::EBCellFlagFab::resetType</qualifiedname>
        <param>
          <type>int</type>
          <declname>ng</declname>
        </param>
        <briefdescription>
<para>Reset FabType. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="323" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="132" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a5543ed9a9e620af529ce92b82b6498f3" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::EBCellFlagFab::getNumRegularCells</definition>
        <argsstring>(const Box &amp;bx) const noexcept</argsstring>
        <name>getNumRegularCells</name>
        <qualifiedname>amrex::EBCellFlagFab::getNumRegularCells</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
<para>Returns the number of regular cells in the given Box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="328" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="147" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1abfc0c19edd24b4583d39b256c3916364" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::EBCellFlagFab::getNumCutCells</definition>
        <argsstring>(const Box &amp;bx) const noexcept</argsstring>
        <name>getNumCutCells</name>
        <qualifiedname>amrex::EBCellFlagFab::getNumCutCells</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
<para>Returns the number of cut cells in the given Box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="333" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="188" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1accfba3397c54fc70f5355fe72e53aef5" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::EBCellFlagFab::getNumCoveredCells</definition>
        <argsstring>(const Box &amp;bx) const noexcept</argsstring>
        <name>getNumCoveredCells</name>
        <qualifiedname>amrex::EBCellFlagFab::getNumCoveredCells</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
<para>Returns the number of covered cells in the given Box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="338" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp" bodystart="226" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBCellFlagFab_1a57d4f25c01e84b842b1456dee7985600" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EBCellFlagFab::setType</definition>
        <argsstring>(FabType t) noexcept</argsstring>
        <name>setType</name>
        <qualifiedname>amrex::EBCellFlagFab::setType</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87a" kindref="member">FabType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="340" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" bodystart="340" bodyend="340"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
      </node>
      <node id="1">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="4">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="5" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="16">
        <label>amrex::BoxND&lt; dim &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="3">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::EBCellFlag</label>
        <link refid="classamrex_1_1EBCellFlag"/>
      </node>
      <node id="1">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_typemap</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::EBCellFlagFab::NumCells</label>
        <link refid="structamrex_1_1EBCellFlagFab_1_1NumCells"/>
      </node>
      <node id="11">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="15">
        <label>std::map&lt; amrex::BoxND, amrex::EBCellFlagFab::NumCells &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="7">
        <label>std::mutex</label>
      </node>
      <node id="9">
        <label>std::string</label>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" line="285" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H" bodystart="287" bodyend="353"/>
    <listofallmembers>
      <member refid="classamrex_1_1BaseFab_1af827e9a5df2baf21d45239e49567f4c6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>abs</name></member>
      <member refid="classamrex_1_1BaseFab_1ae730734f6c370cc53bdfb51efe618033" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>abs</name></member>
      <member refid="classamrex_1_1BaseFab_1a4f6421e1246d3830573c1865f1138f60" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>abs</name></member>
      <member refid="classamrex_1_1BaseFab_1a220803f71ba80b6deab7975fc4da9d03" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>addFromMem</name></member>
      <member refid="classamrex_1_1BaseFab_1a2b1536046ed1e2201f48955b47243327" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>addproduct</name></member>
      <member refid="structamrex_1_1DataAllocator_1a0c987f41d3ff0191aba42b9e6dcbf1aa" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>alloc</name></member>
      <member refid="classamrex_1_1BaseFab_1a0b228a35989fd32f481b43adfa43a2ec" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>alloc_stream</name></member>
      <member refid="structamrex_1_1DataAllocator_1a55d255b149754a9123fc10eb1d79c88a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>arena</name></member>
      <member refid="classamrex_1_1BaseFab_1a718bcfa41729cc02fc8fa61ace0fce96" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1aa3ab92436675ec395dbbbdff480dffc1" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1ada69a7c9591f20ee09a20df50c9e5990" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a4caa1b1635bc050f2a7718a2d47d4ee4" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1ac202c5c6041a7db723fe6b9378c3542d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a993e39415d5c2e905e243e72388ce5f5" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a3dc96c01f9f3d24110fa50e53e93e1b0" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1a129c6d062f25b04c99aeef00c129fde8" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1aa2775774e0005f2e3d56acc4d23c44a1" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1afa1f8f3a9048c2da47559555e5cc7e43" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1ae732fa5c1fb9495b98ecce97ccd1be95" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1ae5d9786facded55bfce06cc443594cab" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a83d88e02757dac7e30b2ac7a13020b22" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1aa42c6cb505873cad1b9c9de64a20c407" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a4b890373aa053ba5cd3aae0bf5483c1c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a8553c8f3915ded4cacfba0c490b98bc5" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a53ab00ff398b5beb473bf85810189532" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a2fe573448f0463cc140a1452a9510eb0" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a27f1fbad6aff0f97e0291664ab11a4e4" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a8adcfedaa62f241b766513fd9dd3f830" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a2689fd4a972a4121943d51dc61eee166" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a6b0fa577ec8190137939f503041e7bf7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1aa2ce65c438db70645899b1d0c09f2455" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1ac1bf710d750eaa3ece0a821abdb132d1" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>bigEnd</name></member>
      <member refid="classamrex_1_1BaseFab_1a48ade2f67153f39cbf1b3d5cb3f5eb13" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>box</name></member>
      <member refid="classamrex_1_1BaseFab_1ae428e6a2645141dd817c288331575f26" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>clear</name></member>
      <member refid="classamrex_1_1BaseFab_1a07392610b1400ed08f9fae4302c76181" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>const_array</name></member>
      <member refid="classamrex_1_1BaseFab_1aaed7667f18f016e8bf82042747d33b35" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>const_array</name></member>
      <member refid="classamrex_1_1BaseFab_1a8c3e9bacc62753fa359448984e571782" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>const_array</name></member>
      <member refid="classamrex_1_1BaseFab_1a40dca3a0efea6d6ac5e3103e34b1f3e3" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>contains</name></member>
      <member refid="classamrex_1_1BaseFab_1a9121f1816f016bc765e3acea392169b8" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>contains</name></member>
      <member refid="classamrex_1_1BaseFab_1a977d18ce746c0f9cdaa0c30d24dafc38" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a2d461c954f07f4f27315007cd6142897" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a6713c5a40c37784163c28eed7db1d3ae" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a2780bcacf15ff9c08602ddc8fd279434" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a08ef88a8fe68f56114c7a647c04772bd" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a5e3dbb577a99bb74375d2e5cde801529" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copyFromMem</name></member>
      <member refid="classamrex_1_1BaseFab_1a1e8c677d4f03b86f4a6e1d1caac46b02" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>copyToMem</name></member>
      <member refid="structamrex_1_1DataAllocator_1a37c4b92bbff76372bd67c006198e400f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>DataAllocator</name></member>
      <member refid="structamrex_1_1DataAllocator_1ad2f91458d09a1484857061ff235e73bd" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>DataAllocator</name></member>
      <member refid="classamrex_1_1BaseFab_1aced044b5543db1946bfebcae101c4074" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1ac70fd92a3446a16d6cb1ec99ff660acb" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1af7d636f2be17a363d733dd1378bd65ce" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a11135589c47fb09d23c8d5619ce920e0" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>define</name></member>
      <member refid="classamrex_1_1BaseFab_1a9d0d2a00cc4e3fa23e019b24016b912b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a3a8094b23b240faf25973fea41ef0ef0" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a244a45e4bf0eba8069ab27cfe5feed67" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a755fa68b5cfdd5fadd88a234766c271c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a8418cc9903556d471e1d637cb49eef1d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a0f2ae3ab88fb6542eb2c11990f29ef86" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a9541126c9461236acb64d2f0b32a1781" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1ae979617b60ec6cd4d9b5d14dd512b3c2" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1acb13bca4e903870c960bbe7cc0880cec" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>domain</name></member>
      <member refid="classamrex_1_1BaseFab_1a9cd1fd0c353673dae4a5138f5ea79f1e" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1a6e60b15550e6ba0b5bf63c3ff825232a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1ab78500dde194e48f6e5c50593a7c678a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1a7dcaef3f1c196a9b0fd30d0cda3d6f8e" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1ae238c88f700fceb3525dccccc6888135" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dotmask</name></member>
      <member refid="classamrex_1_1BaseFab_1a8b0abe9713e52fd03cfb469278dc223c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dotmask</name></member>
      <member refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>dptr</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a122af00c8e43d7f77b334e4ca8af8f3b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a037a336832dd36e4e28e512fbbd366b0" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1afe1ba5fba45c24e88e142673c68073f6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a950b4a82b4c1eb79a628f7f85509d97d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a328da9c6a1ffe5ff87003fdc9d5a7e9d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1aa21ee05268cabb67bb200801168253b9" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1af6a0b6f99232ecdb6c7e7353c2166c8a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>EBCellFlagFab</name></member>
      <member refid="classamrex_1_1BaseFab_1ac5a36d719054f74a00bfc52e10ec9918" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>elixir</name></member>
      <member refid="classamrex_1_1BaseFab_1ab063c08278822a569d923d57d1e39dee" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>fill_snan</name></member>
      <member refid="classamrex_1_1BaseFab_1a4b42e2b61ac6d8050def0a5e9bde849f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>Finalize</name></member>
      <member refid="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>free</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1accfba3397c54fc70f5355fe72e53aef5" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getNumCoveredCells</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1abfc0c19edd24b4583d39b256c3916364" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getNumCutCells</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a5543ed9a9e620af529ce92b82b6498f3" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getNumRegularCells</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1ad195d2769922a7376a690010b7cc569a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getType</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a5fbbd6cfac2268f9286c156e7ecd7ea6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getType</name></member>
      <member refid="classamrex_1_1BaseFab_1ac195a2bbff03a7f02e30788342473d18" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getVal</name></member>
      <member refid="classamrex_1_1BaseFab_1af8f8e7b8b678678f74f235b0ebdeed9f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>getVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a14ceeac0ffdb5d6e556fdc6b6c5cae04" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>hiVect</name></member>
      <member refid="classamrex_1_1BaseFab_1a4d9eb1a365feee57e8b622f92f42a676" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>indexFromValue</name></member>
      <member refid="classamrex_1_1BaseFab_1a1d6dfeb0de1a785895b2a26e05c8ce4a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1BaseFab_1ad98a82bccd4fb83e293321c508cbf8e3" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1ad7393f53147c97d7e2ce59bacb6e90ea" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1adc3c76cad27b8ebcac50f472ee28086a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1a3d7a22be04a9f14666b5b6dea43c7aab" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1a4342e997e189d6fe00b281776f9400e6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>isAllocated</name></member>
      <member refid="classamrex_1_1BaseFab_1ad69dbb55d91cc9784e3f9ee622c53d91" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>length</name></member>
      <member refid="classamrex_1_1BaseFab_1a34dd0c1642740071a0bf70d986e9f52a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>linComb</name></member>
      <member refid="classamrex_1_1BaseFab_1af49fda526f1f93ba846db273906cd29b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>linInterp</name></member>
      <member refid="classamrex_1_1BaseFab_1a666cac025454c374a1e2db655b133aa9" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>linInterp</name></member>
      <member refid="classamrex_1_1BaseFab_1a1a1bc23a87d40ff55f8fcec600b0054b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>lockAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1a3f05af99f54ef0681a3398fec1d63dd7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>loVect</name></member>
      <member refid="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>m_arena</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a625c1eeed8e477ce6df628fdf55059a9" prot="private" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>m_type</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a914a481cd7a1365cd6e02ebdf629131d" prot="private" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>m_typemap</name></member>
      <member refid="classamrex_1_1BaseFab_1a3e4a9401acaa07ed7747907ccaa18a8e" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maskEQ</name></member>
      <member refid="classamrex_1_1BaseFab_1a02d3c8e98d8d4b237eabc0ce1756fc33" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maskGE</name></member>
      <member refid="classamrex_1_1BaseFab_1ae1a6b0d582503d0257d5927534619526" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maskGT</name></member>
      <member refid="classamrex_1_1BaseFab_1a51c1b72c4a3a04fe392247242467d27f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maskLE</name></member>
      <member refid="classamrex_1_1BaseFab_1a2daea766f3544b7e920b9ca9b3cb870e" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maskLT</name></member>
      <member refid="classamrex_1_1BaseFab_1a976274fa8a099dc6ccd77fb63a3a0650" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>max</name></member>
      <member refid="classamrex_1_1BaseFab_1a939ad0219e8ede03540eadef78ba7cbb" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>max</name></member>
      <member refid="classamrex_1_1BaseFab_1a776fd1a3ef930d751d3399d380850f1c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maxabs</name></member>
      <member refid="classamrex_1_1BaseFab_1a67147a4e532939aaab59f3d83ae93361" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maxabs</name></member>
      <member refid="classamrex_1_1BaseFab_1ad84e4433b485caf6c9cf76d87a04f4a0" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maxIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1ac69c6e4896f54d8ea5ca9fe1114c64f6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maxIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1ac0fa2c605be671fb2f9d97dfe38cc6c8" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>maxIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1aeb7994e6d44cea18d2b9a0b92f641b64" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>min</name></member>
      <member refid="classamrex_1_1BaseFab_1a6a67cc88f93b200472fba8ee3ba8263c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>min</name></member>
      <member refid="classamrex_1_1BaseFab_1af53146ccb7317b937c89ebd12e19efd5" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1a8d45160a5d6cf9f1329ca8b38b1aa6c7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1af6d66895d4ba3fe45a6ba4705521e282" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1aabf9a731c176ed69472b109aa42e967b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minmax</name></member>
      <member refid="classamrex_1_1BaseFab_1a1348ff398baf6713f6bbe44bcc1115a1" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minmax</name></member>
      <member refid="classamrex_1_1BaseFab_1a6d0bff982fafed20210cfdd290c51922" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1aa4e7563980826bc199c9f0189b6c9b26" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a4f4c18fd897e957e12ccb7597d82764b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a2cafb2b37fd53db25b7ae67bc8e3eecd" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a841032e4c22463cfc3acc7f6e383384d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a5f90e282b02c4e55e3568396ae439235" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a18ae3e9b17daaf81946b264928babfb6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a3d568e9a805b719ccf750d68e9f0b563" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a77c23670c3820173af82382063a8525d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a72337bc09214fce473bf77e724ef9e93" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a986a4f2008cd82f26730291a78bd5d28" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a7df0d47826c9b346e9a5df0ff0a32666" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1ac7dbe04481b0bd6c6f532fc2d06f95d1" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a30f381aceead942f8c703b4c5bba99ab" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a4e596c1fdc1cdef0bfd6a60cd3d3b81a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a31b9d3f58d3529cc2ac64dab553eb294" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a5be7479b2a46eaefb945b066cb21de8a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>nBytes</name></member>
      <member refid="classamrex_1_1BaseFab_1a32e96a4bbc00ecec58d2763ca697bea6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>nBytes</name></member>
      <member refid="classamrex_1_1BaseFab_1a267006cc0717e9dfbcbd22afc1c89d8c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>nBytesOwned</name></member>
      <member refid="classamrex_1_1BaseFab_1ae16c6f70417dc8f84e2196afe27b2b15" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>nComp</name></member>
      <member refid="classamrex_1_1BaseFab_1a8ada3573ed26fb2ee8abe62bde5dec5e" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>nCompPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a2d65dc4995843b8c46bc97984cf13749" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1acf4c056e581c461ab116dd7974f82e3a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1a5f348c3d0404aa11bb71c5252cc6efe9" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1aaf765bafa403ca72a2f136a6efff2b14" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1aa1282391dd2449fab71d2524cf0f74a7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>norm</name></member>
      <member refid="classamrex_1_1BaseFab_1a53bfa690678b7a44a6f1b8b736db232b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>norm</name></member>
      <member refid="classamrex_1_1BaseFab_1a0cfed6fcd597be27e9d069f9e7a3d18b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>norminfmask</name></member>
      <member refid="classamrex_1_1BaseFab_1ac6480baad7fdde57bec1e2ad32387300" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>numPts</name></member>
      <member refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>nvar</name></member>
      <member refid="classamrex_1_1BaseFab_1a5b342e92bea9a172e94cbc4d1a9b5076" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1aae6b80daa1026b8fd1a485b79a0f553d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1afa418ca88d00c3d464e60dce3c4b42ab" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1a15457525136b0d6c1245ec3bb13b6641" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1a397a547f55264106c669f9ecbecf8897" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator*=</name></member>
      <member refid="classamrex_1_1BaseFab_1a7433945e87d1450ad2aedd284a1af52b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator*=</name></member>
      <member refid="classamrex_1_1BaseFab_1a7c31f46231419fb8c062439a11694b03" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1BaseFab_1a0e5226efe7308e09b4464b4ae91aa6ff" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1BaseFab_1a48a7d3febdafd19ca651c5eed88147cd" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator-=</name></member>
      <member refid="classamrex_1_1BaseFab_1a7bf50c91d4dc7df9c983947f84da3dfb" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator-=</name></member>
      <member refid="classamrex_1_1BaseFab_1aaa2bf19636336c318059fd497e35c023" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator/=</name></member>
      <member refid="classamrex_1_1BaseFab_1ae2402a734250fad951d41376d469365a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator/=</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a9c89f80f450184681a38687e725efeda" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a2c2580334987a9e636bb506c7a4dcf11" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1ac0cfdcc46f8928087e0563fff28f7e74" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; EBCellFlag &gt;::"><scope>amrex::EBCellFlagFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a730800b56af324f6616cdb9ef570cdcc" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; EBCellFlag &gt;::"><scope>amrex::EBCellFlagFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a3ca086d742aeb419ce2f0cf8848bbb4f" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; EBCellFlag &gt;::"><scope>amrex::EBCellFlagFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a975986106265799946259c307d7c6386" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; EBCellFlag &gt;::"><scope>amrex::EBCellFlagFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1abb7c6d23546e6178c5c17bc87a2d5ef6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a30dff1ddf3809400a88f85f546ecbe84" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1af7a3fdd2cfd65a5f9a2d7e2126973917" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1aa9c3a519a02df76b99bef93795d6cba3" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a8eac05318ddeb7bf09d5c1b25acc6d55" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a2e3c0c27f4451b4962368e70bb9c0825" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1afa601e460f4af5ec79144dbcd527ff58" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1ae637024575b35a0f95b58020e31b79ac" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a56197b4668f634207c4031bcd9e05909" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1acc3fa2566c4bf2de3e6f0773e3b0601b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>prefetchToDevice</name></member>
      <member refid="classamrex_1_1BaseFab_1aea7b9b15c8959be232fa8d0b14b2b507" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>prefetchToHost</name></member>
      <member refid="classamrex_1_1BaseFab_1ad858d100150acd894cee6a1de10d61fb" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a45109ddf32816d958a662cd23e576d4f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a9b6d8b5d08a022612232194b8c3f098d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1ab2918e0d3ea4dae441569909e73a8db7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>ptr_owner</name></member>
      <member refid="classamrex_1_1BaseFab_1a4390286fe2327bd5f0561a75ee14499b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>release</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a624ea91ea2b7bf09dcf7702764afb41a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>resetType</name></member>
      <member refid="classamrex_1_1BaseFab_1a39e58886603710880541bc7030d1d9c6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>resize</name></member>
      <member refid="classamrex_1_1BaseFab_1a051da6643de6a48ee66ec046d560033a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>saxpy</name></member>
      <member refid="classamrex_1_1BaseFab_1a8e5c589a24384ac09b58364b7b7d45a7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>saxpy</name></member>
      <member refid="classamrex_1_1BaseFab_1a70a02b9f0a717280df913cead8729dbc" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>SetBoxType</name></member>
      <member refid="classamrex_1_1BaseFab_1af1143312b97b8dabe016e041fa440e85" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setComplement</name></member>
      <member refid="classamrex_1_1BaseFab_1a7c9e5cad84edcb3888480abe8d1df7bc" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setComplement</name></member>
      <member refid="classamrex_1_1BaseFab_1a347010e29c31f4b83480011d98908389" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setPtr</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a57d4f25c01e84b842b1456dee7985600" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setType</name></member>
      <member refid="classamrex_1_1BaseFab_1ab24f1f5f55a90b31121560df9c333fa7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1acbfe1bff2de3daad93c1234eae1f0cf3" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1ad2b35980de651c0823ee08f5f20f642c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a898fc7d64ff6e5e26fb612bcbd6a111d" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a450a1a7a50c796a088f93818ce0003cf" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a5373ee74f195b1f31ffc9b37502bcdb4" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setValIf</name></member>
      <member refid="classamrex_1_1BaseFab_1a49749f076cd8c9e2bed72a9d7ac1041f" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setValIf</name></member>
      <member refid="classamrex_1_1BaseFab_1acb2352671b0792ecd140ea158f3d5ad9" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setValIfNot</name></member>
      <member refid="classamrex_1_1BaseFab_1a573b66fa2db975827a4da4bce09d893e" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setValIfNot</name></member>
      <member refid="classamrex_1_1BaseFab_1ac78f21924ff160a279d17ae73351c05b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>setValIfNot</name></member>
      <member refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>shared_memory</name></member>
      <member refid="classamrex_1_1BaseFab_1a92cb12158a09c20c51ef9347c11d31e4" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>shift</name></member>
      <member refid="classamrex_1_1BaseFab_1ad511764daeaedb9d3de8afc17ca7140c" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>shift</name></member>
      <member refid="classamrex_1_1BaseFab_1acbd52c543782ab54cde88fa60852f563" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>shiftHalf</name></member>
      <member refid="classamrex_1_1BaseFab_1a9ceff0f63f7f998ae97b1b6f8a7e3646" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>shiftHalf</name></member>
      <member refid="classamrex_1_1BaseFab_1aba615c949d4831e48be7fbb76605df0a" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>size</name></member>
      <member refid="classamrex_1_1BaseFab_1a3cf9794a202bf66be3fa31ed2c24fcb6" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>smallEnd</name></member>
      <member refid="classamrex_1_1BaseFab_1a0a8a30db2ab622857ba9ba7c64f940cb" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>sum</name></member>
      <member refid="classamrex_1_1BaseFab_1ae146eaf863b19ed32754ed09757d53a3" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>sum</name></member>
      <member refid="classamrex_1_1BaseFab_1a768eeb824dfd37e3b53c00d79155b36b" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>sum</name></member>
      <member refid="classamrex_1_1BaseFab_1a86d1b4b6478205b0fcec165260df5772" prot="protected" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>truesize</name></member>
      <member refid="classamrex_1_1BaseFab_1a6ffc31b194f5484eef777a47862ddfac" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>value_type</name></member>
      <member refid="classamrex_1_1BaseFab_1a588b01925c451678d621fe58797a5bd7" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>xpay</name></member>
      <member refid="classamrex_1_1BaseFab_1acf7c1ac49465810a70b9ae1757263f30" prot="public" virt="virtual"><scope>amrex::EBCellFlagFab</scope><name>~BaseFab</name></member>
      <member refid="classamrex_1_1EBCellFlagFab_1a56cf5fc06dc4b6e09eeed8f5139b4f50" prot="public" virt="non-virtual"><scope>amrex::EBCellFlagFab</scope><name>~EBCellFlagFab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
