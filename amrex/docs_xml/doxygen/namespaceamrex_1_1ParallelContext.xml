<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1ParallelContext" kind="namespace" language="C++">
    <compoundname>amrex::ParallelContext</compoundname>
    <innerclass refid="classamrex_1_1ParallelContext_1_1Frame" prot="public">amrex::ParallelContext::Frame</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1ParallelContext_1a9bffb84c7ffc09c79a7a48e953322be2" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &gt;</type>
        <definition>Vector&lt; Frame &gt; amrex::ParallelContext::frames</definition>
        <argsstring></argsstring>
        <name>frames</name>
        <briefdescription>
<para>stack of communicator frames </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp" line="9" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ae11490aa2420222dcbb8b57cf115bb1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::CommunicatorAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>CommunicatorAll</name>
        <briefdescription>
<para>world communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a2ac214c9799843152abe583b8c714501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a2e7770334e9e65834ce3c95dd0c3a50f" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::GroupAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>GroupAll</name>
        <briefdescription>
<para>world group </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a60d5e1f262d2f29ca794f9df65429c25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::NProcsAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>NProcsAll</name>
        <briefdescription>
<para>number of ranks in world communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a2c1b05e38fc339f7a2275f8e32ca64e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::MyProcAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>MyProcAll</name>
        <briefdescription>
<para>my rank in world communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ac26f1dbbabf3488677245bcfa325a34f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::IOProcessorNumberAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorNumberAll</name>
        <briefdescription>
<para>IO rank in world communicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a49130bb9cdd82b02c9ac9674aa19925f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParallelContext::IOProcessorAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorAll</name>
        <briefdescription>
<para>Am IO processor for world communicator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="62" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ac04bcd8b609bbf10cc25ef7d60f6a94c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream* amrex::ParallelContext::OFSPtrAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>OFSPtrAll</name>
        <briefdescription>
<para>Pointer to ofstream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="64" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::CommunicatorSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>CommunicatorSub</name>
        <briefdescription>
<para>sub-communicator for current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="67" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ab19f592bc08ecbeb28c478752d6602fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a2e7770334e9e65834ce3c95dd0c3a50f" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::GroupSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>GroupSub</name>
        <briefdescription>
<para>sub-group for current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="69" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::NProcsSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>NProcsSub</name>
        <briefdescription>
<para>number of ranks in current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="71" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a5f6737315bff6905419103b17acf3d06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::MyProcSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>MyProcSub</name>
        <briefdescription>
<para>my sub-rank in current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="73" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ab3843bd69bcb263dfdebb3d668dea1ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::IOProcessorNumberSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorNumberSub</name>
        <briefdescription>
<para>IO sub-rank in current frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="75" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1af766eba670e3bba30b2b8db7f20e8885" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParallelContext::IOProcessorSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorSub</name>
        <briefdescription>
<para>Am IO processor for current frame? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="77" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aab852af3b175c95e5bdd8e0de563e9d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream* amrex::ParallelContext::OFSPtrSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>OFSPtrSub</name>
        <briefdescription>
<para>Pointer to ofstream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="79" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1ceab6de8572b3cfd10ddba48f266863" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::BarrierSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>BarrierSub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="85" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aaeeaf782f50e27058a857cd86febcdd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::BarrierAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>BarrierAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="86" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a48543c30b34e4a2696efc8b2788abadd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::get_inc_mpi_tag</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_inc_mpi_tag</name>
        <briefdescription>
<para>get and increment mpi tag in current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="90" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a766c71905985383fd282cace905237d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::local_to_global_rank</definition>
        <argsstring>(int rank) noexcept</argsstring>
        <name>local_to_global_rank</name>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
<para>translate between local rank and global rank </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="92" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1bd2485b1543e7238ec40aac8c331fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::local_to_global_rank</definition>
        <argsstring>(int *global, const int *local, int n) noexcept</argsstring>
        <name>local_to_global_rank</name>
        <param>
          <type>int *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="93" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="93" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aa0f73d99c17e1ccedb7f2e66a660f274" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::global_to_local_rank</definition>
        <argsstring>(int rank) noexcept</argsstring>
        <name>global_to_local_rank</name>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="95" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ad646518957376d74f099923ef26e20c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::global_to_local_rank</definition>
        <argsstring>(int *local, const int *global, int n) noexcept</argsstring>
        <name>global_to_local_rank</name>
        <param>
          <type>int *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="96" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a09cb92f4a123081a62f72e26a4e3c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::push</definition>
        <argsstring>(MPI_Comm c)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="99" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a8c562ca41b2d74fcd48dc76cc2acb6b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::push</definition>
        <argsstring>(MPI_Comm c, int id, int io_rank)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>io_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="100" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1af6494464a81b93bee92095f59487324b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::set_last_frame_ofs</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>set_last_frame_ofs</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a6bdab1c75756fa491add5ace4c59550f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
<para>Note that it&apos;s the user&apos;s responsibility to free the MPI_Comm. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="105" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp" line="7" column="1"/>
  </compounddef>
</doxygen>
