<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1ParallelContext" kind="namespace" language="C++">
    <compoundname>amrex::ParallelContext</compoundname>
    <innerclass refid="classamrex_1_1ParallelContext_1_1Frame" prot="public">amrex::ParallelContext::Frame</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1ParallelContext_1a9bffb84c7ffc09c79a7a48e953322be2" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &gt;</type>
        <definition>Vector&lt; Frame &gt; amrex::ParallelContext::frames</definition>
        <argsstring></argsstring>
        <name>frames</name>
        <qualifiedname>amrex::ParallelContext::frames</qualifiedname>
        <briefdescription>
<para>stack of communicator frames </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" line="9" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="9" bodyend="-1" declfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" declline="52" declcolumn="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ae11490aa2420222dcbb8b57cf115bb1b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::CommunicatorAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>CommunicatorAll</name>
        <qualifiedname>amrex::ParallelContext::CommunicatorAll</qualifiedname>
        <briefdescription>
<para>world communicator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="55" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a2ac214c9799843152abe583b8c714501" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1_1mpidatatypes_1a48f3cd58b33269ced36a063682094d31" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::GroupAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>GroupAll</name>
        <qualifiedname>amrex::ParallelContext::GroupAll</qualifiedname>
        <briefdescription>
<para>world group </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="57" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a60d5e1f262d2f29ca794f9df65429c25" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::NProcsAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>NProcsAll</name>
        <qualifiedname>amrex::ParallelContext::NProcsAll</qualifiedname>
        <briefdescription>
<para>number of ranks in world communicator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="59" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a2c1b05e38fc339f7a2275f8e32ca64e8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::MyProcAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>MyProcAll</name>
        <qualifiedname>amrex::ParallelContext::MyProcAll</qualifiedname>
        <briefdescription>
<para>my rank in world communicator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="61" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ac26f1dbbabf3488677245bcfa325a34f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::IOProcessorNumberAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorNumberAll</name>
        <qualifiedname>amrex::ParallelContext::IOProcessorNumberAll</qualifiedname>
        <briefdescription>
<para>IO rank in world communicator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="63" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a49130bb9cdd82b02c9ac9674aa19925f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParallelContext::IOProcessorAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorAll</name>
        <qualifiedname>amrex::ParallelContext::IOProcessorAll</qualifiedname>
        <briefdescription>
<para>Am IO processor for world communicator? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="65" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1cf787d04cd343c542c01f978d071781" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream * amrex::ParallelContext::OFSPtrAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>OFSPtrAll</name>
        <qualifiedname>amrex::ParallelContext::OFSPtrAll</qualifiedname>
        <briefdescription>
<para>Pointer to ofstream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="67" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a3735bb2b55dab8f232227611c6d25bb8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::CommunicatorSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>CommunicatorSub</name>
        <qualifiedname>amrex::ParallelContext::CommunicatorSub</qualifiedname>
        <briefdescription>
<para>sub-communicator for current frame </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="70" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ab19f592bc08ecbeb28c478752d6602fd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1_1mpidatatypes_1a48f3cd58b33269ced36a063682094d31" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::GroupSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>GroupSub</name>
        <qualifiedname>amrex::ParallelContext::GroupSub</qualifiedname>
        <briefdescription>
<para>sub-group for current frame </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="72" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::NProcsSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>NProcsSub</name>
        <qualifiedname>amrex::ParallelContext::NProcsSub</qualifiedname>
        <briefdescription>
<para>number of ranks in current frame </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="74" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a5f6737315bff6905419103b17acf3d06" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::MyProcSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>MyProcSub</name>
        <qualifiedname>amrex::ParallelContext::MyProcSub</qualifiedname>
        <briefdescription>
<para>my sub-rank in current frame </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="76" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ab3843bd69bcb263dfdebb3d668dea1ba" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::IOProcessorNumberSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorNumberSub</name>
        <qualifiedname>amrex::ParallelContext::IOProcessorNumberSub</qualifiedname>
        <briefdescription>
<para>IO sub-rank in current frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="78" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1af766eba670e3bba30b2b8db7f20e8885" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParallelContext::IOProcessorSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>IOProcessorSub</name>
        <qualifiedname>amrex::ParallelContext::IOProcessorSub</qualifiedname>
        <briefdescription>
<para>Am IO processor for current frame? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="80" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aa04fd8de43ceca29bfec858be234572d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream * amrex::ParallelContext::OFSPtrSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>OFSPtrSub</name>
        <qualifiedname>amrex::ParallelContext::OFSPtrSub</qualifiedname>
        <briefdescription>
<para>Pointer to ofstream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="82" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1ceab6de8572b3cfd10ddba48f266863" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::BarrierSub</definition>
        <argsstring>() noexcept</argsstring>
        <name>BarrierSub</name>
        <qualifiedname>amrex::ParallelContext::BarrierSub</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="88" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aaeeaf782f50e27058a857cd86febcdd3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::BarrierAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>BarrierAll</name>
        <qualifiedname>amrex::ParallelContext::BarrierAll</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="89" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a48543c30b34e4a2696efc8b2788abadd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::get_inc_mpi_tag</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_inc_mpi_tag</name>
        <qualifiedname>amrex::ParallelContext::get_inc_mpi_tag</qualifiedname>
        <briefdescription>
<para>get and increment mpi tag in current frame </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="93" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a766c71905985383fd282cace905237d4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::local_to_global_rank</definition>
        <argsstring>(int rank) noexcept</argsstring>
        <name>local_to_global_rank</name>
        <qualifiedname>amrex::ParallelContext::local_to_global_rank</qualifiedname>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
<para>translate between local rank and global rank </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="95" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1bd2485b1543e7238ec40aac8c331fa5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::local_to_global_rank</definition>
        <argsstring>(int *global, const int *local, int n) noexcept</argsstring>
        <name>local_to_global_rank</name>
        <qualifiedname>amrex::ParallelContext::local_to_global_rank</qualifiedname>
        <param>
          <type>int *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="96" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="96" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aa0f73d99c17e1ccedb7f2e66a660f274" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::global_to_local_rank</definition>
        <argsstring>(int rank) noexcept</argsstring>
        <name>global_to_local_rank</name>
        <qualifiedname>amrex::ParallelContext::global_to_local_rank</qualifiedname>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="98" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ad646518957376d74f099923ef26e20c9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::global_to_local_rank</definition>
        <argsstring>(int *local, const int *global, int n) noexcept</argsstring>
        <name>global_to_local_rank</name>
        <qualifiedname>amrex::ParallelContext::global_to_local_rank</qualifiedname>
        <param>
          <type>int *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="99" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="99" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a09cb92f4a123081a62f72e26a4e3c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::push</definition>
        <argsstring>(MPI_Comm c)</argsstring>
        <name>push</name>
        <qualifiedname>amrex::ParallelContext::push</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="102" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a8c562ca41b2d74fcd48dc76cc2acb6b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::push</definition>
        <argsstring>(MPI_Comm c, int id, int io_rank)</argsstring>
        <name>push</name>
        <qualifiedname>amrex::ParallelContext::push</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>io_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="103" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1af6494464a81b93bee92095f59487324b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::set_last_frame_ofs</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>set_last_frame_ofs</name>
        <qualifiedname>amrex::ParallelContext::set_last_frame_ofs</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="104" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a6bdab1c75756fa491add5ace4c59550f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <qualifiedname>amrex::ParallelContext::pop</qualifiedname>
        <briefdescription>
<para>Note that it&apos;s the user&apos;s responsibility to free the MPI_Comm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" line="108" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="108" bodyend="108"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelContext.cpp" line="7" column="1"/>
  </compounddef>
</doxygen>
