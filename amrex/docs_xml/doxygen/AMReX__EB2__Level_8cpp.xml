<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__EB2__Level_8cpp" kind="file" language="C++">
    <compoundname>AMReX_EB2_Level.cpp</compoundname>
    <includes refid="AMReX__EB2__Level_8H" local="no">AMReX_EB2_Level.H</includes>
    <includes refid="AMReX__IArrayBox_8H" local="no">AMReX_IArrayBox.H</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="42244">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42245" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42218" relation="include">
        </childnode>
      </node>
      <node id="42298">
        <label>iomanip</label>
      </node>
      <node id="42221">
        <label>functional</label>
      </node>
      <node id="42280">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42207" relation="include">
        </childnode>
        <childnode refid="42281" relation="include">
        </childnode>
        <childnode refid="42240" relation="include">
        </childnode>
        <childnode refid="42266" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
      </node>
      <node id="42273">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
      </node>
      <node id="42229">
        <label>limits</label>
      </node>
      <node id="42251">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
      </node>
      <node id="42299">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="42253" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42296" relation="include">
        </childnode>
      </node>
      <node id="42232">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42233" relation="include">
        </childnode>
        <childnode refid="42235" relation="include">
        </childnode>
        <childnode refid="42218" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42240" relation="include">
        </childnode>
        <childnode refid="42241" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42242" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
      </node>
      <node id="42291">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42288" relation="include">
        </childnode>
        <childnode refid="42227" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42242" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42238" relation="include">
        </childnode>
      </node>
      <node id="42261">
        <label>cstdint</label>
      </node>
      <node id="42304">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42280" relation="include">
        </childnode>
        <childnode refid="42282" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
        <childnode refid="42305" relation="include">
        </childnode>
        <childnode refid="42259" relation="include">
        </childnode>
        <childnode refid="42297" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
        <childnode refid="42283" relation="include">
        </childnode>
      </node>
      <node id="42282">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="42207" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
      </node>
      <node id="42236">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42238" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42239" relation="include">
        </childnode>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42218" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42234" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42227" relation="include">
        </childnode>
        <childnode refid="42217" relation="include">
        </childnode>
      </node>
      <node id="42310">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42245" relation="include">
        </childnode>
        <childnode refid="42311" relation="include">
        </childnode>
        <childnode refid="42312" relation="include">
        </childnode>
        <childnode refid="42211" relation="include">
        </childnode>
        <childnode refid="42261" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42302" relation="include">
        </childnode>
        <childnode refid="42262" relation="include">
        </childnode>
        <childnode refid="42313" relation="include">
        </childnode>
      </node>
      <node id="42216">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42218" relation="include">
        </childnode>
        <childnode refid="42219" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42221" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42215" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
      </node>
      <node id="42274">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="42290">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="42285">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="42275" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
      </node>
      <node id="42230">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
      </node>
      <node id="42297">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="42214" relation="include">
        </childnode>
        <childnode refid="42245" relation="include">
        </childnode>
        <childnode refid="42298" relation="include">
        </childnode>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42244" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
      </node>
      <node id="42238">
        <label>cmath</label>
      </node>
      <node id="42258">
        <label>cassert</label>
      </node>
      <node id="42322">
        <label>AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="42264" relation="include">
        </childnode>
        <childnode refid="42283" relation="include">
        </childnode>
        <childnode refid="42275" relation="include">
        </childnode>
      </node>
      <node id="42220">
        <label>stdexcept</label>
      </node>
      <node id="42253">
        <label>numeric</label>
      </node>
      <node id="42320">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="42235" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
      </node>
      <node id="42315">
        <label>AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="42302" relation="include">
        </childnode>
        <childnode refid="42314" relation="include">
        </childnode>
      </node>
      <node id="42266">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42240" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
      </node>
      <node id="42263">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="42238" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42239" relation="include">
        </childnode>
        <childnode refid="42209" relation="include">
        </childnode>
        <childnode refid="42264" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42227" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42265" relation="include">
        </childnode>
        <childnode refid="42266" relation="include">
        </childnode>
        <childnode refid="42267" relation="include">
        </childnode>
        <childnode refid="42269" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42251" relation="include">
        </childnode>
        <childnode refid="42273" relation="include">
        </childnode>
        <childnode refid="42274" relation="include">
        </childnode>
        <childnode refid="42275" relation="include">
        </childnode>
        <childnode refid="42283" relation="include">
        </childnode>
      </node>
      <node id="42212">
        <label>string</label>
      </node>
      <node id="42296">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="42207" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42297" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
        <childnode refid="42288" relation="include">
        </childnode>
      </node>
      <node id="42265">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="42232" relation="include">
        </childnode>
      </node>
      <node id="42207">
        <label>map</label>
      </node>
      <node id="42260">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="42261" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42262" relation="include">
        </childnode>
        <childnode refid="42302" relation="include">
        </childnode>
        <childnode refid="42309" relation="include">
        </childnode>
        <childnode refid="42259" relation="include">
        </childnode>
      </node>
      <node id="42317">
        <label>AMReX_EB2_Graph.H</label>
        <link refid="AMReX__EB2__Graph_8H"/>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42281" relation="include">
        </childnode>
        <childnode refid="42211" relation="include">
        </childnode>
        <childnode refid="42261" relation="include">
        </childnode>
      </node>
      <node id="42272">
        <label>unordered_set</label>
      </node>
      <node id="42318">
        <label>AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="42262" relation="include">
        </childnode>
        <childnode refid="42314" relation="include">
        </childnode>
        <childnode refid="42317" relation="include">
        </childnode>
      </node>
      <node id="42308">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="42307">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="42304" relation="include">
        </childnode>
        <childnode refid="42306" relation="include">
        </childnode>
      </node>
      <node id="42245">
        <label>fstream</label>
      </node>
      <node id="42205">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42207" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42228" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
        <childnode refid="42254" relation="include">
        </childnode>
        <childnode refid="42259" relation="include">
        </childnode>
      </node>
      <node id="42306">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
        <childnode refid="42304" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42262" relation="include">
        </childnode>
        <childnode refid="42254" relation="include">
        </childnode>
        <childnode refid="42283" relation="include">
        </childnode>
      </node>
      <node id="42316">
        <label>AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="42317" relation="include">
        </childnode>
        <childnode refid="42314" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42307" relation="include">
        </childnode>
        <childnode refid="42260" relation="include">
        </childnode>
      </node>
      <node id="42235">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="42226" relation="include">
        </childnode>
      </node>
      <node id="42203">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX_EB2_Level.cpp"/>
        <childnode refid="42204" relation="include">
        </childnode>
        <childnode refid="42323" relation="include">
        </childnode>
        <childnode refid="42231" relation="include">
        </childnode>
      </node>
      <node id="42254">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42209" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42255" relation="include">
        </childnode>
      </node>
      <node id="42208">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="42209" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42211" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42214" relation="include">
        </childnode>
        <childnode refid="42215" relation="include">
        </childnode>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
      </node>
      <node id="42295">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42275" relation="include">
        </childnode>
      </node>
      <node id="42225">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="42305">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
        <childnode refid="42297" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42264" relation="include">
        </childnode>
      </node>
      <node id="42227">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="42284">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42285" relation="include">
        </childnode>
        <childnode refid="42286" relation="include">
        </childnode>
        <childnode refid="42288" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42265" relation="include">
        </childnode>
        <childnode refid="42227" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42287" relation="include">
        </childnode>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42289" relation="include">
        </childnode>
        <childnode refid="42290" relation="include">
        </childnode>
      </node>
      <node id="42277">
        <label>sys/types.h</label>
      </node>
      <node id="42259">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
      </node>
      <node id="42252">
        <label>typeinfo</label>
      </node>
      <node id="42321">
        <label>AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42322" relation="include">
        </childnode>
      </node>
      <node id="42215">
        <label>cstdio</label>
      </node>
      <node id="42287">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="42264" relation="include">
        </childnode>
        <childnode refid="42227" relation="include">
        </childnode>
      </node>
      <node id="42223">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
      </node>
      <node id="42312">
        <label>future</label>
      </node>
      <node id="42246">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="42247" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42211" relation="include">
        </childnode>
        <childnode refid="42214" relation="include">
        </childnode>
        <childnode refid="42215" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42248" relation="include">
        </childnode>
        <childnode refid="42249" relation="include">
        </childnode>
        <childnode refid="42250" relation="include">
        </childnode>
      </node>
      <node id="42278">
        <label>unistd.h</label>
      </node>
      <node id="42247">
        <label>stack</label>
      </node>
      <node id="42222">
        <label>vector</label>
      </node>
      <node id="42319">
        <label>AMReX_EB2_F.H</label>
        <link refid="AMReX__EB2__F_8H"/>
        <childnode refid="42320" relation="include">
        </childnode>
      </node>
      <node id="42301">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42297" relation="include">
        </childnode>
        <childnode refid="42274" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
      </node>
      <node id="42224">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="42216" relation="include">
        </childnode>
      </node>
      <node id="42217">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="42211">
        <label>utility</label>
      </node>
      <node id="42209">
        <label>array</label>
      </node>
      <node id="42302">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42257" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42207" relation="include">
        </childnode>
        <childnode refid="42211" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42270" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42280" relation="include">
        </childnode>
        <childnode refid="42303" relation="include">
        </childnode>
        <childnode refid="42301" relation="include">
        </childnode>
        <childnode refid="42282" relation="include">
        </childnode>
        <childnode refid="42205" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
        <childnode refid="42275" relation="include">
        </childnode>
        <childnode refid="42218" relation="include">
        </childnode>
        <childnode refid="42251" relation="include">
        </childnode>
        <childnode refid="42259" relation="include">
        </childnode>
        <childnode refid="42297" relation="include">
        </childnode>
        <childnode refid="42304" relation="include">
        </childnode>
        <childnode refid="42306" relation="include">
        </childnode>
        <childnode refid="42274" relation="include">
        </childnode>
        <childnode refid="42287" relation="include">
        </childnode>
        <childnode refid="42307" relation="include">
        </childnode>
        <childnode refid="42263" relation="include">
        </childnode>
        <childnode refid="42283" relation="include">
        </childnode>
        <childnode refid="42308" relation="include">
        </childnode>
      </node>
      <node id="42262">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42263" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42301" relation="include">
        </childnode>
        <childnode refid="42238" relation="include">
        </childnode>
      </node>
      <node id="42214">
        <label>sstream</label>
      </node>
      <node id="42309">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="42302" relation="include">
        </childnode>
        <childnode refid="42307" relation="include">
        </childnode>
        <childnode refid="42297" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
      </node>
      <node id="42219">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="42220" relation="include">
        </childnode>
      </node>
      <node id="42233">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42227" relation="include">
        </childnode>
        <childnode refid="42234" relation="include">
        </childnode>
      </node>
      <node id="42286">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42285" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42287" relation="include">
        </childnode>
      </node>
      <node id="42243">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="42218" relation="include">
        </childnode>
        <childnode refid="42244" relation="include">
        </childnode>
        <childnode refid="42246" relation="include">
        </childnode>
        <childnode refid="42251" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42252" relation="include">
        </childnode>
        <childnode refid="42231" relation="include">
        </childnode>
        <childnode refid="42221" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42253" relation="include">
        </childnode>
      </node>
      <node id="42275">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42212" relation="include">
        </childnode>
        <childnode refid="42207" relation="include">
        </childnode>
        <childnode refid="42276" relation="include">
        </childnode>
        <childnode refid="42264" relation="include">
        </childnode>
        <childnode refid="42277" relation="include">
        </childnode>
        <childnode refid="42278" relation="include">
        </childnode>
        <childnode refid="42279" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42280" relation="include">
        </childnode>
        <childnode refid="42282" relation="include">
        </childnode>
        <childnode refid="42243" relation="include">
        </childnode>
      </node>
      <node id="42268">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
      </node>
      <node id="42241">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42217" relation="include">
        </childnode>
      </node>
      <node id="42234">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
      </node>
      <node id="42279">
        <label>sys/wait.h</label>
      </node>
      <node id="42206">
        <label>iosfwd</label>
      </node>
      <node id="42237">
        <label>cstdlib</label>
      </node>
      <node id="42250">
        <label>cfenv</label>
      </node>
      <node id="42213">
        <label>iostream</label>
      </node>
      <node id="42240">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42218" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
      </node>
      <node id="42242">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="42236" relation="include">
        </childnode>
      </node>
      <node id="42256">
        <label>cstddef</label>
      </node>
      <node id="42281">
        <label>unordered_map</label>
      </node>
      <node id="42303">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42240" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42266" relation="include">
        </childnode>
      </node>
      <node id="42283">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42284" relation="include">
        </childnode>
        <childnode refid="42285" relation="include">
        </childnode>
        <childnode refid="42291" relation="include">
        </childnode>
        <childnode refid="42288" relation="include">
        </childnode>
        <childnode refid="42292" relation="include">
        </childnode>
        <childnode refid="42293" relation="include">
        </childnode>
        <childnode refid="42294" relation="include">
        </childnode>
        <childnode refid="42286" relation="include">
        </childnode>
        <childnode refid="42295" relation="include">
        </childnode>
        <childnode refid="42296" relation="include">
        </childnode>
        <childnode refid="42299" relation="include">
        </childnode>
        <childnode refid="42300" relation="include">
        </childnode>
      </node>
      <node id="42239">
        <label>climits</label>
      </node>
      <node id="42323">
        <label>AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42263" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
      </node>
      <node id="42314">
        <label>AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="42261" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
        <childnode refid="42263" relation="include">
        </childnode>
        <childnode refid="42301" relation="include">
        </childnode>
      </node>
      <node id="42300">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="42271">
        <label>mutex</label>
      </node>
      <node id="42276">
        <label>chrono</label>
      </node>
      <node id="42289">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="42249">
        <label>csignal</label>
      </node>
      <node id="42311">
        <label>thread</label>
      </node>
      <node id="42204">
        <label>AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="42205" relation="include">
        </childnode>
        <childnode refid="42260" relation="include">
        </childnode>
        <childnode refid="42307" relation="include">
        </childnode>
        <childnode refid="42310" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42314" relation="include">
        </childnode>
        <childnode refid="42315" relation="include">
        </childnode>
        <childnode refid="42316" relation="include">
        </childnode>
        <childnode refid="42318" relation="include">
        </childnode>
        <childnode refid="42319" relation="include">
        </childnode>
        <childnode refid="42321" relation="include">
        </childnode>
        <childnode refid="42281" relation="include">
        </childnode>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42238" relation="include">
        </childnode>
        <childnode refid="42264" relation="include">
        </childnode>
      </node>
      <node id="42269">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42270" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
        <childnode refid="42271" relation="include">
        </childnode>
        <childnode refid="42272" relation="include">
        </childnode>
        <childnode refid="42221" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
      </node>
      <node id="42264">
        <label>type_traits</label>
      </node>
      <node id="42270">
        <label>set</label>
      </node>
      <node id="42267">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="42268" relation="include">
        </childnode>
      </node>
      <node id="42218">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="42313">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="42206" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42224" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
      </node>
      <node id="42293">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="42268" relation="include">
        </childnode>
      </node>
      <node id="42231">
        <label>algorithm</label>
      </node>
      <node id="42288">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42209" relation="include">
        </childnode>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42275" relation="include">
        </childnode>
        <childnode refid="42285" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
      </node>
      <node id="42248">
        <label>execinfo.h</label>
      </node>
      <node id="42257">
        <label>cstring</label>
      </node>
      <node id="42255">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42257" relation="include">
        </childnode>
        <childnode refid="42213" relation="include">
        </childnode>
        <childnode refid="42238" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42225" relation="include">
        </childnode>
        <childnode refid="42222" relation="include">
        </childnode>
        <childnode refid="42258" relation="include">
        </childnode>
        <childnode refid="42236" relation="include">
        </childnode>
      </node>
      <node id="42228">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="42229" relation="include">
        </childnode>
        <childnode refid="42216" relation="include">
        </childnode>
        <childnode refid="42226" relation="include">
        </childnode>
        <childnode refid="42208" relation="include">
        </childnode>
        <childnode refid="42230" relation="include">
        </childnode>
        <childnode refid="42232" relation="include">
        </childnode>
      </node>
      <node id="42210">
        <label>memory</label>
      </node>
      <node id="42292">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="42256" relation="include">
        </childnode>
        <childnode refid="42257" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
        <childnode refid="42210" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
        <childnode refid="42287" relation="include">
        </childnode>
        <childnode refid="42288" relation="include">
        </childnode>
      </node>
      <node id="42294">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="42217" relation="include">
        </childnode>
        <childnode refid="42223" relation="include">
        </childnode>
        <childnode refid="42288" relation="include">
        </childnode>
        <childnode refid="42287" relation="include">
        </childnode>
        <childnode refid="42268" relation="include">
        </childnode>
        <childnode refid="42237" relation="include">
        </childnode>
      </node>
      <node id="42226">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="42227" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1EB2">amrex::EB2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EB2__Level_8H" kindref="compound">AMReX_EB2_Level.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IArrayBox_8H" kindref="compound">AMReX_IArrayBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">EB2<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1ac040458ac6f5ac51b303915a6dd66eb5" kindref="member">Level::prepareForCoarsening</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Level&amp;<sp/>rhs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1EB2_1a6a03e6a896276bd89190ad6eee9566e1" kindref="member">max_grid_size</ref>,<sp/>IntVect<sp/>ngrow)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxArray<sp/>all_grids(<ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(<ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>.<ref refid="classamrex_1_1Geometry_1a94f4ddb683e381201694d644be7566f1" kindref="member">Domain</ref>(),ngrow));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>all_grids.maxSize(max_grid_size);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>FabArray&lt;EBCellFlagFab&gt;<sp/>cflag(all_grids,<sp/>DistributionMapping{all_grids},<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillEBCellFlag(cflag,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;Box&gt;<sp/>cut_boxes;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;Box&gt;<sp/>covered_boxes;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(cflag);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87a" kindref="member">FabType</ref><sp/>t<sp/>=<sp/>cflag[mfi].getType();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(t<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aa5e543256c480ac577d30f76f9120eb74" kindref="member">FabType::undefined</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>vbx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covered_boxes.push_back(vbx);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut_boxes.push_back(vbx);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad871bc2fa6939b610a2ad14b3055627f" kindref="member">amrex::AllGatherBoxes</ref>(cut_boxes);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad871bc2fa6939b610a2ad14b3055627f" kindref="member">amrex::AllGatherBoxes</ref>(covered_boxes);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!covered_boxes.empty())<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref><sp/>=<sp/>BoxArray(BoxList(std::move(covered_boxes)));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(!cut_boxes.empty(),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EB2::Level:<sp/>how<sp/>come<sp/>there<sp/>are<sp/>no<sp/>cut<sp/>boxes?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a5417de191837a4807397f9dd9acffbc4" kindref="member">m_grids</ref><sp/>=<sp/>BoxArray(BoxList(std::move(cut_boxes)));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref><sp/>=<sp/>DistributionMapping(m_grids);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" kindref="member">m_levelset</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(m_grids,<ref refid="classamrex_1_1IntVect_1a6b19244c9780da6977a4d1f647843d5b" kindref="member">IntVect::TheNodeVector</ref>()),<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillLevelSet(<ref refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" kindref="member">m_levelset</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_mgf.define(m_grids,<sp/>m_dmap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>.define(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillEBCellFlag(<ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillVolFrac(<ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" kindref="member">m_centroid</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM,<sp/>ng);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillCentroid(<ref refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" kindref="member">m_centroid</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" kindref="member">m_bndryarea</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillBndryArea(<ref refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" kindref="member">m_bndryarea</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" kindref="member">m_bndrycent</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM,<sp/>ng);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillBndryCent(<ref refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" kindref="member">m_bndrycent</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" kindref="member">m_bndrynorm</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM,<sp/>ng);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillBndryNorm(<ref refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" kindref="member">m_bndrynorm</ref>,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[idim].define(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(m_grids,<sp/><ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim)),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[idim].define(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(m_grids,<sp/><ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim)),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM-1,<sp/>ng);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillAreaFrac(<ref refid="namespaceamrex_1a3d178420751d1cce6bd2661d614fbb33" kindref="member">amrex::GetArrOfPtrs</ref>(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>),<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.fillFaceCent(<ref refid="namespaceamrex_1a3d178420751d1cce6bd2661d614fbb33" kindref="member">amrex::GetArrOfPtrs</ref>(<ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>),<sp/><ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1acdef1c2b11c62f8e02b1a4806de74376" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a8244e442a7b8e9f14056fa883f557c9c" kindref="member">Level::coarsenFromFine</ref><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1ac843646825df5f720267a7c641204301" kindref="member">Level</ref>&amp;<sp/>fineLevel,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_boundary)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>fine_grids<sp/>=<sp/>fineLevel.m_grids;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>fine_covered_grids<sp/>=<sp/>fineLevel.m_covered_grids;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>fine_dmap<sp/>=<sp/>fineLevel.m_dmap;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>m_grids<sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(fine_grids,2);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref><sp/>=<sp/><ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(fine_covered_grids,<sp/>2);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref><sp/>=<sp/>fine_dmap;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(fine_grids.coarsenable(2,2)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fine_covered_grids.empty()<sp/>||<sp/>fine_covered_grids.coarsenable(2,2))))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f_levelset<sp/>=<sp/>fineLevel.m_levelset;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" kindref="member">m_levelset</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(m_grids,<ref refid="classamrex_1_1IntVect_1a6b19244c9780da6977a4d1f647843d5b" kindref="member">IntVect::TheNodeVector</ref>()),<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mvmc_error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:mvmc_error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IArrayBox<sp/>ncuts;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(<ref refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" kindref="member">m_levelset</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ccbx<sp/>=<sp/>mfi.tilebox(<ref refid="classamrex_1_1IntVect_1aef6ca971649186448bbd9a575f0a6c41" kindref="member">IntVect::TheCellVector</ref>());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ndbx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncuts.resize(<ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(ccbx),6);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__EB2__F_8H_1abae79de3fcfc09258c3487d7f48b5bfb" kindref="member">amrex_eb2_check_mvmc</ref>(BL_TO_FORTRAN_BOX(ccbx),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_BOX(ndbx),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" kindref="member">m_levelset</ref>[mfi]),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_levelset[mfi]),</highlight></codeline>
<codeline lineno="116"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(ncuts),</highlight></codeline>
<codeline lineno="118"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tile_error);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvmc_error<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(mvmc_error,<sp/>tile_error);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>mvmc_error;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a8e74f51d2321b7e827baae5d86a83824" kindref="member">ParallelDescriptor::ReduceBoolOr</ref>(b);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvmc_error<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mvmc_error)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mvmc_error;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>.define(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" kindref="member">m_centroid</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM,<sp/>ng);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" kindref="member">m_bndryarea</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" kindref="member">m_bndrycent</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM,<sp/>ng);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" kindref="member">m_bndrynorm</ref>.<ref refid="classamrex_1_1MultiFab_1a0d8c379908b048cb742470011c502084" kindref="member">define</ref>(m_grids,<sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM,<sp/>ng);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[idim].define(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(m_grids,<sp/><ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim)),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[idim].define(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(m_grids,<sp/><ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim)),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1ad8da3b86620279f872f604f11e603bbc" kindref="member">m_dmap</ref>,<sp/>AMREX_SPACEDIM-1,<sp/>ng);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f_cellflag<sp/>=<sp/>fineLevel.m_cellflag;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>f_volfrac<sp/>=<sp/>fineLevel.m_volfrac;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>f_centroid<sp/>=<sp/>fineLevel.m_centroid;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>f_bndryarea<sp/>=<sp/>fineLevel.m_bndryarea;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>f_bndrycent<sp/>=<sp/>fineLevel.m_bndrycent;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>f_bndrynorm<sp/>=<sp/>fineLevel.m_bndrynorm;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f_areafrac<sp/>=<sp/>fineLevel.m_areafrac;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f_facecent<sp/>=<sp/>fineLevel.m_facecent;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_boundary)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>fine_geom<sp/>=<sp/>fineLevel.m_geom;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fine_period<sp/>=<sp/>fine_geom.periodicity();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_cellflag.FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_volfrac.FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_centroid.FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bndryarea.FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bndrycent.FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bndrynorm.FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_areafrac[idim].FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_facecent[idim].FillBoundary(fine_period);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fine_covered_grids.empty())</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>fine_period.shiftIntVect();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(f_volfrac);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iv<sp/>:<sp/>pshifts)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fine_covered_grids.intersections(bx+iv,<sp/>isects);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>ibox<sp/>=<sp/>is.second<sp/>-<sp/>iv;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_volfrac[mfi].setVal(0.0,<sp/>ibox,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_cellflag[mfi].setVal(<ref refid="classamrex_1_1EBCellFlag_1a0092cab5ca530cdca5f8d8fa0b7028a2" kindref="member">EBCellFlag::TheCoveredCell</ref>(),<sp/>ibox,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>fbx<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(ibox,idim);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_areafrac[idim].setVal(0.0,<sp/>fbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(<ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>gbx<sp/>=<sp/>mfi.growntilebox(2);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>[mfi].<ref refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" kindref="member">setVal</ref>(1.0,<sp/>gbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" kindref="member">m_centroid</ref>[mfi].<ref refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" kindref="member">setVal</ref>(0.0,<sp/>gbx,<sp/>0,<sp/>AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" kindref="member">m_bndryarea</ref>[mfi].<ref refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" kindref="member">setVal</ref>(0.0,<sp/>gbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" kindref="member">m_bndrycent</ref>[mfi].<ref refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" kindref="member">setVal</ref>(-1.0,<sp/>gbx,<sp/>0,<sp/>AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" kindref="member">m_bndrynorm</ref>[mfi].<ref refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" kindref="member">setVal</ref>(0.0,<sp/>gbx,<sp/>0,<sp/>AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>fbx<sp/>=<sp/>mfi.grownnodaltilebox(idim,2);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[idim][mfi].setVal(1.0,<sp/>fbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[idim][mfi].setVal(0.0,<sp/>fbx,<sp/>0,<sp/>AMREX_SPACEDIM-1);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>xbx<sp/>=<sp/>mfi.nodaltilebox(0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ybx<sp/>=<sp/>mfi.nodaltilebox(1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>zbx<sp/>=<sp/>mfi.nodaltilebox(2);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile_error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__EB2__F_8H_1a966e9125e84a57ec2542717a35d41983" kindref="member">amrex_eb2_coarsen_from_fine</ref>(BL_TO_FORTRAN_BOX(<sp/>bx),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_BOX(xbx),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_BOX(ybx),</highlight></codeline>
<codeline lineno="231"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_BOX(zbx),</highlight></codeline>
<codeline lineno="233"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>[mfi]),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_volfrac[mfi]),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" kindref="member">m_centroid</ref>[mfi]),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_centroid[mfi]),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" kindref="member">m_bndryarea</ref>[mfi]),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_bndryarea[mfi]),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" kindref="member">m_bndrycent</ref>[mfi]),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_bndrycent[mfi]),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" kindref="member">m_bndrynorm</ref>[mfi]),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_bndrynorm[mfi]),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[0][mfi]),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_areafrac[0][mfi]),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[1][mfi]),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_areafrac[1][mfi]),</highlight></codeline>
<codeline lineno="248"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[2][mfi]),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_areafrac[2][mfi]),</highlight></codeline>
<codeline lineno="251"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[0][mfi]),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_facecent[0][mfi]),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[1][mfi]),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_facecent[1][mfi]),</highlight></codeline>
<codeline lineno="256"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[2][mfi]),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_facecent[2][mfi]),</highlight></codeline>
<codeline lineno="259"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>[mfi]),</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(f_cellflag[mfi]),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tile_error);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(error,tile_error);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a8e74f51d2321b7e827baae5d86a83824" kindref="member">ParallelDescriptor::ReduceBoolOr</ref>(b);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" kindref="member">buildCellFlag</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1adbbdc98f272b71363491d9a348e1f92a" kindref="member">Level::buildCellFlag</ref><sp/>()</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[idim].FillBoundary(0,1,{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(1,1,1)},<ref refid="classamrex_1_1EB2_1_1Level_1a41f3157550d8422c88471518b5ede26c" kindref="member">m_geom</ref>.<ref refid="classamrex_1_1Geometry_1a7b365b1560bb9a31cf49cd55668085cf" kindref="member">periodicity</ref>());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(<ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__EB2__F_8H_1ad959912c88c270c83d53c3217d0dce63" kindref="member">amrex_eb2_build_cellflag_from_ap</ref></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BL_TO_FORTRAN_BOX(bx),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[0][mfi]),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[1][mfi]),</highlight></codeline>
<codeline lineno="295"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[2][mfi]),</highlight></codeline>
<codeline lineno="297"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(<ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>[mfi]));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a82fe8afc10f8785c43d647980671acb9" kindref="member">Level::fillEBCellFlag</ref><sp/>(FabArray&lt;EBCellFlagFab&gt;&amp;<sp/>cellflag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellflag.setVal(<ref refid="classamrex_1_1EBCellFlag_1a0a87d851a5baf7aff802e242fb83eabb" kindref="member">EBCellFlag::TheDefaultCell</ref>());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(cellflag);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>cellflag[mfi];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>fab.box();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setRegion(bx);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setType(<ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>cellflag.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a2e1c74b0f09c3f6a15a7024dd30be4ef" kindref="member">m_cellflag</ref>,0,0,1,0,cellflag.nGrow(),geom.periodicity());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>geom.periodicity().shiftIntVect();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>gdomain<sp/>=<sp/>geom.Domain();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geom.isPeriodic(idim))<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gdomain.grow(idim,<sp/>cellflag.nGrow());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cov_val<sp/>=<sp/><ref refid="classamrex_1_1EBCellFlag_1a0092cab5ca530cdca5f8d8fa0b7028a2" kindref="member">EBCellFlag::TheCoveredCell</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(cellflag);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>cellflag[mfi];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>fab.box();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1ae71159edaa4456e59699f01955144d97" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iv<sp/>:<sp/>pshifts)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1aa18b2101c3312c7dad9a6692249fbeaa" kindref="member">intersections</ref>(bx+iv,<sp/>isects);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setVal(cov_val,<sp/>is.second-iv,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>type<sp/>and<sp/>region<sp/>for<sp/>each<sp/>fab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>regbx<sp/>=<sp/>bx<sp/>&amp;<sp/>gdomain;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setRegion(regbx);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setType(<ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aa5e543256c480ac577d30f76f9120eb74" kindref="member">FabType::undefined</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>typ<sp/>=<sp/>fab.getType(regbx);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setType(typ);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a6da08cbda4e632cb5d07b109447d2d14" kindref="member">Level::fillVolFrac</ref><sp/>(MultiFab&amp;<sp/>vfrac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="361"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>vfrac.setVal(1.0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>vfrac.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a0fd8fbb0ff5ceb71c27249153f70a53f" kindref="member">m_volfrac</ref>,0,0,1,0,vfrac.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>(),geom.periodicity());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>geom.periodicity().shiftIntVect();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>cov_val<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>covered<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1ae71159edaa4456e59699f01955144d97" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(vfrac);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>vfrac[mfi];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>fab.box();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iv<sp/>:<sp/>pshifts)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1aa18b2101c3312c7dad9a6692249fbeaa" kindref="member">intersections</ref>(bx+iv,<sp/>isects);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setVal(cov_val,<sp/>is.second-iv,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyMultiFabToMultiCutFab<sp/>(MultiCutFab&amp;<sp/>dstmf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>srcmf)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>srcmf.nComp();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(dstmf.data());<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstmf.ok(mfi))<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dstfab<sp/>=<sp/>dstmf.array(mfi);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>srcfab<sp/>=<sp/>srcmf.array(mfi);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>box<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af44071ada5d6349748d7ee4bd8fcd8d9" kindref="member">AMREX_HOST_DEVICE_FOR_4D</ref><sp/>(box,ncomp,i,j,k,n,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstfab(i,j,k,n)<sp/>=<sp/>srcfab(i,j,k,n);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a683a39ee3e9d31ca27c2c6406ab43218" kindref="member">Level::fillCentroid</ref><sp/>(MultiCutFab&amp;<sp/>centroid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="416"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centroid.setVal(0.0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>tmp(centroid.boxArray(),<sp/>centroid.DistributionMap(),</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_SPACEDIM,<sp/>centroid.nGrow());</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a683a39ee3e9d31ca27c2c6406ab43218" kindref="member">fillCentroid</ref>(tmp,<sp/>geom);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>copyMultiFabToMultiCutFab(centroid,<sp/>tmp);</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a683a39ee3e9d31ca27c2c6406ab43218" kindref="member">Level::fillCentroid</ref><sp/>(MultiFab&amp;<sp/>centroid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="430"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>centroid.setVal(0.0);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centroid.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a280b2239887942a0dfdc9802abe88e12" kindref="member">m_centroid</ref>,0,0,AMREX_SPACEDIM,0,centroid.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>(),</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom.periodicity());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a3488f76f16985159aace0bd7e4a480c2" kindref="member">Level::fillBndryArea</ref><sp/>(MultiCutFab&amp;<sp/>bndryarea,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="440"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndryarea.setVal(0.0);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>tmp(bndryarea.boxArray(),<sp/>bndryarea.DistributionMap(),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>bndryarea.nGrow());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a3488f76f16985159aace0bd7e4a480c2" kindref="member">fillBndryArea</ref>(tmp,<sp/>geom);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>copyMultiFabToMultiCutFab(bndryarea,<sp/>tmp);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a3488f76f16985159aace0bd7e4a480c2" kindref="member">Level::fillBndryArea</ref><sp/>(<sp/><sp/><sp/>MultiFab&amp;<sp/>bndryarea,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="454"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>bndryarea.setVal(0.0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndryarea.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a03eaf98bf7542beafaf696e05c431d5a" kindref="member">m_bndryarea</ref>,0,0,1,0,bndryarea.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>(),geom.periodicity());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a60d5a3ff6999c4a6f6bd0bdbd6e6ec8c" kindref="member">Level::fillBndryCent</ref><sp/>(MultiCutFab&amp;<sp/>bndrycent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="463"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndrycent.setVal(-1.0);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>tmp(bndrycent.boxArray(),<sp/>bndrycent.DistributionMap(),</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndrycent.nComp(),<sp/>bndrycent.nGrow());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a60d5a3ff6999c4a6f6bd0bdbd6e6ec8c" kindref="member">fillBndryCent</ref>(tmp,<sp/>geom);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>copyMultiFabToMultiCutFab(bndrycent,<sp/>tmp);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a60d5a3ff6999c4a6f6bd0bdbd6e6ec8c" kindref="member">Level::fillBndryCent</ref><sp/>(MultiFab&amp;<sp/>bndrycent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="477"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>bndrycent.setVal(-1.0);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndrycent.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a904a42dc11ddb39db9a497fa7093a0dc" kindref="member">m_bndrycent</ref>,0,0,bndrycent.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>(),0,bndrycent.nGrow(),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom.periodicity());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a0c0ab0dc65395b6ab5766e5b673f13e0" kindref="member">Level::fillBndryNorm</ref><sp/>(MultiCutFab&amp;<sp/>bndrynorm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="487"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndrynorm.setVal(0.0);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>tmp(bndrynorm.boxArray(),<sp/>bndrynorm.DistributionMap(),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndrynorm.nComp(),<sp/>bndrynorm.nGrow());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a0c0ab0dc65395b6ab5766e5b673f13e0" kindref="member">fillBndryNorm</ref>(tmp,<sp/>geom);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>copyMultiFabToMultiCutFab(bndrynorm,<sp/>tmp);</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a0c0ab0dc65395b6ab5766e5b673f13e0" kindref="member">Level::fillBndryNorm</ref><sp/>(<sp/><sp/><sp/>MultiFab&amp;<sp/>bndrynorm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="501"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>bndrynorm.setVal(0.0);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndrynorm.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a863477aadc907e1abeb83c666168ccc4" kindref="member">m_bndrynorm</ref>,0,0,bndrynorm.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>(),0,bndrynorm.nGrow(),</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom.periodicity());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1ae21745edcc1b4f328c0312b4209bf39d" kindref="member">Level::fillAreaFrac</ref><sp/>(Array&lt;MultiCutFab*,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_areafrac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="511"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_areafrac[idim]-&gt;setVal(1.0);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiCutFab&amp;<sp/>areafrac<sp/>=<sp/>*a_areafrac[idim];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab<sp/>tmp(areafrac.boxArray(),<sp/>areafrac.DistributionMap(),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac.nComp(),<sp/>areafrac.nGrow());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.setVal(1.0);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[idim],0,0,areafrac.nComp(),</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,areafrac.nGrow(),geom.periodicity());</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyMultiFabToMultiCutFab(areafrac,<sp/>tmp);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>geom.periodicity().shiftIntVect();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>cov_val<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>covered<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1ae71159edaa4456e59699f01955144d97" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(a_areafrac[0]-&gt;data());<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_areafrac[0]-&gt;ok(mfi))</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ccbx<sp/>=<sp/><ref refid="namespaceamrex_1ab6ab1a9e025eea672b3117f9f32d1a68" kindref="member">amrex::enclosedCells</ref>((*a_areafrac[0])[mfi].box());</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iv<sp/>:<sp/>pshifts)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1aa18b2101c3312c7dad9a6692249fbeaa" kindref="member">intersections</ref>(ccbx+iv,<sp/>isects);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>fbx<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(is.second-iv,idim);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*a_areafrac[idim])[mfi].setVal(cov_val,<sp/>fbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1ae21745edcc1b4f328c0312b4209bf39d" kindref="member">Level::fillAreaFrac</ref><sp/>(Array&lt;MultiFab*,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_areafrac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="562"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_areafrac[idim]-&gt;setVal(1.0);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>areafrac<sp/>=<sp/>*a_areafrac[idim];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areafrac.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a26945ad6833c8275b375cec03a60cad0" kindref="member">m_areafrac</ref>[idim],0,0,areafrac.nComp(),</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,areafrac.nGrow(),geom.periodicity());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>geom.periodicity().shiftIntVect();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>cov_val<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>covered<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1ae71159edaa4456e59699f01955144d97" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(*a_areafrac[0]);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ccbx<sp/>=<sp/><ref refid="namespaceamrex_1ab6ab1a9e025eea672b3117f9f32d1a68" kindref="member">amrex::enclosedCells</ref>((*a_areafrac[0])[mfi].box());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iv<sp/>:<sp/>pshifts)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1aa18b2101c3312c7dad9a6692249fbeaa" kindref="member">intersections</ref>(ccbx+iv,<sp/>isects);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>fbx<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(is.second-iv,idim);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*a_areafrac[idim])[mfi].setVal(cov_val,<sp/>fbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a6b1a5f173b7121c87b0cb1780757e6f6" kindref="member">Level::fillFaceCent</ref><sp/>(Array&lt;MultiCutFab*,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_facecent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="605"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_facecent[idim]-&gt;setVal(0.0);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiCutFab&amp;<sp/>facecent<sp/>=<sp/>*a_facecent[idim];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab<sp/>tmp(facecent.boxArray(),<sp/>facecent.DistributionMap(),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facecent.nComp(),<sp/>facecent.nGrow());</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.setVal(0.0);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[idim],0,0,facecent.nComp(),</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,facecent.nGrow(),geom.periodicity());</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyMultiFabToMultiCutFab(facecent,tmp);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a6b1a5f173b7121c87b0cb1780757e6f6" kindref="member">Level::fillFaceCent</ref><sp/>(Array&lt;MultiFab*,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_facecent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="627"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_facecent[idim]-&gt;setVal(0.0);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1aa6d87378cd84dcd63696879f1a006066" kindref="member">isAllRegular</ref>())<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>facecent<sp/>=<sp/>*a_facecent[idim];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_facecent[idim]-&gt;ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a2e965cf11727327d842176406b65ac14" kindref="member">m_facecent</ref>[idim],0,0,facecent.nComp(),</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,facecent.nGrow(),geom.periodicity());</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1Level_1a894bdfe209a8eaf60408caa1b32adee6" kindref="member">Level::fillLevelSet</ref><sp/>(MultiFab&amp;<sp/>levelset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="643"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>levelset.setVal(-1.0);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>levelset.ParallelCopy(<ref refid="classamrex_1_1EB2_1_1Level_1a999ca961f5c742f5d61cbace2d88535d" kindref="member">m_levelset</ref>,0,0,1,0,0);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>geom.periodicity().shiftIntVect();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>cov_val<sp/>=<sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>covered<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1ae71159edaa4456e59699f01955144d97" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(levelset);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>lsfab<sp/>=<sp/>levelset[mfi];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ccbx<sp/>=<sp/><ref refid="namespaceamrex_1ab6ab1a9e025eea672b3117f9f32d1a68" kindref="member">amrex::enclosedCells</ref>(lsfab.box());</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iv<sp/>:<sp/>pshifts)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1Level_1a39105c6d6e0fe32960a0fb90ecfd7db3" kindref="member">m_covered_grids</ref>.<ref refid="classamrex_1_1BoxArray_1aa18b2101c3312c7dad9a6692249fbeaa" kindref="member">intersections</ref>(ccbx+iv,<sp/>isects);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>fbx<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">amrex::surroundingNodes</ref>(is.second-iv);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsfab.setVal(cov_val,<sp/>fbx,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp"/>
  </compounddef>
</doxygen>
