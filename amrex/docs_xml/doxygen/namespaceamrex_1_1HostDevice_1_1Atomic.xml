<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceamrex_1_1HostDevice_1_1Atomic" kind="namespace" language="C++">
    <compoundname>amrex::HostDevice::Atomic</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1HostDevice_1_1Atomic_1a6336b6721a9f233f3bc0eb0cacba47c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::HostDevice::Atomic::Add</definition>
        <argsstring>(T *const sum, T const value) noexcept</argsstring>
        <name>Add</name>
        <param>
          <type>T *const</type>
          <declname>sum</declname>
        </param>
        <param>
          <type>T const</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" line="441" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" bodystart="441" bodyend="451"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" line="437" column="1"/>
  </compounddef>
</doxygen>
