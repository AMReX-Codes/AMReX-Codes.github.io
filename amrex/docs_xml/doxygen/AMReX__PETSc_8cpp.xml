<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__PETSc_8cpp" kind="file" language="C++">
    <compoundname>AMReX_PETSc.cpp</compoundname>
    <includes local="no">petscksp.h</includes>
    <includes refid="AMReX__PETSc_8H" local="no">AMReX_PETSc.H</includes>
    <includes refid="AMReX__HypreABec__F_8H" local="no">AMReX_HypreABec_F.H</includes>
    <includes local="no">cmath</includes>
    <includes local="no">numeric</includes>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="48134">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48135" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
      </node>
      <node id="48188">
        <label>iomanip</label>
      </node>
      <node id="48111">
        <label>functional</label>
      </node>
      <node id="48170">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48171" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48156" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
      </node>
      <node id="48163">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
      </node>
      <node id="48119">
        <label>limits</label>
      </node>
      <node id="48141">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
      </node>
      <node id="48189">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48186" relation="include">
        </childnode>
      </node>
      <node id="48122">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48123" relation="include">
        </childnode>
        <childnode refid="48125" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48131" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48132" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
      </node>
      <node id="48092">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX_PETSc.cpp"/>
        <childnode refid="48093" relation="include">
        </childnode>
        <childnode refid="48094" relation="include">
        </childnode>
        <childnode refid="48206" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48154" relation="include">
        </childnode>
      </node>
      <node id="48181">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48178" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48132" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
      </node>
      <node id="48151">
        <label>cstdint</label>
      </node>
      <node id="48194">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="48172" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48195" relation="include">
        </childnode>
        <childnode refid="48149" relation="include">
        </childnode>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
        <childnode refid="48173" relation="include">
        </childnode>
      </node>
      <node id="48172">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
      </node>
      <node id="48126">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48129" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48124" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
      </node>
      <node id="48106">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48109" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
      </node>
      <node id="48164">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="48180">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="48175">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="48165" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
      </node>
      <node id="48120">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
      </node>
      <node id="48187">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="48104" relation="include">
        </childnode>
        <childnode refid="48135" relation="include">
        </childnode>
        <childnode refid="48188" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48134" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
      </node>
      <node id="48128">
        <label>cmath</label>
      </node>
      <node id="48148">
        <label>cassert</label>
      </node>
      <node id="48110">
        <label>stdexcept</label>
      </node>
      <node id="48143">
        <label>numeric</label>
      </node>
      <node id="48207">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="48125" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
      </node>
      <node id="48156">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
      </node>
      <node id="48153">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48129" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48154" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48155" relation="include">
        </childnode>
        <childnode refid="48156" relation="include">
        </childnode>
        <childnode refid="48157" relation="include">
        </childnode>
        <childnode refid="48159" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48163" relation="include">
        </childnode>
        <childnode refid="48164" relation="include">
        </childnode>
        <childnode refid="48165" relation="include">
        </childnode>
        <childnode refid="48173" relation="include">
        </childnode>
      </node>
      <node id="48102">
        <label>string</label>
      </node>
      <node id="48186">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
        <childnode refid="48178" relation="include">
        </childnode>
      </node>
      <node id="48155">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="48122" relation="include">
        </childnode>
      </node>
      <node id="48097">
        <label>map</label>
      </node>
      <node id="48150">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="48151" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48152" relation="include">
        </childnode>
        <childnode refid="48192" relation="include">
        </childnode>
        <childnode refid="48199" relation="include">
        </childnode>
        <childnode refid="48149" relation="include">
        </childnode>
      </node>
      <node id="48162">
        <label>unordered_set</label>
      </node>
      <node id="48200">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="48152" relation="include">
        </childnode>
        <childnode refid="48131" relation="include">
        </childnode>
        <childnode refid="48201" relation="include">
        </childnode>
        <childnode refid="48203" relation="include">
        </childnode>
        <childnode refid="48205" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
      </node>
      <node id="48198">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="48197">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="48194" relation="include">
        </childnode>
        <childnode refid="48196" relation="include">
        </childnode>
      </node>
      <node id="48135">
        <label>fstream</label>
      </node>
      <node id="48095">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48118" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48144" relation="include">
        </childnode>
        <childnode refid="48149" relation="include">
        </childnode>
      </node>
      <node id="48196">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
        <childnode refid="48194" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48152" relation="include">
        </childnode>
        <childnode refid="48144" relation="include">
        </childnode>
        <childnode refid="48173" relation="include">
        </childnode>
      </node>
      <node id="48205">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
      </node>
      <node id="48125">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="48116" relation="include">
        </childnode>
      </node>
      <node id="48144">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48145" relation="include">
        </childnode>
      </node>
      <node id="48098">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48104" relation="include">
        </childnode>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
      </node>
      <node id="48185">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48165" relation="include">
        </childnode>
      </node>
      <node id="48115">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="48195">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48154" relation="include">
        </childnode>
      </node>
      <node id="48117">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="48174">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48175" relation="include">
        </childnode>
        <childnode refid="48176" relation="include">
        </childnode>
        <childnode refid="48178" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48155" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48179" relation="include">
        </childnode>
        <childnode refid="48180" relation="include">
        </childnode>
      </node>
      <node id="48167">
        <label>sys/types.h</label>
      </node>
      <node id="48149">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
      </node>
      <node id="48142">
        <label>typeinfo</label>
      </node>
      <node id="48105">
        <label>cstdio</label>
      </node>
      <node id="48206">
        <label>AMReX_HypreABec_F.H</label>
        <link refid="AMReX__HypreABec__F_8H"/>
        <childnode refid="48207" relation="include">
        </childnode>
      </node>
      <node id="48177">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="48154" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
      </node>
      <node id="48113">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
      </node>
      <node id="48202">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="48150" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
      </node>
      <node id="48136">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="48137" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48104" relation="include">
        </childnode>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48138" relation="include">
        </childnode>
        <childnode refid="48139" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
      </node>
      <node id="48168">
        <label>unistd.h</label>
      </node>
      <node id="48137">
        <label>stack</label>
      </node>
      <node id="48112">
        <label>vector</label>
      </node>
      <node id="48191">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48164" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
      </node>
      <node id="48114">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="48106" relation="include">
        </childnode>
      </node>
      <node id="48107">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="48101">
        <label>utility</label>
      </node>
      <node id="48099">
        <label>array</label>
      </node>
      <node id="48192">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48147" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48160" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="48193" relation="include">
        </childnode>
        <childnode refid="48191" relation="include">
        </childnode>
        <childnode refid="48172" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48165" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48149" relation="include">
        </childnode>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48194" relation="include">
        </childnode>
        <childnode refid="48196" relation="include">
        </childnode>
        <childnode refid="48164" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48153" relation="include">
        </childnode>
        <childnode refid="48173" relation="include">
        </childnode>
        <childnode refid="48198" relation="include">
        </childnode>
      </node>
      <node id="48152">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48153" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48191" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
      </node>
      <node id="48104">
        <label>sstream</label>
      </node>
      <node id="48199">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="48192" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
      </node>
      <node id="48109">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="48110" relation="include">
        </childnode>
      </node>
      <node id="48123">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
        <childnode refid="48124" relation="include">
        </childnode>
      </node>
      <node id="48176">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48175" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
      </node>
      <node id="48133">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48134" relation="include">
        </childnode>
        <childnode refid="48136" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48142" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48143" relation="include">
        </childnode>
      </node>
      <node id="48165">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48166" relation="include">
        </childnode>
        <childnode refid="48154" relation="include">
        </childnode>
        <childnode refid="48167" relation="include">
        </childnode>
        <childnode refid="48168" relation="include">
        </childnode>
        <childnode refid="48169" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="48172" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
      </node>
      <node id="48158">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
      </node>
      <node id="48131">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
      </node>
      <node id="48124">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
      </node>
      <node id="48169">
        <label>sys/wait.h</label>
      </node>
      <node id="48096">
        <label>iosfwd</label>
      </node>
      <node id="48127">
        <label>cstdlib</label>
      </node>
      <node id="48140">
        <label>cfenv</label>
      </node>
      <node id="48103">
        <label>iostream</label>
      </node>
      <node id="48130">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
      </node>
      <node id="48201">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="48202" relation="include">
        </childnode>
      </node>
      <node id="48132">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="48126" relation="include">
        </childnode>
      </node>
      <node id="48146">
        <label>cstddef</label>
      </node>
      <node id="48171">
        <label>unordered_map</label>
      </node>
      <node id="48193">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48156" relation="include">
        </childnode>
      </node>
      <node id="48173">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48174" relation="include">
        </childnode>
        <childnode refid="48175" relation="include">
        </childnode>
        <childnode refid="48181" relation="include">
        </childnode>
        <childnode refid="48178" relation="include">
        </childnode>
        <childnode refid="48182" relation="include">
        </childnode>
        <childnode refid="48183" relation="include">
        </childnode>
        <childnode refid="48184" relation="include">
        </childnode>
        <childnode refid="48176" relation="include">
        </childnode>
        <childnode refid="48185" relation="include">
        </childnode>
        <childnode refid="48186" relation="include">
        </childnode>
        <childnode refid="48189" relation="include">
        </childnode>
        <childnode refid="48190" relation="include">
        </childnode>
      </node>
      <node id="48129">
        <label>climits</label>
      </node>
      <node id="48190">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="48161">
        <label>mutex</label>
      </node>
      <node id="48166">
        <label>chrono</label>
      </node>
      <node id="48179">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="48139">
        <label>csignal</label>
      </node>
      <node id="48203">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="48204" relation="include">
        </childnode>
        <childnode refid="48192" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
      </node>
      <node id="48093">
        <label>petscksp.h</label>
      </node>
      <node id="48094">
        <label>AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48150" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48200" relation="include">
        </childnode>
      </node>
      <node id="48204">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="48153" relation="include">
        </childnode>
        <childnode refid="48152" relation="include">
        </childnode>
      </node>
      <node id="48159">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48160" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48161" relation="include">
        </childnode>
        <childnode refid="48162" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
      </node>
      <node id="48154">
        <label>type_traits</label>
      </node>
      <node id="48160">
        <label>set</label>
      </node>
      <node id="48157">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="48158" relation="include">
        </childnode>
      </node>
      <node id="48108">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="48183">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="48158" relation="include">
        </childnode>
      </node>
      <node id="48121">
        <label>algorithm</label>
      </node>
      <node id="48178">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48165" relation="include">
        </childnode>
        <childnode refid="48175" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
      </node>
      <node id="48138">
        <label>execinfo.h</label>
      </node>
      <node id="48147">
        <label>cstring</label>
      </node>
      <node id="48145">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48147" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48148" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
      </node>
      <node id="48118">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
      </node>
      <node id="48100">
        <label>memory</label>
      </node>
      <node id="48182">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48147" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="48178" relation="include">
        </childnode>
      </node>
      <node id="48184">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48178" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
      </node>
      <node id="48116">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="48117" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;petscksp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__PETSc_8H" kindref="compound">AMReX_PETSc.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MultiCutFab_8H" kindref="compound">AMReX_MultiCutFab.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EBFabFactory_8H" kindref="compound">AMReX_EBFabFactory.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__HypreABec__F_8H" kindref="compound">AMReX_HypreABec_F.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_HYPRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;_hypre_utilities.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">constexpr<sp/>PetscInt<sp/><ref refid="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" kindref="member">PETScABecLap::regular_stencil_size</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">constexpr<sp/>PetscInt<sp/><ref refid="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" kindref="member">PETScABecLap::eb_stencil_size</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">std::unique_ptr&lt;PETScABecLap&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="namespaceamrex_1abbd0e7692c28626659b75637c2c63528" kindref="member">makePetsc</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>grids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dmap,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom,<sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm_)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;PETScABecLap&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PETScABecLap(grids,<sp/>dmap,<sp/>geom,<sp/>comm_));</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" kindref="member">PETScABecLap::PETScABecLap</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>grids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dmap,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom_,<sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm_)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>comm(comm_),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geom(geom_)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(AMREX_SPACEDIM<sp/>&gt;<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;PETScABecLap:<sp/>1D<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;Real,<sp/>PetscScalar&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;amrex::Real<sp/>!=<sp/>PetscScalar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_HYPRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;HYPRE_Int,<sp/>PetscInt&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;HYPRE_Int<sp/>!=<sp/>PetscInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>acoefs.define(grids,<sp/>dmap,<sp/>ncomp,<sp/>ngrow);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>acoefs.setVal(0.0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ngrow<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BoxArray<sp/>edge_boxes(grids);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_boxes.surroundingNodes(i);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[i].define(edge_boxes,<sp/>dmap,<sp/>ncomp,<sp/>ngrow);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[i].setVal(0.0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>diaginv.define(grids,dmap,ncomp,0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>PETSC_COMM_WORLD<sp/>=<sp/><ref refid="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" kindref="member">comm</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInitialize(0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" kindref="member">PETScABecLap::~PETScABecLap</ref><sp/>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>MatDestroy(&amp;<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>VecDestroy(&amp;<ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>VecDestroy(&amp;<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>KSPDestroy(&amp;<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_factory<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bndry<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maxorder<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscFinalize();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" kindref="member">PETScABecLap::setScalars</ref><sp/>(Real<sp/>sa,<sp/>Real<sp/>sb)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar_a<sp/>=<sp/>sa;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar_b<sp/>=<sp/>sb;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" kindref="member">PETScABecLap::setACoeffs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>alpha)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(acoefs,<sp/>alpha,<sp/>0,<sp/>0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" kindref="member">PETScABecLap::setBCoeffs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;const<sp/>MultiFab*,<sp/>BL_SPACEDIM&gt;&amp;<sp/>beta)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim=0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>idim++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(bcoefs[idim].nGrow(),<sp/>beta[idim]-&gt;nGrow());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(bcoefs[idim],<sp/>*beta[idim],<sp/>0,<sp/>0,<sp/>1,<sp/>ng);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" kindref="member">PETScABecLap::setVerbose</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_verbose)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" kindref="member">verbose</ref><sp/>=<sp/>_verbose;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" kindref="member">PETScABecLap::solve</ref><sp/>(MultiFab&amp;<sp/>soln,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs,<sp/>Real<sp/>rel_tol,<sp/>Real<sp/>abs_tol,<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>bndry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bndry_order)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;PETScABecLap::solve()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>m_bndry<sp/>!=<sp/>&amp;bndry<sp/>||<sp/>m_maxorder<sp/>!=<sp/>max_bndry_order)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bndry<sp/>=<sp/>&amp;bndry;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxorder<sp/>=<sp/>max_bndry_order;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_factory<sp/>=<sp/>&amp;(rhs.Factory());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareSolver();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_factory<sp/>=<sp/>&amp;(rhs.Factory());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" kindref="member">loadVectors</ref>(soln,<sp/>rhs);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>VecAssemblyBegin(<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>VecAssemblyEnd(<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>VecAssemblyBegin(<ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref>);<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>VecAssemblyEnd(<ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref>);<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>KSPSetTolerances(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>,<sp/>rel_tol,<sp/>PETSC_DEFAULT,<sp/>PETSC_DEFAULT,<sp/>max_iter);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>KSPSolve(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>,<sp/><ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref>,<sp/><ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" kindref="member">verbose</ref><sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PetscInt<sp/>niters;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>res;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSPGetIterationNumber(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>,<sp/>&amp;niters);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSPGetResidualNorm(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>,<sp/>&amp;res);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>niters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>PETSc<sp/>Iterations,<sp/>Residual<sp/>Norm<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" kindref="member">getSolution</ref>(soln);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" kindref="member">PETScABecLap::prepareSolver</ref><sp/>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_procs,<sp/>myid;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_size(PETSC_COMM_WORLD,<sp/>&amp;num_procs);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_rank(PETSC_COMM_WORLD,<sp/>&amp;myid);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba<sp/>=<sp/>acoefs.boxArray();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/>=<sp/>acoefs.DistributionMap();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_DEBUG)<sp/>||<sp/>defined(AMREX_TESTING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PetscInt)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ncells_grids<sp/>=<sp/>ba.numPts();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(ncells_grids<sp/>&lt;<sp/>static_cast&lt;long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;PetscInt&gt;::max</ref>()),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PetscInt<sp/>is<sp/>too<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>non-covered<sp/>cells<sp/>do<sp/>we<sp/>have?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ncells_grid.define(ba,dm);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>cell_id.define(ba,dm,1,1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>cell_id_vec.define(ba,dm);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ebfactory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_factory);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(ebfactory)<sp/>?<sp/>&amp;(ebfactory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab*<sp/>vfrac<sp/>=<sp/>(ebfactory)<sp/>?<sp/>&amp;(ebfactory-&gt;getVolFrac())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(ebfactory)<sp/>?<sp/>ebfactory-&gt;getAreaFrac()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fcent<sp/>=<sp/>(ebfactory)<sp/>?<sp/>ebfactory-&gt;getFaceCent()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>barea<sp/>=<sp/>(ebfactory)<sp/>?<sp/>&amp;(ebfactory-&gt;getBndryArea())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bcent<sp/>=<sp/>(ebfactory)<sp/>?<sp/>&amp;(ebfactory-&gt;getBndryCent())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInt<sp/>ncells_proc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(+:ncells_proc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/>BaseFab&lt;PetscInt&gt;<sp/>ifab;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(cell_id);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseFab&lt;PetscInt&gt;&amp;<sp/>cid_fab<sp/>=<sp/>cell_id[mfi];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cid_fab.setVal(std::numeric_limits&lt;PetscInt&gt;::lowest());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells_grid[mfi]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aa928c4a180152a4857751871f38d5f9ef" kindref="member">FabType::singlevalued</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_hpeb_fill_cellid(BL_TO_FORTRAN_BOX(bx),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ncells_grid[mfi],</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(cid_fab),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*flags)[mfi]));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells_proc<sp/>+=<sp/>ncells_grid[mfi];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>npts<sp/>=<sp/>bx.numPts();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells_grid[mfi]<sp/>=<sp/>npts;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells_proc<sp/>+=<sp/>npts;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifab.resize(bx);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PetscInt*<sp/>p<sp/>=<sp/>ifab.dataPtr();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>npts;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cid_fab.copy(ifab,bx);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;PetscInt&gt;<sp/>ncells_allprocs(num_procs);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allgather(&amp;ncells_proc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PetscInt),<sp/>MPI_CHAR,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells_allprocs.data(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PetscInt),<sp/>MPI_CHAR,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PETSC_COMM_WORLD);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInt<sp/>proc_begin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>myid;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proc_begin<sp/>+=<sp/>ncells_allprocs[i];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInt<sp/>ncells_world<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>ncells_allprocs)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncells_world<sp/>+=<sp/>i;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>LayoutData&lt;PetscInt&gt;<sp/>offset(ba,dm);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInt<sp/>proc_end<sp/>=<sp/>proc_begin;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(ncells_grid);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset[mfi]<sp/>=<sp/>proc_end;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proc_end<sp/>+=<sp/>ncells_grid[mfi];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(proc_end<sp/>==<sp/>proc_begin+ncells_proc,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PETScABecLap::prepareSolver:<sp/>how<sp/>did<sp/>this<sp/>happen?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(cell_id,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_id[mfi].plus(offset[mfi],<sp/>mfi.tilebox());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>cell_id.FillBoundary(<ref refid="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" kindref="member">geom</ref>.<ref refid="classamrex_1_1Geometry_1a7b365b1560bb9a31cf49cd55668085cf" kindref="member">periodicity</ref>());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimated<sp/>amount<sp/>of<sp/>block<sp/>diag<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInt<sp/>d_nz<sp/>=<sp/>(eb_stencil_size<sp/>+<sp/>regular_stencil_size)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimated<sp/>amount<sp/>of<sp/>block<sp/>off<sp/>diag<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>PetscInt<sp/>o_nz<sp/><sp/>=<sp/>d_nz<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>MatCreate(PETSC_COMM_WORLD,<sp/>&amp;<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>);<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>MatSetType(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>MATMPIAIJ);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>MatSetSizes(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>ncells_proc,<sp/>ncells_proc,<sp/>ncells_world,<sp/>ncells_world);<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>MatMPIAIJSetPreallocation(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>d_nz,<sp/>NULL,<sp/>o_nz,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Maybe<sp/>an<sp/>over<sp/>estimate<sp/>of<sp/>the<sp/>diag/off<sp/>diag<sp/>#of<sp/>non-zero<sp/>entries,<sp/>so<sp/>we<sp/>turn<sp/>off<sp/>malloc<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>MatSetUp(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>);<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>MatSetOption(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>MAT_NEW_NONZERO_LOCATION_ERR,<sp/>PETSC_FALSE);<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A.SetValues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dx<sp/>=<sp/><ref refid="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" kindref="member">geom</ref>.<ref refid="classamrex_1_1CoordSys_1ade9815d7413549b5bb09000f1c9ede76" kindref="member">CellSize</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bho<sp/>=<sp/>(m_maxorder<sp/>&gt;<sp/>2)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>FArrayBox<sp/>rfab;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseFab&lt;PetscInt&gt;<sp/>ifab;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>FArrayBox<sp/>foo(<ref refid="classamrex_1_1Box_1a706adbfbd33e0269b3c2688ba5b36959" kindref="member">Box::TheUnitBox</ref>());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_eb_dirichlet<sp/>=<sp/>m_eb_b_coeffs<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(acoefs);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PetscInt<sp/>max_stencil_size<sp/>=<sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)<sp/>?</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regular_stencil_size<sp/>:<sp/>eb_stencil_size;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifab.resize(bx,(max_stencil_size+1));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rfab.resize(bx,max_stencil_size);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PetscInt<sp/>nrows<sp/>=<sp/>ncells_grid[mfi];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_id_vec[mfi].resize(nrows);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PetscInt*<sp/>rows<sp/>=<sp/>cell_id_vec[mfi].data();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PetscInt*<sp/>ncols<sp/>=<sp/>ifab.dataPtr(0);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PetscInt*<sp/>cols<sp/><sp/>=<sp/>ifab.dataPtr(1);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/><sp/><sp/>=<sp/>rfab.dataPtr();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;int,AMREX_SPACEDIM*2&gt;<sp/>bctype;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;Real,AMREX_SPACEDIM*2&gt;<sp/>bcl;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;<sp/>Vector&lt;BoundCond&gt;<sp/>&gt;<sp/>&amp;<sp/>bcs_i<sp/>=<sp/>m_bndry-&gt;bndryConds(mfi);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BndryData_1ab4ed85c429f2c9ba26ce7e046590aee0" kindref="member">BndryData::RealTuple</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>bcl_i<sp/>=<sp/>m_bndry-&gt;bndryLocs(mfi);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oit;<sp/>oit;<sp/>oit++)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdir(oit());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctype[cdir]<sp/>=<sp/>bcs_i[cdir][0];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcl[cdir]<sp/><sp/>=<sp/>bcl_i[cdir];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__HypreABec__F_8H_1adc380c0f22c74e3747d21ac70b800de0" kindref="member">amrex_hpijmatrix</ref>(BL_TO_FORTRAN_BOX(bx),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nrows,<sp/>ncols,<sp/>rows,<sp/>cols,<sp/>mat,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(cell_id[mfi]),</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(offset[mfi]),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(diaginv[mfi]),</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(acoefs[mfi]),</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(BL_TO_FORTRAN_ANYD(bcoefs[0][mfi]),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(bcoefs[1][mfi]),</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(bcoefs[2][mfi])),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;scalar_a,<sp/>&amp;scalar_b,<sp/>dx,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctype.data(),<sp/>bcl.data(),<sp/>&amp;bho);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>beb<sp/>=<sp/>(is_eb_dirichlet)<sp/>?<sp/>(*m_eb_b_coeffs)[mfi]<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_hpeb_ijmatrix(BL_TO_FORTRAN_BOX(bx),</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nrows,<sp/>ncols,<sp/>rows,<sp/>cols,<sp/>mat,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(cell_id[mfi]),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(offset[mfi]),</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(diaginv[mfi]),</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(acoefs[mfi]),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(BL_TO_FORTRAN_ANYD(bcoefs[0][mfi]),</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(bcoefs[1][mfi]),</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(bcoefs[2][mfi])),</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*flags)[mfi]),</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*vfrac)[mfi]),</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(BL_TO_FORTRAN_ANYD((*area[0])[mfi]),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*area[1])[mfi]),</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*area[2])[mfi])),</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(BL_TO_FORTRAN_ANYD((*fcent[0])[mfi]),</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*fcent[1])[mfi]),</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*fcent[2])[mfi])),</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*barea)[mfi]),</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*bcent)[mfi]),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(beb),<sp/>&amp;is_eb_dirichlet,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;scalar_a,<sp/>&amp;scalar_b,<sp/>dx,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bctype.data(),<sp/>bcl.data(),<sp/>&amp;bho);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>in<sp/>by<sp/>row!<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matid<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rit<sp/>=<sp/>0;<sp/>rit<sp/>&lt;<sp/>nrows;<sp/>++rit)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatSetValues(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>1,<sp/>&amp;rows[rit],<sp/>ncols[rit],<sp/>&amp;cols[matid],<sp/>&amp;mat[matid],<sp/>INSERT_VALUES);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matid<sp/>+=<sp/>ncols[rit];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>MatAssemblyBegin(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>MAT_FINAL_ASSEMBLY);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>MatAssemblyEnd(<ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/>MAT_FINAL_ASSEMBLY);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>KSPCreate(PETSC_COMM_WORLD,<sp/>&amp;<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>KSPSetOperators(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>,<sp/><ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>,<sp/><ref refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" kindref="member">A</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>preconditioner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>PC<sp/>pc;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>KSPGetPC(<ref refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" kindref="member">solver</ref>,<sp/>&amp;pc);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Classic<sp/>AMG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>PCSetType(pc,<sp/>PCGAMG);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>PCGAMGSetType(pc,<sp/>PCGAMGAGG);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>PCGAMGSetNSmooths(pc,0);<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>PCSetType(pc,<sp/>PCJACOBI);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>not<sp/>using<sp/>command<sp/>line<sp/>options<sp/><sp/><sp/><sp/>KSPSetFromOptions(solver);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>b<sp/>&amp;<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>VecCreateMPI(PETSC_COMM_WORLD,<sp/>ncells_proc,<sp/>ncells_world,<sp/>&amp;<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>VecDuplicate(<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>,<sp/>&amp;<ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" kindref="member">PETScABecLap::loadVectors</ref><sp/>(MultiFab&amp;<sp/>soln,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;PETScABecLap::loadVectors()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ebfactory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_factory);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(ebfactory)<sp/>?<sp/>&amp;(ebfactory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>soln.setVal(0.0);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>FArrayBox<sp/>vecfab,<sp/>rhsfab;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(soln);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PetscInt<sp/>nrows<sp/>=<sp/>ncells_grid[mfi];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>soln<sp/>has<sp/>been<sp/>set<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VecSetValues(<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>,<sp/>nrows,<sp/>cell_id_vec[mfi].data(),<sp/>soln[mfi].dataPtr(),<sp/>INSERT_VALUES);<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.resize(bx);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.copy(rhs[mfi],bx);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.mult(diaginv[mfi]);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox*<sp/>bfab;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfab<sp/>=<sp/>&amp;vecfab;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfab-&gt;resize(bx);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_hpeb_copy_to_vec(BL_TO_FORTRAN_BOX(bx),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(rhsfab),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfab-&gt;dataPtr(),<sp/>&amp;nrows,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*flags)[mfi]));<sp/></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfab<sp/>=<sp/>&amp;rhsfab;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VecSetValues(<ref refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" kindref="member">b</ref>,<sp/>nrows,<sp/>cell_id_vec[mfi].data(),<sp/>bfab-&gt;dataPtr(),<sp/>INSERT_VALUES);<sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><ref refid="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" kindref="member">PETScABecLap::getSolution</ref><sp/>(MultiFab&amp;<sp/>soln)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ebfactory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_factory);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(ebfactory)<sp/>?<sp/>&amp;(ebfactory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>FArrayBox<sp/>rfab;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(soln);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PetscInt<sp/>nrows<sp/>=<sp/>ncells_grid[mfi];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox<sp/>*xfab;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab<sp/>=<sp/>&amp;rfab;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab-&gt;resize(bx);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(soln.nGrow()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab<sp/>=<sp/>&amp;soln[mfi];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab<sp/>=<sp/>&amp;rfab;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab-&gt;resize(bx);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VecGetValues(<ref refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" kindref="member">x</ref>,<sp/>nrows,<sp/>cell_id_vec[mfi].data(),<sp/>xfab-&gt;dataPtr());<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref><sp/>&amp;&amp;<sp/>soln.nGrow()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soln[mfi].copy(*xfab,bx);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_hpeb_copy_from_vec(BL_TO_FORTRAN_BOX(bx),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD(soln[mfi]),</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab-&gt;dataPtr(),<sp/>&amp;nrows,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BL_TO_FORTRAN_ANYD((*flags)[mfi]));<sp/></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp"/>
  </compounddef>
</doxygen>
