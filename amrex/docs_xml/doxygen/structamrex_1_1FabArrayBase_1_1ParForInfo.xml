<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1FabArrayBase_1_1ParForInfo" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FabArrayBase::ParForInfo</compoundname>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1affbe2c289594f992d44abf46129e2a0e" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref></type>
        <definition>IndexType amrex::FabArrayBase::ParForInfo::m_typ</definition>
        <argsstring></argsstring>
        <name>m_typ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="661" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a981dc47643b5d9a4dff3ee9485005d5b" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::FabArrayBase::ParForInfo::m_crse_ratio</definition>
        <argsstring></argsstring>
        <name>m_crse_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="662" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1ab8a2eebe5390786a4fd677cae1cb498f" prot="public" static="no" mutable="no">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt;</type>
        <definition>std::pair&lt;int*,int*&gt; amrex::FabArrayBase::ParForInfo::m_nblocks_x</definition>
        <argsstring></argsstring>
        <name>m_nblocks_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="663" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="663" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a98d095ce41b1efaa09597831dc70101f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>(const FabArrayBase &amp;fa, const IntVect &amp;nghost)</argsstring>
        <name>ParForInfo</name>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref> &amp;</type>
          <declname>fa</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>nghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="650" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a946329b35181c218e019e1b767d42e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::~ParForInfo</definition>
        <argsstring>()</argsstring>
        <name>~ParForInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="651" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a1c4d1455e703ecd30a9fa2317ad46864" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt; const  &amp;</type>
        <definition>std::pair&lt;int*,int*&gt; const&amp; amrex::FabArrayBase::ParForInfo::getBlocks</definition>
        <argsstring>() const</argsstring>
        <name>getBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="653" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="653" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a58d5f8040e66a5f6e09e5687f68eb4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>()=delete</argsstring>
        <name>ParForInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="655" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a0724d01468d2b2a8482208f62e4e1147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>(ParForInfo const &amp;)=delete</argsstring>
        <name>ParForInfo</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="656" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a2f438dd87f9734ba850f88dbec26795c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>(ParForInfo &amp;&amp;)=delete</argsstring>
        <name>ParForInfo</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="657" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a75e2960ee0458eb71dd4fd91ca728fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayBase::ParForInfo::operator=</definition>
        <argsstring>(ParForInfo const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="658" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1ac7f708582ac16f85339579a6b67776de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayBase::ParForInfo::operator=</definition>
        <argsstring>(ParForInfo &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="659" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>For ParallelFor(FabArray) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="649" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="648" bodyend="664"/>
    <listofallmembers>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a1c4d1455e703ecd30a9fa2317ad46864" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>getBlocks</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a981dc47643b5d9a4dff3ee9485005d5b" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_crse_ratio</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1ab8a2eebe5390786a4fd677cae1cb498f" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_nblocks_x</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1affbe2c289594f992d44abf46129e2a0e" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_typ</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a75e2960ee0458eb71dd4fd91ca728fa6" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>operator=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1ac7f708582ac16f85339579a6b67776de" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>operator=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a98d095ce41b1efaa09597831dc70101f" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a58d5f8040e66a5f6e09e5687f68eb4ec" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a0724d01468d2b2a8482208f62e4e1147" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a2f438dd87f9734ba850f88dbec26795c" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a946329b35181c218e019e1b767d42e95" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>~ParForInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
