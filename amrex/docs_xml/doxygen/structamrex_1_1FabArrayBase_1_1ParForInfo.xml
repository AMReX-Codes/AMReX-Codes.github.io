<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1FabArrayBase_1_1ParForInfo" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FabArrayBase::ParForInfo</compoundname>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a24bf518e21de06c34d5ccafe0b1ac244" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1BATransformer" kindref="compound">BATransformer</ref></type>
        <definition>BATransformer amrex::FabArrayBase::ParForInfo::m_bat</definition>
        <argsstring></argsstring>
        <name>m_bat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="654" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1aa6a101ddf89df501b82f6fcc9e91ebd7" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::FabArrayBase::ParForInfo::m_ng</definition>
        <argsstring></argsstring>
        <name>m_ng</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="655" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a42964fcfc71605c366a9881334b4b44e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FabArrayBase::ParForInfo::m_nthreads</definition>
        <argsstring></argsstring>
        <name>m_nthreads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="656" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1ab8a2eebe5390786a4fd677cae1cb498f" prot="public" static="no" mutable="no">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt;</type>
        <definition>std::pair&lt;int*,int*&gt; amrex::FabArrayBase::ParForInfo::m_nblocks_x</definition>
        <argsstring></argsstring>
        <name>m_nblocks_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="657" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1aee7174df98e72b2c9ce06f0b229e0840" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> *</type>
        <definition>Box* amrex::FabArrayBase::ParForInfo::m_boxes</definition>
        <argsstring></argsstring>
        <name>m_boxes</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="658" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a61018a635a080b4ef9d94852423668ae" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::FabArrayBase::ParForInfo::m_hp</definition>
        <argsstring></argsstring>
        <name>m_hp</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="659" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1ad1cd3540aa647e1a370450d70fac6176" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::FabArrayBase::ParForInfo::m_dp</definition>
        <argsstring></argsstring>
        <name>m_dp</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="660" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="660" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1aecad54aa11e76f8bd774ca2d2c4580c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>(const FabArrayBase &amp;fa, const IntVect &amp;nghost, int nthreads)</argsstring>
        <name>ParForInfo</name>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref> &amp;</type>
          <declname>fa</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nthreads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="642" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a946329b35181c218e019e1b767d42e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::~ParForInfo</definition>
        <argsstring>()</argsstring>
        <name>~ParForInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="643" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a1c4d1455e703ecd30a9fa2317ad46864" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt; const  &amp;</type>
        <definition>std::pair&lt;int*,int*&gt; const&amp; amrex::FabArrayBase::ParForInfo::getBlocks</definition>
        <argsstring>() const</argsstring>
        <name>getBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="645" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="645" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a04c88b0fe4e9a12cd0886456d9a34a1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const  *</type>
        <definition>Box const* amrex::FabArrayBase::ParForInfo::getBoxes</definition>
        <argsstring>() const</argsstring>
        <name>getBoxes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="646" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="646" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a58d5f8040e66a5f6e09e5687f68eb4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>()=delete</argsstring>
        <name>ParForInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="648" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a0724d01468d2b2a8482208f62e4e1147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>(ParForInfo const &amp;)=delete</argsstring>
        <name>ParForInfo</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="649" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a2f438dd87f9734ba850f88dbec26795c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::ParForInfo::ParForInfo</definition>
        <argsstring>(ParForInfo &amp;&amp;)=delete</argsstring>
        <name>ParForInfo</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="650" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1a75e2960ee0458eb71dd4fd91ca728fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayBase::ParForInfo::operator=</definition>
        <argsstring>(ParForInfo const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="651" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1ParForInfo_1ac7f708582ac16f85339579a6b67776de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayBase::ParForInfo::operator=</definition>
        <argsstring>(ParForInfo &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1FabArrayBase_1_1ParForInfo" kindref="compound">ParForInfo</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="652" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>For ParallelFor(FabArray) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="2">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="5">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="2" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="640" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="641" bodyend="661"/>
    <listofallmembers>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a1c4d1455e703ecd30a9fa2317ad46864" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>getBlocks</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a04c88b0fe4e9a12cd0886456d9a34a1c" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>getBoxes</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a24bf518e21de06c34d5ccafe0b1ac244" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_bat</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1aee7174df98e72b2c9ce06f0b229e0840" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_boxes</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1ad1cd3540aa647e1a370450d70fac6176" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_dp</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a61018a635a080b4ef9d94852423668ae" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_hp</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1ab8a2eebe5390786a4fd677cae1cb498f" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_nblocks_x</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1aa6a101ddf89df501b82f6fcc9e91ebd7" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_ng</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a42964fcfc71605c366a9881334b4b44e" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>m_nthreads</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a75e2960ee0458eb71dd4fd91ca728fa6" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>operator=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1ac7f708582ac16f85339579a6b67776de" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>operator=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1aecad54aa11e76f8bd774ca2d2c4580c7" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a58d5f8040e66a5f6e09e5687f68eb4ec" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a0724d01468d2b2a8482208f62e4e1147" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a2f438dd87f9734ba850f88dbec26795c" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>ParForInfo</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1ParForInfo_1a946329b35181c218e019e1b767d42e95" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::ParForInfo</scope><name>~ParForInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
