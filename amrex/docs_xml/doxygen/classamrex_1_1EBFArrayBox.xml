<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EBFArrayBox" kind="class" language="C++" prot="public">
    <compoundname>amrex::EBFArrayBox</compoundname>
    <basecompoundref refid="classamrex_1_1FArrayBox" prot="public" virt="non-virtual">amrex::FArrayBox</basecompoundref>
    <includes refid="AMReX__EBFArrayBox_8H" local="no">AMReX_EBFArrayBox.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EBFArrayBox_1adb16573267dc8b4b6dca43cc2f4d23d9" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> *</type>
        <definition>const EBCellFlagFab* amrex::EBFArrayBox::m_ebcellflag</definition>
        <argsstring></argsstring>
        <name>m_ebcellflag</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="69" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBFArrayBox_1aeaf68dbc1a5bddd5bacfa81efe966e0c" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1EBFArrayBoxFactory" kindref="compound">EBFArrayBoxFactory</ref> *</type>
        <definition>const EBFArrayBoxFactory* amrex::EBFArrayBox::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="70" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBFArrayBox_1ade5ede9a60831d6a2bc97125cb11f18a" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EBFArrayBox::m_box_index</definition>
        <argsstring></argsstring>
        <name>m_box_index</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="71" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1aa9eec6391ebe9040da491ae57b41407b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::EBFArrayBox</definition>
        <argsstring>()</argsstring>
        <name>EBFArrayBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="16" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1af71cb8c5382b2d5b83150439f88f99b9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::EBFArrayBox</definition>
        <argsstring>(Arena *ar)</argsstring>
        <name>EBFArrayBox</name>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="17" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1ab8aea0629538f258d11b34aacb04ad64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::EBFArrayBox</definition>
        <argsstring>(const EBCellFlagFab &amp;ebflag, const Box &amp;bx, int ncomps, Arena *ar, const EBFArrayBoxFactory *factory=nullptr, int box_index=-1)</argsstring>
        <name>EBFArrayBox</name>
        <param>
          <type>const <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
          <declname>ebflag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomps</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1EBFArrayBoxFactory" kindref="compound">EBFArrayBoxFactory</ref> *</type>
          <declname>factory</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>box_index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="17" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1ab04dcbd3b434a8553425a005ef78ec04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::EBFArrayBox</definition>
        <argsstring>(EBFArrayBox const &amp;rhs, MakeType make_type, int scomp, int ncomp)</argsstring>
        <name>EBFArrayBox</name>
        <param>
          <type><ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6" kindref="member">MakeType</ref></type>
          <declname>make_type</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="20" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="29" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a79ae85b92db76dc260c707b7df356fe2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::EBFArrayBox</definition>
        <argsstring>(EBFArrayBox &amp;&amp;rhs) noexcept=default</argsstring>
        <name>EBFArrayBox</name>
        <param>
          <type><ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="22" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a00d1e822adbb3114a5b7ae5b81f5015e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::EBFArrayBox</definition>
        <argsstring>(const EBFArrayBox &amp;)=delete</argsstring>
        <name>EBFArrayBox</name>
        <param>
          <type>const <ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1aadbb1cf2a8db86c73af536b3fff555ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> &amp;</type>
        <definition>EBFArrayBox&amp; amrex::EBFArrayBox::operator=</definition>
        <argsstring>(const EBFArrayBox &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="24" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a0a545ba6887dd563e4e98e017e8e9358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> &amp;</type>
        <definition>EBFArrayBox&amp; amrex::EBFArrayBox::operator=</definition>
        <argsstring>(EBFArrayBox &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EBFArrayBox" kindref="compound">EBFArrayBox</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="25" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a655b9f308a0fed9d3a680828a63a976b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBFArrayBox::~EBFArrayBox</definition>
        <argsstring>() override</argsstring>
        <name>~EBFArrayBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a165e4657241e0de7cb54f2d4e44a46b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &amp;</type>
        <definition>const EBCellFlagFab&amp; amrex::EBFArrayBox::getEBCellFlagFab</definition>
        <argsstring>() const</argsstring>
        <name>getEBCellFlagFab</name>
        <briefdescription>
<para>Get <ref refid="classamrex_1_1EBCellFlag" kindref="compound">EBCellFlag</ref> Fab. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="30" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1af20bd253ed486ac97c8345b9623f7b33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>const FArrayBox * amrex::EBFArrayBox::getLevelSetData</definition>
        <argsstring>() const</argsstring>
        <name>getLevelSetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to levelset data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="34" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a664f3aa3e8611a56d1919072c26b7331" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>const FArrayBox * amrex::EBFArrayBox::getVolFracData</definition>
        <argsstring>() const</argsstring>
        <name>getVolFracData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to volume fraction data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="38" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a85bc6b6f08478b3041144fe1b7555971" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>const FArrayBox * amrex::EBFArrayBox::getCentroidData</definition>
        <argsstring>() const</argsstring>
        <name>getCentroidData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to volume centroid data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="42" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="63" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1ac9f449fc08c6c03d216d17902831554f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>const FArrayBox * amrex::EBFArrayBox::getBndryCentData</definition>
        <argsstring>() const</argsstring>
        <name>getBndryCentData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to boundary centroid data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="46" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="78" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a558b8878291849a622333ca591a33f3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>const FArrayBox * amrex::EBFArrayBox::getBndryNormalData</definition>
        <argsstring>() const</argsstring>
        <name>getBndryNormalData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to boundary normal data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="50" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="93" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1ac2c6512ca162a98047caf8c8ae94dc01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>const FArrayBox * amrex::EBFArrayBox::getBndryAreaData</definition>
        <argsstring>() const</argsstring>
        <name>getBndryAreaData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to boundary area data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="54" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="108" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1a5dc3cfcc602540d1f849106c2dee9d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt; const FArrayBox *, AMREX_SPACEDIM &gt; amrex::EBFArrayBox::getAreaFracData</definition>
        <argsstring>() const</argsstring>
        <name>getAreaFracData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get pointers to area fraction data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="58" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1afd43559f014a6db15c12483770f81ebc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt; const FArrayBox *, AMREX_SPACEDIM &gt; amrex::EBFArrayBox::getFaceCentData</definition>
        <argsstring>() const</argsstring>
        <name>getFaceCentData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get pointers to face centroid data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="62" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="140" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBFArrayBox_1ac3a077f49922cc230006f9cec5e9883d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt; const FArrayBox *, AMREX_SPACEDIM &gt; amrex::EBFArrayBox::getEdgeCentData</definition>
        <argsstring>() const</argsstring>
        <name>getEdgeCentData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get pointers to edge centroid data if available. The return value could be nullptr if not available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="66" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp" bodystart="157" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::EBFArrayBox</label>
        <link refid="classamrex_1_1EBFArrayBox"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
      </node>
      <node id="2">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="56" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="6">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="42">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="15" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="24">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="25" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="45" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>K</label>
      </node>
      <node id="43">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="14">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="14" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>T</label>
      </node>
      <node id="1">
        <label>amrex::EBFArrayBox</label>
        <link refid="classamrex_1_1EBFArrayBox"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_ebcellflag</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="17">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="8">
        <label>Real</label>
      </node>
      <node id="80">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="79">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="26">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::EBCellFlagFab::NumCells</label>
        <link refid="structamrex_1_1EBCellFlagFab_1_1NumCells"/>
      </node>
      <node id="75">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="48">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="33">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="34" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="6" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="59" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="47">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="14" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="37">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="38" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::EBFArrayBoxFactory</label>
        <link refid="classamrex_1_1EBFArrayBoxFactory"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_ebdc</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::EB2::MultiGFab</label>
        <link refid="classamrex_1_1EB2_1_1MultiGFab"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="38">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="39" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="2" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="62">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="34" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="65" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="56" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>std::shared_ptr&lt; amrex::EBDataCollection &gt;</label>
      </node>
      <node id="21">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="8" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="14" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::LayoutData&lt; GFab &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::EBCellFlagFab &gt; &gt;</label>
      </node>
      <node id="65">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="51">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="52" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="19">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="8" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::map&lt; amrex::Box, amrex::EBCellFlagFab::NumCells &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="52">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="53" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="82">
        <label>std::vector&lt; amrex::EBCellFlagFab * &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="28">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="29" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="46" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="54">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="67">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="30">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typemap</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="10">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::EB2::Level</label>
        <link refid="classamrex_1_1EB2_1_1Level"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_bndryarea</edgelabel>
          <edgelabel>m_bndrycent</edgelabel>
          <edgelabel>m_bndrynorm</edgelabel>
          <edgelabel>m_centroid</edgelabel>
          <edgelabel>m_levelset</edgelabel>
          <edgelabel>m_volfrac</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>m_mgf</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>m_cellflag</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>m_covered_grids</edgelabel>
          <edgelabel>m_grids</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="47" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="36" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="33" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="56">
        <label>std::string</label>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" line="12" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H" bodystart="14" bodyend="72"/>
    <listofallmembers>
      <member refid="classamrex_1_1BaseFab_1af827e9a5df2baf21d45239e49567f4c6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>abs</name></member>
      <member refid="classamrex_1_1BaseFab_1ae730734f6c370cc53bdfb51efe618033" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>abs</name></member>
      <member refid="classamrex_1_1BaseFab_1a4f6421e1246d3830573c1865f1138f60" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>abs</name></member>
      <member refid="classamrex_1_1BaseFab_1a220803f71ba80b6deab7975fc4da9d03" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>addFromMem</name></member>
      <member refid="classamrex_1_1BaseFab_1a2b1536046ed1e2201f48955b47243327" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>addproduct</name></member>
      <member refid="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>alloc</name></member>
      <member refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>arena</name></member>
      <member refid="classamrex_1_1BaseFab_1a757e00b16f837e3d092aeb625a9dfa6a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a5d54525d2d54f617a0072900458729e1" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a56490d543f03319544cb296ea429c414" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a587f263a697ccd87db4db2b7d6f42c87" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a972c0b6366edff5f72a8b6777ac8ac45" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1ad4a674eebc8c2d3913f2febac4d37f84" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>array</name></member>
      <member refid="classamrex_1_1BaseFab_1a3dc96c01f9f3d24110fa50e53e93e1b0" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1a129c6d062f25b04c99aeef00c129fde8" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1aa2775774e0005f2e3d56acc4d23c44a1" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1afa1f8f3a9048c2da47559555e5cc7e43" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>atomicAdd</name></member>
      <member refid="classamrex_1_1BaseFab_1ae732fa5c1fb9495b98ecce97ccd1be95" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1ae5d9786facded55bfce06cc443594cab" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a83d88e02757dac7e30b2ac7a13020b22" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1aa42c6cb505873cad1b9c9de64a20c407" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a4b890373aa053ba5cd3aae0bf5483c1c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a8553c8f3915ded4cacfba0c490b98bc5" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a53ab00ff398b5beb473bf85810189532" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a2fe573448f0463cc140a1452a9510eb0" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a27f1fbad6aff0f97e0291664ab11a4e4" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a8adcfedaa62f241b766513fd9dd3f830" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a2689fd4a972a4121943d51dc61eee166" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1a6b0fa577ec8190137939f503041e7bf7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1aa2ce65c438db70645899b1d0c09f2455" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>BaseFab</name></member>
      <member refid="classamrex_1_1BaseFab_1acdde994980673c595f2348d982aeb70e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>bigEnd</name></member>
      <member refid="classamrex_1_1BaseFab_1aa288a917ca5613e3e984c58a7975a89d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>box</name></member>
      <member refid="classamrex_1_1BaseFab_1ae428e6a2645141dd817c288331575f26" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>clear</name></member>
      <member refid="classamrex_1_1BaseFab_1a25ed9ead805e064c8f9dbe34ebbf3a95" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>const_array</name></member>
      <member refid="classamrex_1_1BaseFab_1ae5723c1af2b115b682869e760b1033a0" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>const_array</name></member>
      <member refid="classamrex_1_1BaseFab_1aa3049c7941d487849f2945f2c3447a1e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>const_array</name></member>
      <member refid="classamrex_1_1BaseFab_1a40dca3a0efea6d6ac5e3103e34b1f3e3" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains</name></member>
      <member refid="classamrex_1_1BaseFab_1a9121f1816f016bc765e3acea392169b8" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains</name></member>
      <member refid="classamrex_1_1FArrayBox_1afc7bd5e6829479b3bfef8639f9b92b20" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_inf</name></member>
      <member refid="classamrex_1_1FArrayBox_1a967f0fbf0fb2a166a2684f0201259d60" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_inf</name></member>
      <member refid="classamrex_1_1FArrayBox_1a230b8eb850e53e63895352fd7bd56f86" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_inf</name></member>
      <member refid="classamrex_1_1FArrayBox_1a377a77faccd537b045751bcabc616cb5" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_inf</name></member>
      <member refid="classamrex_1_1FArrayBox_1ab3973e1dec95800442b4189d6356d3fb" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_nan</name></member>
      <member refid="classamrex_1_1FArrayBox_1ac4da37536afceab9ccb36e8d858cdbbd" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_nan</name></member>
      <member refid="classamrex_1_1FArrayBox_1aca25a0734d90a918f9d2fe881dd87a69" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_nan</name></member>
      <member refid="classamrex_1_1FArrayBox_1ae5d7c7d7b6df9a24867d84d984d5ca0d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>contains_nan</name></member>
      <member refid="classamrex_1_1BaseFab_1a977d18ce746c0f9cdaa0c30d24dafc38" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a2d461c954f07f4f27315007cd6142897" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a6713c5a40c37784163c28eed7db1d3ae" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a2780bcacf15ff9c08602ddc8fd279434" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a08ef88a8fe68f56114c7a647c04772bd" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copy</name></member>
      <member refid="classamrex_1_1BaseFab_1a5e3dbb577a99bb74375d2e5cde801529" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copyFromMem</name></member>
      <member refid="classamrex_1_1BaseFab_1a1e8c677d4f03b86f4a6e1d1caac46b02" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>copyToMem</name></member>
      <member refid="structamrex_1_1DataAllocator_1a37c4b92bbff76372bd67c006198e400f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>DataAllocator</name></member>
      <member refid="structamrex_1_1DataAllocator_1ad2f91458d09a1484857061ff235e73bd" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>DataAllocator</name></member>
      <member refid="classamrex_1_1BaseFab_1a5c99c1592a80ba46ab6faf9929773f8d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a94be04911ba375a16941883fe1c1d247" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1af77c50de9cd0e8ec9dbdce27abfa1da4" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a118fb28186b8af61473a0013e2499484" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>define</name></member>
      <member refid="classamrex_1_1BaseFab_1a9d0d2a00cc4e3fa23e019b24016b912b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a3a8094b23b240faf25973fea41ef0ef0" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a244a45e4bf0eba8069ab27cfe5feed67" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a755fa68b5cfdd5fadd88a234766c271c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a8418cc9903556d471e1d637cb49eef1d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a0f2ae3ab88fb6542eb2c11990f29ef86" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a9541126c9461236acb64d2f0b32a1781" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1ae979617b60ec6cd4d9b5d14dd512b3c2" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1BaseFab_1acb13bca4e903870c960bbe7cc0880cec" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>divide</name></member>
      <member refid="classamrex_1_1FArrayBox_1ab0b477e69a1fe773b7467810181a3056" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>do_initval</name></member>
      <member refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>domain</name></member>
      <member refid="classamrex_1_1BaseFab_1a9cd1fd0c353673dae4a5138f5ea79f1e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1a6e60b15550e6ba0b5bf63c3ff825232a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1ab78500dde194e48f6e5c50593a7c678a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1a7dcaef3f1c196a9b0fd30d0cda3d6f8e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dot</name></member>
      <member refid="classamrex_1_1BaseFab_1ae238c88f700fceb3525dccccc6888135" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dotmask</name></member>
      <member refid="classamrex_1_1BaseFab_1a8b0abe9713e52fd03cfb469278dc223c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dotmask</name></member>
      <member refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>dptr</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1aa9eec6391ebe9040da491ae57b41407b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>EBFArrayBox</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1af71cb8c5382b2d5b83150439f88f99b9" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>EBFArrayBox</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1ab8aea0629538f258d11b34aacb04ad64" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>EBFArrayBox</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1ab04dcbd3b434a8553425a005ef78ec04" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>EBFArrayBox</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a79ae85b92db76dc260c707b7df356fe2" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>EBFArrayBox</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a00d1e822adbb3114a5b7ae5b81f5015e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>EBFArrayBox</name></member>
      <member refid="classamrex_1_1BaseFab_1ac5a36d719054f74a00bfc52e10ec9918" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>elixir</name></member>
      <member refid="classamrex_1_1FArrayBox_1a7b3c6612330474e7db6e4f6ff9d4f380" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>fabio</name></member>
      <member refid="classamrex_1_1FArrayBox_1ab84a91551a8302740bd50699504f22c2" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a374b94f1d571d67c7bc7025346824f1a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a78cb311711d0a1b9b479d66d71fa1edf" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a3c853d41aecaee21ed1f5ffab2ebed76" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1aa2977b85f283b49740400daed8ffe97a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1afbb6de44f26acc8ae2fa06e16571922f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a46be1bc294541cf9d677f487baa07d68" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a77288fec7b52f0234da8cda2d0656d76" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a95a6bf59ff82ac52c34c7e72890fddc5" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a62129c1d812b781246c65abed1a6a608" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a946a5c8f7f0b0e4a9021e542c7b39c2f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1ae822ed6d1bc48190941617842d212243" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a862dcdbd4fbb34b292075f2c7bf44428" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>FArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1a0e43c0beef959593d4253805a22b6abc" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1FArrayBox_1a8cb9b648353fe9b5fb90cdfccf5b0c89" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>format</name></member>
      <member refid="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>free</name></member>
      <member refid="classamrex_1_1FArrayBox_1af073981013bb7c213dd103b9935f9809" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>get_do_initval</name></member>
      <member refid="classamrex_1_1FArrayBox_1aab5bd155e6cda0d5f6b61d1820ae5a8f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>get_initval</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a5dc3cfcc602540d1f849106c2dee9d14" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getAreaFracData</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1ac2c6512ca162a98047caf8c8ae94dc01" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getBndryAreaData</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1ac9f449fc08c6c03d216d17902831554f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getBndryCentData</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a558b8878291849a622333ca591a33f3c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getBndryNormalData</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a85bc6b6f08478b3041144fe1b7555971" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getCentroidData</name></member>
      <member refid="classamrex_1_1FArrayBox_1a2d03e4cd237ad307255e8959098eef66" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getClassName</name></member>
      <member refid="classamrex_1_1FArrayBox_1aa4e648cc663a2a1cdf7aa465caf19579" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getDataDescriptor</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a165e4657241e0de7cb54f2d4e44a46b5" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getEBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1ac3a077f49922cc230006f9cec5e9883d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getEdgeCentData</name></member>
      <member refid="classamrex_1_1FArrayBox_1a67fb916342e7c929641dbde731b8aa1b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getFABio</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1afd43559f014a6db15c12483770f81ebc" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getFaceCentData</name></member>
      <member refid="classamrex_1_1FArrayBox_1aba9fe48668a79af0c5805d77472c467d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getFormat</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1af20bd253ed486ac97c8345b9623f7b33" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getLevelSetData</name></member>
      <member refid="classamrex_1_1FArrayBox_1aaa904e14fc1335783b62f47ad001348e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getOrdering</name></member>
      <member refid="classamrex_1_1FArrayBox_1a35de13164243364f3ed296772f0b750a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getPrecision</name></member>
      <member refid="classamrex_1_1FArrayBox_1a3e62ab0dcf6c751e94e34f25bcc3c50b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getType</name></member>
      <member refid="classamrex_1_1BaseFab_1ac195a2bbff03a7f02e30788342473d18" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getVal</name></member>
      <member refid="classamrex_1_1BaseFab_1af8f8e7b8b678678f74f235b0ebdeed9f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getVal</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a664f3aa3e8611a56d1919072c26b7331" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>getVolFracData</name></member>
      <member refid="classamrex_1_1BaseFab_1ac527239df242562c1cd6d05106299041" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>hiVect</name></member>
      <member refid="classamrex_1_1BaseFab_1a4d9eb1a365feee57e8b622f92f42a676" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>indexFromValue</name></member>
      <member refid="classamrex_1_1FArrayBox_1af56588e4621fc35eae763fcb44ad4633" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>init_snan</name></member>
      <member refid="classamrex_1_1FArrayBox_1a35b1135bdf17ab4f4022cf60745ade37" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1FArrayBox_1a2d4b7df27f35926ab4a1377d5864aed8" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>initialized</name></member>
      <member refid="classamrex_1_1FArrayBox_1a6657471e6437a4acab5413ea8874ff39" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>initval</name></member>
      <member refid="classamrex_1_1FArrayBox_1a0950587ec6e53ece5805ffb5ab71cf60" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>initVal</name></member>
      <member refid="classamrex_1_1BaseFab_1ad98a82bccd4fb83e293321c508cbf8e3" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1ad7393f53147c97d7e2ce59bacb6e90ea" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1adc3c76cad27b8ebcac50f472ee28086a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1a3d7a22be04a9f14666b5b6dea43c7aab" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>invert</name></member>
      <member refid="classamrex_1_1BaseFab_1a4342e997e189d6fe00b281776f9400e6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>isAllocated</name></member>
      <member refid="classamrex_1_1BaseFab_1ad69dbb55d91cc9784e3f9ee622c53d91" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>length</name></member>
      <member refid="classamrex_1_1BaseFab_1a34dd0c1642740071a0bf70d986e9f52a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>linComb</name></member>
      <member refid="classamrex_1_1BaseFab_1af49fda526f1f93ba846db273906cd29b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>linInterp</name></member>
      <member refid="classamrex_1_1BaseFab_1a666cac025454c374a1e2db655b133aa9" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>linInterp</name></member>
      <member refid="classamrex_1_1BaseFab_1a5598302356ad5c6af7482fc392c8bb8b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>loVect</name></member>
      <member refid="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>m_arena</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1ade5ede9a60831d6a2bc97125cb11f18a" prot="private" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>m_box_index</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1adb16573267dc8b4b6dca43cc2f4d23d9" prot="private" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>m_ebcellflag</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1aeaf68dbc1a5bddd5bacfa81efe966e0c" prot="private" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1FArrayBox_1a84a692c3807a4e2ab439841c70b1f004" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>m_type</name></member>
      <member refid="classamrex_1_1BaseFab_1a3e4a9401acaa07ed7747907ccaa18a8e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maskEQ</name></member>
      <member refid="classamrex_1_1BaseFab_1a02d3c8e98d8d4b237eabc0ce1756fc33" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maskGE</name></member>
      <member refid="classamrex_1_1BaseFab_1ae1a6b0d582503d0257d5927534619526" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maskGT</name></member>
      <member refid="classamrex_1_1BaseFab_1a51c1b72c4a3a04fe392247242467d27f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maskLE</name></member>
      <member refid="classamrex_1_1BaseFab_1a2daea766f3544b7e920b9ca9b3cb870e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maskLT</name></member>
      <member refid="classamrex_1_1BaseFab_1a976274fa8a099dc6ccd77fb63a3a0650" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>max</name></member>
      <member refid="classamrex_1_1BaseFab_1a939ad0219e8ede03540eadef78ba7cbb" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>max</name></member>
      <member refid="classamrex_1_1BaseFab_1a776fd1a3ef930d751d3399d380850f1c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maxabs</name></member>
      <member refid="classamrex_1_1BaseFab_1a67147a4e532939aaab59f3d83ae93361" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maxabs</name></member>
      <member refid="classamrex_1_1BaseFab_1ad84e4433b485caf6c9cf76d87a04f4a0" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maxIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1ac69c6e4896f54d8ea5ca9fe1114c64f6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maxIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1ac0fa2c605be671fb2f9d97dfe38cc6c8" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>maxIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1aeb7994e6d44cea18d2b9a0b92f641b64" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>min</name></member>
      <member refid="classamrex_1_1BaseFab_1a6a67cc88f93b200472fba8ee3ba8263c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>min</name></member>
      <member refid="classamrex_1_1BaseFab_1af53146ccb7317b937c89ebd12e19efd5" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1a8d45160a5d6cf9f1329ca8b38b1aa6c7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1af6d66895d4ba3fe45a6ba4705521e282" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minIndex</name></member>
      <member refid="classamrex_1_1BaseFab_1aabf9a731c176ed69472b109aa42e967b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minmax</name></member>
      <member refid="classamrex_1_1BaseFab_1a1348ff398baf6713f6bbe44bcc1115a1" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minmax</name></member>
      <member refid="classamrex_1_1BaseFab_1a6d0bff982fafed20210cfdd290c51922" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1aa4e7563980826bc199c9f0189b6c9b26" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a4f4c18fd897e957e12ccb7597d82764b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a2cafb2b37fd53db25b7ae67bc8e3eecd" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a841032e4c22463cfc3acc7f6e383384d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a5f90e282b02c4e55e3568396ae439235" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a18ae3e9b17daaf81946b264928babfb6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>minus</name></member>
      <member refid="classamrex_1_1BaseFab_1a3d568e9a805b719ccf750d68e9f0b563" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a77c23670c3820173af82382063a8525d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a72337bc09214fce473bf77e724ef9e93" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a986a4f2008cd82f26730291a78bd5d28" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a7df0d47826c9b346e9a5df0ff0a32666" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1ac7dbe04481b0bd6c6f532fc2d06f95d1" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a30f381aceead942f8c703b4c5bba99ab" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a4e596c1fdc1cdef0bfd6a60cd3d3b81a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a31b9d3f58d3529cc2ac64dab553eb294" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>mult</name></member>
      <member refid="classamrex_1_1BaseFab_1a5be7479b2a46eaefb945b066cb21de8a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>nBytes</name></member>
      <member refid="classamrex_1_1BaseFab_1a32e96a4bbc00ecec58d2763ca697bea6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>nBytes</name></member>
      <member refid="classamrex_1_1BaseFab_1a267006cc0717e9dfbcbd22afc1c89d8c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>nBytesOwned</name></member>
      <member refid="classamrex_1_1BaseFab_1ae16c6f70417dc8f84e2196afe27b2b15" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>nComp</name></member>
      <member refid="classamrex_1_1BaseFab_1aa5764439bdbcc0d060f92f5a6ca41fab" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>nCompPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1a2d65dc4995843b8c46bc97984cf13749" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1acf4c056e581c461ab116dd7974f82e3a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1a5f348c3d0404aa11bb71c5252cc6efe9" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1aaf765bafa403ca72a2f136a6efff2b14" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>negate</name></member>
      <member refid="classamrex_1_1BaseFab_1aa1282391dd2449fab71d2524cf0f74a7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>norm</name></member>
      <member refid="classamrex_1_1BaseFab_1a53bfa690678b7a44a6f1b8b736db232b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>norm</name></member>
      <member refid="classamrex_1_1BaseFab_1a0cfed6fcd597be27e9d069f9e7a3d18b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>norminfmask</name></member>
      <member refid="classamrex_1_1BaseFab_1ac6480baad7fdde57bec1e2ad32387300" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>numPts</name></member>
      <member refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>nvar</name></member>
      <member refid="classamrex_1_1BaseFab_1ad76ae6115f341053b2eb94affc5e3eee" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1ac1a408be29fc4bfc85971ac414c165ee" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1a10931b31715309bfb452dc2c7fa662df" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1a3427e5ed98498ff54da5f75d22923f5f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator()</name></member>
      <member refid="classamrex_1_1BaseFab_1a397a547f55264106c669f9ecbecf8897" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator*=</name></member>
      <member refid="classamrex_1_1BaseFab_1a7433945e87d1450ad2aedd284a1af52b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator*=</name></member>
      <member refid="classamrex_1_1BaseFab_1a7c31f46231419fb8c062439a11694b03" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1BaseFab_1a0e5226efe7308e09b4464b4ae91aa6ff" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1BaseFab_1a48a7d3febdafd19ca651c5eed88147cd" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator-=</name></member>
      <member refid="classamrex_1_1BaseFab_1a7bf50c91d4dc7df9c983947f84da3dfb" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator-=</name></member>
      <member refid="classamrex_1_1BaseFab_1aaa2bf19636336c318059fd497e35c023" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator/=</name></member>
      <member refid="classamrex_1_1BaseFab_1ae2402a734250fad951d41376d469365a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator/=</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1aadbb1cf2a8db86c73af536b3fff555ab" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a0a545ba6887dd563e4e98e017e8e9358" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FArrayBox_1a9724df1a42e1fbf0956061d68b417087" prot="public" virt="non-virtual" ambiguityscope="amrex::FArrayBox::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FArrayBox_1a6f8accb8be245e6873219b15a933f431" prot="public" virt="non-virtual" ambiguityscope="amrex::FArrayBox::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FArrayBox_1a6bb6bea68a04d94c29ededc43adae9d2" prot="public" virt="non-virtual" ambiguityscope="amrex::FArrayBox::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a9a52c7475015824cfb60e6c67ecad522" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; Real &gt;::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a730800b56af324f6616cdb9ef570cdcc" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; Real &gt;::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a4b81fe99b0146870a40f702e63dd1415" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; Real &gt;::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BaseFab_1a197583c6096b348de15dcdb671457aee" prot="public" virt="non-virtual" ambiguityscope="BaseFab&lt; Real &gt;::"><scope>amrex::EBFArrayBox</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FArrayBox_1a9dd03f8360cfc2cfdf803298308f53dd" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>ordering</name></member>
      <member refid="classamrex_1_1BaseFab_1abb7c6d23546e6178c5c17bc87a2d5ef6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a30dff1ddf3809400a88f85f546ecbe84" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1af7a3fdd2cfd65a5f9a2d7e2126973917" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1aa9c3a519a02df76b99bef93795d6cba3" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a8eac05318ddeb7bf09d5c1b25acc6d55" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a2e3c0c27f4451b4962368e70bb9c0825" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1afa601e460f4af5ec79144dbcd527ff58" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1ae637024575b35a0f95b58020e31b79ac" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1a56197b4668f634207c4031bcd9e05909" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>plus</name></member>
      <member refid="classamrex_1_1BaseFab_1acc3fa2566c4bf2de3e6f0773e3b0601b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>prefetchToDevice</name></member>
      <member refid="classamrex_1_1BaseFab_1aea7b9b15c8959be232fa8d0b14b2b507" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>prefetchToHost</name></member>
      <member refid="classamrex_1_1BaseFab_1ad858d100150acd894cee6a1de10d61fb" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a45109ddf32816d958a662cd23e576d4f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1a9b6d8b5d08a022612232194b8c3f098d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1ab2918e0d3ea4dae441569909e73a8db7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>protected_divide</name></member>
      <member refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>ptr_owner</name></member>
      <member refid="classamrex_1_1FArrayBox_1a8a42f4fe7d3ad41e56175103deec42e1" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>readFrom</name></member>
      <member refid="classamrex_1_1FArrayBox_1ac5f3bc40906e22d2e481fa87114b62f4" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>readFrom</name></member>
      <member refid="classamrex_1_1BaseFab_1a4390286fe2327bd5f0561a75ee14499b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>release</name></member>
      <member refid="classamrex_1_1FArrayBox_1ae32a072e143825062dac1ee2e9c24f79" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>resize</name></member>
      <member refid="classamrex_1_1BaseFab_1a051da6643de6a48ee66ec046d560033a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>saxpy</name></member>
      <member refid="classamrex_1_1BaseFab_1a8e5c589a24384ac09b58364b7b7d45a7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>saxpy</name></member>
      <member refid="classamrex_1_1FArrayBox_1adebebb841a716183dc9e48ee95a37aec" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>set_do_initval</name></member>
      <member refid="classamrex_1_1FArrayBox_1aca0e59c4e500ac53bacf12280c67f225" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>set_initval</name></member>
      <member refid="classamrex_1_1BaseFab_1a70a02b9f0a717280df913cead8729dbc" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>SetBoxType</name></member>
      <member refid="classamrex_1_1BaseFab_1af1143312b97b8dabe016e041fa440e85" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setComplement</name></member>
      <member refid="classamrex_1_1BaseFab_1a7c9e5cad84edcb3888480abe8d1df7bc" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setComplement</name></member>
      <member refid="classamrex_1_1FArrayBox_1a7a5acc633fa80ec1cb999be2c4bbdc02" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setFABio</name></member>
      <member refid="classamrex_1_1FArrayBox_1a6dd6c1696dd87f8345826bc2ca97cf56" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setFormat</name></member>
      <member refid="classamrex_1_1FArrayBox_1a52578eab1d0f7cc7547af989033e82b6" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setOrdering</name></member>
      <member refid="classamrex_1_1FArrayBox_1a767556bba83027cac8eeecd67726aab8" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setPrecision</name></member>
      <member refid="classamrex_1_1BaseFab_1a347010e29c31f4b83480011d98908389" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setPtr</name></member>
      <member refid="classamrex_1_1BaseFab_1ab24f1f5f55a90b31121560df9c333fa7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1acbfe1bff2de3daad93c1234eae1f0cf3" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1ad2b35980de651c0823ee08f5f20f642c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a898fc7d64ff6e5e26fb612bcbd6a111d" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a450a1a7a50c796a088f93818ce0003cf" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BaseFab_1a5373ee74f195b1f31ffc9b37502bcdb4" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setValIf</name></member>
      <member refid="classamrex_1_1BaseFab_1a49749f076cd8c9e2bed72a9d7ac1041f" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setValIf</name></member>
      <member refid="classamrex_1_1BaseFab_1acb2352671b0792ecd140ea158f3d5ad9" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setValIfNot</name></member>
      <member refid="classamrex_1_1BaseFab_1a573b66fa2db975827a4da4bce09d893e" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setValIfNot</name></member>
      <member refid="classamrex_1_1BaseFab_1ac78f21924ff160a279d17ae73351c05b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>setValIfNot</name></member>
      <member refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>shared_memory</name></member>
      <member refid="classamrex_1_1BaseFab_1a92cb12158a09c20c51ef9347c11d31e4" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>shift</name></member>
      <member refid="classamrex_1_1BaseFab_1ad511764daeaedb9d3de8afc17ca7140c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>shift</name></member>
      <member refid="classamrex_1_1BaseFab_1acbd52c543782ab54cde88fa60852f563" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>shiftHalf</name></member>
      <member refid="classamrex_1_1BaseFab_1a9ceff0f63f7f998ae97b1b6f8a7e3646" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>shiftHalf</name></member>
      <member refid="classamrex_1_1BaseFab_1aba615c949d4831e48be7fbb76605df0a" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>size</name></member>
      <member refid="classamrex_1_1FArrayBox_1a30357415a1823591985d8a6434d296c1" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>skipFAB</name></member>
      <member refid="classamrex_1_1FArrayBox_1aadcc71b9080373f0846157aa5955c78c" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>skipFAB</name></member>
      <member refid="classamrex_1_1BaseFab_1ab265b95d14a167ea57faaf998d39f113" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>smallEnd</name></member>
      <member refid="classamrex_1_1BaseFab_1a0a8a30db2ab622857ba9ba7c64f940cb" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>sum</name></member>
      <member refid="classamrex_1_1BaseFab_1ae146eaf863b19ed32754ed09757d53a3" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>sum</name></member>
      <member refid="classamrex_1_1BaseFab_1a768eeb824dfd37e3b53c00d79155b36b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>sum</name></member>
      <member refid="classamrex_1_1BaseFab_1a86d1b4b6478205b0fcec165260df5772" prot="protected" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>truesize</name></member>
      <member refid="classamrex_1_1BaseFab_1aac8f37b7bba5334a86bf90b58fb062d8" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>value_type</name></member>
      <member refid="classamrex_1_1FArrayBox_1a5b92904d49c1491c854cef12c034fd43" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>writeOn</name></member>
      <member refid="classamrex_1_1FArrayBox_1a04ca3dcf52f6b544da13209deb8ca5bc" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>writeOn</name></member>
      <member refid="classamrex_1_1BaseFab_1a588b01925c451678d621fe58797a5bd7" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>xpay</name></member>
      <member refid="classamrex_1_1BaseFab_1acf7c1ac49465810a70b9ae1757263f30" prot="public" virt="virtual"><scope>amrex::EBFArrayBox</scope><name>~BaseFab</name></member>
      <member refid="classamrex_1_1EBFArrayBox_1a655b9f308a0fed9d3a680828a63a976b" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>~EBFArrayBox</name></member>
      <member refid="classamrex_1_1FArrayBox_1af592141f4b4b5593b68da6b32320a9d0" prot="public" virt="non-virtual"><scope>amrex::EBFArrayBox</scope><name>~FArrayBox</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
