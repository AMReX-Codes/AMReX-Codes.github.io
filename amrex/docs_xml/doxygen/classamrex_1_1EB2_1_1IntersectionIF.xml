<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EB2_1_1IntersectionIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::IntersectionIF</compoundname>
    <basecompoundref refid="classamrex_1_1GpuTuple" prot="public" virt="non-virtual">amrex::GpuTuple&lt; Fs... &gt;</basecompoundref>
    <includes refid="AMReX__EB2__IF__Intersection_8H" local="no">AMReX_EB2_IF_Intersection.H</includes>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Fs</declname>
        <defname>Fs</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IntersectionIF_1a89428abce93c8dd7f913b7c2c9cbbe70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::IntersectionIF&lt; Fs &gt;::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" line="54" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IntersectionIF_1ad2e748f8d4a64e6b32590c461400256b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="classamrex_1_1EB2_1_1IntersectionIF" kindref="compound">IntersectionIF</ref>&lt;Fs...&gt;</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::IntersectionIF&lt; Fs &gt;::operator()</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z)) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" line="61" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IntersectionIF_1aefc8eed35653f52a40cd922d0a5ba052" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>Real</type>
        <definition>Real amrex::EB2::IntersectionIF&lt; Fs &gt;::op_impl</definition>
        <argsstring>(const RealArray &amp;p, IndexSequence&lt; Is... &gt;) const noexcept</argsstring>
        <name>op_impl</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1IndexSequence" kindref="compound">IndexSequence</ref>&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" line="69" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IntersectionIF_1a4bb6ddbe0724d6920422f2162e9aa3a1" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::IntersectionIF&lt; Fs &gt;::op_impl</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z), IndexSequence&lt; Is... &gt;) const noexcept</argsstring>
        <name>op_impl</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <param>
          <type><ref refid="structamrex_1_1IndexSequence" kindref="compound">IndexSequence</ref>&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" bodystart="76" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2275">
        <label>amrex::detail::gpu_tuple_impl&lt; 0, Ts... &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__impl"/>
      </node>
      <node id="2273">
        <label>amrex::EB2::IntersectionIF&lt; Fs &gt;</label>
        <link refid="classamrex_1_1EB2_1_1IntersectionIF"/>
        <childnode refid="2274" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2274">
        <label>amrex::GpuTuple&lt; Fs... &gt;</label>
        <link refid="classamrex_1_1GpuTuple"/>
        <childnode refid="2275" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2278">
        <label>amrex::detail::gpu_tuple_impl&lt; 0, Ts... &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__impl"/>
      </node>
      <node id="2276">
        <label>amrex::EB2::IntersectionIF&lt; Fs &gt;</label>
        <link refid="classamrex_1_1EB2_1_1IntersectionIF"/>
        <childnode refid="2277" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2277">
        <label>amrex::GpuTuple&lt; Fs... &gt;</label>
        <link refid="classamrex_1_1GpuTuple"/>
        <childnode refid="2278" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" line="50" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H" bodystart="48" bodyend="80"/>
    <listofallmembers>
      <member refid="classamrex_1_1GpuTuple_1a9b4a022c99f88d3df5c4c68ab494b9ab" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>GpuTuple</name></member>
      <member refid="classamrex_1_1GpuTuple_1aaa9ed202ceb2122e08523b1b17e68b2a" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>GpuTuple</name></member>
      <member refid="classamrex_1_1GpuTuple_1a4fbb6462763e67abd37e85e9dd3a00ab" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>GpuTuple</name></member>
      <member refid="classamrex_1_1EB2_1_1IntersectionIF_1aefc8eed35653f52a40cd922d0a5ba052" prot="protected" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>op_impl</name></member>
      <member refid="classamrex_1_1EB2_1_1IntersectionIF_1a4bb6ddbe0724d6920422f2162e9aa3a1" prot="protected" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>op_impl</name></member>
      <member refid="classamrex_1_1EB2_1_1IntersectionIF_1a89428abce93c8dd7f913b7c2c9cbbe70" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1IntersectionIF_1ad2e748f8d4a64e6b32590c461400256b" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1GpuTuple_1ac3cf15112d4e0b7b33d884fcfd3f558b" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1GpuTuple_1a98cd15de0552b07aa6cceda354b8b604" prot="public" virt="non-virtual"><scope>amrex::EB2::IntersectionIF</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
