<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1FFT_1_1LocalR2C" kind="class" language="C++" prot="public">
    <compoundname>amrex::FFT::LocalR2C</compoundname>
    <includes refid="AMReX__FFT__LocalR2C_8H" local="no">AMReX_FFT_LocalR2C.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">FFT::Direction</ref></type>
        <declname>D</declname>
        <defname>D</defname>
        <defval><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">FFT::Direction::both</ref></defval>
      </param>
      <param>
        <type>int</type>
        <declname>M</declname>
        <defname>M</defname>
        <defval>3</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1a6200ff7ce8bd28551851402ea7817f1f" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_fft_fwd</definition>
        <argsstring></argsstring>
        <name>m_fft_fwd</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_fft_fwd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="109" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1a39ed1a805af2092073766eba4fb67255" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_fft_bwd</definition>
        <argsstring></argsstring>
        <name>m_fft_bwd</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_fft_bwd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="110" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1aebeb7bf1ea834b93fb39945dda7acafd" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_p_fwd</definition>
        <argsstring></argsstring>
        <name>m_p_fwd</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_p_fwd</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="112" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1a5cf22ac1e4c1ab949b1d6bc39fa12655" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt; T &gt; *</type>
        <definition>GpuComplex&lt;T&gt;* amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_p_bwd</definition>
        <argsstring></argsstring>
        <name>m_p_bwd</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_p_bwd</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="113" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1af8a133d10c61e3b603f3e654af30e32a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVectND" kindref="compound">IntVectND</ref>&lt; M &gt;</type>
        <definition>IntVectND&lt;M&gt; amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_real_size</definition>
        <argsstring></argsstring>
        <name>m_real_size</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_real_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="119" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1adcb41fb7d2e3e6d3768a7dc2ecbbf9f7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVectND" kindref="compound">IntVectND</ref>&lt; M &gt;</type>
        <definition>IntVectND&lt;M&gt; amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_spectral_size</definition>
        <argsstring></argsstring>
        <name>m_spectral_size</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_spectral_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="120" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1LocalR2C_1ac2c222afd6e0f8906d319e714a2c2658" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FFT::LocalR2C&lt; T, D, M &gt;::m_cache_plan</definition>
        <argsstring></argsstring>
        <name>m_cache_plan</name>
        <qualifiedname>amrex::FFT::LocalR2C::m_cache_plan</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="122" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="122" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1af1bd7bd75d3e53a24a6e8889712f3f29" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::LocalR2C&lt; T, D, M &gt;::LocalR2C</definition>
        <argsstring>(IntVectND&lt; M &gt; const &amp;fft_size, T *p_fwd=nullptr, GpuComplex&lt; T &gt; *p_bwd=nullptr, bool cache_plan=true)</argsstring>
        <name>LocalR2C</name>
        <qualifiedname>amrex::FFT::LocalR2C::LocalR2C</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1IntVectND" kindref="compound">IntVectND</ref>&lt; M &gt; const &amp;</type>
          <declname>fft_size</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>p_fwd</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt; T &gt; *</type>
          <declname>p_bwd</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>cache_plan</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Given the diverse interfaces of <ref refid="namespaceamrex_1_1FFT" kindref="compound">FFT</ref> libraries we use, this constructo has a number of optional arguments.</para>
<para>The user can provide the data pointers to the constructor. They are only needed by FFTW because its plan creation requires the input and output arrays. If they are null, we will delay the plan creation for FFTW until the forward or backward function is called.</para>
<para>The cache_plan option is only used when we use cufft, rocfft and onemkl, but not FFTW.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The forward domain size (i.e., the domain of the real data) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_fwd</parametername>
</parameternamelist>
<parameterdescription>
<para>Forward domain data pointer (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_bwd</parametername>
</parameternamelist>
<parameterdescription>
<para>Backward domain data pointer (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_plan</parametername>
</parameternamelist>
<parameterdescription>
<para>Try to cache the plan or not (optionl) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="49" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="126" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1af70ba0bdd58d25163651936ef627225c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::LocalR2C&lt; T, D, M &gt;::~LocalR2C</definition>
        <argsstring>()</argsstring>
        <name>~LocalR2C</name>
        <qualifiedname>amrex::FFT::LocalR2C::~LocalR2C</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="58" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a4704104dbe80abddfc33f0a0f51f08ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::LocalR2C&lt; T, D, M &gt;::LocalR2C</definition>
        <argsstring>()=default</argsstring>
        <name>LocalR2C</name>
        <qualifiedname>amrex::FFT::LocalR2C::LocalR2C</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1aeca8cc3c735c90e9f4e3b9f25f619ef5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::LocalR2C&lt; T, D, M &gt;::LocalR2C</definition>
        <argsstring>(LocalR2C &amp;&amp;) noexcept</argsstring>
        <name>LocalR2C</name>
        <qualifiedname>amrex::FFT::LocalR2C::LocalR2C</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1LocalR2C" kindref="compound">LocalR2C</ref> &amp;&amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="61" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="193" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a4f706e596851142757a6e9c1f6199faa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1FFT_1_1LocalR2C" kindref="compound">LocalR2C</ref> &amp;</type>
        <definition>LocalR2C&lt; T, D, M &gt; &amp; amrex::FFT::LocalR2C&lt; T, D, M &gt;::operator=</definition>
        <argsstring>(LocalR2C &amp;&amp;) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::FFT::LocalR2C::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1LocalR2C" kindref="compound">LocalR2C</ref> &amp;&amp;</type>
          <defname>rhs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="62" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="209" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a25e2f5cf1cbe6135a5e986b9bf8ad6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::LocalR2C&lt; T, D, M &gt;::LocalR2C</definition>
        <argsstring>(LocalR2C const &amp;)=delete</argsstring>
        <name>LocalR2C</name>
        <qualifiedname>amrex::FFT::LocalR2C::LocalR2C</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1LocalR2C" kindref="compound">LocalR2C</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1accf45f153c0746b64717f9c4883e4ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FFT_1_1LocalR2C" kindref="compound">LocalR2C</ref> &amp;</type>
        <definition>LocalR2C &amp; amrex::FFT::LocalR2C&lt; T, D, M &gt;::operator=</definition>
        <argsstring>(LocalR2C const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::FFT::LocalR2C::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1LocalR2C" kindref="compound">LocalR2C</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="65" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a2eb323fa485c2db44e72bbfc8807175b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a965dbaac085fc891bfbbd4f9d145bbc8" kindref="member">Direction::forward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::LocalR2C&lt; T, D, M &gt;::forward</definition>
        <argsstring>(T const *indata, GpuComplex&lt; T &gt; *outdata)</argsstring>
        <name>forward</name>
        <qualifiedname>amrex::FFT::LocalR2C::forward</qualifiedname>
        <param>
          <type>T const *</type>
          <declname>indata</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt; T &gt; *</type>
          <declname>outdata</declname>
        </param>
        <briefdescription>
<para>Forward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not available when this class template is instantiated for backward-only transform. For GPUs, this function is synchronous on the host.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indata</parametername>
</parameternamelist>
<parameterdescription>
<para>input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outdata</parametername>
</parameternamelist>
<parameterdescription>
<para>output data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="79" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="234" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a3edc75d2958b9d4daccffef78bfab311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FFT::LocalR2C&lt; T, D, M &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>amrex::FFT::LocalR2C::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="81" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="172" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a01169a532e1d8592745d29c0ebbd5b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a195fe59b6f103787a914aead0f3db502" kindref="member">Direction::backward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::LocalR2C&lt; T, D, M &gt;::backward</definition>
        <argsstring>(GpuComplex&lt; T &gt; const *indata, T *outdata)</argsstring>
        <name>backward</name>
        <qualifiedname>amrex::FFT::LocalR2C::backward</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt; T &gt; const *</type>
          <declname>indata</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>outdata</declname>
        </param>
        <briefdescription>
<para>Backward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not available when this class template is instantiated for forward-only transform. For GPUs, this function is synchronous on the host.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indata</parametername>
</parameternamelist>
<parameterdescription>
<para>input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outdata</parametername>
</parameternamelist>
<parameterdescription>
<para>output data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="95" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="279" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1a14d25505caba8ca5fe02cf2c20ee9a02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T amrex::FFT::LocalR2C&lt; T, D, M &gt;::scalingFactor</definition>
        <argsstring>() const</argsstring>
        <name>scalingFactor</name>
        <qualifiedname>amrex::FFT::LocalR2C::scalingFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scaling factor. If the data goes through forward and then backward, the result multiplied by the scaling factor is equal to the original data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="100" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="322" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1LocalR2C_1afe70f4a8216901f28d94885873b18c45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVectND" kindref="compound">IntVectND</ref>&lt; M &gt; const &amp;</type>
        <definition>IntVectND&lt; M &gt; const  &amp; amrex::FFT::LocalR2C&lt; T, D, M &gt;::spectralSize</definition>
        <argsstring>() const</argsstring>
        <name>spectralSize</name>
        <qualifiedname>amrex::FFT::LocalR2C::spectralSize</qualifiedname>
        <briefdescription>
<para>Spectral domain size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="103" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="103" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Local Discrete Fourier Transform. </para>
    </briefdescription>
    <detaileddescription>
<para>This class supports Fourier transforms between real and complex data. The name <ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> indicates that the forward transform converts real data to complex data, while the backward transform converts complex data to real data. It should be noted that both directions of transformation are supported, not just from real to complex. The scaling follows the FFTW convention, where applying the forward transform followed by the backward transform scales the original data by the size of the input array.</para>
<para>For more details, we refer the users to <ulink url="https://amrex-codes.github.io/amrex/docs_html/FFT_Chapter.html">https://amrex-codes.github.io/amrex/docs_html/FFT_Chapter.html</ulink>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="1">
        <label>amrex::FFT::LocalR2C&lt; T, D, M &gt;</label>
        <link refid="classamrex_1_1FFT_1_1LocalR2C"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_real_size</edgelabel>
          <edgelabel>m_spectral_size</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_LocalR2C.H" bodystart="28" bodyend="123"/>
    <listofallmembers>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a01169a532e1d8592745d29c0ebbd5b11" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>backward</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a3edc75d2958b9d4daccffef78bfab311" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>clear</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a2eb323fa485c2db44e72bbfc8807175b" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>forward</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1af1bd7bd75d3e53a24a6e8889712f3f29" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>LocalR2C</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a4704104dbe80abddfc33f0a0f51f08ee" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>LocalR2C</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1aeca8cc3c735c90e9f4e3b9f25f619ef5" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>LocalR2C</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a25e2f5cf1cbe6135a5e986b9bf8ad6bd" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>LocalR2C</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1ac2c222afd6e0f8906d319e714a2c2658" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_cache_plan</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a39ed1a805af2092073766eba4fb67255" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_fft_bwd</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a6200ff7ce8bd28551851402ea7817f1f" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_fft_fwd</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a5cf22ac1e4c1ab949b1d6bc39fa12655" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_p_bwd</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1aebeb7bf1ea834b93fb39945dda7acafd" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_p_fwd</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1af8a133d10c61e3b603f3e654af30e32a" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_real_size</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1adcb41fb7d2e3e6d3768a7dc2ecbbf9f7" prot="private" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>m_spectral_size</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a4f706e596851142757a6e9c1f6199faa" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1accf45f153c0746b64717f9c4883e4ee2" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1a14d25505caba8ca5fe02cf2c20ee9a02" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>scalingFactor</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1afe70f4a8216901f28d94885873b18c45" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>spectralSize</name></member>
      <member refid="classamrex_1_1FFT_1_1LocalR2C_1af70ba0bdd58d25163651936ef627225c" prot="public" virt="non-virtual"><scope>amrex::FFT::LocalR2C</scope><name>~LocalR2C</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
