<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1AmrParGDB" kind="class" language="C++" prot="public">
    <compoundname>amrex::AmrParGDB</compoundname>
    <basecompoundref refid="classamrex_1_1ParGDBBase" prot="public" virt="non-virtual">amrex::ParGDBBase</basecompoundref>
    <includes refid="AMReX__AmrParGDB_8H" local="no">AMReX_AmrParGDB.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1AmrParGDB_1a00e116c7e99b0d8be6a4db40bfb3b45b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1AmrCore" kindref="compound">AmrCore</ref> *</type>
        <definition>AmrCore* amrex::AmrParGDB::m_amrcore</definition>
        <argsstring></argsstring>
        <name>m_amrcore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="62" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrParGDB_1aa01e7a859a8d2072ea34ac2a6ac8a886" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt;</type>
        <definition>Vector&lt;Geometry&gt; amrex::AmrParGDB::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="63" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrParGDB_1a2cb84092989356fad230a48fe44a4f58" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::AmrParGDB::m_has_geom</definition>
        <argsstring></argsstring>
        <name>m_has_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="64" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrParGDB_1ac64ebd19d0afad8663e01819448c4760" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt;</type>
        <definition>Vector&lt;DistributionMapping&gt; amrex::AmrParGDB::m_dmap</definition>
        <argsstring></argsstring>
        <name>m_dmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="65" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrParGDB_1a38a28db75d6cca9d3c87ad9931084f09" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; BoxArray &gt;</type>
        <definition>Vector&lt;BoxArray&gt; amrex::AmrParGDB::m_ba</definition>
        <argsstring></argsstring>
        <name>m_ba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="66" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1ac5b326613074f25002466af98f19e6fc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrParGDB::AmrParGDB</definition>
        <argsstring>(AmrCore *amr) noexcept</argsstring>
        <name>AmrParGDB</name>
        <param>
          <type><ref refid="classamrex_1_1AmrCore" kindref="compound">AmrCore</ref> *</type>
          <declname>amr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="15" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a9033da091d0ea861c81a9d5a20faa777" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::AmrParGDB::~AmrParGDB</definition>
        <argsstring>()</argsstring>
        <name>~AmrParGDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a9ba4b0a7ffb2f6d0b683052125b4b528" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; amrex::AmrParGDB::ParticleGeom</definition>
        <argsstring>(int level) const override</argsstring>
        <name>ParticleGeom</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1abef31ba5dc0587ef75830df5f251f334">ParticleGeom</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="25" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a9d52a302b3f7f9d6b29f09e24fc906c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; amrex::AmrParGDB::Geom</definition>
        <argsstring>(int level) const override</argsstring>
        <name>Geom</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a0f4207bf31f6366cee4812742303879d">Geom</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="26" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1afde4d45acf310b449c3c4af607f65a60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
        <definition>const Vector&lt; Geometry &gt; &amp; amrex::AmrParGDB::ParticleGeom</definition>
        <argsstring>() const override</argsstring>
        <name>ParticleGeom</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a1d0680c0076a0f47ea58c61fd0c97ecf">ParticleGeom</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a3583b3618380eea92350a8a5bc29a46a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
        <definition>const Vector&lt; Geometry &gt; &amp; amrex::AmrParGDB::Geom</definition>
        <argsstring>() const override</argsstring>
        <name>Geom</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a9f7d684223e77d4bf3162333a55c64d6">Geom</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a16a9e833e5e2cb6ec87e5ed85d729c06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping &amp; amrex::AmrParGDB::ParticleDistributionMap</definition>
        <argsstring>(int level) const override</argsstring>
        <name>ParticleDistributionMap</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a911edb448b3ad570aff7366aefe10089">ParticleDistributionMap</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a8008f8edc6ab3099b32c1dc8d8f25c6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping &amp; amrex::AmrParGDB::DistributionMap</definition>
        <argsstring>(int level) const override</argsstring>
        <name>DistributionMap</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a0821e41056b4d6537d641fa5fe099b40">DistributionMap</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="32" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1aac889336d5ae4980d21fa8f7199bd24c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
        <definition>const Vector&lt; DistributionMapping &gt; &amp; amrex::AmrParGDB::ParticleDistributionMap</definition>
        <argsstring>() const override</argsstring>
        <name>ParticleDistributionMap</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a2a790ed2ecbbb8fcb0488789f005daed">ParticleDistributionMap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="125" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a12049e384e7155d62c0064f9bdd42fbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
        <definition>const Vector&lt; DistributionMapping &gt; &amp; amrex::AmrParGDB::DistributionMap</definition>
        <argsstring>() const override</argsstring>
        <name>DistributionMap</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ae10b617dd3bc8255901ecb1957b5e821">DistributionMap</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1af74ac23f751f5a6751cde7af224355ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const BoxArray &amp;</type>
        <definition>const BoxArray &amp; amrex::AmrParGDB::ParticleBoxArray</definition>
        <argsstring>(int level) const override</argsstring>
        <name>ParticleBoxArray</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1adfd4f1260ff855da465e189ebac005e8">ParticleBoxArray</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1abb29e90ead2f9e0f58107004d7ea5bd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const BoxArray &amp;</type>
        <definition>const BoxArray &amp; amrex::AmrParGDB::boxArray</definition>
        <argsstring>(int level) const override</argsstring>
        <name>boxArray</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1adb877cb42f2e3904c825bcbe61cf374a">boxArray</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a2471d3ed490ba22c41c1aa3833c75f75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; BoxArray &gt; &amp;</type>
        <definition>const Vector&lt; BoxArray &gt; &amp; amrex::AmrParGDB::ParticleBoxArray</definition>
        <argsstring>() const override</argsstring>
        <name>ParticleBoxArray</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a5f864861309d414c90883f2ab60ee5e1">ParticleBoxArray</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="40" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="161" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a666fea50f53de421e82df451634ce24d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; BoxArray &gt; &amp;</type>
        <definition>const Vector&lt; BoxArray &gt; &amp; amrex::AmrParGDB::boxArray</definition>
        <argsstring>() const override</argsstring>
        <name>boxArray</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ab08c75051c8758512c7f4bb38b34ea17">boxArray</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="41" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a8fa510470316026fa5b4ac4cf18a29c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::AmrParGDB::SetParticleBoxArray</definition>
        <argsstring>(int level, const BoxArray &amp;new_ba) override</argsstring>
        <name>SetParticleBoxArray</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ac3cf1b27511fecf4ab3f23a90f5f0e4c">SetParticleBoxArray</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>new_ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a88824bfe0471d8b133c5aa798b87c25f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::AmrParGDB::SetParticleDistributionMap</definition>
        <argsstring>(int level, const DistributionMapping &amp;new_dm) override</argsstring>
        <name>SetParticleDistributionMap</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a1635970789eadd3987d1011e60cf3003">SetParticleDistributionMap</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>new_dm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="44" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1ace841700df06aa193ec553e98c6fb600" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::AmrParGDB::SetParticleGeometry</definition>
        <argsstring>(int level, const Geometry &amp;new_geom) override</argsstring>
        <name>SetParticleGeometry</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a1aa41e46d76fa08134ec8f657692c718">SetParticleGeometry</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>new_geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a76c8a601849fe4005080010ce009b5eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::AmrParGDB::ClearParticleBoxArray</definition>
        <argsstring>(int level) override</argsstring>
        <name>ClearParticleBoxArray</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ad10177b9dd49f6d6366c9b0ce55164e2">ClearParticleBoxArray</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="47" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1aa94ab21d3a8be444b383d06bd5794bf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::AmrParGDB::ClearParticleDistributionMap</definition>
        <argsstring>(int level) override</argsstring>
        <name>ClearParticleDistributionMap</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a95b12fc3e2198540e1cd7bda9d78053f">ClearParticleDistributionMap</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="48" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a4df866ffaaad95ed1e35c3c36389cc2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::AmrParGDB::ClearParticleGeometry</definition>
        <argsstring>(int level) override</argsstring>
        <name>ClearParticleGeometry</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ac05bd93767fb333234fc9647cfb1b84f">ClearParticleGeometry</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="49" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="209" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1acc2ddbb687a61fccf1a5089d9c9617cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::AmrParGDB::LevelDefined</definition>
        <argsstring>(int level) const override</argsstring>
        <name>LevelDefined</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a76e1b4915e0fab0cf472ce392a5acbaa">LevelDefined</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="51" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1ac72fc0f84c6f2c0ced8da0b77f73d0ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrParGDB::finestLevel</definition>
        <argsstring>() const override</argsstring>
        <name>finestLevel</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ac1fa02ba52840aba7e4ef263cb1415a8">finestLevel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="52" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a6a4a81715729b356d02bb1a645545b5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrParGDB::maxLevel</definition>
        <argsstring>() const override</argsstring>
        <name>maxLevel</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a2da3b6ec6f3dff255917d3a0bfbde3d5">maxLevel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1ac86f4e9a778f78c98eb13244707ca97c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::AmrParGDB::refRatio</definition>
        <argsstring>(int level) const override</argsstring>
        <name>refRatio</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a16cfadb981960e526beef1b6422b50ef">refRatio</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="55" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1aeaa1b8665bbabf92cb1a7a14fd0f3a4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrParGDB::MaxRefRatio</definition>
        <argsstring>(int level) const override</argsstring>
        <name>MaxRefRatio</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1ad560744e3d6fec70a33ad2829fc7f43e">MaxRefRatio</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="56" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrParGDB_1a29cc45ffc19e086c90ab4f423996183e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &gt;</type>
        <definition>Vector&lt; IntVect &gt; amrex::AmrParGDB::refRatio</definition>
        <argsstring>() const override</argsstring>
        <name>refRatio</name>
        <reimplements refid="classamrex_1_1ParGDBBase_1a5b4140f77f48299076bd546b07d23d9c">refRatio</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="58" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="245" bodyend="248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="328">
        <label>amrex::ParGDBBase</label>
        <link refid="classamrex_1_1ParGDBBase"/>
      </node>
      <node id="327">
        <label>amrex::AmrParGDB</label>
        <link refid="classamrex_1_1AmrParGDB"/>
        <childnode refid="328" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="336">
        <label>Real</label>
      </node>
      <node id="342">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="331">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="332" relation="public-inheritance">
        </childnode>
      </node>
      <node id="339">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="343">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="344" relation="public-inheritance">
        </childnode>
      </node>
      <node id="330">
        <label>amrex::ParGDBBase</label>
        <link refid="classamrex_1_1ParGDBBase"/>
      </node>
      <node id="340">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="334">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="344">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="337">
        <label>amrex::Vector&lt; BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="338" relation="public-inheritance">
        </childnode>
      </node>
      <node id="333">
        <label>amrex::AmrInfo</label>
        <link refid="structamrex_1_1AmrInfo"/>
        <childnode refid="334" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>n_error_buf</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="336" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="338">
        <label>std::vector&lt; BoxArray, std::allocator&lt; BoxArray &gt; &gt;</label>
      </node>
      <node id="335">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="329">
        <label>amrex::AmrParGDB</label>
        <link refid="classamrex_1_1AmrParGDB"/>
        <childnode refid="330" relation="public-inheritance">
        </childnode>
        <childnode refid="331" relation="usage">
          <edgelabel>m_amrcore</edgelabel>
        </childnode>
        <childnode refid="337" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
        <childnode refid="339" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="343" relation="usage">
          <edgelabel>m_has_geom</edgelabel>
        </childnode>
        <childnode refid="341" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
      </node>
      <node id="341">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="332">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="333" relation="protected-inheritance">
        </childnode>
        <childnode refid="337" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="339" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="341" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" line="12" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H" bodystart="10" bodyend="67"/>
    <listofallmembers>
      <member refid="classamrex_1_1AmrParGDB_1ac5b326613074f25002466af98f19e6fc" prot="public" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>AmrParGDB</name></member>
      <member refid="classamrex_1_1AmrParGDB_1abb29e90ead2f9e0f58107004d7ea5bd7" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a666fea50f53de421e82df451634ce24d" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a76c8a601849fe4005080010ce009b5eb" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ClearParticleBoxArray</name></member>
      <member refid="classamrex_1_1AmrParGDB_1aa94ab21d3a8be444b383d06bd5794bf1" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ClearParticleDistributionMap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a4df866ffaaad95ed1e35c3c36389cc2e" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ClearParticleGeometry</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a8008f8edc6ab3099b32c1dc8d8f25c6a" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a12049e384e7155d62c0064f9bdd42fbc" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1ac72fc0f84c6f2c0ced8da0b77f73d0ce" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>finestLevel</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a9d52a302b3f7f9d6b29f09e24fc906c4" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>Geom</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a3583b3618380eea92350a8a5bc29a46a" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>Geom</name></member>
      <member refid="classamrex_1_1AmrParGDB_1acc2ddbb687a61fccf1a5089d9c9617cf" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>LevelDefined</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a00e116c7e99b0d8be6a4db40bfb3b45b" prot="protected" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>m_amrcore</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a38a28db75d6cca9d3c87ad9931084f09" prot="protected" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>m_ba</name></member>
      <member refid="classamrex_1_1AmrParGDB_1ac64ebd19d0afad8663e01819448c4760" prot="protected" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>m_dmap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1aa01e7a859a8d2072ea34ac2a6ac8a886" prot="protected" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a2cb84092989356fad230a48fe44a4f58" prot="protected" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>m_has_geom</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a6a4a81715729b356d02bb1a645545b5d" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>maxLevel</name></member>
      <member refid="classamrex_1_1AmrParGDB_1aeaa1b8665bbabf92cb1a7a14fd0f3a4f" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>MaxRefRatio</name></member>
      <member refid="classamrex_1_1ParGDBBase_1ae096c31ca456fa20cd6367c1dcfbcfdf" prot="public" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>OnSameGrids</name></member>
      <member refid="classamrex_1_1ParGDBBase_1a171c8c5102570df045417e87ee2458c8" prot="public" virt="non-virtual"><scope>amrex::AmrParGDB</scope><name>ParGDBBase</name></member>
      <member refid="classamrex_1_1AmrParGDB_1af74ac23f751f5a6751cde7af224355ea" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ParticleBoxArray</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a2471d3ed490ba22c41c1aa3833c75f75" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ParticleBoxArray</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a16a9e833e5e2cb6ec87e5ed85d729c06" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ParticleDistributionMap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1aac889336d5ae4980d21fa8f7199bd24c" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ParticleDistributionMap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a9ba4b0a7ffb2f6d0b683052125b4b528" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ParticleGeom</name></member>
      <member refid="classamrex_1_1AmrParGDB_1afde4d45acf310b449c3c4af607f65a60" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>ParticleGeom</name></member>
      <member refid="classamrex_1_1AmrParGDB_1ac86f4e9a778f78c98eb13244707ca97c" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>refRatio</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a29cc45ffc19e086c90ab4f423996183e" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>refRatio</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a8fa510470316026fa5b4ac4cf18a29c5" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>SetParticleBoxArray</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a88824bfe0471d8b133c5aa798b87c25f" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>SetParticleDistributionMap</name></member>
      <member refid="classamrex_1_1AmrParGDB_1ace841700df06aa193ec553e98c6fb600" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>SetParticleGeometry</name></member>
      <member refid="classamrex_1_1AmrParGDB_1a9033da091d0ea861c81a9d5a20faa777" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>~AmrParGDB</name></member>
      <member refid="classamrex_1_1ParGDBBase_1adf64b954c8a5f29d4163808d9d17e5b7" prot="public" virt="virtual"><scope>amrex::AmrParGDB</scope><name>~ParGDBBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
