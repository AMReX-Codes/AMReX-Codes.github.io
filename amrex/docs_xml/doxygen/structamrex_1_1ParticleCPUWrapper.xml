<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1ParticleCPUWrapper" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleCPUWrapper</compoundname>
    <includes refid="AMReX__Particle_8H" local="no">AMReX_Particle.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCPUWrapper_1a520a3c045d3f58574b07526ab92c5447" prot="public" static="no" mutable="no">
        <type>uint64_t &amp;</type>
        <definition>uint64_t&amp; amrex::ParticleCPUWrapper::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="85" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1af456e0632ceb42b240d4d2608325fa66" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ParticleCPUWrapper::ParticleCPUWrapper</definition>
        <argsstring>(uint64_t &amp;idata) noexcept</argsstring>
        <name>ParticleCPUWrapper</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="88" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1ad13d555c23dc09a19f05fa10518807e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ParticleCPUWrapper::ParticleCPUWrapper</definition>
        <argsstring>(const ParticleCPUWrapper &amp;rhs)=default</argsstring>
        <name>ParticleCPUWrapper</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1aee3e19031ec6e1adbaaaf08c5da52186" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleCPUWrapper&amp; amrex::ParticleCPUWrapper::operator=</definition>
        <argsstring>(const ParticleCPUWrapper &amp;pcpuw) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
          <declname>pcpuw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="96" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a82053d445bf2ea2e6055e1d4755c5cb7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleCPUWrapper&amp; amrex::ParticleCPUWrapper::operator=</definition>
        <argsstring>(const int cpu) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="102" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1af9ef300a76f9e5e44bb0fbb67b0d715d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ParticleCPUWrapper::operator int</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="115" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="115" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="84" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="83" bodyend="119"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a520a3c045d3f58574b07526ab92c5447" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1af9ef300a76f9e5e44bb0fbb67b0d715d" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator int</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1aee3e19031ec6e1adbaaaf08c5da52186" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a82053d445bf2ea2e6055e1d4755c5cb7" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1af456e0632ceb42b240d4d2608325fa66" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>ParticleCPUWrapper</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1ad13d555c23dc09a19f05fa10518807e6" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>ParticleCPUWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
