<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1ParticleCPUWrapper" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleCPUWrapper</compoundname>
    <includes refid="AMReX__Particle_8H" local="no">AMReX_Particle.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleCPUWrapper_1a9da7d4371d02e10cd184a772ecfaa82a" prot="public" static="no" mutable="no">
        <type>uint64_t *</type>
        <definition>uint64_t* amrex::ParticleCPUWrapper::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <qualifiedname>amrex::ParticleCPUWrapper::m_idata</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="260" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="260" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a2afbf23a1587460b48f40077dccf41cc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleCPUWrapper::~ParticleCPUWrapper</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~ParticleCPUWrapper</name>
        <qualifiedname>amrex::ParticleCPUWrapper::~ParticleCPUWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="262" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1ad06edc44f15ead257a637b37e80197a2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::ParticleCPUWrapper::ParticleCPUWrapper</definition>
        <argsstring>(uint64_t &amp;idata) noexcept</argsstring>
        <name>ParticleCPUWrapper</name>
        <qualifiedname>amrex::ParticleCPUWrapper::ParticleCPUWrapper</qualifiedname>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="265" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a41a59cf60aff0c36723926fa082fb04f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::ParticleCPUWrapper::ParticleCPUWrapper</definition>
        <argsstring>(const ParticleCPUWrapper &amp;rhs)=default</argsstring>
        <name>ParticleCPUWrapper</name>
        <qualifiedname>amrex::ParticleCPUWrapper::ParticleCPUWrapper</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="270" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a0cbf3e03c4cabd9a0fe9f6e2b1b584d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleCPUWrapper::ParticleCPUWrapper</definition>
        <argsstring>(ParticleCPUWrapper &amp;&amp;)=delete</argsstring>
        <name>ParticleCPUWrapper</name>
        <qualifiedname>amrex::ParticleCPUWrapper::ParticleCPUWrapper</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="272" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1ab5448b378aea668e07e255b96a8d3f2f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
        <definition>__host__ __device__ ParticleCPUWrapper &amp; amrex::ParticleCPUWrapper::operator=</definition>
        <argsstring>(const ParticleCPUWrapper &amp;pcpuw) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::ParticleCPUWrapper::operator=</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
          <declname>pcpuw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="275" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a0e1d3357dbf8d954d1afd55ba87f9599" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
        <definition>__host__ __device__ ParticleCPUWrapper &amp; amrex::ParticleCPUWrapper::operator=</definition>
        <argsstring>(ParticleCPUWrapper &amp;&amp;pcpuw) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::ParticleCPUWrapper::operator=</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;&amp;</type>
          <declname>pcpuw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="281" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a9e9d2af65be7387873902623fbbc1fc8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="structamrex_1_1ParticleCPUWrapper" kindref="compound">ParticleCPUWrapper</ref> &amp;</type>
        <definition>__host__ __device__ ParticleCPUWrapper &amp; amrex::ParticleCPUWrapper::operator=</definition>
        <argsstring>(const int cpu) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::ParticleCPUWrapper::operator=</qualifiedname>
        <param>
          <type>const int</type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="287" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="287" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleCPUWrapper_1a0ffd27065f64c20822c354eb67b2600a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::ParticleCPUWrapper::operator int</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator int</name>
        <qualifiedname>amrex::ParticleCPUWrapper::operator int</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="294" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="294" bodyend="297"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="258" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="259" bodyend="298"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a9da7d4371d02e10cd184a772ecfaa82a" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a0ffd27065f64c20822c354eb67b2600a" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator int</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1ab5448b378aea668e07e255b96a8d3f2f" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a0e1d3357dbf8d954d1afd55ba87f9599" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a9e9d2af65be7387873902623fbbc1fc8" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1ad06edc44f15ead257a637b37e80197a2" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>ParticleCPUWrapper</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a41a59cf60aff0c36723926fa082fb04f" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>ParticleCPUWrapper</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a0cbf3e03c4cabd9a0fe9f6e2b1b584d2" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>ParticleCPUWrapper</name></member>
      <member refid="structamrex_1_1ParticleCPUWrapper_1a2afbf23a1587460b48f40077dccf41cc" prot="public" virt="non-virtual"><scope>amrex::ParticleCPUWrapper</scope><name>~ParticleCPUWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
