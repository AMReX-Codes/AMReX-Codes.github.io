<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1IndexSpaceImp" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::IndexSpaceImp</compoundname>
    <basecompoundref refid="classamrex_1_1EB2_1_1IndexSpace" prot="public" virt="non-virtual">amrex::EB2::IndexSpace</basecompoundref>
    <includes refid="AMReX__EB2_8H" local="no">AMReX_EB2.H</includes>
    <templateparamlist>
      <param>
        <type>typename G</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a025225cea3416a0f7b91e3c5e8424f59" prot="public" static="no">
        <type>typename G::FunctionType</type>
        <definition>using amrex::EB2::IndexSpaceImp&lt; G &gt;::F =  typename G::FunctionType</definition>
        <argsstring></argsstring>
        <name>F</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="94" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a7a8604de6a8c669b0b0f2801226fb4e6" prot="private" static="no" mutable="no">
        <type>G</type>
        <definition>G amrex::EB2::IndexSpaceImp&lt; G &gt;::m_gshop</definition>
        <argsstring></argsstring>
        <name>m_gshop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="98" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1ac61a177a98e7db517cf368ca8e901a68" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::IndexSpaceImp&lt; G &gt;::m_build_coarse_level_by_coarsening</definition>
        <argsstring></argsstring>
        <name>m_build_coarse_level_by_coarsening</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="99" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a9f74df8f16a93bd17f000fc12040400c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::IndexSpaceImp&lt; G &gt;::m_extend_domain_face</definition>
        <argsstring></argsstring>
        <name>m_extend_domain_face</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="100" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a53bf89272eec625e5a81c23b9a555615" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::IndexSpaceImp&lt; G &gt;::m_num_coarsen_opt</definition>
        <argsstring></argsstring>
        <name>m_num_coarsen_opt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="101" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1EB2_1_1GShopLevel" kindref="compound">GShopLevel</ref>&lt; G &gt; &gt;</type>
        <definition>Vector&lt;GShopLevel&lt;G&gt; &gt; amrex::EB2::IndexSpaceImp&lt; G &gt;::m_gslevel</definition>
        <argsstring></argsstring>
        <name>m_gslevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="103" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt;</type>
        <definition>Vector&lt;Geometry&gt; amrex::EB2::IndexSpaceImp&lt; G &gt;::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="104" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a961c595a3d22b06da38b244becb9f3e3" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>Vector&lt;Box&gt; amrex::EB2::IndexSpaceImp&lt; G &gt;::m_domain</definition>
        <argsstring></argsstring>
        <name>m_domain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="105" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::EB2::IndexSpaceImp&lt; G &gt;::m_ngrow</definition>
        <argsstring></argsstring>
        <name>m_ngrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="106" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1ad6b841229e1fb87dc97f4ee2845ec152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IndexSpaceImp::IndexSpaceImp</definition>
        <argsstring>(const G &amp;gshop, const Geometry &amp;geom, int required_coarsening_level, int max_coarsening_level, int ngrow, bool build_coarse_level_by_coarsening, bool extend_domain_face, int num_coarsen_opt)</argsstring>
        <name>IndexSpaceImp</name>
        <param>
          <type>const G &amp;</type>
          <declname>gshop</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>required_coarsening_level</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_coarsening_level</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>build_coarse_level_by_coarsening</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend_domain_face</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_coarsen_opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="74" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H" bodystart="3" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a6797ef86d23bba92fa8a6479d8bfac51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::IndexSpaceImp&lt; G &gt;::IndexSpaceImp</definition>
        <argsstring>(IndexSpaceImp&lt; G &gt; const &amp;)=delete</argsstring>
        <name>IndexSpaceImp</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp" kindref="compound">IndexSpaceImp</ref>&lt; G &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="79" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1ac2dc5fdef32fb9bbd2843e6b2d91ac97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::IndexSpaceImp&lt; G &gt;::IndexSpaceImp</definition>
        <argsstring>(IndexSpaceImp&lt; G &gt; &amp;&amp;)=delete</argsstring>
        <name>IndexSpaceImp</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp" kindref="compound">IndexSpaceImp</ref>&lt; G &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="80" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1acd1ec386ca611eae4f102c7bc4562168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::IndexSpaceImp&lt; G &gt;::operator=</definition>
        <argsstring>(IndexSpaceImp&lt; G &gt; const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp" kindref="compound">IndexSpaceImp</ref>&lt; G &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1af6b6248eceb701c542539a952c5808d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::IndexSpaceImp&lt; G &gt;::operator=</definition>
        <argsstring>(IndexSpaceImp&lt; G &gt; &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpaceImp" kindref="compound">IndexSpaceImp</ref>&lt; G &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a558c69009ebc8f80f380a6578604e27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::IndexSpaceImp&lt; G &gt;::~IndexSpaceImp</definition>
        <argsstring>() override=default</argsstring>
        <name>~IndexSpaceImp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="84" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a1eeaab4266c11166a3072eea2f888f52" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
        <definition>const Level &amp; IndexSpaceImp::getLevel</definition>
        <argsstring>(const Geometry &amp;geom) const final</argsstring>
        <name>getLevel</name>
        <reimplements refid="classamrex_1_1EB2_1_1IndexSpace_1a71aa6d39a145bc12424b2fc6c9a7e015">getLevel</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="86" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1ac216284322537eefb6a3817e784a716d" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
        <definition>const Geometry &amp; IndexSpaceImp::getGeometry</definition>
        <argsstring>(const Box &amp;dom) const final</argsstring>
        <name>getGeometry</name>
        <reimplements refid="classamrex_1_1EB2_1_1IndexSpace_1a683092cb9c842fb986c79f0aedcd05bb">getGeometry</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>dom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="87" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a9be6074a1d3f4bfd16e454eda2e4acc3" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
        <definition>const Box&amp; amrex::EB2::IndexSpaceImp&lt; G &gt;::coarsestDomain</definition>
        <argsstring>() const final</argsstring>
        <name>coarsestDomain</name>
        <reimplements refid="classamrex_1_1EB2_1_1IndexSpace_1a7795703119c27937004c54f50532a369">coarsestDomain</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="88" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a5be42585336a617690b28a56e5c3bc1e" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void IndexSpaceImp::addFineLevels</definition>
        <argsstring>(int num_new_fine_levels) final</argsstring>
        <name>addFineLevels</name>
        <reimplements refid="classamrex_1_1EB2_1_1IndexSpace_1a346cc897525e434cd311f4b303d6b898">addFineLevels</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_new_fine_levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="91" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H" bodystart="86" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpaceImp_1a6a7071824d8cf842a187f86b15683537" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void IndexSpaceImp::addRegularCoarseLevels</definition>
        <argsstring>(int num_new_coarse_levels) final</argsstring>
        <name>addRegularCoarseLevels</name>
        <reimplements refid="classamrex_1_1EB2_1_1IndexSpace_1a7fb0a3782aceccca024eebde7a8b292b">addRegularCoarseLevels</reimplements>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_new_coarse_levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="92" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpaceI.H" bodystart="112" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
      </node>
      <node id="1">
        <label>amrex::EB2::IndexSpaceImp&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpaceImp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::EB2::IndexSpaceImp&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpaceImp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_gslevel</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_domain</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; amrex::EB2::GShopLevel&lt; G &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" line="69" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H" bodystart="71" bodyend="107"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a5be42585336a617690b28a56e5c3bc1e" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>addFineLevels</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a6a7071824d8cf842a187f86b15683537" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>addRegularCoarseLevels</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1ac2b149fea822702476a70d1b12ae2f21" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>clear</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a9be6074a1d3f4bfd16e454eda2e4acc3" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>coarsestDomain</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a7ebc7ce80aded82313b3f96ba0f14d8e" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>empty</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1aff6283995254b7660c80cd420d99886b" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>erase</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a025225cea3416a0f7b91e3c5e8424f59" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>F</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ac216284322537eefb6a3817e784a716d" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>getGeometry</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a1eeaab4266c11166a3072eea2f888f52" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>getLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a2a72ea2c766a09d49b74420005f4f700" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>IndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1afd623b9a8ba399823e33335841e30a20" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>IndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a08a6bcc75e45852b005fe627095155fe" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>IndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ad6b841229e1fb87dc97f4ee2845ec152" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>IndexSpaceImp</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a6797ef86d23bba92fa8a6479d8bfac51" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>IndexSpaceImp</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ac2dc5fdef32fb9bbd2843e6b2d91ac97" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>IndexSpaceImp</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1ac61a177a98e7db517cf368ca8e901a68" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_build_coarse_level_by_coarsening</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a961c595a3d22b06da38b244becb9f3e3" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_domain</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a9f74df8f16a93bd17f000fc12040400c" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_extend_domain_face</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a67b71508a8ce8db6d5ab58b35d00beab" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a7a8604de6a8c669b0b0f2801226fb4e6" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_gshop</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a472b17e9e1003aa3003cc26d234bc926" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_gslevel</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a8534fa5e1a19e2e1f6fbcfb162a8460a" prot="protected" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_instance</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a49bcede42d9af444fdc2894b3454b63a" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a53bf89272eec625e5a81c23b9a555615" prot="private" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>m_num_coarsen_opt</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1acd1ec386ca611eae4f102c7bc4562168" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1af6b6248eceb701c542539a952c5808d8" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a634dcb439936cae4f084050779828d68" prot="public" virt="non-virtual" ambiguityscope="amrex::EB2::IndexSpace::"><scope>amrex::EB2::IndexSpaceImp</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a03d5014d0330b1c49aa2b0deca0adf9e" prot="public" virt="non-virtual" ambiguityscope="amrex::EB2::IndexSpace::"><scope>amrex::EB2::IndexSpaceImp</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a45b714be9d0d45f3ecb339085a73c6ec" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>pop</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a5a3c0ce524a4c0bff9901548d9e8648d" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>push</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1aa263203c4d632942992a81436d22d658" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>size</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1ad17160a9839f2d64ac20460b4cefbaee" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>top</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1aa8956b4011dc91c2a886fdaf701cce58" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>~IndexSpace</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a558c69009ebc8f80f380a6578604e27c" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpaceImp</scope><name>~IndexSpaceImp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
