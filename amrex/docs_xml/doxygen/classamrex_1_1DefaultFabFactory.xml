<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1DefaultFabFactory" kind="class" language="C++" prot="public">
    <compoundname>amrex::DefaultFabFactory</compoundname>
    <basecompoundref refid="classamrex_1_1FabFactory" prot="public" virt="non-virtual">amrex::FabFactory&lt; FAB &gt;</basecompoundref>
    <includes refid="AMReX__FabFactory_8H" local="no">AMReX_FabFactory.H</includes>
    <templateparamlist>
      <param>
        <type>class FAB</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1DefaultFabFactory_1a014f5ec07685d3cbf4cae50d1081d876" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>FAB *</type>
        <definition>virtual FAB* amrex::DefaultFabFactory&lt; FAB &gt;::create</definition>
        <argsstring>(const Box &amp;box, int ncomps, const FabInfo &amp;info, int) const override</argsstring>
        <name>create</name>
        <reimplements refid="classamrex_1_1FabFactory_1aa4b55a312064a0753e8dc73e8ea28d7f">create</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomps</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1FabInfo" kindref="compound">FabInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" line="62" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1DefaultFabFactory_1a046e151123bc87b479ba622614c1d429" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>FAB *</type>
        <definition>virtual FAB* amrex::DefaultFabFactory&lt; FAB &gt;::create_alias</definition>
        <argsstring>(FAB const &amp;rhs, int scomp, int ncomp) const override</argsstring>
        <name>create_alias</name>
        <reimplements refid="classamrex_1_1FabFactory_1a60dc48e65c771e9a35f43d4be52a9d99">create_alias</reimplements>
        <param>
          <type>FAB const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" line="67" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1DefaultFabFactory_1a1d92b6711d7c4908085808da6ac00f0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::DefaultFabFactory&lt; FAB &gt;::destroy</definition>
        <argsstring>(FAB *fab) const override</argsstring>
        <name>destroy</name>
        <reimplements refid="classamrex_1_1FabFactory_1a62e57972e3054a6f7ed1cdb9c0426c09">destroy</reimplements>
        <param>
          <type>FAB *</type>
          <declname>fab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" line="72" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1DefaultFabFactory_1ac033082bbbb1e30c67704903223c955f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classamrex_1_1DefaultFabFactory" kindref="compound">DefaultFabFactory</ref>&lt; FAB &gt; *</type>
        <definition>virtual DefaultFabFactory&lt;FAB&gt;* amrex::DefaultFabFactory&lt; FAB &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classamrex_1_1FabFactory_1a16e2317a8e500a4a1bc7ad6c64fcc892">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" line="77" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1181">
        <label>amrex::FabFactory&lt; FAB &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="1180">
        <label>amrex::DefaultFabFactory&lt; FAB &gt;</label>
        <link refid="classamrex_1_1DefaultFabFactory"/>
        <childnode refid="1181" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1183">
        <label>amrex::FabFactory&lt; FAB &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="1182">
        <label>amrex::DefaultFabFactory&lt; FAB &gt;</label>
        <link refid="classamrex_1_1DefaultFabFactory"/>
        <childnode refid="1183" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabFactory.H" bodystart="58" bodyend="80"/>
    <listofallmembers>
      <member refid="classamrex_1_1DefaultFabFactory_1ac033082bbbb1e30c67704903223c955f" prot="public" virt="virtual"><scope>amrex::DefaultFabFactory</scope><name>clone</name></member>
      <member refid="classamrex_1_1DefaultFabFactory_1a014f5ec07685d3cbf4cae50d1081d876" prot="public" virt="virtual"><scope>amrex::DefaultFabFactory</scope><name>create</name></member>
      <member refid="classamrex_1_1DefaultFabFactory_1a046e151123bc87b479ba622614c1d429" prot="public" virt="virtual"><scope>amrex::DefaultFabFactory</scope><name>create_alias</name></member>
      <member refid="classamrex_1_1DefaultFabFactory_1a1d92b6711d7c4908085808da6ac00f0d" prot="public" virt="virtual"><scope>amrex::DefaultFabFactory</scope><name>destroy</name></member>
      <member refid="classamrex_1_1FabFactory_1af726b92f11c995d2a3225f3fa8a0754b" prot="public" virt="virtual"><scope>amrex::DefaultFabFactory</scope><name>~FabFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
