<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1detail_1_1CTOWrapper" kind="struct" language="C++" prot="public">
    <compoundname>amrex::detail::CTOWrapper</compoundname>
    <includes refid="AMReX__CTOParallelForImpl_8H" local="no">AMReX_CTOParallelForImpl.H</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref></type>
      </param>
      <param>
        <type>int...</type>
        <declname>ctr</declname>
        <defname>ctr</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1detail_1_1CTOWrapper_1aa628df27155d3f0063cee5a0d8f8a9ee" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref></type>
        <definition>F amrex::detail::CTOWrapper&lt; F, ctr &gt;::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>amrex::detail::CTOWrapper::f</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" line="29" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" bodystart="29" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1detail_1_1CTOWrapper_1a2f05d18c4a173c5d24e6f716f5c4b05f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> auto</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE auto amrex::detail::CTOWrapper&lt; F, ctr &gt;::operator()</definition>
        <argsstring>(Args... args) const noexcept -&gt; decltype(f(args..., std::integral_constant&lt; int, ctr &gt;{}...))</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::detail::CTOWrapper::operator()</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" line="33" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" bodystart="33" bodyend="36"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structamrex_1_1detail_1_1CTOWrapper_1ab0e9071ffab87020e3baafa2260d75d5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> static <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> constexpr std::array&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, sizeof...(ctr)&gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE static AMREX_FORCE_INLINE constexpr std::array&lt; int, sizeof...(ctr)&gt; amrex::detail::CTOWrapper&lt; F, ctr &gt;::GetOptions</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOptions</name>
        <qualifiedname>amrex::detail::CTOWrapper::GetOptions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" line="40" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" bodystart="40" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" line="28" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_CTOParallelForImpl.H" bodystart="28" bodyend="43"/>
    <listofallmembers>
      <member refid="structamrex_1_1detail_1_1CTOWrapper_1aa628df27155d3f0063cee5a0d8f8a9ee" prot="public" virt="non-virtual"><scope>amrex::detail::CTOWrapper</scope><name>f</name></member>
      <member refid="structamrex_1_1detail_1_1CTOWrapper_1ab0e9071ffab87020e3baafa2260d75d5" prot="public" virt="non-virtual"><scope>amrex::detail::CTOWrapper</scope><name>GetOptions</name></member>
      <member refid="structamrex_1_1detail_1_1CTOWrapper_1a2f05d18c4a173c5d24e6f716f5c4b05f" prot="public" virt="non-virtual"><scope>amrex::detail::CTOWrapper</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
