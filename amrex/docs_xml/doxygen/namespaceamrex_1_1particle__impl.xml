<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1particle__impl" kind="namespace" language="C++">
    <compoundname>amrex::particle_impl</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1a89c52b4a740a4a85cd47b1564c2e6b36" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ Long</type>
        <definition>__host__ __device__ Long amrex::particle_impl::unpack_id</definition>
        <argsstring>(const uint64_t idcpu) noexcept</argsstring>
        <name>unpack_id</name>
        <qualifiedname>amrex::particle_impl::unpack_id</qualifiedname>
        <param>
          <type>const uint64_t</type>
          <declname>idcpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="40" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1ad9c8e52f5a0f065e525b1b356fc2417c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int amrex::particle_impl::unpack_cpu</definition>
        <argsstring>(const uint64_t idcpu) noexcept</argsstring>
        <name>unpack_cpu</name>
        <qualifiedname>amrex::particle_impl::unpack_cpu</qualifiedname>
        <param>
          <type>const uint64_t</type>
          <declname>idcpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="52" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1ac13154e3fb5c536fb5967348b901b006" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::particle_impl::pack_id</definition>
        <argsstring>(uint64_t &amp;idcpu, const Long id) noexcept</argsstring>
        <name>pack_id</name>
        <qualifiedname>amrex::particle_impl::pack_id</qualifiedname>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idcpu</declname>
        </param>
        <param>
          <type>const Long</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="57" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="57" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1a2f37628a1f4c2c11cda152a4484baf1d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::particle_impl::pack_cpu</definition>
        <argsstring>(uint64_t &amp;idcpu, const int cpu) noexcept</argsstring>
        <name>pack_cpu</name>
        <qualifiedname>amrex::particle_impl::pack_cpu</qualifiedname>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idcpu</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="81" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1a774063d39265e65e27aac6c64d391e98" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::particle_impl::make_invalid</definition>
        <argsstring>(uint64_t &amp;idcpu) noexcept</argsstring>
        <name>make_invalid</name>
        <qualifiedname>amrex::particle_impl::make_invalid</qualifiedname>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idcpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="92" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1a233cf92cab458144236c5de9ba67edcb" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_SIMD</type>
          </param>
          <param>
            <type>typename T_Mask</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::particle_impl::make_invalid</definition>
        <argsstring>(T_SIMD &amp;idcpu, T_Mask const &amp;mask) noexcept</argsstring>
        <name>make_invalid</name>
        <qualifiedname>amrex::particle_impl::make_invalid</qualifiedname>
        <param>
          <type>T_SIMD &amp;</type>
          <declname>idcpu</declname>
        </param>
        <param>
          <type>T_Mask const &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="99" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="99" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1aa6cedd9f96ac7c0a768a47d2c2d6a0d9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::particle_impl::make_valid</definition>
        <argsstring>(uint64_t &amp;idcpu) noexcept</argsstring>
        <name>make_valid</name>
        <qualifiedname>amrex::particle_impl::make_valid</qualifiedname>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idcpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="119" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1acd675ff9bd7f5b24198d529010f7dc60" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_SIMD</type>
          </param>
          <param>
            <type>typename T_Mask</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void amrex::particle_impl::make_valid</definition>
        <argsstring>(T_SIMD &amp;idcpu, T_Mask const &amp;mask) noexcept</argsstring>
        <name>make_valid</name>
        <qualifiedname>amrex::particle_impl::make_valid</qualifiedname>
        <param>
          <type>T_SIMD &amp;</type>
          <declname>idcpu</declname>
        </param>
        <param>
          <type>T_Mask const &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="126" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="126" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1particle__impl_1a33d1b5ccc695ebc30eaf322a52060a8c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ bool</type>
        <definition>__host__ __device__ bool amrex::particle_impl::is_valid</definition>
        <argsstring>(const uint64_t idcpu) noexcept</argsstring>
        <name>is_valid</name>
        <qualifiedname>amrex::particle_impl::is_valid</qualifiedname>
        <param>
          <type>const uint64_t</type>
          <declname>idcpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="146" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="146" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="37" column="5"/>
  </compounddef>
</doxygen>
