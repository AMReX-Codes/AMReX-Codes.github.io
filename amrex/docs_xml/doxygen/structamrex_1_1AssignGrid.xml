<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1AssignGrid" kind="struct" language="C++" prot="public">
    <compoundname>amrex::AssignGrid</compoundname>
    <includes refid="AMReX__ParticleLocator_8H" local="no">AMReX_ParticleLocator.H</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>BinIteratorFactory</declname>
        <defname>BinIteratorFactory</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1a77181b274a07f3858b98e49e102d95b7" prot="public" static="no" mutable="no">
        <type>BinIteratorFactory</type>
        <definition>BinIteratorFactory amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_bif</definition>
        <argsstring></argsstring>
        <name>m_bif</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1ac8bd9341afb3f160f473cb0fd99cc08f" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref></type>
        <definition>Dim3 amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_lo</definition>
        <argsstring></argsstring>
        <name>m_lo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1a04a974104c8e2ebf50030babf23932f9" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref></type>
        <definition>Dim3 amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_hi</definition>
        <argsstring></argsstring>
        <name>m_hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1a3bf69089e03f40d7b20e53cee6099727" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref></type>
        <definition>Dim3 amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_bin_size</definition>
        <argsstring></argsstring>
        <name>m_bin_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1a672f876e039fdebfbbb5480878ba4d60" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref></type>
        <definition>Dim3 amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_num_bins</definition>
        <argsstring></argsstring>
        <name>m_num_bins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1a63782cb4dceff5b3b6df900b00e1ba81" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_domain</definition>
        <argsstring></argsstring>
        <name>m_domain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="22" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1acb8a58c814cd584552c2534852e7228b" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, AMREX_SPACEDIM &gt;</type>
        <definition>GpuArray&lt;Real, AMREX_SPACEDIM&gt; amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_plo</definition>
        <argsstring></argsstring>
        <name>m_plo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1AssignGrid_1aa2da3c10930c77c48d235ae5324a5bdd" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, AMREX_SPACEDIM &gt;</type>
        <definition>GpuArray&lt;Real, AMREX_SPACEDIM&gt; amrex::AssignGrid&lt; BinIteratorFactory &gt;::m_dxi</definition>
        <argsstring></argsstring>
        <name>m_dxi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="24" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1AssignGrid_1acb89a29bbc493433c72a9825debeb88b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::AssignGrid&lt; BinIteratorFactory &gt;::AssignGrid</definition>
        <argsstring>()</argsstring>
        <name>AssignGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1AssignGrid_1a24db83c35c302d84990f03e69c03df17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::AssignGrid&lt; BinIteratorFactory &gt;::AssignGrid</definition>
        <argsstring>(BinIteratorFactory a_bif, const IntVect &amp;a_bins_lo, const IntVect &amp;a_bins_hi, const IntVect &amp;a_bin_size, const IntVect &amp;a_num_bins, const Geometry &amp;a_geom)</argsstring>
        <name>AssignGrid</name>
        <param>
          <type>BinIteratorFactory</type>
          <declname>a_bif</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>a_bins_lo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>a_bins_hi</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>a_bin_size</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>a_num_bins</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>a_geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="29" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1AssignGrid_1aeeeff45d30fbcfa02cf857a230de1333" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE int amrex::AssignGrid&lt; BinIteratorFactory &gt;::operator()</definition>
        <argsstring>(const P &amp;p, int nGrow=0) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="49" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1AssignGrid_1a9419d75629148fc18d2272e774ec5fda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE int amrex::AssignGrid&lt; BinIteratorFactory &gt;::operator()</definition>
        <argsstring>(const IntVect &amp;iv, int nGrow=0) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>iv</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="56" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="56" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="488">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="488" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="483">
        <label>amrex::AssignGrid&lt; BinIteratorFactory &gt;</label>
        <link refid="structamrex_1_1AssignGrid"/>
        <childnode refid="484" relation="usage">
          <edgelabel>m_hi</edgelabel>
          <edgelabel>m_bin_size</edgelabel>
          <edgelabel>m_lo</edgelabel>
          <edgelabel>m_num_bins</edgelabel>
        </childnode>
        <childnode refid="485" relation="usage">
          <edgelabel>m_plo</edgelabel>
          <edgelabel>m_dxi</edgelabel>
        </childnode>
        <childnode refid="487" relation="usage">
          <edgelabel>m_domain</edgelabel>
        </childnode>
      </node>
      <node id="486">
        <label>Real</label>
      </node>
      <node id="484">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="487">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="488" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="489" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="485">
        <label>amrex::GpuArray&lt; Real, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
        <childnode refid="486" relation="usage">
          <edgelabel>arr</edgelabel>
        </childnode>
      </node>
      <node id="489">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" line="14" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H" bodystart="13" bodyend="82"/>
    <listofallmembers>
      <member refid="structamrex_1_1AssignGrid_1acb89a29bbc493433c72a9825debeb88b" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>AssignGrid</name></member>
      <member refid="structamrex_1_1AssignGrid_1a24db83c35c302d84990f03e69c03df17" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>AssignGrid</name></member>
      <member refid="structamrex_1_1AssignGrid_1a77181b274a07f3858b98e49e102d95b7" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_bif</name></member>
      <member refid="structamrex_1_1AssignGrid_1a3bf69089e03f40d7b20e53cee6099727" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_bin_size</name></member>
      <member refid="structamrex_1_1AssignGrid_1a63782cb4dceff5b3b6df900b00e1ba81" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_domain</name></member>
      <member refid="structamrex_1_1AssignGrid_1aa2da3c10930c77c48d235ae5324a5bdd" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_dxi</name></member>
      <member refid="structamrex_1_1AssignGrid_1a04a974104c8e2ebf50030babf23932f9" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_hi</name></member>
      <member refid="structamrex_1_1AssignGrid_1ac8bd9341afb3f160f473cb0fd99cc08f" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_lo</name></member>
      <member refid="structamrex_1_1AssignGrid_1a672f876e039fdebfbbb5480878ba4d60" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_num_bins</name></member>
      <member refid="structamrex_1_1AssignGrid_1acb8a58c814cd584552c2534852e7228b" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>m_plo</name></member>
      <member refid="structamrex_1_1AssignGrid_1aeeeff45d30fbcfa02cf857a230de1333" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>operator()</name></member>
      <member refid="structamrex_1_1AssignGrid_1a9419d75629148fc18d2272e774ec5fda" prot="public" virt="non-virtual"><scope>amrex::AssignGrid</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
