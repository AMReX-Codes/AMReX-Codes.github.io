<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1PhysBCFunct" kind="class" language="C++" prot="public">
    <compoundname>amrex::PhysBCFunct</compoundname>
    <basecompoundref refid="classamrex_1_1PhysBCFunctBase" prot="public" virt="non-virtual">amrex::PhysBCFunctBase</basecompoundref>
    <includes refid="AMReX__PhysBCFunct_8H" local="no">AMReX_PhysBCFunct.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunct_1aa6747659911e4c8cbc65903a9a9f1632" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::PhysBCFunct&lt; F &gt;::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="173" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunct_1a482d13bca7d063a552a82874e7a9f1d8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt;</type>
        <definition>Vector&lt;BCRec&gt; amrex::PhysBCFunct&lt; F &gt;::m_bcr</definition>
        <argsstring></argsstring>
        <name>m_bcr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="174" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunct_1aa7438c9a59f4d903792ac05b8a9f796e" prot="private" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::PhysBCFunct&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="175" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1ae66bdbaeca3f3c882678007689ca195c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunct&lt; F &gt;::PhysBCFunct</definition>
        <argsstring>()</argsstring>
        <name>PhysBCFunct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="119" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a39b89bb30f1abba7495122150108a927" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunct&lt; F &gt;::PhysBCFunct</definition>
        <argsstring>(const Geometry &amp;geom, const Vector&lt; BCRec &gt; &amp;bcr, F const &amp;f)</argsstring>
        <name>PhysBCFunct</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="121" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a757d3f880168d741648fada40531ba09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::PhysBCFunct&lt; F &gt;::~PhysBCFunct</definition>
        <argsstring>()</argsstring>
        <name>~PhysBCFunct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="125" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a0adac7662b5c3b8d10a5dbdd162d160a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PhysBCFunct&lt; F &gt;::define</definition>
        <argsstring>(const Geometry &amp;geom, const Vector&lt; BCRec &gt; &amp;bcr, F const &amp;f)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="127" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1ab0a5d612dc153f7eec7924c768bcc0fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::PhysBCFunct&lt; F &gt;::FillBoundary</definition>
        <argsstring>(MultiFab &amp;mf, int icomp, int ncomp, Real time, int bccomp) override</argsstring>
        <name>FillBoundary</name>
        <reimplements refid="classamrex_1_1PhysBCFunctBase_1a4b8653ca33cbe6bbe803ece73d5d6162">FillBoundary</reimplements>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bccomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>note this is pure virtual and must be implemented in a derived class (see <ref refid="classamrex_1_1PhysBCFunct" kindref="compound">PhysBCFunct</ref> below for an example) </para>        </detaileddescription>
        <inbodydescription>
<para>create a grown domain box containing valid + periodic cells</para><para>if there are cells not in the valid + periodic grown box we need to fill them here</para><para>Based on <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> for the domain, we need to make <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> for this <ref refid="classamrex_1_1Box" kindref="compound">Box</ref></para><para>Note that we pass 0 as starting component of bcrs. </para>        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="131" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="131" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5727">
        <label>amrex::PhysBCFunctBase</label>
        <link refid="classamrex_1_1PhysBCFunctBase"/>
      </node>
      <node id="5726">
        <label>amrex::PhysBCFunct&lt; F &gt;</label>
        <link refid="classamrex_1_1PhysBCFunct"/>
        <childnode refid="5727" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5735">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="5735" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="5729">
        <label>amrex::PhysBCFunctBase</label>
        <link refid="classamrex_1_1PhysBCFunctBase"/>
      </node>
      <node id="5732">
        <label>Real</label>
      </node>
      <node id="5738">
        <label>std::vector&lt; amrex::BCRec, std::allocator&lt; amrex::BCRec &gt; &gt;</label>
      </node>
      <node id="5737">
        <label>amrex::Vector&lt; amrex::BCRec &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5733">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="5732" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="5734">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="5735" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="5736" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="5731">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="5732" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="5736">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="5730">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="5731" relation="public-inheritance">
        </childnode>
        <childnode refid="5733" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="5734" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="5728">
        <label>amrex::PhysBCFunct&lt; F &gt;</label>
        <link refid="classamrex_1_1PhysBCFunct"/>
        <childnode refid="5729" relation="public-inheritance">
        </childnode>
        <childnode refid="5730" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="5737" relation="usage">
          <edgelabel>m_bcr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" line="117" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="115" bodyend="176"/>
    <listofallmembers>
      <member refid="classamrex_1_1PhysBCFunct_1a0adac7662b5c3b8d10a5dbdd162d160a" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>define</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1ab0a5d612dc153f7eec7924c768bcc0fe" prot="public" virt="virtual"><scope>amrex::PhysBCFunct</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a482d13bca7d063a552a82874e7a9f1d8" prot="private" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>m_bcr</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1aa7438c9a59f4d903792ac05b8a9f796e" prot="private" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>m_f</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1aa6747659911e4c8cbc65903a9a9f1632" prot="private" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1ae66bdbaeca3f3c882678007689ca195c" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>PhysBCFunct</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a39b89bb30f1abba7495122150108a927" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>PhysBCFunct</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a757d3f880168d741648fada40531ba09" prot="public" virt="virtual"><scope>amrex::PhysBCFunct</scope><name>~PhysBCFunct</name></member>
      <member refid="classamrex_1_1PhysBCFunctBase_1a54055fe52e2bf47cb3e148ce4d644523" prot="public" virt="pure-virtual"><scope>amrex::PhysBCFunct</scope><name>~PhysBCFunctBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
