<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1PhysBCFunct" kind="class" language="C++" prot="public">
    <compoundname>amrex::PhysBCFunct</compoundname>
    <includes refid="AMReX__PhysBCFunct_8H" local="no">AMReX_PhysBCFunct.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunct_1aa6747659911e4c8cbc65903a9a9f1632" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::PhysBCFunct&lt; F &gt;::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="187" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunct_1a482d13bca7d063a552a82874e7a9f1d8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt;</type>
        <definition>Vector&lt;BCRec&gt; amrex::PhysBCFunct&lt; F &gt;::m_bcr</definition>
        <argsstring></argsstring>
        <name>m_bcr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="188" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunct_1aa7438c9a59f4d903792ac05b8a9f796e" prot="private" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::PhysBCFunct&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="189" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1ae66bdbaeca3f3c882678007689ca195c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunct&lt; F &gt;::PhysBCFunct</definition>
        <argsstring>()</argsstring>
        <name>PhysBCFunct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="119" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a39b89bb30f1abba7495122150108a927" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunct&lt; F &gt;::PhysBCFunct</definition>
        <argsstring>(const Geometry &amp;geom, const Vector&lt; BCRec &gt; &amp;bcr, F const &amp;f)</argsstring>
        <name>PhysBCFunct</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="121" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a754509e10fc630761839c420246a3ebe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunct&lt; F &gt;::PhysBCFunct</definition>
        <argsstring>(const Geometry &amp;geom, const Vector&lt; BCRec &gt; &amp;bcr, F &amp;&amp;f)</argsstring>
        <name>PhysBCFunct</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="125" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a226c53b2f8777732481728fe30e8c75a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunct&lt; F &gt;::~PhysBCFunct</definition>
        <argsstring>()</argsstring>
        <name>~PhysBCFunct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="129" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a0adac7662b5c3b8d10a5dbdd162d160a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PhysBCFunct&lt; F &gt;::define</definition>
        <argsstring>(const Geometry &amp;geom, const Vector&lt; BCRec &gt; &amp;bcr, F const &amp;f)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="131" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a177c1fbcdfe190ab489d7fb911028a27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PhysBCFunct&lt; F &gt;::define</definition>
        <argsstring>(const Geometry &amp;geom, const Vector&lt; BCRec &gt; &amp;bcr, F &amp;&amp;f)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="135" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a5afe16630bdd3077df15809934231f0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PhysBCFunct&lt; F &gt;::operator()</definition>
        <argsstring>(MultiFab &amp;mf, int icomp, int ncomp, IntVect const &amp;nghost, Real time, int bccomp)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>icomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bccomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>create a grown domain box containing valid + periodic cells</para><para>if there are cells not in the valid + periodic grown box we need to fill them here</para><para>Based on <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> for the domain, we need to make <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> for this <ref refid="classamrex_1_1Box" kindref="compound">Box</ref></para><para>Note that we pass 0 as starting component of bcrs. </para>        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="139" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="139" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunct_1a93a78142b4553d862dfcd1b7413c0555" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PhysBCFunct&lt; F &gt;::FillBoundary</definition>
        <argsstring>(MultiFab &amp;mf, int dcomp, int ncomp, IntVect const &amp;nghost, Real time, int bccomp)</argsstring>
        <name>FillBoundary</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bccomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="181" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="181" bodyend="184"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4309">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="4309" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4306">
        <label>Real</label>
      </node>
      <node id="4312">
        <label>std::vector&lt; amrex::BCRec, std::allocator&lt; amrex::BCRec &gt; &gt;</label>
      </node>
      <node id="4311">
        <label>amrex::Vector&lt; amrex::BCRec &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4312" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4307">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4306" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="4308">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="4309" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="4310" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="4305">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4306" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="4310">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="4304">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="4305" relation="public-inheritance">
        </childnode>
        <childnode refid="4307" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="4308" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="4303">
        <label>amrex::PhysBCFunct&lt; F &gt;</label>
        <link refid="classamrex_1_1PhysBCFunct"/>
        <childnode refid="4304" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="4311" relation="usage">
          <edgelabel>m_bcr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="117" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="116" bodyend="190"/>
    <listofallmembers>
      <member refid="classamrex_1_1PhysBCFunct_1a0adac7662b5c3b8d10a5dbdd162d160a" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>define</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a177c1fbcdfe190ab489d7fb911028a27" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>define</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a93a78142b4553d862dfcd1b7413c0555" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>FillBoundary</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a482d13bca7d063a552a82874e7a9f1d8" prot="private" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>m_bcr</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1aa7438c9a59f4d903792ac05b8a9f796e" prot="private" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>m_f</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1aa6747659911e4c8cbc65903a9a9f1632" prot="private" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a5afe16630bdd3077df15809934231f0c" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>operator()</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1ae66bdbaeca3f3c882678007689ca195c" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>PhysBCFunct</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a39b89bb30f1abba7495122150108a927" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>PhysBCFunct</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a754509e10fc630761839c420246a3ebe" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>PhysBCFunct</name></member>
      <member refid="classamrex_1_1PhysBCFunct_1a226c53b2f8777732481728fe30e8c75a" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunct</scope><name>~PhysBCFunct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
