<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1CellConservativeLinear" kind="class" language="C++" prot="public">
    <compoundname>amrex::CellConservativeLinear</compoundname>
    <basecompoundref refid="classamrex_1_1Interpolater" prot="public" virt="non-virtual">amrex::Interpolater</basecompoundref>
    <derivedcompoundref refid="classamrex_1_1EBCellConservativeLinear" prot="public" virt="non-virtual">amrex::EBCellConservativeLinear</derivedcompoundref>
    <includes refid="AMReX__Interpolater_8H" local="no">AMReX_Interpolater.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1CellConservativeLinear_1a7817252503faedf1d87fcbdcc89c3509" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::CellConservativeLinear::do_linear_limiting</definition>
        <argsstring></argsstring>
        <name>do_linear_limiting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="326" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" bodystart="326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1CellConservativeLinear_1a47aef6594f54746b09c4230b68f4e978" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::CellConservativeLinear::CellConservativeLinear</definition>
        <argsstring>(bool do_linear_limiting_=true)</argsstring>
        <name>CellConservativeLinear</name>
        <param>
          <type>bool</type>
          <declname>do_linear_limiting_</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>The constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>do_linear_limiting_</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="283" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellConservativeLinear_1a6d6fcd6f8a4397afacebc3e357fa70e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::CellConservativeLinear::~CellConservativeLinear</definition>
        <argsstring>() override</argsstring>
        <name>~CellConservativeLinear</name>
        <briefdescription>
<para>The destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="288" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="322" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellConservativeLinear_1aeec138a1454f98de65aa6ec019a1cdc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::CellConservativeLinear::CoarseBox</definition>
        <argsstring>(const Box &amp;fine, int ratio) override</argsstring>
        <name>CoarseBox</name>
        <reimplements refid="classamrex_1_1Interpolater_1aa19cea2a6579112e6cf2fa2fb52ba6b6">CoarseBox</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Returns coarsened box given fine box and refinement ratio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="296" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="335" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellConservativeLinear_1ac9afd317e78f1c6d5581c251a9afe819" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::CellConservativeLinear::CoarseBox</definition>
        <argsstring>(const Box &amp;fine, const IntVect &amp;ratio) override</argsstring>
        <name>CoarseBox</name>
        <reimplements refid="classamrex_1_1Interpolater_1a8afbd6f779bee1ec37defb7c0f03deb5">CoarseBox</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Returns coarsened box given fine box and refinement ratio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="305" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="326" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellConservativeLinear_1a13a7efe51d0c733078c1a313bcfa4efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::CellConservativeLinear::interp</definition>
        <argsstring>(const FArrayBox &amp;crse, int crse_comp, FArrayBox &amp;fine, int fine_comp, int ncomp, const Box &amp;fine_region, const IntVect &amp;ratio, const Geometry &amp;crse_geom, const Geometry &amp;fine_geom, Vector&lt; BCRec &gt; const &amp;bcr, int, int, RunOn gpu_or_cpu) override</argsstring>
        <name>interp</name>
        <reimplements refid="classamrex_1_1Interpolater_1ab7e7a9cccec912ca707efd4fe1653da1">interp</reimplements>
        <reimplementedby refid="classamrex_1_1EBCellConservativeLinear_1ad3edaef28f532a7f1a102272a6fa4436">interp</reimplementedby>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>crse_comp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fine_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine_region</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>fine_geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>gpu_or_cpu</declname>
        </param>
        <briefdescription>
<para>Coarse to fine interpolation in space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="310" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="344" bodyend="433"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Linear conservative interpolation on cell centered data. </para>    </briefdescription>
    <detaileddescription>
<para>Linear conservative interpolation on cell centered data I.e, conservative interpolation with a limiting scheme that preserves the value of any linear combination of the fab components; //!&lt; e.g.,</para><para>if sum_ivar a(ic,jc,ivar)*fab(ic,jc,ivar) = 0, then sum_ivar a(ic,jc,ivar)*fab(if,jf,ivar) = 0 is satisfied in all fine cells if,jf covering coarse cell ic,jc. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="737">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
      </node>
      <node id="738">
        <label>amrex::EBCellConservativeLinear</label>
        <link refid="classamrex_1_1EBCellConservativeLinear"/>
        <childnode refid="736" relation="public-inheritance">
        </childnode>
      </node>
      <node id="736">
        <label>amrex::CellConservativeLinear</label>
        <link refid="classamrex_1_1CellConservativeLinear"/>
        <childnode refid="737" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="740">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
      </node>
      <node id="739">
        <label>amrex::CellConservativeLinear</label>
        <link refid="classamrex_1_1CellConservativeLinear"/>
        <childnode refid="740" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="275" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" bodystart="272" bodyend="327"/>
    <listofallmembers>
      <member refid="classamrex_1_1Interpolater_1a076d83ba84b125ee187a18aa8d60ee3e" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>BoxCoarsener</name></member>
      <member refid="classamrex_1_1CellConservativeLinear_1a47aef6594f54746b09c4230b68f4e978" prot="public" virt="non-virtual"><scope>amrex::CellConservativeLinear</scope><name>CellConservativeLinear</name></member>
      <member refid="classamrex_1_1CellConservativeLinear_1aeec138a1454f98de65aa6ec019a1cdc4" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1CellConservativeLinear_1ac9afd317e78f1c6d5581c251a9afe819" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1CellConservativeLinear_1a7817252503faedf1d87fcbdcc89c3509" prot="protected" virt="non-virtual"><scope>amrex::CellConservativeLinear</scope><name>do_linear_limiting</name></member>
      <member refid="classamrex_1_1Interpolater_1aa2f8d685993329ef439ea2925bee9cc7" prot="public" virt="non-virtual"><scope>amrex::CellConservativeLinear</scope><name>GetBCArray</name></member>
      <member refid="classamrex_1_1CellConservativeLinear_1a13a7efe51d0c733078c1a313bcfa4efe" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>interp</name></member>
      <member refid="classamrex_1_1Interpolater_1aee6fb8b99ca4282e5f9e9122b9b37cf1" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>protect</name></member>
      <member refid="classamrex_1_1CellConservativeLinear_1a6d6fcd6f8a4397afacebc3e357fa70e4" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>~CellConservativeLinear</name></member>
      <member refid="classamrex_1_1Interpolater_1ad53e63eaa9b2b9b140c98f73969f2164" prot="public" virt="virtual"><scope>amrex::CellConservativeLinear</scope><name>~Interpolater</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
