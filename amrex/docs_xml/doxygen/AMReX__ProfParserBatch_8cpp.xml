<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__ProfParserBatch_8cpp" kind="file" language="C++">
    <compoundname>AMReX_ProfParserBatch.cpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includes local="no">list</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iomanip</includes>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <includes refid="AMReX__DataServices_8H" local="no">AMReX_DataServices.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <incdepgraph>
      <node id="53513">
        <label>list</label>
      </node>
      <node id="53578">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53510" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
      </node>
      <node id="53523">
        <label>functional</label>
      </node>
      <node id="53517">
        <label>iomanip</label>
      </node>
      <node id="53574">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53575" relation="include">
        </childnode>
        <childnode refid="53551" relation="include">
        </childnode>
        <childnode refid="53557" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
      </node>
      <node id="53566">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
      </node>
      <node id="53515">
        <label>limits</label>
      </node>
      <node id="53565">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
      </node>
      <node id="53605">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="53584" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
      </node>
      <node id="53543">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53545" relation="include">
        </childnode>
        <childnode refid="53547" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
        <childnode refid="53551" relation="include">
        </childnode>
        <childnode refid="53552" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53553" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
      </node>
      <node id="53594">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53553" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53549" relation="include">
        </childnode>
      </node>
      <node id="53541">
        <label>cstdint</label>
      </node>
      <node id="53616">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53574" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53617" relation="include">
        </childnode>
        <childnode refid="53615" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
        <childnode refid="53586" relation="include">
        </childnode>
      </node>
      <node id="53576">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
      </node>
      <node id="53595">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
      </node>
      <node id="53548">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53549" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53550" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53546" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
      </node>
      <node id="53624">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53510" relation="include">
        </childnode>
        <childnode refid="53625" relation="include">
        </childnode>
        <childnode refid="53626" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53541" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53608" relation="include">
        </childnode>
        <childnode refid="53542" relation="include">
        </childnode>
        <childnode refid="53627" relation="include">
        </childnode>
      </node>
      <node id="53518">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53521" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53523" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
      </node>
      <node id="53567">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="53600">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="53588">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
      </node>
      <node id="53536">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
      </node>
      <node id="53604">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="53530" relation="include">
        </childnode>
        <childnode refid="53510" relation="include">
        </childnode>
        <childnode refid="53517" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53578" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
      </node>
      <node id="53549">
        <label>cmath</label>
      </node>
      <node id="53614">
        <label>cassert</label>
      </node>
      <node id="53522">
        <label>stdexcept</label>
      </node>
      <node id="53584">
        <label>numeric</label>
      </node>
      <node id="53596">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="53528" relation="include">
        </childnode>
        <childnode refid="53597" relation="include">
        </childnode>
        <childnode refid="53523" relation="include">
        </childnode>
        <childnode refid="53555" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53598" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
      </node>
      <node id="53557">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
        <childnode refid="53551" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
      </node>
      <node id="53554">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="53549" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53550" relation="include">
        </childnode>
        <childnode refid="53528" relation="include">
        </childnode>
        <childnode refid="53555" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53556" relation="include">
        </childnode>
        <childnode refid="53557" relation="include">
        </childnode>
        <childnode refid="53558" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53585" relation="include">
        </childnode>
        <childnode refid="53586" relation="include">
        </childnode>
      </node>
      <node id="53628">
        <label>cstdarg</label>
      </node>
      <node id="53511">
        <label>string</label>
      </node>
      <node id="53603">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
      </node>
      <node id="53556">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="53543" relation="include">
        </childnode>
      </node>
      <node id="53569">
        <label>map</label>
      </node>
      <node id="53540">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="53541" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53542" relation="include">
        </childnode>
        <childnode refid="53608" relation="include">
        </childnode>
        <childnode refid="53623" relation="include">
        </childnode>
        <childnode refid="53615" relation="include">
        </childnode>
      </node>
      <node id="53537">
        <label>AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="53538" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53540" relation="include">
        </childnode>
        <childnode refid="53624" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53510" relation="include">
        </childnode>
        <childnode refid="53513" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
      </node>
      <node id="53506">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX_ProfParserBatch.cpp"/>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53510" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53512" relation="include">
        </childnode>
        <childnode refid="53513" relation="include">
        </childnode>
        <childnode refid="53514" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53517" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53526" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
      </node>
      <node id="53564">
        <label>unordered_set</label>
      </node>
      <node id="53620">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="53621" relation="include">
        </childnode>
        <childnode refid="53622" relation="include">
        </childnode>
      </node>
      <node id="53598">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="53529" relation="include">
        </childnode>
      </node>
      <node id="53539">
        <label>cfloat</label>
      </node>
      <node id="53619">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="53616" relation="include">
        </childnode>
        <childnode refid="53618" relation="include">
        </childnode>
      </node>
      <node id="53585">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="53586" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
      </node>
      <node id="53510">
        <label>fstream</label>
      </node>
      <node id="53610">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53612" relation="include">
        </childnode>
        <childnode refid="53615" relation="include">
        </childnode>
      </node>
      <node id="53618">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
        <childnode refid="53616" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
        <childnode refid="53542" relation="include">
        </childnode>
        <childnode refid="53612" relation="include">
        </childnode>
        <childnode refid="53586" relation="include">
        </childnode>
      </node>
      <node id="53547">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="53534" relation="include">
        </childnode>
      </node>
      <node id="53538">
        <label>AMReX_AmrvisConstants.H</label>
        <link refid="AMReX__AmrvisConstants_8H"/>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53539" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
      </node>
      <node id="53612">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53528" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53613" relation="include">
        </childnode>
      </node>
      <node id="53527">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="53528" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53530" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
      </node>
      <node id="53593">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
      </node>
      <node id="53533">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="53617">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53555" relation="include">
        </childnode>
      </node>
      <node id="53535">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="53587">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53596" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53556" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53600" relation="include">
        </childnode>
      </node>
      <node id="53621">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="53571">
        <label>sys/types.h</label>
      </node>
      <node id="53615">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="53548" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
      </node>
      <node id="53514">
        <label>typeinfo</label>
      </node>
      <node id="53508">
        <label>cstdio</label>
      </node>
      <node id="53590">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="53555" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
      </node>
      <node id="53531">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
      </node>
      <node id="53597">
        <label>tuple</label>
      </node>
      <node id="53626">
        <label>future</label>
      </node>
      <node id="53526">
        <label>AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53537" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
      </node>
      <node id="53579">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53530" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53582" relation="include">
        </childnode>
        <childnode refid="53583" relation="include">
        </childnode>
      </node>
      <node id="53572">
        <label>unistd.h</label>
      </node>
      <node id="53622">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="53580">
        <label>stack</label>
      </node>
      <node id="53524">
        <label>vector</label>
      </node>
      <node id="53607">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
      </node>
      <node id="53532">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="53518" relation="include">
        </childnode>
      </node>
      <node id="53519">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="53529">
        <label>utility</label>
      </node>
      <node id="53528">
        <label>array</label>
      </node>
      <node id="53608">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53512" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53574" relation="include">
        </childnode>
        <childnode refid="53609" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53610" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53615" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53616" relation="include">
        </childnode>
        <childnode refid="53618" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53619" relation="include">
        </childnode>
        <childnode refid="53554" relation="include">
        </childnode>
        <childnode refid="53586" relation="include">
        </childnode>
        <childnode refid="53620" relation="include">
        </childnode>
      </node>
      <node id="53542">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53554" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53549" relation="include">
        </childnode>
      </node>
      <node id="53530">
        <label>sstream</label>
      </node>
      <node id="53623">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="53608" relation="include">
        </childnode>
        <childnode refid="53619" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
      </node>
      <node id="53521">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="53522" relation="include">
        </childnode>
      </node>
      <node id="53545">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
        <childnode refid="53546" relation="include">
        </childnode>
      </node>
      <node id="53589">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
      </node>
      <node id="53577">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53578" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53514" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53523" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53584" relation="include">
        </childnode>
      </node>
      <node id="53568">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53555" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53574" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
      </node>
      <node id="53559">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
      </node>
      <node id="53552">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
      </node>
      <node id="53546">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
      </node>
      <node id="53573">
        <label>sys/wait.h</label>
      </node>
      <node id="53544">
        <label>iosfwd</label>
      </node>
      <node id="53507">
        <label>cstdlib</label>
      </node>
      <node id="53583">
        <label>cfenv</label>
      </node>
      <node id="53509">
        <label>iostream</label>
      </node>
      <node id="53551">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
      </node>
      <node id="53553">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="53548" relation="include">
        </childnode>
      </node>
      <node id="53560">
        <label>cstddef</label>
      </node>
      <node id="53575">
        <label>unordered_map</label>
      </node>
      <node id="53609">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53551" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
        <childnode refid="53557" relation="include">
        </childnode>
      </node>
      <node id="53586">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53602" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
        <childnode refid="53605" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
      </node>
      <node id="53550">
        <label>climits</label>
      </node>
      <node id="53606">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="53563">
        <label>mutex</label>
      </node>
      <node id="53570">
        <label>chrono</label>
      </node>
      <node id="53599">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="53582">
        <label>csignal</label>
      </node>
      <node id="53625">
        <label>thread</label>
      </node>
      <node id="53561">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53523" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
      </node>
      <node id="53555">
        <label>type_traits</label>
      </node>
      <node id="53562">
        <label>set</label>
      </node>
      <node id="53558">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="53559" relation="include">
        </childnode>
      </node>
      <node id="53520">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="53627">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
      </node>
      <node id="53602">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="53559" relation="include">
        </childnode>
      </node>
      <node id="53516">
        <label>algorithm</label>
      </node>
      <node id="53591">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53528" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
      </node>
      <node id="53581">
        <label>execinfo.h</label>
      </node>
      <node id="53512">
        <label>cstring</label>
      </node>
      <node id="53613">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53512" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53549" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53533" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53614" relation="include">
        </childnode>
        <childnode refid="53548" relation="include">
        </childnode>
      </node>
      <node id="53611">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
      </node>
      <node id="53525">
        <label>memory</label>
      </node>
      <node id="53601">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53512" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
      </node>
      <node id="53592">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
      </node>
      <node id="53534">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="53535" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="AMReX__ProfParserBatch_8cpp_1a943ee05343b5b1f9139dcc582078b9ef" prot="public" static="no">
        <name>SHOWVAL</name>
        <param><defname>val</defname></param>
        <initializer>{ cout &lt;&lt; #val &lt;&lt; &quot; = &quot; &lt;&lt; val &lt;&lt; endl; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" line="32" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__ProfParserBatch_8cpp_1aec13bc900b9336b534cdd5ff46e4097b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintTimeRangeList</definition>
        <argsstring>(const std::list&lt; RegionsProfStats::TimeRange &gt; &amp;trList)</argsstring>
        <name>PrintTimeRangeList</name>
        <param>
          <type>const std::list&lt; RegionsProfStats::TimeRange &gt; &amp;</type>
          <declname>trList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ProfParserBatch_8cpp_1a1ec51ce7d019fd411d1d1cc9cda37529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintProfParserBatchUsage</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>PrintProfParserBatchUsage</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" bodystart="39" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ProfParserBatch_8cpp_1af2908e2ffb3d9efa52c23f4a42c98b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ProfParserBatchFunctions</definition>
        <argsstring>(int argc, char *argv[], bool runDefault, bool &amp;bParserProf)</argsstring>
        <name>ProfParserBatchFunctions</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>runDefault</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>bParserProf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" line="76" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp" bodystart="76" bodyend="472"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>AMReX_ProfParserBatch.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cout;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cerr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::flush;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;<ref refid="AMReX__DataServices_8H" kindref="compound">AMReX_DataServices.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee4cc89e337e42259b850eafbad65cb1" kindref="member">PrintTimeRangeList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;RegionsProfStats::TimeRange&gt;<sp/>&amp;trList);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a1a6b7be29b3621c9df4db1d93736597b" kindref="member">amrex::RedistFiles</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHOWVAL(val)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>#val<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>val<sp/>&lt;&lt;<sp/>endl;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NTIMESLOTS(25600);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ProfParserBatch_8cpp_1a1ec51ce7d019fd411d1d1cc9cda37529" kindref="member">PrintProfParserBatchUsage</ref>(std::ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-actpf<sp/>f]<sp/>output<sp/>a<sp/>plotfile<sp/>for<sp/>all<sp/>call<sp/>times<sp/>for<sp/>func<sp/>f.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>is<sp/>a<sp/>quoted<sp/>string.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-check]<sp/><sp/><sp/>data<sp/>integrity<sp/>check.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-dispatch]<sp/>use<sp/>the<sp/>dispatch<sp/>interface.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-gl]<sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>only<sp/>grdlog.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-gpct]<sp/><sp/><sp/><sp/>set<sp/>percent<sp/>threshold<sp/>for<sp/>xgraphs.<sp/><sp/>range<sp/>[0,<sp/>100]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-html]<sp/><sp/><sp/><sp/>write<sp/>html.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-htmlnc]<sp/><sp/>write<sp/>html<sp/>showing<sp/>ncalls.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-msil<sp/>n]<sp/><sp/>sets<sp/>maxSmallImageLength.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-mff]<sp/><sp/><sp/><sp/><sp/>make<sp/>filter<sp/>file.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-nocomb]<sp/><sp/>do<sp/>not<sp/>combine<sp/>adjacent<sp/>call<sp/>traces.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-nts<sp/><sp/>n]<sp/><sp/>sets<sp/>number<sp/>of<sp/>time<sp/>slots<sp/>(default:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>NTIMESLOTS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-of<sp/><sp/>fn]<sp/><sp/>sets<sp/>output<sp/>file<sp/>name.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-proc<sp/><sp/>n]<sp/>sets<sp/>processor<sp/>number<sp/>for<sp/>single<sp/>processor<sp/>queries<sp/>(default:<sp/><sp/>0).\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-prof]<sp/><sp/><sp/><sp/>profile<sp/>the<sp/>parser.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-proxmap]<sp/>remap<sp/>ranks<sp/>to<sp/>proximity<sp/>ranks.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-pff]<sp/><sp/><sp/><sp/><sp/>parse<sp/>filter<sp/>file.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-redist]<sp/><sp/>redistribute<sp/>files.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-rplt]<sp/><sp/><sp/><sp/>make<sp/>region<sp/>plot<sp/>file.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-rra<sp/><sp/>n]<sp/><sp/>sets<sp/>refRatioAll.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-sendspf]<sp/>output<sp/>a<sp/>sends<sp/>plotfile.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-spd]<sp/><sp/><sp/><sp/><sp/>process<sp/>sync<sp/>point<sp/>data.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-sr]<sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>sends<sp/>and<sp/>receives.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-srlist]<sp/><sp/>list<sp/>sends<sp/>and<sp/>receives.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-stats]<sp/><sp/><sp/>print<sp/>database<sp/>statistics.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-tce]<sp/><sp/><sp/><sp/><sp/>process<sp/>only<sp/>topolcoords<sp/>for<sp/>edison.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-timelinepf]<sp/>output<sp/>a<sp/>timeline<sp/>plotfile.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-ttrace]<sp/><sp/>write<sp/>text<sp/>call<sp/>trace.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-v<sp/>n]<sp/><sp/><sp/><sp/><sp/>verbose:<sp/><sp/>n<sp/>can<sp/>be<sp/>0,<sp/>1,<sp/>or<sp/>2.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-ws]<sp/><sp/><sp/><sp/><sp/><sp/>write<sp/>summary.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>[-wts]<sp/><sp/><sp/><sp/><sp/>write<sp/>trace<sp/>summary.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AMReX__ProfParserBatch_8cpp_1af2908e2ffb3d9efa52c23f4a42c98b79" kindref="member">ProfParserBatchFunctions</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runDefault,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;bParserProf)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1aa23714eb98f31ba71d565390dae2a7d2" kindref="member">BL_PROFILE_VAR</ref>(</highlight><highlight class="stringliteral">&quot;ProfParserBatchFunctions()&quot;</highlight><highlight class="normal">,<sp/>ppbf);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIOP(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSmallImageLength(800),<sp/>refRatioAll(4),<sp/>nTimeSlots(NTIMESLOTS);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>string&gt;<sp/>mpiFuncNames;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>amrex::BLProfiler::SetBlProfDirName(</highlight><highlight class="stringliteral">&quot;bl_profprof&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1adf03962600e13b4ecd73531bd77d0cf5" kindref="member">verbose</ref>(-1),<sp/>whichProc(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runCheck(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>runSendRecv(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>runSendRecvList(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>runSyncPointData(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runSendsPF(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>runTimelinePF(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>glOnly(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tcEdisonOnly(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>runStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>runRedist(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>statsCollected(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>filenameSet(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>proxMap(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bMakeFilterFile(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>bParseFilterFile(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWriteSummary(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>bWriteTraceSummary(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bMakeRegionPlt(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>simpleCombine(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWriteHTML(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>bWriteHTMLNC(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>bWriteTextTrace(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRunACTPF(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>bUseDispatch(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>outfileName,<sp/>delimString(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;string&gt;</ref><sp/>actFNames;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>bParserProf<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>&gt;<sp/>2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>the<sp/>command<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ia(1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-1)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;argv[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ia<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[ia]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1adf03962600e13b4ecd73531bd77d0cf5" kindref="member">verbose</ref><sp/>=<sp/>atoi(argv[ia+1]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>verbose<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1adf03962600e13b4ecd73531bd77d0cf5" kindref="member">verbose</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-ws&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bWriteSummary<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-check&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>commprof<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>data<sp/>integrity<sp/>check.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runCheck<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-stats&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>print<sp/>database<sp/>statistics.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runStats<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-timelinepf&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>output<sp/>a<sp/>timeline<sp/>plotfile.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTimelinePF<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runStats<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-actpf&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bRunACTPF<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actFNames.push_back(argv[ia+1]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>output<sp/>a<sp/>plotfile<sp/>for<sp/>all<sp/>call<sp/>times<sp/>for<sp/>function&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>actFNames[actFNames.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>-<sp/>1]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-sr&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>send<sp/>receive<sp/>pairing.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runSendRecv<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-srlist&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>send<sp/>receive<sp/>pairing<sp/>list.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runSendRecvList<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-sendspf&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>sendspf.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runSendsPF<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-gl&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>grdlog.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-tce&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>topolcoords<sp/>for<sp/>edison.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcEdisonOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-spd&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>sync<sp/>point<sp/>data.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runSyncPointData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-redist&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>redist.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runRedist<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-msil&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSmallImageLength<sp/>=<sp/>atoi(argv[ia+1]);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>msil<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxSmallImageLength<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-rra&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refRatioAll<sp/>=<sp/>atoi(argv[ia+1]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>rra<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>refRatioAll<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-nts&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeSlots<sp/>=<sp/>atoi(argv[ia+1]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>nts<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nTimeSlots<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-proc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whichProc<sp/>=<sp/>atoi(argv[ia+1]);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>whichProc<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>whichProc<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-of&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfileName<sp/>=<sp/>argv[ia+1];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filenameSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>outfileName<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outfileName<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-proxmap&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>proxmap.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxMap<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-mff&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>region<sp/>and<sp/>trace<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bMakeFilterFile<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-pff&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bParseFilterFile<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-npff&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bParseFilterFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-rplt&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bMakeRegionPlt<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-wts&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bWriteTraceSummary<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-html&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bWriteHTML<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-htmlnc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bWriteHTMLNC<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-ttrace&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bWriteTextTrace<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-gpct&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ia<sp/>&lt;<sp/>argc-2)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>gpct(atof(argv[ia+1]));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gpct<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>gpct<sp/>&lt;=<sp/>100.0)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBLProfStats_1a2c9001171e52450c8d565a1f9106ef41" kindref="member">RegionsProfStats::SetGPercent</ref>(gpct);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>gpct<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gpct<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>gpct<sp/>must<sp/>be<sp/>in<sp/>range<sp/>[0.0,<sp/>100.0]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-nocomb&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simpleCombine<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-prof&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bParserProf<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(argv[ia],<sp/></highlight><highlight class="stringliteral">&quot;-dispatch&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>using<sp/>dispatch<sp/>interface.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bUseDispatch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>Error:<sp/><sp/>bad<sp/>command<sp/>line<sp/>arg:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[ia]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ia;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>runDefault)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>set<sp/>default<sp/>to<sp/>write<sp/>the<sp/>summary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>bWriteSummary<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="classBLProfStats_1a55836d3122a77f927534e5e1d017342c" kindref="member">BLProfStats::SetVerbose</ref>(<ref refid="namespaceamrex_1adf03962600e13b4ecd73531bd77d0cf5" kindref="member">verbose</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>std::string<sp/>dirName(argv[argc<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref><sp/>fileType(<ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae7fe174117a8bd8847e7530391fb5fdc" kindref="member">Amrvis::PROFDATA</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1DataServices" kindref="compound">DataServices</ref><sp/>pdServices(dirName,<sp/>fileType);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataNProcs(<ref refid="classBLProfStats_1a494219dfcd91421ce123dd61aaf52f49" kindref="member">BLProfStats::GetNProcs</ref>());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whichProc<sp/>&lt;<sp/>0<sp/>||<sp/>whichProc<sp/>&gt;<sp/>dataNProcs<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Error:<sp/><sp/>whichProc<sp/>out<sp/>of<sp/>range:<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>whichProc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[0,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dataNProcs<sp/>-<sp/>1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;].&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>whichProc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bWriteSummary)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeAverage(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>useTrace(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>graphTopPct(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>summary.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::WriteSummaryRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(cout),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writeAverage,<sp/>whichProc,<sp/>&amp;useTrace,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;graphTopPct);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.WriteSummary(cout,<sp/>writeAverage,<sp/>whichProc,<sp/>useTrace,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphTopPct);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bWriteTraceSummary)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeAverage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>useTrace(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>graphTopPct(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>trace<sp/>summary.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::InitTimeRanges,<sp/>&amp;pdServices);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::WriteSummaryRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(cout),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writeAverage,<sp/>whichProc,<sp/>&amp;useTrace,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;graphTopPct);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.InitRegionTimeRanges();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.WriteSummary(cout,<sp/>writeAverage,<sp/>whichProc,<sp/>useTrace,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphTopPct);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(proxMap)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.InitProxMap();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runCheck)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::CheckProfDataRequest,<sp/>&amp;pdServices);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.CheckProfData();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runStats)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----------------<sp/>runStats.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::RunStatsRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(mpiFuncNames),</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;statsCollected);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.RunStats(mpiFuncNames,<sp/>statsCollected);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runSendsPF)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>plotfileName(</highlight><highlight class="stringliteral">&quot;pltTSP2P&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filenameSet)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plotfileName<sp/>=<sp/>outfileName;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::RunSendsPFRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(plotfileName),</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSmallImageLength,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;proxMap,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refRatioAll);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.RunSendsPF(plotfileName,<sp/>maxSmallImageLength,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxMap,<sp/>refRatioAll);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runTimelinePF)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>plotfileName(</highlight><highlight class="stringliteral">&quot;pltTimeline&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filenameSet)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plotfileName<sp/>=<sp/>outfileName;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Dispatched<sp/>batch<sp/>timelinepf<sp/>currently<sp/>unavailable.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataServices::Dispatch(DataServices::RunTimelinePFRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>*)<sp/>&amp;(mpiFuncNames),</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>*)<sp/>&amp;(plotfileName),</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSmallImageLength,</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refRatioAll,</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeSlots,</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;statsCollected);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structBLProfStats_1_1TimeRange" kindref="compound">BLProfStats::TimeRange</ref><sp/>subTimeRange<sp/>=<sp/>pdServices.FindCalcTimeRange();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.RunTimelinePF(mpiFuncNames,<sp/>plotfileName,<sp/>subTimeRange,<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSmallImageLength,<sp/>refRatioAll,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nTimeSlots,<sp/>statsCollected);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>process<sp/>the<sp/>grid<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glOnly)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>gridlogFileName(</highlight><highlight class="stringliteral">&quot;grdlog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filenameSet)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>outfileName<sp/>is<sp/>used<sp/>as<sp/>an<sp/>infile<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>dont<sp/>use<sp/>this<sp/>function<sp/>with<sp/>other<sp/>functions<sp/>using<sp/>outfileName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gridlogFileName<sp/>=<sp/>outfileName;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.ProcessGridLog(gridlogFileName);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tcEdisonOnly)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.TCEdison();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runSyncPointData)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.RunSyncPointData();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runSendRecvList)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.InitRegionTimeRanges();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.RunSendRecvList();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runSendRecv)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.RunSendRecv();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runRedist)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1a6b7be29b3621c9df4db1d93736597b" kindref="member">RedistFiles</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bMakeFilterFile)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>filterFileName(</highlight><highlight class="stringliteral">&quot;RegionFilters.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filenameSet)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filterFileName<sp/>=<sp/>outfileName;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::MakeFilterFileRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(filterFileName));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.MakeFilterFile(filterFileName);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bMakeRegionPlt)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>plotfileName(</highlight><highlight class="stringliteral">&quot;pltRegions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filenameSet)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plotfileName<sp/>=<sp/>outfileName;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bUseDispatch)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1DataServices_1a3d198815ecb3b80907c97384e5752fa7" kindref="member">DataServices::Dispatch</ref>(DataServices::MakeRegionPltRequest,<sp/>&amp;pdServices,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(plotfileName));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdServices.MakeRegionPlt(plotfileName);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bWriteHTML)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>callTraceFileName(</highlight><highlight class="stringliteral">&quot;CallTrace.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.WriteHTML(callTraceFileName,<sp/>simpleCombine,<sp/>whichProc);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bWriteHTMLNC)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>callTraceFileName(</highlight><highlight class="stringliteral">&quot;CallTraceNC.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.WriteHTMLNC(callTraceFileName,<sp/>whichProc);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bWriteTextTrace)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>callTraceFileName(</highlight><highlight class="stringliteral">&quot;CallTrace.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.WriteTextTrace(callTraceFileName,<sp/>simpleCombine,<sp/>whichProc,<sp/>delimString);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIOP)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PrintTimeRangeList(pdServices.GetRegionsProfStats().GetFilterTimeRanges()[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>output<sp/>an<sp/>all<sp/>call<sp/>times<sp/>plotfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRunACTPF)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>plotfileName;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filenameSet)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plotfileName<sp/>=<sp/>outfileName;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>pdServices.RunACTPF(plotfileName,<sp/>maxSmallImageLength,<sp/>refRatioAll,<sp/>actFNames);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anyFunctionsRun<sp/>=<sp/>runCheck<sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>runSendRecv<sp/><sp/><sp/><sp/><sp/>||<sp/>runSendRecvList<sp/>||<sp/>runSyncPointData<sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runSendsPF<sp/><sp/><sp/><sp/><sp/>||<sp/>runTimelinePF<sp/><sp/><sp/>||<sp/>tcEdisonOnly<sp/><sp/><sp/><sp/>||<sp/>runStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runRedist<sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>bMakeFilterFile<sp/>||<sp/>bWriteSummary<sp/><sp/><sp/>||<sp/>bWriteTraceSummary<sp/>||</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bMakeRegionPlt<sp/>||<sp/>bWriteHTML<sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>bWriteHTMLNC<sp/><sp/><sp/><sp/>||<sp/>bWriteTextTrace<sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glOnly<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>bRunACTPF;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a82c334c787872a6bbacabe9a38389224" kindref="member">BL_PROFILE_VAR_STOP</ref>(ppbf);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>anyFunctionsRun;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp"/>
  </compounddef>
</doxygen>
