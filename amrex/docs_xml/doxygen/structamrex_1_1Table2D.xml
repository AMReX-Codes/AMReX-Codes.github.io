<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1Table2D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Table2D</compoundname>
    <includes refid="AMReX__TableData_8H" local="no">AMReX_TableData.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Table2D_1aa6bcd94db80e727b33cb98cac7c2916b" prot="public" static="no" mutable="no">
        <type>T *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>T* AMREX_RESTRICT amrex::Table2D&lt; T &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="78" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table2D_1a1622d9bc7eed0994199b267d999a624c" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::Table2D&lt; T &gt;::jstride</definition>
        <argsstring></argsstring>
        <name>jstride</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="79" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table2D_1a84c9eaa09d5b9a00a0fff0dab1c48925" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 2 &gt;</type>
        <definition>GpuArray&lt;int,2&gt; amrex::Table2D&lt; T &gt;::begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <initializer>{{1,1}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="80" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table2D_1a261cca1b216803263569112ead90813b" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 2 &gt;</type>
        <definition>GpuArray&lt;int,2&gt; amrex::Table2D&lt; T &gt;::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <initializer>{{0,0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="81" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Table2D_1a79ca13110278b21e974990f953233ce1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table2D&lt; T &gt;::Table2D</definition>
        <argsstring>() noexcept</argsstring>
        <name>Table2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="84" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table2D_1aea5eb7caff5592e25bb9aaf4be6d69d6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_const&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table2D&lt; T &gt;::Table2D</definition>
        <argsstring>(Table2D&lt; typename std::remove_const&lt; T &gt;::type &gt; const &amp;rhs) noexcept</argsstring>
        <name>Table2D</name>
        <param>
          <type><ref refid="structamrex_1_1Table2D" kindref="compound">Table2D</ref>&lt; typename std::remove_const&lt; T &gt;::type &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="88" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table2D_1a8fb13a53cc27a040127c5e8c53b46358" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table2D&lt; T &gt;::Table2D</definition>
        <argsstring>(T *a_p, GpuArray&lt; int, 2 &gt; const &amp;a_begin, GpuArray&lt; int, 2 &gt; const &amp;a_end) noexcept</argsstring>
        <name>Table2D</name>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 2 &gt; const &amp;</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 2 &gt; const &amp;</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="96" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table2D_1a3321f4fffb790dae3463f25bbb7d307e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::Table2D&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="106" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table2D_1aabd52214675192e193727de480166de3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!std::is_void&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> U &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE U&amp; amrex::Table2D&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="110" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="110" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>amrex::Table2D&lt; T &gt;</label>
        <link refid="structamrex_1_1Table2D"/>
        <childnode refid="2" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GpuArray&lt; int, 2 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="77" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="76" bodyend="137"/>
    <listofallmembers>
      <member refid="structamrex_1_1Table2D_1a84c9eaa09d5b9a00a0fff0dab1c48925" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>begin</name></member>
      <member refid="structamrex_1_1Table2D_1a261cca1b216803263569112ead90813b" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>end</name></member>
      <member refid="structamrex_1_1Table2D_1a1622d9bc7eed0994199b267d999a624c" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>jstride</name></member>
      <member refid="structamrex_1_1Table2D_1a3321f4fffb790dae3463f25bbb7d307e" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1Table2D_1aabd52214675192e193727de480166de3" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Table2D_1aa6bcd94db80e727b33cb98cac7c2916b" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>p</name></member>
      <member refid="structamrex_1_1Table2D_1a79ca13110278b21e974990f953233ce1" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>Table2D</name></member>
      <member refid="structamrex_1_1Table2D_1aea5eb7caff5592e25bb9aaf4be6d69d6" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>Table2D</name></member>
      <member refid="structamrex_1_1Table2D_1a8fb13a53cc27a040127c5e8c53b46358" prot="public" virt="non-virtual"><scope>amrex::Table2D</scope><name>Table2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
