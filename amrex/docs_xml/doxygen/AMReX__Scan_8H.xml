<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__Scan_8H" kind="file" language="C++">
    <compoundname>AMReX_Scan.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__Arena_8H" local="no">AMReX_Arena.H</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="AMReX__GpuContainers_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuContainers.H</includedby>
    <includedby refid="AMReX__Partition_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_Partition.H</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <includedby refid="AMReX__ParticleUtil_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</includedby>
    <incdepgraph>
      <node id="46741">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46738" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46742" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
      </node>
      <node id="46709">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46781">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46745">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46801">
        <label>iomanip</label>
      </node>
      <node id="46732">
        <label>functional</label>
      </node>
      <node id="46751">
        <label>limits</label>
      </node>
      <node id="46771">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
      </node>
      <node id="46753">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46740" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
        <childnode refid="46744" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
      </node>
      <node id="46789">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
      </node>
      <node id="46762">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46736" relation="include">
        </childnode>
        <childnode refid="46759" relation="include">
        </childnode>
        <childnode refid="46763" relation="include">
        </childnode>
        <childnode refid="46753" relation="include">
        </childnode>
        <childnode refid="46764" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
      </node>
      <node id="46803">
        <label>iterator</label>
      </node>
      <node id="46727">
        <label>float.h</label>
      </node>
      <node id="46796">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46718">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
      </node>
      <node id="46712">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46713" relation="include">
        </childnode>
      </node>
      <node id="46777">
        <label>cstdint</label>
      </node>
      <node id="46758">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46749" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46759" relation="include">
        </childnode>
        <childnode refid="46760" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46752" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46761" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46762" relation="include">
        </childnode>
        <childnode refid="46765" relation="include">
        </childnode>
        <childnode refid="46766" relation="include">
        </childnode>
        <childnode refid="46775" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46778" relation="include">
        </childnode>
      </node>
      <node id="46799">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46759" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46800" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
      </node>
      <node id="46787">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
        <childnode refid="46788" relation="include">
        </childnode>
        <childnode refid="46790" relation="include">
        </childnode>
        <childnode refid="46789" relation="include">
        </childnode>
      </node>
      <node id="46791">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46747" relation="include">
        </childnode>
        <childnode refid="46792" relation="include">
        </childnode>
        <childnode refid="46732" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46793" relation="include">
        </childnode>
        <childnode refid="46789" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
      </node>
      <node id="46737">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46738" relation="include">
        </childnode>
        <childnode refid="46734" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
      </node>
      <node id="46769">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46770" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
        <childnode refid="46749" relation="include">
        </childnode>
        <childnode refid="46711" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
      </node>
      <node id="46714">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46729">
        <label>cmath</label>
      </node>
      <node id="46713">
        <label>cassert</label>
      </node>
      <node id="46726">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46727" relation="include">
        </childnode>
      </node>
      <node id="46722">
        <label>stdexcept</label>
      </node>
      <node id="46720">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46773">
        <label>numeric</label>
      </node>
      <node id="46733">
        <label>string</label>
      </node>
      <node id="46757">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46747" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
        <childnode refid="46780" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46781" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
      </node>
      <node id="46759">
        <label>map</label>
      </node>
      <node id="46717">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46736" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
      </node>
      <node id="46780">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
      </node>
      <node id="46708">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46761">
        <label>cfloat</label>
      </node>
      <node id="46742">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
      </node>
      <node id="46767">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46768" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
      </node>
      <node id="46768">
        <label>fstream</label>
      </node>
      <node id="46764">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46740" relation="include">
        </childnode>
        <childnode refid="46744" relation="include">
        </childnode>
        <childnode refid="46753" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
      </node>
      <node id="46785">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46780" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
      </node>
      <node id="46715">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
      </node>
      <node id="46719">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46710" relation="include">
        </childnode>
        <childnode refid="46712" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
        <childnode refid="46721" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46728" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46732" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46711" relation="include">
        </childnode>
        <childnode refid="46734" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
      </node>
      <node id="46775">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46766" relation="include">
        </childnode>
        <childnode refid="46776" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46777" relation="include">
        </childnode>
      </node>
      <node id="46723">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46776">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
      </node>
      <node id="46779">
        <label>sys/types.h</label>
      </node>
      <node id="46797">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46736" relation="include">
        </childnode>
        <childnode refid="46783" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
      </node>
      <node id="46772">
        <label>typeinfo</label>
      </node>
      <node id="46710">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46711" relation="include">
        </childnode>
      </node>
      <node id="46706">
        <label>AMReX_Config.H</label>
      </node>
      <node id="46711">
        <label>cstdio</label>
      </node>
      <node id="46792">
        <label>tuple</label>
      </node>
      <node id="46765">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46759" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46736" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46766" relation="include">
        </childnode>
      </node>
      <node id="46755">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46744" relation="include">
        </childnode>
        <childnode refid="46710" relation="include">
        </childnode>
      </node>
      <node id="46766">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
        <childnode refid="46767" relation="include">
        </childnode>
        <childnode refid="46769" relation="include">
        </childnode>
        <childnode refid="46771" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46734" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46772" relation="include">
        </childnode>
        <childnode refid="46738" relation="include">
        </childnode>
        <childnode refid="46732" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46773" relation="include">
        </childnode>
        <childnode refid="46774" relation="include">
        </childnode>
      </node>
      <node id="46754">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46740" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
      </node>
      <node id="46782">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
      </node>
      <node id="46770">
        <label>stack</label>
      </node>
      <node id="46734">
        <label>vector</label>
      </node>
      <node id="46794">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
      </node>
      <node id="46705">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
        <childnode refid="46777" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
      </node>
      <node id="46748">
        <label>utility</label>
      </node>
      <node id="46739">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46740" relation="include">
        </childnode>
        <childnode refid="46741" relation="include">
        </childnode>
        <childnode refid="46743" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
        <childnode refid="46744" relation="include">
        </childnode>
        <childnode refid="46753" relation="include">
        </childnode>
        <childnode refid="46754" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46755" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
      </node>
      <node id="46747">
        <label>array</label>
      </node>
      <node id="46798">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
      </node>
      <node id="46749">
        <label>sstream</label>
      </node>
      <node id="46802">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46773" relation="include">
        </childnode>
        <childnode refid="46803" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46804" relation="include">
        </childnode>
        <childnode refid="46799" relation="include">
        </childnode>
        <childnode refid="46705" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
      </node>
      <node id="46724">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46725" relation="include">
        </childnode>
      </node>
      <node id="46784">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
        <childnode refid="46780" relation="include">
        </childnode>
        <childnode refid="46785" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
        <childnode refid="46786" relation="include">
        </childnode>
        <childnode refid="46787" relation="include">
        </childnode>
        <childnode refid="46716" relation="include">
        </childnode>
        <childnode refid="46791" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46794" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46782" relation="include">
        </childnode>
        <childnode refid="46776" relation="include">
        </childnode>
        <childnode refid="46741" relation="include">
        </childnode>
        <childnode refid="46736" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46738" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
        <childnode refid="46795" relation="include">
        </childnode>
        <childnode refid="46796" relation="include">
        </childnode>
      </node>
      <node id="46795">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46788">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46789" relation="include">
        </childnode>
      </node>
      <node id="46740">
        <label>iosfwd</label>
      </node>
      <node id="46730">
        <label>cstdlib</label>
      </node>
      <node id="46793">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
      </node>
      <node id="46731">
        <label>iostream</label>
      </node>
      <node id="46746">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46747" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46749" relation="include">
        </childnode>
        <childnode refid="46711" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46741" relation="include">
        </childnode>
        <childnode refid="46742" relation="include">
        </childnode>
      </node>
      <node id="46736">
        <label>cstddef</label>
      </node>
      <node id="46790">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46755" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46729" relation="include">
        </childnode>
        <childnode refid="46783" relation="include">
        </childnode>
      </node>
      <node id="46763">
        <label>unordered_map</label>
      </node>
      <node id="46752">
        <label>climits</label>
      </node>
      <node id="46744">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46742" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46728" relation="include">
        </childnode>
        <childnode refid="46740" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
        <childnode refid="46729" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46752" relation="include">
        </childnode>
        <childnode refid="46738" relation="include">
        </childnode>
      </node>
      <node id="46804">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46799" relation="include">
        </childnode>
        <childnode refid="46802" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46783" relation="include">
        </childnode>
      </node>
      <node id="46760">
        <label>chrono</label>
      </node>
      <node id="46774">
        <label>csignal</label>
      </node>
      <node id="46716">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
        <childnode refid="46782" relation="include">
        </childnode>
        <childnode refid="46783" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
      </node>
      <node id="46728">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46729" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
      </node>
      <node id="46707">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46710" relation="include">
        </childnode>
        <childnode refid="46712" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46716" relation="include">
        </childnode>
        <childnode refid="46784" relation="include">
        </childnode>
        <childnode refid="46780" relation="include">
        </childnode>
        <childnode refid="46788" relation="include">
        </childnode>
        <childnode refid="46790" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
        <childnode refid="46797" relation="include">
        </childnode>
        <childnode refid="46798" relation="include">
        </childnode>
        <childnode refid="46786" relation="include">
        </childnode>
        <childnode refid="46785" relation="include">
        </childnode>
        <childnode refid="46787" relation="include">
        </childnode>
        <childnode refid="46799" relation="include">
        </childnode>
        <childnode refid="46802" relation="include">
        </childnode>
        <childnode refid="46805" relation="include">
        </childnode>
      </node>
      <node id="46786">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
      </node>
      <node id="46743">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
      </node>
      <node id="46721">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46722" relation="include">
        </childnode>
      </node>
      <node id="46750">
        <label>type_traits</label>
      </node>
      <node id="46738">
        <label>algorithm</label>
      </node>
      <node id="46778">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46779" relation="include">
        </childnode>
      </node>
      <node id="46783">
        <label>cstring</label>
      </node>
      <node id="46805">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46735">
        <label>memory</label>
      </node>
      <node id="46725">
        <label>inttypes.h</label>
      </node>
      <node id="46756">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
      </node>
      <node id="46800">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46749" relation="include">
        </childnode>
        <childnode refid="46768" relation="include">
        </childnode>
        <childnode refid="46801" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46767" relation="include">
        </childnode>
        <childnode refid="46766" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="47109">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47097">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="46809">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_extrapolater_K.H</label>
        <link refid="AMReX__extrapolater__K_8H"/>
        <childnode refid="46810" relation="include">
        </childnode>
      </node>
      <node id="47004">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="47128">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46880">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="46988">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
      </node>
      <node id="46964">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46965" relation="include">
        </childnode>
      </node>
      <node id="46837">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="47119">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46977">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="46978" relation="include">
        </childnode>
      </node>
      <node id="46916">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="46944">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="46903" relation="include">
        </childnode>
        <childnode refid="46939" relation="include">
        </childnode>
        <childnode refid="46945" relation="include">
        </childnode>
        <childnode refid="46902" relation="include">
        </childnode>
      </node>
      <node id="47066">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="46842" relation="include">
        </childnode>
      </node>
      <node id="46843">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_2D_K.H</label>
        <link refid="AMReX__Habec__2D__K_8H"/>
      </node>
      <node id="47064">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="47123">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47041">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46856">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="47046">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="47045" relation="include">
        </childnode>
      </node>
      <node id="47030">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="46840">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="47013">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="46809" relation="include">
        </childnode>
        <childnode refid="47014" relation="include">
        </childnode>
        <childnode refid="47015" relation="include">
        </childnode>
        <childnode refid="47016" relation="include">
        </childnode>
        <childnode refid="47018" relation="include">
        </childnode>
        <childnode refid="47019" relation="include">
        </childnode>
        <childnode refid="47020" relation="include">
        </childnode>
        <childnode refid="47022" relation="include">
        </childnode>
        <childnode refid="47023" relation="include">
        </childnode>
        <childnode refid="47024" relation="include">
        </childnode>
        <childnode refid="47025" relation="include">
        </childnode>
        <childnode refid="47026" relation="include">
        </childnode>
        <childnode refid="46913" relation="include">
        </childnode>
        <childnode refid="47006" relation="include">
        </childnode>
        <childnode refid="47028" relation="include">
        </childnode>
        <childnode refid="47029" relation="include">
        </childnode>
        <childnode refid="47030" relation="include">
        </childnode>
        <childnode refid="47031" relation="include">
        </childnode>
        <childnode refid="47032" relation="include">
        </childnode>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="47004" relation="include">
        </childnode>
        <childnode refid="47037" relation="include">
        </childnode>
        <childnode refid="46905" relation="include">
        </childnode>
        <childnode refid="47042" relation="include">
        </childnode>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="47044" relation="include">
        </childnode>
        <childnode refid="47046" relation="include">
        </childnode>
        <childnode refid="47047" relation="include">
        </childnode>
        <childnode refid="47007" relation="include">
        </childnode>
        <childnode refid="46933" relation="include">
        </childnode>
        <childnode refid="46935" relation="include">
        </childnode>
        <childnode refid="47049" relation="include">
        </childnode>
        <childnode refid="47050" relation="include">
        </childnode>
        <childnode refid="47051" relation="include">
        </childnode>
        <childnode refid="47053" relation="include">
        </childnode>
        <childnode refid="47055" relation="include">
        </childnode>
        <childnode refid="47056" relation="include">
        </childnode>
        <childnode refid="47057" relation="include">
        </childnode>
        <childnode refid="47060" relation="include">
        </childnode>
        <childnode refid="47048" relation="include">
        </childnode>
        <childnode refid="46966" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="47063" relation="include">
        </childnode>
        <childnode refid="47059" relation="include">
        </childnode>
        <childnode refid="47066" relation="include">
        </childnode>
        <childnode refid="47067" relation="include">
        </childnode>
        <childnode refid="46983" relation="include">
        </childnode>
        <childnode refid="46982" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46974" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="46989" relation="include">
        </childnode>
        <childnode refid="47069" relation="include">
        </childnode>
        <childnode refid="47070" relation="include">
        </childnode>
        <childnode refid="47071" relation="include">
        </childnode>
        <childnode refid="47072" relation="include">
        </childnode>
        <childnode refid="47073" relation="include">
        </childnode>
        <childnode refid="47079" relation="include">
        </childnode>
        <childnode refid="47080" relation="include">
        </childnode>
        <childnode refid="47081" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="47082" relation="include">
        </childnode>
        <childnode refid="46862" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
      </node>
      <node id="47011">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="46933" relation="include">
        </childnode>
        <childnode refid="46943" relation="include">
        </childnode>
      </node>
      <node id="46954">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="46953" relation="include">
        </childnode>
      </node>
      <node id="46908">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="46810" relation="include">
        </childnode>
      </node>
      <node id="46998">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46965">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="46882">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="46883" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46893" relation="include">
        </childnode>
      </node>
      <node id="46927">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46928" relation="include">
        </childnode>
        <childnode refid="46929" relation="include">
        </childnode>
      </node>
      <node id="46983">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="47105">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="47087" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
        <childnode refid="47107" relation="include">
        </childnode>
        <childnode refid="47108" relation="include">
        </childnode>
        <childnode refid="47109" relation="include">
        </childnode>
        <childnode refid="47110" relation="include">
        </childnode>
        <childnode refid="47111" relation="include">
        </childnode>
        <childnode refid="47112" relation="include">
        </childnode>
        <childnode refid="47113" relation="include">
        </childnode>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="47115" relation="include">
        </childnode>
        <childnode refid="47116" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="47118" relation="include">
        </childnode>
        <childnode refid="47119" relation="include">
        </childnode>
        <childnode refid="47120" relation="include">
        </childnode>
        <childnode refid="47121" relation="include">
        </childnode>
        <childnode refid="47122" relation="include">
        </childnode>
        <childnode refid="47123" relation="include">
        </childnode>
        <childnode refid="47124" relation="include">
        </childnode>
      </node>
      <node id="47100">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="47006" relation="include">
        </childnode>
        <childnode refid="47038" relation="include">
        </childnode>
        <childnode refid="47037" relation="include">
        </childnode>
      </node>
      <node id="47118">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46969">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="47012">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46969" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
      </node>
      <node id="47113">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46981">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.H</label>
        <link refid="AMReX__HypreIJIface_8H"/>
        <childnode refid="46902" relation="include">
        </childnode>
        <childnode refid="46929" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
      </node>
      <node id="47122">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47049">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="46832">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="46833" relation="include">
        </childnode>
      </node>
      <node id="47053">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="47054" relation="include">
        </childnode>
        <childnode refid="47011" relation="include">
        </childnode>
      </node>
      <node id="46974">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="46975" relation="include">
        </childnode>
      </node>
      <node id="47019">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="46957">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="46932">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="46875" relation="include">
        </childnode>
      </node>
      <node id="47111">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46970">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="46961" relation="include">
        </childnode>
      </node>
      <node id="46868">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="46922">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="46986">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="47015">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="47044">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="47045" relation="include">
        </childnode>
      </node>
      <node id="46894">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="46895" relation="include">
        </childnode>
        <childnode refid="46896" relation="include">
        </childnode>
      </node>
      <node id="47039">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="46822" relation="include">
        </childnode>
        <childnode refid="46830" relation="include">
        </childnode>
        <childnode refid="47040" relation="include">
        </childnode>
      </node>
      <node id="47023">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="47036">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="46996">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46994">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="47026">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="47027" relation="include">
        </childnode>
      </node>
      <node id="46958">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="46959" relation="include">
        </childnode>
      </node>
      <node id="46842">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="47115">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46947">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="46948" relation="include">
        </childnode>
      </node>
      <node id="46847">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="46818">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46821" relation="include">
        </childnode>
        <childnode refid="46823" relation="include">
        </childnode>
        <childnode refid="46824" relation="include">
        </childnode>
      </node>
      <node id="46949">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46856" relation="include">
        </childnode>
      </node>
      <node id="46928">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="47077">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="46833">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="46905">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46906" relation="include">
        </childnode>
        <childnode refid="46908" relation="include">
        </childnode>
        <childnode refid="46909" relation="include">
        </childnode>
        <childnode refid="46832" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46811" relation="include">
        </childnode>
        <childnode refid="46911" relation="include">
        </childnode>
        <childnode refid="46913" relation="include">
        </childnode>
        <childnode refid="46914" relation="include">
        </childnode>
        <childnode refid="46916" relation="include">
        </childnode>
        <childnode refid="46917" relation="include">
        </childnode>
        <childnode refid="46876" relation="include">
        </childnode>
        <childnode refid="46839" relation="include">
        </childnode>
        <childnode refid="46920" relation="include">
        </childnode>
        <childnode refid="46925" relation="include">
        </childnode>
        <childnode refid="46927" relation="include">
        </childnode>
        <childnode refid="46930" relation="include">
        </childnode>
        <childnode refid="46877" relation="include">
        </childnode>
        <childnode refid="46952" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46964" relation="include">
        </childnode>
        <childnode refid="46966" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46835" relation="include">
        </childnode>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="46968" relation="include">
        </childnode>
        <childnode refid="46969" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
        <childnode refid="46970" relation="include">
        </childnode>
        <childnode refid="46971" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="46979" relation="include">
        </childnode>
        <childnode refid="46944" relation="include">
        </childnode>
        <childnode refid="46939" relation="include">
        </childnode>
        <childnode refid="46981" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="46982" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46974" relation="include">
        </childnode>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="46829" relation="include">
        </childnode>
        <childnode refid="46831" relation="include">
        </childnode>
        <childnode refid="46894" relation="include">
        </childnode>
        <childnode refid="46881" relation="include">
        </childnode>
        <childnode refid="46858" relation="include">
        </childnode>
        <childnode refid="46897" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46990" relation="include">
        </childnode>
        <childnode refid="46999" relation="include">
        </childnode>
        <childnode refid="47000" relation="include">
        </childnode>
      </node>
      <node id="46948">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="47126">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_DenseBins.H</label>
        <link refid="AMReX__DenseBins_8H"/>
        <childnode refid="46861" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="47045">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="46839" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
      </node>
      <node id="46909">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46910" relation="include">
        </childnode>
        <childnode refid="46822" relation="include">
        </childnode>
      </node>
      <node id="47063">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46836" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="47064" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="47065" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
      </node>
      <node id="47068">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="47008">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="46883">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46887" relation="include">
        </childnode>
        <childnode refid="46889" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46892" relation="include">
        </childnode>
      </node>
      <node id="46834">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="47021">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="47022" relation="include">
        </childnode>
      </node>
      <node id="46945">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="46903" relation="include">
        </childnode>
        <childnode refid="46946" relation="include">
        </childnode>
      </node>
      <node id="46874">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="46936">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="46919">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="46876">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="46913">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="46900">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="46901" relation="include">
        </childnode>
        <childnode refid="46855" relation="include">
        </childnode>
      </node>
      <node id="46870">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46876" relation="include">
        </childnode>
        <childnode refid="46905" relation="include">
        </childnode>
        <childnode refid="46928" relation="include">
        </childnode>
        <childnode refid="47002" relation="include">
        </childnode>
      </node>
      <node id="46911">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="46912" relation="include">
        </childnode>
      </node>
      <node id="46963">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="47101">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuFuse.cpp</label>
        <link refid="AMReX__GpuFuse_8cpp"/>
      </node>
      <node id="47125">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_BinIterator.H</label>
        <link refid="AMReX__BinIterator_8H"/>
        <childnode refid="47126" relation="include">
        </childnode>
        <childnode refid="47127" relation="include">
        </childnode>
      </node>
      <node id="46899">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="46846" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46858" relation="include">
        </childnode>
        <childnode refid="46897" relation="include">
        </childnode>
      </node>
      <node id="46844">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_3D_K.H</label>
        <link refid="AMReX__Habec__3D__K_8H"/>
      </node>
      <node id="46872">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil_I.H</label>
        <link refid="AMReX__FillPatchUtil__I_8H"/>
        <childnode refid="46873" relation="include">
        </childnode>
      </node>
      <node id="47112">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46885">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="46856" relation="include">
        </childnode>
      </node>
      <node id="47055">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="46831">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="47054">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="46890">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
      </node>
      <node id="47035">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="47036" relation="include">
        </childnode>
        <childnode refid="46920" relation="include">
        </childnode>
      </node>
      <node id="46901">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="46855" relation="include">
        </childnode>
      </node>
      <node id="46827">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="46968">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
      </node>
      <node id="46892">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="46888" relation="include">
        </childnode>
        <childnode refid="46886" relation="include">
        </childnode>
      </node>
      <node id="46917">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="46909" relation="include">
        </childnode>
        <childnode refid="46918" relation="include">
        </childnode>
        <childnode refid="46919" relation="include">
        </childnode>
      </node>
      <node id="47108">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47106">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="47059">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="46880" relation="include">
        </childnode>
      </node>
      <node id="47020">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="47021" relation="include">
        </childnode>
      </node>
      <node id="46886">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="46857" relation="include">
        </childnode>
      </node>
      <node id="46820">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="47033">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="47034" relation="include">
        </childnode>
        <childnode refid="46920" relation="include">
        </childnode>
      </node>
      <node id="46929">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="46995">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46996" relation="include">
        </childnode>
        <childnode refid="46997" relation="include">
        </childnode>
        <childnode refid="46866" relation="include">
        </childnode>
      </node>
      <node id="46851">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="46852">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="46846">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="47014">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="47043">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="46910">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="47082">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="47083" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="47084" relation="include">
        </childnode>
      </node>
      <node id="47040">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="46934">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="46823">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="46822" relation="include">
        </childnode>
      </node>
      <node id="47047">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Slopes_K.H</label>
        <link refid="AMReX__Slopes__K_8H"/>
        <childnode refid="47048" relation="include">
        </childnode>
      </node>
      <node id="46864">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="46865" relation="include">
        </childnode>
      </node>
      <node id="47031">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="47025">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="46841">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="47007">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="46820" relation="include">
        </childnode>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46909" relation="include">
        </childnode>
        <childnode refid="46811" relation="include">
        </childnode>
        <childnode refid="47008" relation="include">
        </childnode>
        <childnode refid="46913" relation="include">
        </childnode>
        <childnode refid="47009" relation="include">
        </childnode>
        <childnode refid="46926" relation="include">
        </childnode>
        <childnode refid="46925" relation="include">
        </childnode>
        <childnode refid="46928" relation="include">
        </childnode>
        <childnode refid="47002" relation="include">
        </childnode>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46919" relation="include">
        </childnode>
        <childnode refid="46971" relation="include">
        </childnode>
        <childnode refid="46904" relation="include">
        </childnode>
        <childnode refid="46846" relation="include">
        </childnode>
        <childnode refid="46895" relation="include">
        </childnode>
        <childnode refid="46881" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="47070">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="46848" relation="include">
        </childnode>
      </node>
      <node id="47120">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47078">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="46949" relation="include">
        </childnode>
      </node>
      <node id="46942">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="46926">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="47034">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="46861">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="46859" relation="include">
        </childnode>
      </node>
      <node id="47050">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="46848">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="46815">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="47071">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap_K.H</label>
        <link refid="AMReX__MLCellABecLap__K_8H"/>
        <childnode refid="46889" relation="include">
        </childnode>
      </node>
      <node id="46835">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="46836" relation="include">
        </childnode>
      </node>
      <node id="47005">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="47006" relation="include">
        </childnode>
      </node>
      <node id="47069">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="46847" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="46856" relation="include">
        </childnode>
      </node>
      <node id="47009">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="47010" relation="include">
        </childnode>
        <childnode refid="47002" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="47048">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_slopes_K.H</label>
        <link refid="AMReX__EB__slopes__K_8H"/>
      </node>
      <node id="46821">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
      </node>
      <node id="46849">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="46828">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="46903">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="46896">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="46895" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46886" relation="include">
        </childnode>
        <childnode refid="46858" relation="include">
        </childnode>
        <childnode refid="46897" relation="include">
        </childnode>
      </node>
      <node id="47060">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="47061" relation="include">
        </childnode>
        <childnode refid="47062" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46965" relation="include">
        </childnode>
      </node>
      <node id="46902">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="46903" relation="include">
        </childnode>
        <childnode refid="46904" relation="include">
        </childnode>
      </node>
      <node id="46982">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="46983" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="46989" relation="include">
        </childnode>
      </node>
      <node id="46873">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="46820" relation="include">
        </childnode>
        <childnode refid="46827" relation="include">
        </childnode>
        <childnode refid="46874" relation="include">
        </childnode>
      </node>
      <node id="47022">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="46817">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="46818" relation="include">
        </childnode>
        <childnode refid="46825" relation="include">
        </childnode>
        <childnode refid="46826" relation="include">
        </childnode>
      </node>
      <node id="47104">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="46813" relation="include">
        </childnode>
        <childnode refid="47089" relation="include">
        </childnode>
      </node>
      <node id="46950">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="46921">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46922" relation="include">
        </childnode>
        <childnode refid="46910" relation="include">
        </childnode>
        <childnode refid="46909" relation="include">
        </childnode>
        <childnode refid="46923" relation="include">
        </childnode>
      </node>
      <node id="46930">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46931" relation="include">
        </childnode>
        <childnode refid="46951" relation="include">
        </childnode>
      </node>
      <node id="46812">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="46991">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="46992" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="46875">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="46980">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="46862">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46816">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="46817" relation="include">
        </childnode>
        <childnode refid="46828" relation="include">
        </childnode>
        <childnode refid="46829" relation="include">
        </childnode>
        <childnode refid="46831" relation="include">
        </childnode>
      </node>
      <node id="46858">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="46887">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46888" relation="include">
        </childnode>
      </node>
      <node id="46891">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="46851" relation="include">
        </childnode>
      </node>
      <node id="47072">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="46851" relation="include">
        </childnode>
      </node>
      <node id="46976">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="46865">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="46854">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="46923">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="46953">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="46906">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="46907" relation="include">
        </childnode>
      </node>
      <node id="47003">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="46917" relation="include">
        </childnode>
      </node>
      <node id="46857">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="47037">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="46868" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="47038" relation="include">
        </childnode>
        <childnode refid="47004" relation="include">
        </childnode>
        <childnode refid="46839" relation="include">
        </childnode>
        <childnode refid="46822" relation="include">
        </childnode>
        <childnode refid="46830" relation="include">
        </childnode>
        <childnode refid="47039" relation="include">
        </childnode>
        <childnode refid="47041" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="46853">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="46978">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="46997">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="46806">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="46807" relation="include">
        </childnode>
        <childnode refid="47102" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47102">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Partition.H</label>
        <link refid="AMReX__Partition_8H"/>
      </node>
      <node id="47032">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="47033" relation="include">
        </childnode>
      </node>
      <node id="46989">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="46983" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
      </node>
      <node id="47073">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="46889" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="47074" relation="include">
        </childnode>
        <childnode refid="47077" relation="include">
        </childnode>
        <childnode refid="47078" relation="include">
        </childnode>
      </node>
      <node id="46807">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="46808" relation="include">
        </childnode>
        <childnode refid="47103" relation="include">
        </childnode>
        <childnode refid="47083" relation="include">
        </childnode>
        <childnode refid="46861" relation="include">
        </childnode>
        <childnode refid="46991" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="46998" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="47129" relation="include">
        </childnode>
      </node>
      <node id="46985">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="46983" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
      </node>
      <node id="46933">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="46934" relation="include">
        </childnode>
        <childnode refid="46935" relation="include">
        </childnode>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="46944" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
      </node>
      <node id="46907">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="47010">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="46850">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="47051">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="47052" relation="include">
        </childnode>
      </node>
      <node id="47117">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46836">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="47075">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="46943">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="46888">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="47083">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="47084" relation="include">
        </childnode>
      </node>
      <node id="47091">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
      </node>
      <node id="46822">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="47124">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47081">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="46888" relation="include">
        </childnode>
      </node>
      <node id="47038">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="46839" relation="include">
        </childnode>
        <childnode refid="46933" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46964" relation="include">
        </childnode>
        <childnode refid="46902" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46947" relation="include">
        </childnode>
      </node>
      <node id="47027">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="47023" relation="include">
        </childnode>
      </node>
      <node id="47028">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="46990">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="46826" relation="include">
        </childnode>
        <childnode refid="46991" relation="include">
        </childnode>
        <childnode refid="46998" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47114">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47042">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="46939">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="46903" relation="include">
        </childnode>
        <childnode refid="46940" relation="include">
        </childnode>
      </node>
      <node id="47094">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.H</label>
        <link refid="AMReX__BlockMutex_8H"/>
        <childnode refid="47095" relation="include">
        </childnode>
        <childnode refid="47096" relation="include">
        </childnode>
      </node>
      <node id="47090">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="47091" relation="include">
        </childnode>
      </node>
      <node id="46966">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.H</label>
        <link refid="AMReX__EB__STL__utils_8H"/>
        <childnode refid="46967" relation="include">
        </childnode>
      </node>
      <node id="46999">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="46826">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="46827" relation="include">
        </childnode>
      </node>
      <node id="47087">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46956" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="46871">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="46810" relation="include">
        </childnode>
        <childnode refid="46872" relation="include">
        </childnode>
        <childnode refid="46875" relation="include">
        </childnode>
        <childnode refid="46834" relation="include">
        </childnode>
        <childnode refid="46811" relation="include">
        </childnode>
        <childnode refid="46840" relation="include">
        </childnode>
        <childnode refid="46876" relation="include">
        </childnode>
        <childnode refid="46839" relation="include">
        </childnode>
        <childnode refid="46877" relation="include">
        </childnode>
        <childnode refid="46902" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46896" relation="include">
        </childnode>
        <childnode refid="46898" relation="include">
        </childnode>
      </node>
      <node id="46971">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="46919" relation="include">
        </childnode>
        <childnode refid="46972" relation="include">
        </childnode>
      </node>
      <node id="47079">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="46852" relation="include">
        </childnode>
      </node>
      <node id="46813">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="46814" relation="include">
        </childnode>
        <childnode refid="46811" relation="include">
        </childnode>
        <childnode refid="46837" relation="include">
        </childnode>
        <childnode refid="46838" relation="include">
        </childnode>
        <childnode refid="46868" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="47013" relation="include">
        </childnode>
        <childnode refid="47085" relation="include">
        </childnode>
        <childnode refid="47053" relation="include">
        </childnode>
        <childnode refid="47087" relation="include">
        </childnode>
        <childnode refid="47088" relation="include">
        </childnode>
      </node>
      <node id="47107">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
      </node>
      <node id="46938">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="47024">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="47085">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="47022" relation="include">
        </childnode>
        <childnode refid="47086" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="47042" relation="include">
        </childnode>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="47044" relation="include">
        </childnode>
        <childnode refid="47046" relation="include">
        </childnode>
        <childnode refid="47049" relation="include">
        </childnode>
        <childnode refid="47050" relation="include">
        </childnode>
        <childnode refid="47051" relation="include">
        </childnode>
        <childnode refid="46962" relation="include">
        </childnode>
      </node>
      <node id="47057">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="47058" relation="include">
        </childnode>
      </node>
      <node id="46984">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="46956">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="46953" relation="include">
        </childnode>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
      </node>
      <node id="46810">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="47058">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="46878" relation="include">
        </childnode>
        <childnode refid="47059" relation="include">
        </childnode>
      </node>
      <node id="46811">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="46915">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="46824">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="46863">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="46827" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
      </node>
      <node id="47096">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Random.cpp</label>
        <link refid="AMReX__Random_8cpp"/>
      </node>
      <node id="47006">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="46987">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="47067">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="47068" relation="include">
        </childnode>
      </node>
      <node id="46960">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="46884">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="46847" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46886" relation="include">
        </childnode>
      </node>
      <node id="46830">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="46878">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="47000">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="47001" relation="include">
        </childnode>
      </node>
      <node id="47127">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H</label>
        <link refid="AMReX__SparseBins_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="47089">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="46935">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="46936" relation="include">
        </childnode>
        <childnode refid="46937" relation="include">
        </childnode>
        <childnode refid="46941" relation="include">
        </childnode>
      </node>
      <node id="47018">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="46889">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="47095">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.cpp</label>
        <link refid="AMReX__BlockMutex_8cpp"/>
      </node>
      <node id="47001">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="47002">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="46897">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="46858" relation="include">
        </childnode>
      </node>
      <node id="47103">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="46807" relation="include">
        </childnode>
      </node>
      <node id="46973">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="47098">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DArena.cpp</label>
        <link refid="AMReX__DArena_8cpp"/>
      </node>
      <node id="46961">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="46893">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="47086">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="47061">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="46904">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="47093">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.cpp</label>
        <link refid="AMReX__EBToPVD_8cpp"/>
      </node>
      <node id="46895">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="46924">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="47062">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="46951">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="47017">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="46875" relation="include">
        </childnode>
      </node>
      <node id="46920">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="46909" relation="include">
        </childnode>
        <childnode refid="46921" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46912" relation="include">
        </childnode>
        <childnode refid="46924" relation="include">
        </childnode>
      </node>
      <node id="46962">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="46914">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="46915" relation="include">
        </childnode>
      </node>
      <node id="46979">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="46980" relation="include">
        </childnode>
      </node>
      <node id="46931">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="46932" relation="include">
        </childnode>
        <childnode refid="46933" relation="include">
        </childnode>
        <childnode refid="46950" relation="include">
        </childnode>
        <childnode refid="46881" relation="include">
        </childnode>
      </node>
      <node id="47084">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46996" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="46881">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46894" relation="include">
        </childnode>
        <childnode refid="46893" relation="include">
        </childnode>
        <childnode refid="46896" relation="include">
        </childnode>
        <childnode refid="46898" relation="include">
        </childnode>
      </node>
      <node id="46866">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="46867" relation="include">
        </childnode>
      </node>
      <node id="46814">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46816" relation="include">
        </childnode>
        <childnode refid="46832" relation="include">
        </childnode>
        <childnode refid="46834" relation="include">
        </childnode>
        <childnode refid="46835" relation="include">
        </childnode>
      </node>
      <node id="47065">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="46925">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="46926" relation="include">
        </childnode>
        <childnode refid="46927" relation="include">
        </childnode>
      </node>
      <node id="46808">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="46809" relation="include">
        </childnode>
        <childnode refid="46811" relation="include">
        </childnode>
        <childnode refid="46812" relation="include">
        </childnode>
        <childnode refid="46813" relation="include">
        </childnode>
        <childnode refid="47094" relation="include">
        </childnode>
        <childnode refid="47097" relation="include">
        </childnode>
        <childnode refid="47024" relation="include">
        </childnode>
        <childnode refid="47025" relation="include">
        </childnode>
        <childnode refid="47026" relation="include">
        </childnode>
        <childnode refid="47098" relation="include">
        </childnode>
        <childnode refid="47099" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="47100" relation="include">
        </childnode>
        <childnode refid="47101" relation="include">
        </childnode>
        <childnode refid="47037" relation="include">
        </childnode>
        <childnode refid="47042" relation="include">
        </childnode>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="47044" relation="include">
        </childnode>
        <childnode refid="47046" relation="include">
        </childnode>
        <childnode refid="47102" relation="include">
        </childnode>
        <childnode refid="47103" relation="include">
        </childnode>
        <childnode refid="47096" relation="include">
        </childnode>
        <childnode refid="47104" relation="include">
        </childnode>
        <childnode refid="46806" relation="include">
        </childnode>
        <childnode refid="47105" relation="include">
        </childnode>
        <childnode refid="47125" relation="include">
        </childnode>
        <childnode refid="47126" relation="include">
        </childnode>
        <childnode refid="47041" relation="include">
        </childnode>
        <childnode refid="46991" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="47128" relation="include">
        </childnode>
        <childnode refid="46996" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47127" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
      </node>
      <node id="46993">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="46994" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46879">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="46880" relation="include">
        </childnode>
      </node>
      <node id="46955">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="46956" relation="include">
        </childnode>
        <childnode refid="46962" relation="include">
        </childnode>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
      </node>
      <node id="46829">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="46830" relation="include">
        </childnode>
      </node>
      <node id="47129">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H</label>
        <link refid="AMReX__StructOfArrays_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="47084" relation="include">
        </childnode>
      </node>
      <node id="46952">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="46953" relation="include">
        </childnode>
        <childnode refid="46954" relation="include">
        </childnode>
      </node>
      <node id="46946">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="47099">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="46877">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="46878" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
        <childnode refid="46881" relation="include">
        </childnode>
      </node>
      <node id="47116">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="46937">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="46938" relation="include">
        </childnode>
        <childnode refid="46939" relation="include">
        </childnode>
      </node>
      <node id="46860">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="46827" relation="include">
        </childnode>
        <childnode refid="46861" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46862" relation="include">
        </childnode>
        <childnode refid="46863" relation="include">
        </childnode>
        <childnode refid="46866" relation="include">
        </childnode>
      </node>
      <node id="46940">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="47076">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="47072" relation="include">
        </childnode>
      </node>
      <node id="46855">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="46975">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="46898">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="46899" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46900" relation="include">
        </childnode>
      </node>
      <node id="47121">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47052">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="46936" relation="include">
        </childnode>
      </node>
      <node id="46869">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="46814" relation="include">
        </childnode>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="47003" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="47004" relation="include">
        </childnode>
        <childnode refid="46905" relation="include">
        </childnode>
        <childnode refid="47005" relation="include">
        </childnode>
        <childnode refid="47007" relation="include">
        </childnode>
        <childnode refid="47011" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="47012" relation="include">
        </childnode>
      </node>
      <node id="46918">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="46912">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="46819">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46820" relation="include">
        </childnode>
        <childnode refid="46821" relation="include">
        </childnode>
        <childnode refid="46822" relation="include">
        </childnode>
      </node>
      <node id="46845">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="46846" relation="include">
        </childnode>
      </node>
      <node id="47080">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46855" relation="include">
        </childnode>
      </node>
      <node id="46867">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="47016">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="47017" relation="include">
        </childnode>
      </node>
      <node id="46838">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="46839" relation="include">
        </childnode>
      </node>
      <node id="46839">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46834" relation="include">
        </childnode>
        <childnode refid="46840" relation="include">
        </childnode>
        <childnode refid="46841" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46844" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46847" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46855" relation="include">
        </childnode>
        <childnode refid="46856" relation="include">
        </childnode>
        <childnode refid="46857" relation="include">
        </childnode>
        <childnode refid="46858" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46959">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="47029">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="46825">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="47074">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="47075" relation="include">
        </childnode>
        <childnode refid="47076" relation="include">
        </childnode>
      </node>
      <node id="47110">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
      </node>
      <node id="47092">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.H</label>
        <link refid="AMReX__EBToPVD_8H"/>
        <childnode refid="47093" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
      </node>
      <node id="47088">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="47060" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46964" relation="include">
        </childnode>
        <childnode refid="46836" relation="include">
        </childnode>
        <childnode refid="47089" relation="include">
        </childnode>
        <childnode refid="47090" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="47064" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
        <childnode refid="47059" relation="include">
        </childnode>
        <childnode refid="47065" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="47066" relation="include">
        </childnode>
        <childnode refid="47092" relation="include">
        </childnode>
        <childnode refid="47012" relation="include">
        </childnode>
        <childnode refid="47074" relation="include">
        </childnode>
      </node>
      <node id="46967">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.cpp</label>
        <link refid="AMReX__EB__STL__utils_8cpp"/>
      </node>
      <node id="47056">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="46972">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="46974" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
      </node>
      <node id="46992">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="46941">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="46881" relation="include">
        </childnode>
        <childnode refid="46942" relation="include">
        </childnode>
      </node>
      <node id="46859">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Scan">amrex::Scan</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Gpu">amrex::Gpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_SCAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_SCAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Arena_8H" kindref="compound">AMReX_Arena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="namespaceamrex_1_1Scan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Scan<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">STVA</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>value;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SINGLE_WORD&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BlockStatus<sp/>{};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BlockStatus&lt;T,<sp/>true&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">Data<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STVA&lt;U&gt;<sp/>s;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>i;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(Data&lt;U&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(Data&lt;U&gt;<sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Data&lt;T&gt;<sp/>d;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_status,<sp/>T<sp/>a_value)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>tmp;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">STVA&lt;T&gt;<sp/>volatile&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmp).status<sp/>=<sp/>a_status;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">STVA&lt;T&gt;<sp/>volatile&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmp).value<sp/><sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d.s)<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data&lt;T&gt;<sp/>tmp;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.s<sp/>=<sp/>{a_status,<sp/>a_value};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HIP/DPCPP:<sp/>unsigned<sp/>long<sp/>long<sp/>must<sp/>be<sp/>64<sp/>bits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aead1011333d0e8605985cd0ab8c163bf" kindref="member">Gpu::Atomic::Exch</ref>(reinterpret_cast&lt;unsigned<sp/>long<sp/>long*&gt;(&amp;d),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;unsigned<sp/>long<sp/>long&amp;&gt;(tmp));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>get_aggregate()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.s.value;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>read<sp/>()</highlight><highlight class="keyword"><sp/>volatile<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint64_t<sp/>volatile&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">STVA&lt;T&gt;<sp/>volatile&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmp).status,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">STVA&lt;T&gt;<sp/>volatile&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmp).value<sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HIP/DPCPP:<sp/>unsigned<sp/>long<sp/>long<sp/>must<sp/>be<sp/>64<sp/>bits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a381dae009311cca3b100d29d0417f83e" kindref="member">Gpu::Atomic::Add</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(reinterpret_cast&lt;unsigned<sp/>long<sp/>long*&gt;(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Data&lt;T&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;d)),<sp/>0ull);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Data&lt;T&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;tmp)).s;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_status)<sp/>{<sp/>d.s.status<sp/>=<sp/>a_status;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>wait<sp/>(sycl::nd_item&lt;1&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>item)</highlight><highlight class="keyword"><sp/>volatile<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>wait<sp/>()</highlight><highlight class="keyword"><sp/>volatile<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>r;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.mem_fence();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__threadfence_block();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>read();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(r.status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BlockStatus&lt;T,<sp/>false&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>aggregate;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>inclusive;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_status,<sp/>T<sp/>a_value,<sp/>sycl::nd_item&lt;1&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>item)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_status,<sp/>T<sp/>a_value)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aggregate<sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclusive<sp/>=<sp/>a_value;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.mem_fence();<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>This<sp/>is<sp/>at<sp/>block<sp/>level,<sp/>but<sp/>needs<sp/>to<sp/>be<sp/>device<sp/>level<sp/>fence,<sp/>which<sp/>is<sp/>currently<sp/>a<sp/>PR<sp/>in<sp/>intel/llvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__threadfence();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>a_status;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>get_aggregate()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aggregate;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>read<sp/>()</highlight><highlight class="keyword"><sp/>volatile<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>aggregate};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,<sp/>inclusive};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a_status)<sp/>{<sp/>status<sp/>=<sp/>a_status;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>wait<sp/>(sycl::nd_item&lt;1&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>item)</highlight><highlight class="keyword"><sp/>volatile<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>wait<sp/>()</highlight><highlight class="keyword"><sp/>volatile<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STVA&lt;T&gt;<sp/>r;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>read();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.mem_fence();<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>This<sp/>is<sp/>at<sp/>block<sp/>level,<sp/>but<sp/>needs<sp/>to<sp/>be<sp/>device<sp/>level<sp/>fence,<sp/>which<sp/>is<sp/>currently<sp/>a<sp/>PR<sp/>in<sp/>intel/llvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__threadfence();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(r.status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>Type<sp/>{<sp/>inclusive,<sp/>exclusive<sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_DPCPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FIN,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FOUT,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">T<sp/>PrefixSum<sp/>(N<sp/>n,<sp/>FIN<sp/>&amp;&amp;<sp/>fin,<sp/>FOUT<sp/>&amp;&amp;<sp/>fout,<sp/>Type<sp/>type)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nwarps_per_block<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthreads<sp/>=<sp/>nwarps_per_block*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchunks<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nelms_per_block<sp/>=<sp/>nthreads<sp/>*<sp/>nchunks;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(static_cast&lt;Long&gt;(n)<sp/>&lt;<sp/>static_cast&lt;Long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>())*nelms_per_block);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n)<sp/>+<sp/>nelms_per_block<sp/>-<sp/>1)<sp/>/<sp/>nelms_per_block;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>sm<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>(Gpu::Device::warp_size<sp/>+<sp/>nwarps_per_block)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stream<sp/>=<sp/>Gpu::gpuStream();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;sizeof(detail::STVA&lt;T&gt;)<sp/>&lt;=<sp/>8,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::BlockStatus&lt;T,true&gt;,<sp/>detail::BlockStatus&lt;T,false&gt;<sp/>&gt;::type<sp/>BlockStatusT;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>nbytes_blockstatus<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BlockStatusT)*nblocks);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>nbytes_blockid<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>nbytes_totalsum<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(<sp/><sp/>nbytes_blockstatus</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>nbytes_blockid</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>nbytes_totalsum));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>BlockStatusT*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>block_status_p<sp/>=<sp/>(BlockStatusT*)<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>virtual_block_id_p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>+<sp/>nbytes_blockstatus);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>totalsum_p<sp/>=<sp/>(T*)(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>+<sp/>nbytes_blockstatus<sp/>+<sp/>nbytes_blockid);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(nblocks,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockStatusT&amp;<sp/>block_status<sp/>=<sp/>block_status_p[i];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_status.set_status(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*virtual_block_id_p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(nblocks,<sp/>nthreads,<sp/>sm,<sp/>stream,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::ONEAPI::sub_group<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sg<sp/>=<sp/>gh.item.get_sub_group();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lane<sp/>=<sp/>sg.get_local_id()[0];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warp<sp/>=<sp/>sg.get_group_id()[0];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nwarps<sp/>=<sp/>sg.get_group_range()[0];</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadIdxx<sp/>=<sp/>gh.item.get_local_id(0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockDimx<sp/>=<sp/>gh.item.get_local_range(0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridDimx<sp/>=<sp/>gh.item.get_group_range(0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>shared<sp/>=<sp/>(T*)(gh.local);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>shared2<sp/>=<sp/>shared<sp/>+<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>of<sp/>all,<sp/>get<sp/>block<sp/>virtual<sp/>id.<sp/><sp/>We<sp/>must<sp/>do<sp/>this<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>deadlock<sp/>because<sp/>blocks<sp/>may<sp/>be<sp/>launched<sp/>in<sp/>any<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Anywhere<sp/>in<sp/>this<sp/>function,<sp/>we<sp/>should<sp/>not<sp/>use<sp/>blockIdx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>virtual_block_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gridDimx<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>virtual_block_id_shared<sp/>=<sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)(shared2+nwarps));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdxx<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bid<sp/>=<sp/>Gpu::Atomic::Inc&lt;sycl::access::address_space::global_space&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(virtual_block_id_p,<sp/>gridDimx);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual_block_id_shared<sp/>=<sp/>bid;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gh.item.barrier(sycl::access::fence_space::local_space);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual_block_id<sp/>=<sp/>virtual_block_id_shared;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>block<sp/>processes<sp/>[ibegin,iend).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>ibegin<sp/>=<sp/>nelms_per_block<sp/>*<sp/>virtual_block_id;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>iend<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(static_cast&lt;N&gt;(ibegin+nelms_per_block),<sp/>n);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockStatusT&amp;<sp/>block_status<sp/>=<sp/>block_status_p[virtual_block_id];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>overall<sp/>algorithm<sp/>is<sp/>based<sp/>on<sp/>&quot;Single-pass<sp/>Parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefix<sp/>Scan<sp/>with<sp/>Decoupled<sp/>Look-back&quot;<sp/>by<sp/>D.<sp/>Merrill<sp/>&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>M.<sp/>Garland.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>block<sp/>is<sp/>responsible<sp/>for<sp/>nchunks<sp/>chunks<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>each<sp/>chunk<sp/>has<sp/>blockDim.x<sp/>elements,<sp/>one<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thread<sp/>in<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>sum_prev_chunk<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>inclusive<sp/>sum<sp/>from<sp/>previous<sp/>chunks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp_out[nchunks];<sp/></highlight><highlight class="comment">//<sp/>block-wide<sp/>inclusive<sp/>sum<sp/>for<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ichunk<sp/>=<sp/>0;<sp/>ichunk<sp/>&lt;<sp/>nchunks;<sp/>++ichunk)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>offset<sp/>=<sp/>ibegin<sp/>+<sp/>ichunk*blockDimx;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>iend)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>threadIdxx;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x0<sp/>=<sp/>(offset<sp/>&lt;<sp/>iend)<sp/>?<sp/>fin(offset)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(type<sp/>==<sp/>Type::exclusive<sp/>&amp;&amp;<sp/>offset<sp/>==<sp/>n-1)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>+=<sp/>x0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>within<sp/>a<sp/>warp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>Gpu::Device::warp_size;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>s<sp/>=<sp/>sg.shuffle_up(x,<sp/>i);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;=<sp/>i)<sp/>x<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>now<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>within<sp/>the<sp/>warp.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>thread<sp/>in<sp/>each<sp/>warp<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>warp.<sp/><sp/>We<sp/>will<sp/>store<sp/>it<sp/>in<sp/>shared<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>Gpu::Device::warp_size<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared[warp]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gh.item.barrier(sycl::access::fence_space::local_space);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>warp<sp/>will<sp/>do<sp/>scan<sp/>on<sp/>the<sp/>warp<sp/>sums<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whole<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>(lane<sp/>&lt;<sp/>nwarps)<sp/>?<sp/>shared[lane]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>Gpu::Device::warp_size;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>s<sp/>=<sp/>sg.shuffle_up(y,<sp/>i);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;=<sp/>i)<sp/>y<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&lt;<sp/>nwarps)<sp/>shared2[lane]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gh.item.barrier(sycl::access::fence_space::local_space);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shared[0:nwarps)<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>of<sp/>warp<sp/>sums.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>note<sp/>x<sp/>still<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warp.<sp/><sp/>Given<sp/>these<sp/>two,<sp/>we<sp/>can<sp/>compute<sp/>the<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>within<sp/>this<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>sum_prev_warp<sp/>=<sp/>(warp<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>shared2[warp-1];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_out[ichunk]<sp/>=<sp/>sum_prev_warp<sp/>+<sp/>sum_prev_chunk<sp/>+</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((type<sp/>==<sp/>Type::inclusive)<sp/>?<sp/>x<sp/>:<sp/>x-x0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_prev_chunk<sp/>+=<sp/>shared2[nwarps-1];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum_prev_chunk<sp/>now<sp/>holds<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>whole<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdxx<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>gridDimx<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_status.write((virtual_block_id<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_prev_chunk);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(virtual_block_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ichunk<sp/>=<sp/>0;<sp/>ichunk<sp/>&lt;<sp/>nchunks;<sp/>++ichunk)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>offset<sp/>=<sp/>ibegin<sp/>+<sp/>ichunk*blockDimx<sp/>+<sp/>threadIdxx;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>iend)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout(offset,<sp/>tmp_out[ichunk]);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>n-1)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>+=<sp/>tmp_out[ichunk];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(virtual_block_id<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>exclusive_prefix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockStatusT<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">*<sp/>pbs<sp/>=<sp/>block_status_p;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iblock0<sp/>=<sp/>virtual_block_id-1;<sp/>iblock0<sp/>&gt;=<sp/>0;<sp/>iblock0<sp/>-=<sp/>Gpu::Device::warp_size)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iblock<sp/>=<sp/>iblock0-lane;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::STVA&lt;T&gt;<sp/>stva{</highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iblock<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stva<sp/>=<sp/>pbs[iblock].wait(gh.item);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x<sp/>=<sp/>stva.value;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implement<sp/>our<sp/>own<sp/>__ballot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>status_bf<sp/>=<sp/>(stva.status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">)<sp/>?<sp/>(0x1u<sp/>&lt;&lt;<sp/>lane)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Gpu::Device::warp_size;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status_bf<sp/>|=<sp/>sg.shuffle_xor(status_bf,<sp/>i);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_lookback<sp/>=<sp/>status_bf<sp/>&amp;<sp/>0x1u;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_lookback<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_bf<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;<sp/>0)<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_mask<sp/>=<sp/>0x1u;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Gpu::Device::warp_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>lane)<sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_bf<sp/>&amp;<sp/>bit_mask)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_lookback<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>Gpu::Device::warp_size/2;<sp/>i<sp/>&gt;<sp/>0;<sp/>i<sp/>/=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>sg.shuffle_down(x,i);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>0)<sp/>{<sp/>exclusive_prefix<sp/>+=<sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_lookback)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_status.write(</highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,<sp/>block_status.get_aggregate()<sp/>+<sp/>exclusive_prefix);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared[0]<sp/>=<sp/>exclusive_prefix;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gh.item.barrier(sycl::access::fence_space::local_space);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>exclusive_prefix<sp/>=<sp/>shared[0];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ichunk<sp/>=<sp/>0;<sp/>ichunk<sp/>&lt;<sp/>nchunks;<sp/>++ichunk)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>offset<sp/>=<sp/>ibegin<sp/>+<sp/>ichunk*blockDimx<sp/>+<sp/>threadIdxx;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>iend)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t<sp/>=<sp/>tmp_out[ichunk]<sp/>+<sp/>exclusive_prefix;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout(offset,<sp/>t);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>n-1)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>+=<sp/>t;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>totalsum;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::dtoh_memcpy_async(&amp;totalsum,<sp/>totalsum_p,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a67a618504ee5fb94bd65a5d393e344b4" kindref="member">Gpu::streamSynchronize</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1aff2d29ad26ba217734430c3d36f42dd1" kindref="member">AMREX_GPU_ERROR_CHECK</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalsum;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FIN,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FOUT,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">T<sp/>PrefixSum<sp/>(N<sp/>n,<sp/>FIN<sp/>&amp;&amp;<sp/>fin,<sp/>FOUT<sp/>&amp;&amp;<sp/>fout,<sp/>Type<sp/>type)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nwarps_per_block<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthreads<sp/>=<sp/>nwarps_per_block*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchunks<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nelms_per_block<sp/>=<sp/>nthreads<sp/>*<sp/>nchunks;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(static_cast&lt;Long&gt;(n)<sp/>&lt;<sp/>static_cast&lt;Long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>())*nelms_per_block);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n)<sp/>+<sp/>nelms_per_block<sp/>-<sp/>1)<sp/>/<sp/>nelms_per_block;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>sm<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>(Gpu::Device::warp_size<sp/>+<sp/>nwarps_per_block)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stream<sp/>=<sp/>Gpu::gpuStream();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;sizeof(detail::STVA&lt;T&gt;)<sp/>&lt;=<sp/>8,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::BlockStatus&lt;T,true&gt;,<sp/>detail::BlockStatus&lt;T,false&gt;<sp/>&gt;::type<sp/>BlockStatusT;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>nbytes_blockstatus<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BlockStatusT)*nblocks);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>nbytes_blockid<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>nbytes_totalsum<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(<sp/><sp/>nbytes_blockstatus</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>nbytes_blockid</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>nbytes_totalsum));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>BlockStatusT*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>block_status_p<sp/>=<sp/>(BlockStatusT*)<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>virtual_block_id_p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>+<sp/>nbytes_blockstatus);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>totalsum_p<sp/>=<sp/>(T*)(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>+<sp/>nbytes_blockstatus<sp/>+<sp/>nbytes_blockid);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(nblocks,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockStatusT&amp;<sp/>block_status<sp/>=<sp/>block_status_p[i];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_status.set_status(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*virtual_block_id_p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(nblocks,<sp/>nthreads,<sp/>sm,<sp/>stream,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lane<sp/>=<sp/>threadIdx.x<sp/>%<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>warp<sp/>=<sp/>threadIdx.x<sp/>/<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nwarps<sp/>=<sp/>blockDim.x<sp/>/<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Gpu::SharedMemory&lt;T&gt;<sp/>gsm;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>shared<sp/>=<sp/>gsm.dataPtr();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>shared2<sp/>=<sp/>shared<sp/>+<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>of<sp/>all,<sp/>get<sp/>block<sp/>virtual<sp/>id.<sp/><sp/>We<sp/>must<sp/>do<sp/>this<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>deadlock<sp/>because<sp/>CUDA<sp/>may<sp/>launch<sp/>blocks<sp/>in<sp/>any<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Anywhere<sp/>in<sp/>this<sp/>function,<sp/>we<sp/>should<sp/>not<sp/>use<sp/>blockIdx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>virtual_block_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gridDim.x<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>virtual_block_id_shared<sp/>=<sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)(shared2+nwarps));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bid<sp/>=<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ac87e449691a622f1f9175c75cb79892a" kindref="member">Gpu::Atomic::Inc</ref>(virtual_block_id_p,<sp/>gridDim.x);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual_block_id_shared<sp/>=<sp/>bid;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual_block_id<sp/>=<sp/>virtual_block_id_shared;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>block<sp/>processes<sp/>[ibegin,iend).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>ibegin<sp/>=<sp/>nelms_per_block<sp/>*<sp/>virtual_block_id;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>iend<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(static_cast&lt;N&gt;(ibegin+nelms_per_block),<sp/>n);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockStatusT&amp;<sp/>block_status<sp/>=<sp/>block_status_p[virtual_block_id];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>overall<sp/>algorithm<sp/>is<sp/>based<sp/>on<sp/>&quot;Single-pass<sp/>Parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefix<sp/>Scan<sp/>with<sp/>Decoupled<sp/>Look-back&quot;<sp/>by<sp/>D.<sp/>Merrill<sp/>&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>M.<sp/>Garland.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>block<sp/>is<sp/>responsible<sp/>for<sp/>nchunks<sp/>chunks<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>each<sp/>chunk<sp/>has<sp/>blockDim.x<sp/>elements,<sp/>one<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thread<sp/>in<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>sum_prev_chunk<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>inclusive<sp/>sum<sp/>from<sp/>previous<sp/>chunks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp_out[nchunks];<sp/></highlight><highlight class="comment">//<sp/>block-wide<sp/>inclusive<sp/>sum<sp/>for<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ichunk<sp/>=<sp/>0;<sp/>ichunk<sp/>&lt;<sp/>nchunks;<sp/>++ichunk)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>offset<sp/>=<sp/>ibegin<sp/>+<sp/>ichunk*blockDim.x;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>iend)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x0<sp/>=<sp/>(offset<sp/>&lt;<sp/>iend)<sp/>?<sp/>fin(offset)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(type<sp/>==<sp/>Type::exclusive<sp/>&amp;&amp;<sp/>offset<sp/>==<sp/>n-1)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>+=<sp/>x0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>within<sp/>a<sp/>warp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>Gpu::Device::warp_size;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuControl_8H_1a0008c69fc4b1c0dff4da75ec778f4941" kindref="member">AMREX_HIP_OR_CUDA</ref>(<sp/>T<sp/>s<sp/>=<sp/>__shfl_up(x,i);,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>s<sp/>=<sp/>__shfl_up_sync(0xffffffff,<sp/>x,<sp/>i);<sp/>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;=<sp/>i)<sp/>x<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>now<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>within<sp/>the<sp/>warp.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>thread<sp/>in<sp/>each<sp/>warp<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>warp.<sp/><sp/>We<sp/>will<sp/>store<sp/>it<sp/>in<sp/>shared<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>Gpu::Device::warp_size<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared[warp]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>warp<sp/>will<sp/>do<sp/>scan<sp/>on<sp/>the<sp/>warp<sp/>sums<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whole<sp/>block.<sp/><sp/>Not<sp/>all<sp/>threads<sp/>in<sp/>the<sp/>warp<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>participate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lane<sp/>&lt;<sp/>nwarps)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>shared[lane];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>nwarps)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>nwarps;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>s<sp/>=<sp/>__shfl_up_sync(mask,<sp/>y,<sp/>i,<sp/>nwarps);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;=<sp/>i)<sp/>y<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared2[lane]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&lt;<sp/>nwarps)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>shared[lane];</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>nwarps;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>s<sp/>=<sp/>__shfl_up(y,<sp/>i,<sp/>nwarps);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;=<sp/>i)<sp/>y<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&lt;<sp/>nwarps)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared2[lane]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shared[0:nwarps)<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>of<sp/>warp<sp/>sums.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>note<sp/>x<sp/>still<sp/>holds<sp/>the<sp/>inclusive<sp/>sum<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warp.<sp/><sp/>Given<sp/>these<sp/>two,<sp/>we<sp/>can<sp/>compute<sp/>the<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>within<sp/>this<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>sum_prev_warp<sp/>=<sp/>(warp<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>shared2[warp-1];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_out[ichunk]<sp/>=<sp/>sum_prev_warp<sp/>+<sp/>sum_prev_chunk<sp/>+</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((type<sp/>==<sp/>Type::inclusive)<sp/>?<sp/>x<sp/>:<sp/>x-x0);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_prev_chunk<sp/>+=<sp/>shared2[nwarps-1];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum_prev_chunk<sp/>now<sp/>holds<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>whole<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>gridDim.x<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_status.write((virtual_block_id<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_prev_chunk);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(virtual_block_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ichunk<sp/>=<sp/>0;<sp/>ichunk<sp/>&lt;<sp/>nchunks;<sp/>++ichunk)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>offset<sp/>=<sp/>ibegin<sp/>+<sp/>ichunk*blockDim.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>iend)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout(offset,<sp/>tmp_out[ichunk]);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>n-1)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>+=<sp/>tmp_out[ichunk];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(virtual_block_id<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(warp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>exclusive_prefix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockStatusT<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">*<sp/>pbs<sp/>=<sp/>block_status_p;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iblock0<sp/>=<sp/>virtual_block_id-1;<sp/>iblock0<sp/>&gt;=<sp/>0;<sp/>iblock0<sp/>-=<sp/>Gpu::Device::warp_size)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iblock<sp/>=<sp/>iblock0-lane;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::STVA&lt;T&gt;<sp/>stva{</highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iblock<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stva<sp/>=<sp/>pbs[iblock].wait();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x<sp/>=<sp/>stva.value;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuControl_8H_1a0008c69fc4b1c0dff4da75ec778f4941" kindref="member">AMREX_HIP_OR_CUDA</ref>(<sp/>uint64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>status_bf<sp/>=<sp/>__ballot(stva.status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">);,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>status_bf<sp/>=<sp/>__ballot_sync(0xffffffff,<sp/>stva.status<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_lookback<sp/>=<sp/>status_bf<sp/>&amp;<sp/>0x1u;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_lookback<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_bf<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>&gt;<sp/>0)<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuControl_8H_1a0008c69fc4b1c0dff4da75ec778f4941" kindref="member">AMREX_HIP_OR_CUDA</ref>(uint64_t<sp/>bit_mask<sp/>=<sp/>0x1ull;,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bit_mask<sp/>=<sp/>0x1u);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Gpu::Device::warp_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>lane)<sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_bf<sp/>&amp;<sp/>bit_mask)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_lookback<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>Gpu::Device::warp_size/2;<sp/>i<sp/>&gt;<sp/>0;<sp/>i<sp/>/=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuControl_8H_1a0008c69fc4b1c0dff4da75ec778f4941" kindref="member">AMREX_HIP_OR_CUDA</ref>(<sp/>x<sp/>+=<sp/>__shfl_down(x,i);,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>__shfl_down_sync(0xffffffff,<sp/>x,<sp/>i);<sp/>)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>0)<sp/>{<sp/>exclusive_prefix<sp/>+=<sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_lookback)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lane<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_status.write(</highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,<sp/>block_status.get_aggregate()<sp/>+<sp/>exclusive_prefix);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared[0]<sp/>=<sp/>exclusive_prefix;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>exclusive_prefix<sp/>=<sp/>shared[0];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ichunk<sp/>=<sp/>0;<sp/>ichunk<sp/>&lt;<sp/>nchunks;<sp/>++ichunk)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>offset<sp/>=<sp/>ibegin<sp/>+<sp/>ichunk*blockDim.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>iend)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t<sp/>=<sp/>tmp_out[ichunk]<sp/>+<sp/>exclusive_prefix;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout(offset,<sp/>t);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>n-1)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalsum_p<sp/>+=<sp/>t;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>totalsum;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::dtoh_memcpy_async(&amp;totalsum,<sp/>totalsum_p,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a67a618504ee5fb94bd65a5d393e344b4" kindref="member">Gpu::streamSynchronize</ref>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1aff2d29ad26ba217734430c3d36f42dd1" kindref="member">AMREX_GPU_ERROR_CHECK</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalsum;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>return<sp/>value<sp/>is<sp/>the<sp/>total<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Scan_1a6c7995e76bd6422d20db6f336f64989d" kindref="member">InclusiveSum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>in,<sp/>T<sp/>*<sp/>out)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;Long&gt;(n)<sp/>&lt;=<sp/>static_cast&lt;Long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PrefixSum&lt;T&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n),</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in[i];<sp/>},</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/>out[i]<sp/>=<sp/>x;<sp/>},</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type::inclusive);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PrefixSum&lt;T&gt;(n,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in[i];<sp/>},</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/>out[i]<sp/>=<sp/>x;<sp/>},</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type::inclusive);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>return<sp/>value<sp/>is<sp/>the<sp/>total<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Scan_1a3d89941c9d430b31054150e45dbde440" kindref="member">ExclusiveSum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>in,<sp/>T<sp/>*<sp/>out)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;Long&gt;(n)<sp/>&lt;=<sp/>static_cast&lt;Long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PrefixSum&lt;T&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n),</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in[i];<sp/>},</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/>out[i]<sp/>=<sp/>x;<sp/>},</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type::exclusive);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PrefixSum&lt;T&gt;(n,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in[i];<sp/>},</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/>out[i]<sp/>=<sp/>x;<sp/>},</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type::exclusive);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>return<sp/>value<sp/>is<sp/>the<sp/>total<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="668" refid="namespaceamrex_1_1Scan_1a6c7995e76bd6422d20db6f336f64989d" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Scan_1a6c7995e76bd6422d20db6f336f64989d" kindref="member">InclusiveSum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>in,<sp/>T<sp/>*<sp/>out)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>std::partial_sum(in,<sp/>in+n,<sp/>out);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>?<sp/>out[n-1]<sp/>:<sp/>T(0);</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>return<sp/>value<sp/>is<sp/>the<sp/>total<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="676" refid="namespaceamrex_1_1Scan_1a3d89941c9d430b31054150e45dbde440" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Scan_1a3d89941c9d430b31054150e45dbde440" kindref="member">ExclusiveSum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>in,<sp/>T<sp/>*<sp/>out)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::partial_sum(in,<sp/>in+n-1,<sp/>out+1);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in[n-1]+out[n-1];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2a3432ca64f06615abf07ab44c10cada38" kindref="member">Gpu</ref></highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InIter,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OutIter&gt;</highlight></codeline>
<codeline lineno="694" refid="namespaceamrex_1_1Gpu_1ab4e0fa80e6873e53208d917854f37129" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OutIter<sp/><ref refid="namespaceamrex_1_1Gpu_1ab4e0fa80e6873e53208d917854f37129" kindref="member">inclusive_scan</ref><sp/>(InIter<sp/><ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>,<sp/>InIter<sp/><ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>,<sp/>OutIter<sp/>result)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>std::distance(begin,<sp/>end);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Scan_1a6c7995e76bd6422d20db6f336f64989d" kindref="member">Scan::InclusiveSum</ref>(N,<sp/>&amp;(*begin),<sp/>&amp;(*result));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutIter<sp/>result_end<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(result_end,<sp/>N);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_end;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::partial_sum(begin,<sp/>end,<sp/>result);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InIter,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OutIter&gt;</highlight></codeline>
<codeline lineno="708" refid="namespaceamrex_1_1Gpu_1a3f116832e254a3422729b3455b22f18c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OutIter<sp/><ref refid="namespaceamrex_1_1Gpu_1a3f116832e254a3422729b3455b22f18c" kindref="member">exclusive_scan</ref>(InIter<sp/><ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>,<sp/>InIter<sp/><ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>,<sp/>OutIter<sp/>result)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>std::distance(begin,<sp/>end);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Scan_1a3d89941c9d430b31054150e45dbde440" kindref="member">Scan::ExclusiveSum</ref>(N,<sp/>&amp;(*begin),<sp/>&amp;(*result));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutIter<sp/>result_end<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(result_end,<sp/>N);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_end;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>==<sp/>end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;InIter&gt;::value_type<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>=<sp/>*<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result++<sp/>=<sp/>sum<sp/>-<sp/>*<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++begin<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>std::move(sum)<sp/>+<sp/>*<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result++<sp/>=<sp/>sum<sp/>-<sp/>*<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++result;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H"/>
  </compounddef>
</doxygen>
