<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1HypreABecLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::HypreABecLap</compoundname>
    <basecompoundref refid="classamrex_1_1Hypre" prot="public" virt="non-virtual">amrex::Hypre</basecompoundref>
    <includes refid="AMReX__HypreABecLap_8H" local="no">AMReX_HypreABecLap.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap_1a306b19b425bf46d46607c66da53fb3f6" prot="private" static="no" mutable="no">
        <type>HYPRE_StructGrid</type>
        <definition>HYPRE_StructGrid amrex::HypreABecLap::grid</definition>
        <argsstring></argsstring>
        <name>grid</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="34" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap_1ad3c53ab64813b12ce11cfa8419d452c3" prot="private" static="no" mutable="no">
        <type>HYPRE_StructMatrix</type>
        <definition>HYPRE_StructMatrix amrex::HypreABecLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap_1af4c046c804e0bdd16f1f88e4adf5a221" prot="private" static="no" mutable="no">
        <type>HYPRE_StructVector</type>
        <definition>HYPRE_StructVector amrex::HypreABecLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap_1a5e14d7ce5233de0925fb504796d4e71e" prot="private" static="no" mutable="no">
        <type>HYPRE_StructVector</type>
        <definition>HYPRE_StructVector amrex::HypreABecLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreABecLap_1a41e38522e51d31b8db271795fb039304" prot="private" static="no" mutable="no">
        <type>HYPRE_StructSolver</type>
        <definition>HYPRE_StructSolver amrex::HypreABecLap::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreABecLap_1ad89a45864775721cb3101273d111965f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreABecLap::HypreABecLap</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom_, MPI_Comm comm_)</argsstring>
        <name>HypreABecLap</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap_1a0e273f01ae93c34aece89b8e8f904359" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::HypreABecLap::~HypreABecLap</definition>
        <argsstring>()</argsstring>
        <name>~HypreABecLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="27" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp" bodystart="17" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap_1a91c060611b4dc33fec8c6ec8b9968a56" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order) final</argsstring>
        <name>solve</name>
        <reimplements refid="classamrex_1_1Hypre_1accd025c6669f7d68aa001f5c4d1582ad">solve</reimplements>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BndryData" kindref="compound">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="29" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp" bodystart="32" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1HypreABecLap_1a61436da82fa418df4ddfab4881c137e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap::prepareSolver</definition>
        <argsstring>()</argsstring>
        <name>prepareSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp" bodystart="128" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap_1a4778eb6c291a39971617eb0bf69dff3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp" bodystart="264" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreABecLap_1a9c196be0d95db3cee1025104e1a206da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreABecLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp" bodystart="101" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3299">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
      </node>
      <node id="3298">
        <label>amrex::HypreABecLap</label>
        <link refid="classamrex_1_1HypreABecLap"/>
        <childnode refid="3299" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3334">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3312">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3313" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3315">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3327">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="3307">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3307" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3347">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3311" relation="public-inheritance">
        </childnode>
        <childnode refid="3348" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3304">
        <label>Real</label>
      </node>
      <node id="3335">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3336" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3325">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="3326" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="3339">
        <label>amrex::BndryData</label>
        <link refid="classamrex_1_1BndryData"/>
        <childnode refid="3340" relation="public-inheritance">
        </childnode>
        <childnode refid="3302" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="3342" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="3345" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="3347" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="3329">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3326">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3327" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="3316">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3313">
        <label>string</label>
      </node>
      <node id="3337">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3307" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3331">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="3346">
        <label>std::vector&lt; amrex::MultiMask, std::allocator&lt; amrex::MultiMask &gt; &gt;</label>
      </node>
      <node id="3301">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
        <childnode refid="3302" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="3309" relation="usage">
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
        </childnode>
        <childnode refid="3338" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="3339" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
        <childnode refid="3304" relation="usage">
          <edgelabel>scalar_a</edgelabel>
          <edgelabel>scalar_b</edgelabel>
        </childnode>
      </node>
      <node id="3330">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3331" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3349">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3332">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3338">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="3345">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3346" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3336">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3317">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3322">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="3307" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="3308" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3305">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="3304" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="3348">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3349" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3306">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3307" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3308" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3300">
        <label>amrex::HypreABecLap</label>
        <link refid="classamrex_1_1HypreABecLap"/>
        <childnode refid="3301" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3320">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3321" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3333">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3334" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3303">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="3304" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="3308">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3321">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3316" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3341">
        <label>amrex::FabSet</label>
        <link refid="classamrex_1_1FabSet"/>
        <childnode refid="3309" relation="usage">
          <edgelabel>m_mf</edgelabel>
        </childnode>
      </node>
      <node id="3328">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3314">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3318">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3319" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="3320" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3340">
        <label>amrex::BndryRegister</label>
        <link refid="classamrex_1_1BndryRegister"/>
        <childnode refid="3341" relation="usage">
          <edgelabel>bndry</edgelabel>
        </childnode>
        <childnode refid="3322" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="3309">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="3310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3302">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3303" relation="public-inheritance">
        </childnode>
        <childnode refid="3305" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="3306" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="3344">
        <label>std::vector&lt; RealTuple, std::allocator&lt; RealTuple &gt; &gt;</label>
      </node>
      <node id="3342">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3311" relation="public-inheritance">
        </childnode>
        <childnode refid="3343" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3343">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3344" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3310">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3311" relation="public-inheritance">
        </childnode>
        <childnode refid="3323" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3307" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3325" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3316" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3328" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3330" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3332" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3333" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3335" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3337" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3323">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3324" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3319">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="3311">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3312" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3314" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3307" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3315" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3316" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3318" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="3322" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="3324">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H" bodystart="20" bodyend="43"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreABecLap_1ad3c53ab64813b12ce11cfa8419d452c3" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>A</name></member>
      <member refid="classamrex_1_1Hypre_1a1ab65d249a3254eb6540bedcc9ebf285" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1HypreABecLap_1af4c046c804e0bdd16f1f88e4adf5a221" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>b</name></member>
      <member refid="classamrex_1_1Hypre_1a097bf586d48d127374ec0d293dd3bd41" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1Hypre_1a55f4b29b2291555432bbc82aa86c0931" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1Hypre_1a6eb22e62b62ea0d2bcfef92f18df5304" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1Hypre_1a49181827cb7d3a5b52f02540d7e82121" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1a97c4612c2a7f58b47c36ec710cb1b0f6" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a9c196be0d95db3cee1025104e1a206da" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a306b19b425bf46d46607c66da53fb3f6" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>grid</name></member>
      <member refid="classamrex_1_1Hypre_1aac6b099395a000804880b97e43407c5b" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>hiV</name></member>
      <member refid="classamrex_1_1Hypre_1afd2d6c32022a99d96f73485d03272ec9" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1HypreABecLap_1ad89a45864775721cb3101273d111965f" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>HypreABecLap</name></member>
      <member refid="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13f" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>Interface</name></member>
      <member refid="classamrex_1_1Hypre_1a4120c58bf9c835d8345257e836e276b5" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>ispow2</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a4778eb6c291a39971617eb0bf69dff3f" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1Hypre_1ad64dd52bc29882baff668896c2dde9cd" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>loV</name></member>
      <member refid="classamrex_1_1Hypre_1a64e1c781a5d446a7a7cc3ef1231c2218" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1Hypre_1a88d3049d660b7e0a5fca3002d5b78916" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1Hypre_1a7b04bbe6b54d748e48516df1695bc139" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a61436da82fa418df4ddfab4881c137e3" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>prepareSolver</name></member>
      <member refid="classamrex_1_1Hypre_1abff4c8fa7e9790d9408099ffa9c57934" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1a5cc787cbd77e527e4c58e58904305531" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1Hypre_1a8cb2fde2e6ce7be52d40bc7ee19f7ae3" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1Hypre_1ade6e731e7392a70b13f66c6656631cdf" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1a993feadb0ec999bd7f2d92717fd9c486" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1ac497cc99508dff6311d584d7e0636ce8" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1Hypre_1a1aa001ef00cb82f298c761cbf61de2e1" prot="public" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a91c060611b4dc33fec8c6ec8b9968a56" prot="public" virt="virtual"><scope>amrex::HypreABecLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a41e38522e51d31b8db271795fb039304" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>solver</name></member>
      <member refid="classamrex_1_1Hypre_1a299be2dee6b5a28af170606d9b19615b" prot="protected" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a5e14d7ce5233de0925fb504796d4e71e" prot="private" virt="non-virtual"><scope>amrex::HypreABecLap</scope><name>x</name></member>
      <member refid="classamrex_1_1Hypre_1af5b05a1271484c6bd34ebd3fbbfc85ef" prot="public" virt="virtual"><scope>amrex::HypreABecLap</scope><name>~Hypre</name></member>
      <member refid="classamrex_1_1HypreABecLap_1a0e273f01ae93c34aece89b8e8f904359" prot="public" virt="virtual"><scope>amrex::HypreABecLap</scope><name>~HypreABecLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
