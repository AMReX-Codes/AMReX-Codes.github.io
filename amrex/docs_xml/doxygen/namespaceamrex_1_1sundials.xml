<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1sundials" kind="namespace" language="C++">
    <compoundname>amrex::sundials</compoundname>
    <innerclass refid="classamrex_1_1sundials_1_1MemoryHelper" prot="public">amrex::sundials::MemoryHelper</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1ac1e30fb20bc7a1ea62d7078e50be7498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>N_Vector</type>
        <definition>N_Vector amrex::sundials::N_VNewEmpty_MultiFab</definition>
        <argsstring>(sunindextype length, ::sundials::Context *sunctx)</argsstring>
        <name>N_VNewEmpty_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VNewEmpty_MultiFab</qualifiedname>
        <param>
          <type>sunindextype</type>
          <declname>length</declname>
        </param>
        <param>
          <type>::sundials::Context *</type>
          <declname>sunctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="27" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1ae1662622a3ba4bb3184be645ad05521e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>N_Vector</type>
        <definition>N_Vector amrex::sundials::N_VNew_MultiFab</definition>
        <argsstring>(sunindextype length, const amrex::BoxArray &amp;ba, const amrex::DistributionMapping &amp;dm, sunindextype nComp, sunindextype nGhost, ::sundials::Context *sunctx)</argsstring>
        <name>N_VNew_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VNew_MultiFab</qualifiedname>
        <param>
          <type>sunindextype</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">amrex::BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>sunindextype</type>
          <declname>nComp</declname>
        </param>
        <param>
          <type>sunindextype</type>
          <declname>nGhost</declname>
        </param>
        <param>
          <type>::sundials::Context *</type>
          <declname>sunctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="78" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="78" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1aa448557aba9190f3de7151a4293004c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>N_Vector</type>
        <definition>N_Vector amrex::sundials::N_VMake_MultiFab</definition>
        <argsstring>(sunindextype length, amrex::MultiFab *v_mf, ::sundials::Context *sunctx)</argsstring>
        <name>N_VMake_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VMake_MultiFab</qualifiedname>
        <param>
          <type>sunindextype</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref> *</type>
          <declname>v_mf</declname>
        </param>
        <param>
          <type>::sundials::Context *</type>
          <declname>sunctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="103" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="103" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a48461856ef0250658c5a2ebf41d98edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sunindextype</type>
        <definition>sunindextype amrex::sundials::N_VGetLength_MultiFab</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>N_VGetLength_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VGetLength_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="122" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="122" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a83ab40ea0b031a6e4bd372e4eb2ee2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::sundials::N_VGetOwnMF_MultiFab</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>N_VGetOwnMF_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VGetOwnMF_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="132" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1ae60dd0ee3c2077eebc0dc19ca19eca74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VSetOwnMF_MultiFab</definition>
        <argsstring>(N_Vector v, int own_mf_in)</argsstring>
        <name>N_VSetOwnMF_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VSetOwnMF_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>own_mf_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="142" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a60ae513faa57f10e9b4aa46cf655b832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>N_Vector</type>
        <definition>N_Vector amrex::sundials::N_VCloneEmpty_MultiFab</definition>
        <argsstring>(N_Vector w)</argsstring>
        <name>N_VCloneEmpty_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VCloneEmpty_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="155" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="155" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a1ca520b2e907a435625fdb9c78e78d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>N_Vector</type>
        <definition>N_Vector amrex::sundials::N_VClone_MultiFab</definition>
        <argsstring>(N_Vector w)</argsstring>
        <name>N_VClone_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VClone_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="179" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="179" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1abffe63203970e83625b191d35d5b1cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VDestroy_MultiFab</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>N_VDestroy_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VDestroy_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="204" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="204" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a3a01eaa5b7064ea2a584a244a1579de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VSpace_MultiFab</definition>
        <argsstring>(N_Vector v, sunindextype *lrw, sunindextype *liw)</argsstring>
        <name>N_VSpace_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VSpace_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <param>
          <type>sunindextype *</type>
          <declname>lrw</declname>
        </param>
        <param>
          <type>sunindextype *</type>
          <declname>liw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="214" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a6bfd29fc821ae740836f40595e8479b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__NVector__MultiFab_8H_1abd74ded69b457e740f7ae23530d10bbc" kindref="member">N_VectorContent_MultiFab</ref></type>
        <definition>N_VectorContent_MultiFab amrex::sundials::N_VGetContent_MultiFab</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>N_VGetContent_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VGetContent_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="220" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1aea0161d7bf0da79a1bb92a13999f7a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref> *&amp;</type>
        <definition>amrex::MultiFab *&amp; amrex::sundials::getMFptr</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>getMFptr</name>
        <qualifiedname>amrex::sundials::getMFptr</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="228" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a0270dd318150f1cef7ca4a38937ae27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref> *</type>
        <definition>amrex::MultiFab * amrex::sundials::N_VGetVectorPointer_MultiFab</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>N_VGetVectorPointer_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VGetVectorPointer_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="233" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a2e8955698d384f25c4019a0e22060caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref></type>
        <definition>amrex::MultiFab amrex::sundials::N_VGetVectorAlias_MultiFab</definition>
        <argsstring>(N_Vector v)</argsstring>
        <name>N_VGetVectorAlias_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VGetVectorAlias_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="242" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="242" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a7dbf86dc6e019c767f280831b7acabaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VLinearSum_MultiFab</definition>
        <argsstring>(amrex::Real a, N_Vector x, amrex::Real b, N_Vector y, N_Vector z)</argsstring>
        <name>N_VLinearSum_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VLinearSum_MultiFab</qualifiedname>
        <param>
          <type>amrex::Real</type>
          <declname>a</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>b</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>y</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="249" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="249" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a25656fdc3baa82f76e32e6ccd3f97e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VConst_MultiFab</definition>
        <argsstring>(amrex::Real c, N_Vector z)</argsstring>
        <name>N_VConst_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VConst_MultiFab</qualifiedname>
        <param>
          <type>amrex::Real</type>
          <declname>c</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="263" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1ab1fe429fc9c7083c5712e6c614ebb1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VProd_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector y, N_Vector z)</argsstring>
        <name>N_VProd_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VProd_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>y</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="269" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="269" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a9cc44df35cea73c4b2b2e39544d523a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VDiv_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector y, N_Vector z)</argsstring>
        <name>N_VDiv_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VDiv_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>y</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="283" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="283" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a6828b2d4856afe42b3c8ff58f46951c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VScale_MultiFab</definition>
        <argsstring>(amrex::Real c, N_Vector x, N_Vector z)</argsstring>
        <name>N_VScale_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VScale_MultiFab</qualifiedname>
        <param>
          <type>amrex::Real</type>
          <declname>c</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="297" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="297" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a3adcad5ac518df241183684b9d8eb0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VAbs_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector z)</argsstring>
        <name>N_VAbs_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VAbs_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="310" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="310" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1aba2fa6d2aa9b8cd855d83759e3ed65dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VInv_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector z)</argsstring>
        <name>N_VInv_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VInv_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="333" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="333" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a63e923f8d464b3ebd97acf0ca3ee309d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VAddConst_MultiFab</definition>
        <argsstring>(N_Vector x, amrex::Real b, N_Vector z)</argsstring>
        <name>N_VAddConst_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VAddConst_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>b</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="346" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="346" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a44dbf995b982e15d613de85f44e2d371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VDotProd_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector y)</argsstring>
        <name>N_VDotProd_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VDotProd_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="359" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="359" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a6f2b1de2ee6a9a463d5dddf7d8a8b4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VMaxNorm_MultiFab</definition>
        <argsstring>(N_Vector x)</argsstring>
        <name>N_VMaxNorm_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VMaxNorm_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="374" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="374" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1ac991138d8a2fb1081eed07c3d8b502e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VWrmsNorm_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector w)</argsstring>
        <name>N_VWrmsNorm_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VWrmsNorm_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="399" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="399" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a8b09801267db73e9db73b38a4fa21ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VWrmsNormMask_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector w, N_Vector id)</argsstring>
        <name>N_VWrmsNormMask_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VWrmsNormMask_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>w</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="405" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a6eb54c25311d23f5de6f482181502046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VMin_MultiFab</definition>
        <argsstring>(N_Vector x)</argsstring>
        <name>N_VMin_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VMin_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="410" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="410" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a7e06c30eda626fc60c51681e255936ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::NormHelper_NVector_MultiFab</definition>
        <argsstring>(N_Vector a_x, N_Vector a_w, N_Vector id, int use_id, bool rms)</argsstring>
        <name>NormHelper_NVector_MultiFab</name>
        <qualifiedname>amrex::sundials::NormHelper_NVector_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>a_x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>a_w</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>use_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="434" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="434" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1af676ec963a035867b028dbf81e6fb1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VWL2Norm_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector w)</argsstring>
        <name>N_VWL2Norm_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VWL2Norm_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="469" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="469" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1abed0b53c3ca780e46a31fe986d659ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VL1Norm_MultiFab</definition>
        <argsstring>(N_Vector x)</argsstring>
        <name>N_VL1Norm_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VL1Norm_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="476" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="476" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a3da84796fd6b4469437479e1a0d96d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::N_VCompare_MultiFab</definition>
        <argsstring>(amrex::Real a, N_Vector x, N_Vector z)</argsstring>
        <name>N_VCompare_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VCompare_MultiFab</qualifiedname>
        <param>
          <type>amrex::Real</type>
          <declname>a</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="497" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="497" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1aa8f8163d4f0f443bbe7e99756b2c39d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::sundials::N_VInvTest_MultiFab</definition>
        <argsstring>(N_Vector x, N_Vector z)</argsstring>
        <name>N_VInvTest_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VInvTest_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="519" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="519" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a1125a7cc24f97393b216d5afb6b0416c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::sundials::N_VConstrMask_MultiFab</definition>
        <argsstring>(N_Vector a_a, N_Vector a_x, N_Vector a_m)</argsstring>
        <name>N_VConstrMask_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VConstrMask_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>a_a</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>a_x</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>a_m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="552" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="552" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a6d60b24360c65fb257af7b2cce3931ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::sundials::N_VMinQuotient_MultiFab</definition>
        <argsstring>(N_Vector a_num, N_Vector a_denom)</argsstring>
        <name>N_VMinQuotient_MultiFab</name>
        <qualifiedname>amrex::sundials::N_VMinQuotient_MultiFab</qualifiedname>
        <param>
          <type>N_Vector</type>
          <declname>a_num</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>a_denom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="597" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" bodystart="597" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1ab2ee62c0a1b082b5f9438f56b0146c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::Initialize</definition>
        <argsstring>(int nthreads)</argsstring>
        <name>Initialize</name>
        <qualifiedname>amrex::sundials::Initialize</qualifiedname>
        <param>
          <type>int</type>
          <declname>nthreads</declname>
        </param>
        <briefdescription>
<para>Initialize the AMReX-SUNDIALS interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nthreads</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of threads that will be used with SUNDIALS.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This will create the nthreads SUNDIALS context objects that are needed by the SUNDIALS solver and vector objects. Called by <ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">amrex::Initialize</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.cpp" line="13" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.cpp" bodystart="13" bodyend="35" declfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.H" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1abf6b47f72923c8ef9f360c6a93289a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::sundials::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <qualifiedname>amrex::sundials::Finalize</qualifiedname>
        <briefdescription>
<para>Cleanup everything allocated for the AMReX-SUNDIALS interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Called by <ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">amrex::Finalize</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.cpp" line="37" column="6" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.cpp" bodystart="37" bodyend="48" declfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.H" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a9073bde66b70bda0c4d46655775c684d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::sundials::Context *</type>
        <definition>sundials::Context * amrex::sundials::The_Sundials_Context</definition>
        <argsstring>(int i=amrex::OpenMP::get_thread_num())</argsstring>
        <name>The_Sundials_Context</name>
        <qualifiedname>amrex::sundials::The_Sundials_Context</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
          <defval><ref refid="namespaceamrex_1_1OpenMP_1a27ed6354b68b2bd8721658a8779af032" kindref="member">amrex::OpenMP::get_thread_num</ref>()</defval>
        </param>
        <briefdescription>
<para>Get the i-th SUNDIALS context instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the SUNDIALS context to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
A SUNDIALS context should not be used concurrently from different threads. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.cpp" line="50" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.cpp" bodystart="50" bodyend="54" declfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials_Core.H" declline="40" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a554007ca9e4f3ad73d03e6daa5d1b9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1sundials_1_1MemoryHelper" kindref="compound">MemoryHelper</ref> *</type>
        <definition>MemoryHelper * amrex::sundials::The_SUNMemory_Helper</definition>
        <argsstring>(int i=amrex::OpenMP::get_thread_num())</argsstring>
        <name>The_SUNMemory_Helper</name>
        <qualifiedname>amrex::sundials::The_SUNMemory_Helper</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
          <defval><ref refid="namespaceamrex_1_1OpenMP_1a27ed6354b68b2bd8721658a8779af032" kindref="member">amrex::OpenMP::get_thread_num</ref>()</defval>
        </param>
        <briefdescription>
<para>Get the i-th SUNMemoryHelper instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the SUNMemoryHelper to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
SUNMemoryHelper_i is paired with the i-th SUNContext. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SUNMemory.cpp" line="199" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SUNMemory.cpp" bodystart="199" bodyend="203" declfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SUNMemory.H" declline="42" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1sundials_1a2f78139576a1e190225299ed2e120962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">amrex::Arena</ref> *</type>
        <definition>amrex::Arena * amrex::sundials::getArena</definition>
        <argsstring>(SUNMemoryType type)</argsstring>
        <name>getArena</name>
        <qualifiedname>amrex::sundials::getArena</qualifiedname>
        <param>
          <type>SUNMemoryType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Get the proper <ref refid="classamrex_1_1Arena" kindref="compound">amrex::Arena</ref> based on the SUNMemoryType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>A SUNDIALS SUNMemoryType. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SUNMemory.H" line="50" column="14" declfile="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SUNMemory.H" declline="50" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp" line="15" column="1"/>
  </compounddef>
</doxygen>
