<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1FFT_1_1PoissonHybrid" kind="class" language="C++" prot="public">
    <compoundname>amrex::FFT::PoissonHybrid</compoundname>
    <includes refid="AMReX__FFT__Poisson_8H" local="no">AMReX_FFT_Poisson.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
        <defval><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1FFT_1_1PoissonHybrid_1a1c72e7324b595ececc540e36ca612e22" prot="public" static="no">
        <type>typename MF::value_type</type>
        <definition>using amrex::FFT::PoissonHybrid&lt; MF &gt;::T =  typename MF::value_type</definition>
        <argsstring></argsstring>
        <name>T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="108" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1PoissonHybrid_1a8d00481a7a9beb695d73b4e3b30cbf7e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::FFT::PoissonHybrid&lt; MF &gt;::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="170" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1PoissonHybrid_1a2ed31a34afe2c01c13ec1c0a51acd335" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; std::pair&lt; Boundary, Boundary &gt;, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;std::pair&lt;Boundary,Boundary&gt;,AMREX_SPACEDIM&gt; amrex::FFT::PoissonHybrid&lt; MF &gt;::m_bc</definition>
        <argsstring></argsstring>
        <name>m_bc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="171" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1PoissonHybrid_1a85af199fa6bd6600a3f4477784abe5c5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1FFT_1_1R2X" kindref="compound">R2X</ref>&lt; typename MF::value_type &gt; &gt;</type>
        <definition>std::unique_ptr&lt;R2X&lt;typename MF::value_type&gt; &gt; amrex::FFT::PoissonHybrid&lt; MF &gt;::m_r2x</definition>
        <argsstring></argsstring>
        <name>m_r2x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="172" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1PoissonHybrid_1a129a411567b3c0569b3a98f010691789" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref>&lt; typename MF::value_type &gt; &gt;</type>
        <definition>std::unique_ptr&lt;R2C&lt;typename MF::value_type&gt; &gt; amrex::FFT::PoissonHybrid&lt; MF &gt;::m_r2c</definition>
        <argsstring></argsstring>
        <name>m_r2c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="173" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1PoissonHybrid_1a687da643e57b535bff7dc60764256b76" prot="private" static="no" mutable="no">
        <type>MF</type>
        <definition>MF amrex::FFT::PoissonHybrid&lt; MF &gt;::m_spmf_r</definition>
        <argsstring></argsstring>
        <name>m_spmf_r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="174" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1PoissonHybrid_1a4b9129cd924f3d4866936e226d4f1492" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; <ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt; <ref refid="classamrex_1_1FFT_1_1PoissonHybrid_1a1c72e7324b595ececc540e36ca612e22" kindref="member">T</ref> &gt; &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;GpuComplex&lt;T&gt; &gt; &gt; amrex::FFT::PoissonHybrid&lt; MF &gt;::m_spmf_c</definition>
        <argsstring></argsstring>
        <name>m_spmf_c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="175" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1aad43d1246d480986946e7ca9af9be08e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FA</type>
            <defval>MF</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="namespaceamrex_1a36e5941ad0614ee76ddb49b9bcc2c515" kindref="member">IsFabArray_v</ref>&lt; FA &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>amrex::FFT::PoissonHybrid&lt; MF &gt;::PoissonHybrid</definition>
        <argsstring>(Geometry const &amp;geom, Array&lt; std::pair&lt; Boundary, Boundary &gt;, AMREX_SPACEDIM &gt; const &amp;bc)</argsstring>
        <name>PoissonHybrid</name>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; std::pair&lt; Boundary, Boundary &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>bc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="111" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="111" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1ae8f24509dd3bd6e8f03afff454e3028d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FA</type>
            <defval>MF</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="namespaceamrex_1a36e5941ad0614ee76ddb49b9bcc2c515" kindref="member">IsFabArray_v</ref>&lt; FA &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>amrex::FFT::PoissonHybrid&lt; MF &gt;::PoissonHybrid</definition>
        <argsstring>(Geometry const &amp;geom)</argsstring>
        <name>PoissonHybrid</name>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="135" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="135" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1a0ad120ac18bd4b1cbf654104a98f7bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FFT::PoissonHybrid&lt; MF &gt;::solve</definition>
        <argsstring>(MF &amp;soln, MF const &amp;rhs)</argsstring>
        <name>solve</name>
        <param>
          <type>MF &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="157" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1a54c5afb3d3cfb477c4e1a4af9f617d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FFT::PoissonHybrid&lt; MF &gt;::solve</definition>
        <argsstring>(MF &amp;soln, MF const &amp;rhs, Vector&lt; T &gt; const &amp;dz)</argsstring>
        <name>solve</name>
        <param>
          <type>MF &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FFT_1_1PoissonHybrid_1a1c72e7324b595ececc540e36ca612e22" kindref="member">T</ref> &gt; const &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="158" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="320" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1a8cc527d14f63df793f99183d7ed11b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FFT::PoissonHybrid&lt; MF &gt;::solve</definition>
        <argsstring>(MF &amp;soln, MF const &amp;rhs, Gpu::DeviceVector&lt; T &gt; const &amp;dz)</argsstring>
        <name>solve</name>
        <param>
          <type>MF &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1FFT_1_1PoissonHybrid_1a1c72e7324b595ececc540e36ca612e22" kindref="member">T</ref> &gt; const &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="159" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1a2a1348328a7ad7ed7998bf0e23321c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FA</type>
          </param>
          <param>
            <type>typename DZ</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::PoissonHybrid&lt; MF &gt;::solve_z</definition>
        <argsstring>(FA &amp;spmf, DZ const &amp;dz)</argsstring>
        <name>solve_z</name>
        <param>
          <type>FA &amp;</type>
          <declname>spmf</declname>
        </param>
        <param>
          <type>DZ const &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="163" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="398" bodyend="554"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FFT_1_1PoissonHybrid_1ae09ab63ea53439b247573d191517ac4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DZ</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::PoissonHybrid&lt; MF &gt;::solve_doit</definition>
        <argsstring>(MF &amp;soln, MF const &amp;rhs, DZ const &amp;dz)</argsstring>
        <name>solve_doit</name>
        <param>
          <type>MF &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>DZ const &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="168" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="336" bodyend="394"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>3D <ref refid="classamrex_1_1FFT_1_1Poisson" kindref="compound">Poisson</ref> solver for periodic, Dirichlet &amp; Neumann boundaries in the first two dimensions, and Neumann in the last dimension. The last dimension could have non-uniform mesh. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="62">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>std::unique_ptr&lt; amrex::FFT::R2X&lt; typename MF::value_type &gt; &gt;</label>
      </node>
      <node id="43">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="44" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="70">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="28">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="72">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="51">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="31" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>K</label>
      </node>
      <node id="29">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="15">
        <label>T</label>
      </node>
      <node id="20">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="74">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="5">
        <label>Real</label>
      </node>
      <node id="25">
        <label>amrex::IndexTypeND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="63">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="64" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="37" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="81">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="13">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="65" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="49" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; amrex::FFT::R2C&lt; typename MF::value_type &gt; &gt;</label>
      </node>
      <node id="33">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="18" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="21">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::BoxND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="27">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="22">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="61" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="66" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="52">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="55" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FFT::PoissonHybrid&lt; MF &gt;</label>
        <link refid="classamrex_1_1FFT_1_1PoissonHybrid"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_r2c</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_r2x</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_spmf_r</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>m_spmf_c</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::mutex</label>
      </node>
      <node id="53">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="5" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
      </node>
      <node id="59">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="55">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="78">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="40" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="4">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="5" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="71">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="38">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="49">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="46">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="32" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="42">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="57">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="26">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="10">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="19">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="20" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>std::vector&lt; amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt; * &gt;</label>
        <childnode refid="80" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="33" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="82">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::BaseFab&lt; amrex::GpuComplex&lt; T &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="44">
        <label>std::string</label>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="69" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" line="105" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H" bodystart="106" bodyend="176"/>
    <listofallmembers>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a2ed31a34afe2c01c13ec1c0a51acd335" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>m_bc</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a8d00481a7a9beb695d73b4e3b30cbf7e" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a129a411567b3c0569b3a98f010691789" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>m_r2c</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a85af199fa6bd6600a3f4477784abe5c5" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>m_r2x</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a4b9129cd924f3d4866936e226d4f1492" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>m_spmf_c</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a687da643e57b535bff7dc60764256b76" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>m_spmf_r</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1aad43d1246d480986946e7ca9af9be08e" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>PoissonHybrid</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1ae8f24509dd3bd6e8f03afff454e3028d" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>PoissonHybrid</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a0ad120ac18bd4b1cbf654104a98f7bf3" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>solve</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a54c5afb3d3cfb477c4e1a4af9f617d94" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>solve</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a8cc527d14f63df793f99183d7ed11b3c" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>solve</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1ae09ab63ea53439b247573d191517ac4b" prot="private" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>solve_doit</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a2a1348328a7ad7ed7998bf0e23321c0c" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>solve_z</name></member>
      <member refid="classamrex_1_1FFT_1_1PoissonHybrid_1a1c72e7324b595ececc540e36ca612e22" prot="public" virt="non-virtual"><scope>amrex::FFT::PoissonHybrid</scope><name>T</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
