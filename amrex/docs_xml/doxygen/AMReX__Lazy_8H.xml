<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__Lazy_8H" kind="file" language="C++">
    <compoundname>AMReX_Lazy.H</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">functional</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="AMReX__Lazy_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Lazy.cpp</includedby>
    <incdepgraph>
      <node id="27034">
        <label>functional</label>
      </node>
      <node id="27033">
        <label>vector</label>
      </node>
      <node id="27035">
        <label>algorithm</label>
      </node>
      <node id="27032">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Lazy.H</label>
        <link refid="AMReX_Lazy.H"/>
        <childnode refid="27033" relation="include">
        </childnode>
        <childnode refid="27034" relation="include">
        </childnode>
        <childnode refid="27035" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27037">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Lazy.cpp</label>
        <link refid="AMReX__Lazy_8cpp"/>
      </node>
      <node id="27036">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Lazy.H</label>
        <link refid="AMReX_Lazy.H"/>
        <childnode refid="27037" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Lazy">amrex::Lazy</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BL_LAZY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_LAZY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Lazy</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11" refid="namespaceamrex_1_1Lazy_1ac520a3dfdc05eaffb3b4eea05eea5668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::function&lt;void()&gt;<sp/><ref refid="namespaceamrex_1_1Lazy_1ac520a3dfdc05eaffb3b4eea05eea5668" kindref="member">Func</ref>;</highlight></codeline>
<codeline lineno="12" refid="namespaceamrex_1_1Lazy_1a17dde5bdf675b748b4cff2f01edd7fc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;Func&gt;<sp/><ref refid="namespaceamrex_1_1Lazy_1a17dde5bdf675b748b4cff2f01edd7fc5" kindref="member">FuncQue</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FuncQue<sp/><ref refid="namespaceamrex_1_1Lazy_1aaf84a070bebdd187b4edacd264604b5f" kindref="member">reduction_queue</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Lazy_1a48f09e6d45685ddcaa72f6424891b9e4" kindref="member">QueueReduction</ref><sp/>(Func);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Lazy_1a0a2dd2d6e19976b8eaebb9d81a65718a" kindref="member">EvalReduction</ref><sp/>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Lazy_1a01ac7d4ed0bfab3839b45995cf260a05" kindref="member">Finalize</ref><sp/>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Lazy.H"/>
  </compounddef>
</doxygen>
