<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1PETScABecLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::PETScABecLap</compoundname>
    <includes refid="AMReX__PETSc_8H" local="no">AMReX_PETSc.H</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr PetscInt</type>
        <definition>constexpr PetscInt amrex::PETScABecLap::regular_stencil_size</definition>
        <argsstring></argsstring>
        <name>regular_stencil_size</name>
        <initializer>= 2*AMREX_SPACEDIM + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="38" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr PetscInt</type>
        <definition>constexpr PetscInt amrex::PETScABecLap::eb_stencil_size</definition>
        <argsstring></argsstring>
        <name>eb_stencil_size</name>
        <initializer>= <ref refid="AMReX__SPACE_8H_1a4f563a3cac0e56caccff5ba7be3d49a4" kindref="member">AMREX_D_TERM</ref>(3, *3, *3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="39" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a12f0bff39693de9bdefaecc8c5970e93" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::PETScABecLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="41" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1afca4d4cd5e3361c1d6fd1c64eff38141" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::PETScABecLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="42" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a03a7a7428fc17a0413d54f5b9c2cb9e6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::PETScABecLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="44" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a0bdac13a79f515cc266c9babc14a7cc8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::PETScABecLap::acoefs</definition>
        <argsstring></argsstring>
        <name>acoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="46" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1ac7dbd144ec1cfc9a3c7802f0d9a76a01" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::PETScABecLap::bcoefs</definition>
        <argsstring></argsstring>
        <name>bcoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="47" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a8ac31a926fe9e667d3f4edd227a855f5" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::PETScABecLap::scalar_a</definition>
        <argsstring></argsstring>
        <name>scalar_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="48" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abd0ebc00024206fb8e730aef57ad9fd2" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::PETScABecLap::scalar_b</definition>
        <argsstring></argsstring>
        <name>scalar_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="48" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a2a350b0e24a97da1c350b8116d0341ec" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::PETScABecLap::diaginv</definition>
        <argsstring></argsstring>
        <name>diaginv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="50" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a3f86af74db89e2febf97b8c9d2ae3310" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const  *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::PETScABecLap::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="52" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a67990960ff9c4294dafbe76031983532" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> const  *</type>
        <definition>BndryData const* amrex::PETScABecLap::m_bndry</definition>
        <argsstring></argsstring>
        <name>m_bndry</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="53" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abd2f0814b146783f613e60a476aa0a57" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::PETScABecLap::m_maxorder</definition>
        <argsstring></argsstring>
        <name>m_maxorder</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="54" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a3a455ed1779e0a8091cf375d59d3d66e" prot="private" static="no" mutable="no">
        <type>KSP</type>
        <definition>KSP amrex::PETScABecLap::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="56" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1aa7ec19bebac9e6cde8064974b896a9f9" prot="private" static="no" mutable="no">
        <type>Mat</type>
        <definition>Mat amrex::PETScABecLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="57" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a08502c245a5dfd89dbb1ac522d5563f9" prot="private" static="no" mutable="no">
        <type>Vec</type>
        <definition>Vec amrex::PETScABecLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="58" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a4aadd98b014b860d25cc20e10445449c" prot="private" static="no" mutable="no">
        <type>Vec</type>
        <definition>Vec amrex::PETScABecLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="59" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a728df4407c4def01f16e9af80fda2ebf" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; PetscInt &gt;</type>
        <definition>LayoutData&lt;PetscInt&gt; amrex::PETScABecLap::ncells_grid</definition>
        <argsstring></argsstring>
        <name>ncells_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="61" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a0c97a957588e229e248638455172fe75" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; PetscInt &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;PetscInt&gt; &gt; amrex::PETScABecLap::cell_id</definition>
        <argsstring></argsstring>
        <name>cell_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="62" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1adce283edc6f4a7d4a016c19493c51418" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; PetscInt &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;PetscInt&gt; &gt; amrex::PETScABecLap::cell_id_vec</definition>
        <argsstring></argsstring>
        <name>cell_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="63" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1ac1cb0994a1680b55eb88828ca3e2f53f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const  *</type>
        <definition>MultiFab const* amrex::PETScABecLap::m_eb_b_coeffs</definition>
        <argsstring></argsstring>
        <name>m_eb_b_coeffs</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="65" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::PETScABecLap</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom_, MPI_Comm comm_)</argsstring>
        <name>PETScABecLap</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="20" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="32" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::~PETScABecLap</definition>
        <argsstring>()</argsstring>
        <name>~PETScABecLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="62" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setScalars</definition>
        <argsstring>(Real sa, Real sb)</argsstring>
        <name>setScalars</name>
        <param>
          <type>Real</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="25" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setACoeffs</definition>
        <argsstring>(const MultiFab &amp;alpha)</argsstring>
        <name>setACoeffs</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="26" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setBCoeffs</definition>
        <argsstring>(const Array&lt; const MultiFab *, BL_SPACEDIM &gt; &amp;beta)</argsstring>
        <name>setBCoeffs</name>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, <ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref> &gt; &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="28" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="112" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::prepareSolver</definition>
        <argsstring>()</argsstring>
        <name>prepareSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="68" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="151" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="69" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="581" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="70" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="696" bodyend="720"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="61">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; PetscInt &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="15" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="92" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="96" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="81" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="85" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="35" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="51">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>K</label>
      </node>
      <node id="52">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>T</label>
      </node>
      <node id="24">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="25" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="88" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>std::vector&lt; PetscInt, std::allocator&lt; PetscInt &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="99">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
        <childnode refid="100" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>hp</edgelabel>
          <edgelabel>dp</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>amrex::FabFactory&lt; amrex::BaseFab&lt; PetscInt &gt; &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="62">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="63" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::FBData&lt; amrex::BaseFab&lt; PetscInt &gt; &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="20" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::GpuArray&lt; float, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="73">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="16" relation="usage">
          <edgelabel>hp</edgelabel>
          <edgelabel>dp</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="17" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="64" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="8" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="20" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
      </node>
      <node id="86">
        <label>std::vector&lt; amrex::MultiMask, std::allocator&lt; amrex::MultiMask &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="77">
        <label>amrex::LayoutData&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="78" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>amrex::Vector&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="79" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="90">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="47">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="48" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="60" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_srcng</edgelabel>
          <edgelabel>m_dstng</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_srcba</edgelabel>
          <edgelabel>m_dstba</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="85">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
        <childnode refid="98" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="43" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="17" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="42" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="19" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="38" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>std::vector&lt; amrex::BaseFab&lt; PetscInt &gt; * &gt;</label>
        <childnode refid="95" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="1">
        <label>amrex::PETScABecLap</label>
        <link refid="classamrex_1_1PETScABecLap"/>
        <childnode refid="2" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_eb_b_coeffs</edgelabel>
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>ncells_grid</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="91" relation="usage">
          <edgelabel>cell_id_vec</edgelabel>
          <edgelabel>cell_id</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>scalar_a</edgelabel>
          <edgelabel>scalar_b</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="39" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>amrex::BaseFab&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="92">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
        <childnode refid="93" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="31" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>amrex::PCData&lt; amrex::BaseFab&lt; PetscInt &gt; &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="20" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="91" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="13">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>roundoff_lo_f</edgelabel>
          <edgelabel>roundoff_hi_f</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>roundoff_lo_d</edgelabel>
          <edgelabel>roundoff_hi_d</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="45" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>std::vector&lt; RealTuple, std::allocator&lt; RealTuple &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::GpuArray&lt; double, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="82">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="83" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="84" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
        <childnode refid="91" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="20" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="28">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="15" bodyend="71"/>
    <listofallmembers>
      <member refid="classamrex_1_1PETScABecLap_1aa7ec19bebac9e6cde8064974b896a9f9" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>A</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a0bdac13a79f515cc266c9babc14a7cc8" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a08502c245a5dfd89dbb1ac522d5563f9" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>b</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ac7dbd144ec1cfc9a3c7802f0d9a76a01" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a0c97a957588e229e248638455172fe75" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>cell_id</name></member>
      <member refid="classamrex_1_1PETScABecLap_1adce283edc6f4a7d4a016c19493c51418" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>cell_id_vec</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a12f0bff39693de9bdefaecc8c5970e93" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a2a350b0e24a97da1c350b8116d0341ec" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1PETScABecLap_1afca4d4cd5e3361c1d6fd1c64eff38141" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a67990960ff9c4294dafbe76031983532" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ac1cb0994a1680b55eb88828ca3e2f53f" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_eb_b_coeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3f86af74db89e2febf97b8c9d2ae3310" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abd2f0814b146783f613e60a476aa0a57" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a728df4407c4def01f16e9af80fda2ebf" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>ncells_grid</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>PETScABecLap</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>prepareSolver</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a8ac31a926fe9e667d3f4edd227a855f5" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abd0ebc00024206fb8e730aef57ad9fd2" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3a455ed1779e0a8091cf375d59d3d66e" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>solver</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a03a7a7428fc17a0413d54f5b9c2cb9e6" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a4aadd98b014b860d25cc20e10445449c" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>x</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>~PETScABecLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
