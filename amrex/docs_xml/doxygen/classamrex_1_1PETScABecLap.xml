<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1PETScABecLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::PETScABecLap</compoundname>
    <includes refid="AMReX__PETSc_8H" local="no">AMReX_PETSc.H</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" prot="private" static="yes" mutable="no">
        <type>constexpr PetscInt</type>
        <definition>constexpr PetscInt amrex::PETScABecLap::regular_stencil_size</definition>
        <argsstring></argsstring>
        <name>regular_stencil_size</name>
        <initializer>= 2*AMREX_SPACEDIM + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" prot="private" static="yes" mutable="no">
        <type>constexpr PetscInt</type>
        <definition>constexpr PetscInt amrex::PETScABecLap::eb_stencil_size</definition>
        <argsstring></argsstring>
        <name>eb_stencil_size</name>
        <initializer>= AMREX_D_TERM(3, *3, *3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a12f0bff39693de9bdefaecc8c5970e93" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::PETScABecLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1afca4d4cd5e3361c1d6fd1c64eff38141" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::PETScABecLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a03a7a7428fc17a0413d54f5b9c2cb9e6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PETScABecLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="43" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a0bdac13a79f515cc266c9babc14a7cc8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::PETScABecLap::acoefs</definition>
        <argsstring></argsstring>
        <name>acoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1ac7dbd144ec1cfc9a3c7802f0d9a76a01" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::PETScABecLap::bcoefs</definition>
        <argsstring></argsstring>
        <name>bcoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a8ac31a926fe9e667d3f4edd227a855f5" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::PETScABecLap::scalar_a</definition>
        <argsstring></argsstring>
        <name>scalar_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abd0ebc00024206fb8e730aef57ad9fd2" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::PETScABecLap::scalar_b</definition>
        <argsstring></argsstring>
        <name>scalar_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a2a350b0e24a97da1c350b8116d0341ec" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::PETScABecLap::diaginv</definition>
        <argsstring></argsstring>
        <name>diaginv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a3f86af74db89e2febf97b8c9d2ae3310" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::PETScABecLap::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a67990960ff9c4294dafbe76031983532" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BndryData" kindref="compound">BndryData</ref> const *</type>
        <definition>BndryData const* amrex::PETScABecLap::m_bndry</definition>
        <argsstring></argsstring>
        <name>m_bndry</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abd2f0814b146783f613e60a476aa0a57" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PETScABecLap::m_maxorder</definition>
        <argsstring></argsstring>
        <name>m_maxorder</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="53" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a3a455ed1779e0a8091cf375d59d3d66e" prot="private" static="no" mutable="no">
        <type>KSP</type>
        <definition>KSP amrex::PETScABecLap::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="55" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1aa7ec19bebac9e6cde8064974b896a9f9" prot="private" static="no" mutable="no">
        <type>Mat</type>
        <definition>Mat amrex::PETScABecLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a08502c245a5dfd89dbb1ac522d5563f9" prot="private" static="no" mutable="no">
        <type>Vec</type>
        <definition>Vec amrex::PETScABecLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a4aadd98b014b860d25cc20e10445449c" prot="private" static="no" mutable="no">
        <type>Vec</type>
        <definition>Vec amrex::PETScABecLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a728df4407c4def01f16e9af80fda2ebf" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; PetscInt &gt;</type>
        <definition>LayoutData&lt;PetscInt&gt; amrex::PETScABecLap::ncells_grid</definition>
        <argsstring></argsstring>
        <name>ncells_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a9547995b127c83eab055cfb3044c7566" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; PetscInt &gt; &gt;</type>
        <definition>LayoutData&lt;Vector&lt;PetscInt&gt; &gt; amrex::PETScABecLap::cell_id_vec</definition>
        <argsstring></argsstring>
        <name>cell_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="61" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a0c97a957588e229e248638455172fe75" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; PetscInt &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;PetscInt&gt; &gt; amrex::PETScABecLap::cell_id</definition>
        <argsstring></argsstring>
        <name>cell_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="62" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1ac1cb0994a1680b55eb88828ca3e2f53f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *</type>
        <definition>MultiFab const* amrex::PETScABecLap::m_eb_b_coeffs</definition>
        <argsstring></argsstring>
        <name>m_eb_b_coeffs</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="64" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::PETScABecLap</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom_, MPI_Comm comm_)</argsstring>
        <name>PETScABecLap</name>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="36" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::~PETScABecLap</definition>
        <argsstring>()</argsstring>
        <name>~PETScABecLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="69" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setScalars</definition>
        <argsstring>(Real sa, Real sb)</argsstring>
        <name>setScalars</name>
        <param>
          <type>Real</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setACoeffs</definition>
        <argsstring>(const MultiFab &amp;alpha)</argsstring>
        <name>setACoeffs</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setBCoeffs</definition>
        <argsstring>(const Array&lt; const MultiFab *, BL_SPACEDIM &gt; &amp;beta)</argsstring>
        <name>setBCoeffs</name>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, <ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref> &gt; &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type>int</type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="27" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BndryData" kindref="compound">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="28" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="119" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::prepareSolver</definition>
        <argsstring>()</argsstring>
        <name>prepareSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="66" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="158" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="67" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="396" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="68" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="447" bodyend="501"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6135">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="6146">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; PetscInt &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="6114" relation="public-inheritance">
        </childnode>
        <childnode refid="6124" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="6110" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="6126" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="6119" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="6129" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="6131" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="6133" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="6134" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="6136" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="6138" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="6115">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="6116" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="6118">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="6128">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="6141">
        <label>std::vector&lt; amrex::Vector&lt; PetscInt &gt;, std::allocator&lt; amrex::Vector&lt; PetscInt &gt; &gt; &gt;</label>
      </node>
      <node id="6110">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="6110" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="6155">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="6114" relation="public-inheritance">
        </childnode>
        <childnode refid="6156" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="6144">
        <label>std::vector&lt; PetscInt, std::allocator&lt; PetscInt &gt; &gt;</label>
      </node>
      <node id="6107">
        <label>Real</label>
      </node>
      <node id="6136">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6126">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="6127" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="6147">
        <label>amrex::BndryData</label>
        <link refid="classamrex_1_1BndryData"/>
        <childnode refid="6148" relation="public-inheritance">
        </childnode>
        <childnode refid="6105" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="6150" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="6153" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="6155" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="6130">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="6127">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="6128" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="6119">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6116">
        <label>string</label>
      </node>
      <node id="6138">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="6110" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="6132">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="6154">
        <label>std::vector&lt; amrex::MultiMask, std::allocator&lt; amrex::MultiMask &gt; &gt;</label>
      </node>
      <node id="6142">
        <label>amrex::LayoutData&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="6114" relation="public-inheritance">
        </childnode>
        <childnode refid="6143" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="6131">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6157">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="6143">
        <label>amrex::Vector&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6133">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="6145">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="6153">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6137">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="6120">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="6108">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="6107" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="6156">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6109">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="6110" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="6111" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="6122">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="6123" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="6134">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6106">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="6107" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="6139">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; PetscInt &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="6114" relation="public-inheritance">
        </childnode>
        <childnode refid="6140" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="6111">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="6104">
        <label>amrex::PETScABecLap</label>
        <link refid="classamrex_1_1PETScABecLap"/>
        <childnode refid="6105" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="6112" relation="usage">
          <edgelabel>m_eb_b_coeffs</edgelabel>
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
        </childnode>
        <childnode refid="6139" relation="usage">
          <edgelabel>cell_id_vec</edgelabel>
        </childnode>
        <childnode refid="6142" relation="usage">
          <edgelabel>ncells_grid</edgelabel>
        </childnode>
        <childnode refid="6145" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="6146" relation="usage">
          <edgelabel>cell_id</edgelabel>
        </childnode>
        <childnode refid="6147" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
        <childnode refid="6107" relation="usage">
          <edgelabel>scalar_a</edgelabel>
          <edgelabel>scalar_b</edgelabel>
        </childnode>
      </node>
      <node id="6123">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="6119" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="6149">
        <label>amrex::FabSet</label>
        <link refid="classamrex_1_1FabSet"/>
        <childnode refid="6112" relation="usage">
          <edgelabel>m_mf</edgelabel>
        </childnode>
      </node>
      <node id="6129">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6117">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="6121">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="6122" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="6148">
        <label>amrex::BndryRegister</label>
        <link refid="classamrex_1_1BndryRegister"/>
        <childnode refid="6149" relation="usage">
          <edgelabel>bndry</edgelabel>
        </childnode>
      </node>
      <node id="6112">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="6113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6105">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="6106" relation="public-inheritance">
        </childnode>
        <childnode refid="6108" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="6109" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="6152">
        <label>std::vector&lt; RealTuple, std::allocator&lt; RealTuple &gt; &gt;</label>
      </node>
      <node id="6150">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="6114" relation="public-inheritance">
        </childnode>
        <childnode refid="6151" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="6151">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6113">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="6114" relation="public-inheritance">
        </childnode>
        <childnode refid="6124" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="6110" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="6126" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="6119" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="6129" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="6131" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="6133" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="6134" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="6136" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="6138" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="6124">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6114">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="6115" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="6117" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="6110" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="6118" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="6119" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="6121" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="6125">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
      <node id="6140">
        <label>amrex::Vector&lt; amrex::Vector&lt; PetscInt &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6141" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="14" bodyend="69"/>
    <listofallmembers>
      <member refid="classamrex_1_1PETScABecLap_1aa7ec19bebac9e6cde8064974b896a9f9" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>A</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a0bdac13a79f515cc266c9babc14a7cc8" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a08502c245a5dfd89dbb1ac522d5563f9" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>b</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ac7dbd144ec1cfc9a3c7802f0d9a76a01" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a0c97a957588e229e248638455172fe75" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>cell_id</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a9547995b127c83eab055cfb3044c7566" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>cell_id_vec</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a12f0bff39693de9bdefaecc8c5970e93" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a2a350b0e24a97da1c350b8116d0341ec" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1PETScABecLap_1afca4d4cd5e3361c1d6fd1c64eff38141" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a67990960ff9c4294dafbe76031983532" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ac1cb0994a1680b55eb88828ca3e2f53f" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_eb_b_coeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3f86af74db89e2febf97b8c9d2ae3310" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abd2f0814b146783f613e60a476aa0a57" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a728df4407c4def01f16e9af80fda2ebf" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>ncells_grid</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>PETScABecLap</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>prepareSolver</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a8ac31a926fe9e667d3f4edd227a855f5" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abd0ebc00024206fb8e730aef57ad9fd2" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3a455ed1779e0a8091cf375d59d3d66e" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>solver</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a03a7a7428fc17a0413d54f5b9c2cb9e6" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a4aadd98b014b860d25cc20e10445449c" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>x</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>~PETScABecLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
