<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1PETScABecLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::PETScABecLap</compoundname>
    <includes refid="AMReX__PETSc_8H" local="no">AMReX_PETSc.H</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr PetscInt</type>
        <definition>constexpr PetscInt amrex::PETScABecLap::regular_stencil_size</definition>
        <argsstring></argsstring>
        <name>regular_stencil_size</name>
        <initializer>= 2*AMREX_SPACEDIM + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="47" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr PetscInt</type>
        <definition>constexpr PetscInt amrex::PETScABecLap::eb_stencil_size</definition>
        <argsstring></argsstring>
        <name>eb_stencil_size</name>
        <initializer>= <ref refid="AMReX__SPACE_8H_1a4f563a3cac0e56caccff5ba7be3d49a4" kindref="member">AMREX_D_TERM</ref>(3, *3, *3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="48" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a12f0bff39693de9bdefaecc8c5970e93" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a161d2f0d69c09838316e4ea9a74f02d7" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::PETScABecLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9eb867d9cda6acfce33985d67a31d5fc" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="50" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1afca4d4cd5e3361c1d6fd1c64eff38141" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::PETScABecLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="51" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a03a7a7428fc17a0413d54f5b9c2cb9e6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::PETScABecLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="53" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a0bdac13a79f515cc266c9babc14a7cc8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::PETScABecLap::acoefs</definition>
        <argsstring></argsstring>
        <name>acoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="55" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1ac7dbd144ec1cfc9a3c7802f0d9a76a01" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::PETScABecLap::bcoefs</definition>
        <argsstring></argsstring>
        <name>bcoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="56" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a8ac31a926fe9e667d3f4edd227a855f5" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::PETScABecLap::scalar_a</definition>
        <argsstring></argsstring>
        <name>scalar_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="57" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abd0ebc00024206fb8e730aef57ad9fd2" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::PETScABecLap::scalar_b</definition>
        <argsstring></argsstring>
        <name>scalar_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="57" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a2a350b0e24a97da1c350b8116d0341ec" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::PETScABecLap::diaginv</definition>
        <argsstring></argsstring>
        <name>diaginv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="59" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a3f86af74db89e2febf97b8c9d2ae3310" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const  *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::PETScABecLap::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="61" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a67990960ff9c4294dafbe76031983532" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> const  *</type>
        <definition>BndryData const* amrex::PETScABecLap::m_bndry</definition>
        <argsstring></argsstring>
        <name>m_bndry</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="62" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abd2f0814b146783f613e60a476aa0a57" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::PETScABecLap::m_maxorder</definition>
        <argsstring></argsstring>
        <name>m_maxorder</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="63" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a976f5746ad0716c9506ffebd4c4a6cd2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1amrex__KSP" kindref="compound">amrex_KSP</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex_KSP&gt; amrex::PETScABecLap::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="65" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a4f7ec9016da8bda82d240ef488851938" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1amrex__Mat" kindref="compound">amrex_Mat</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex_Mat&gt; amrex::PETScABecLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="66" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1abb0cef2ff7ee4b014b5c49b98596f4c0" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1amrex__Vec" kindref="compound">amrex_Vec</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex_Vec&gt; amrex::PETScABecLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="67" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a82c372d8519e17a10995968b370106dc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1amrex__Vec" kindref="compound">amrex_Vec</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex_Vec&gt; amrex::PETScABecLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="68" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a728df4407c4def01f16e9af80fda2ebf" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; PetscInt &gt;</type>
        <definition>LayoutData&lt;PetscInt&gt; amrex::PETScABecLap::ncells_grid</definition>
        <argsstring></argsstring>
        <name>ncells_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="70" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1a0c97a957588e229e248638455172fe75" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; PetscInt &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;PetscInt&gt; &gt; amrex::PETScABecLap::cell_id</definition>
        <argsstring></argsstring>
        <name>cell_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="71" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1adce283edc6f4a7d4a016c19493c51418" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; PetscInt &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;PetscInt&gt; &gt; amrex::PETScABecLap::cell_id_vec</definition>
        <argsstring></argsstring>
        <name>cell_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="72" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PETScABecLap_1ac1cb0994a1680b55eb88828ca3e2f53f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const  *</type>
        <definition>MultiFab const* amrex::PETScABecLap::m_eb_b_coeffs</definition>
        <argsstring></argsstring>
        <name>m_eb_b_coeffs</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="74" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::PETScABecLap</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom_, MPI_Comm comm_)</argsstring>
        <name>PETScABecLap</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a161d2f0d69c09838316e4ea9a74f02d7" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="61" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::~PETScABecLap</definition>
        <argsstring>()</argsstring>
        <name>~PETScABecLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="27" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="96" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ae834b28c54502bd846c75a933cd86e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::PETScABecLap</definition>
        <argsstring>(PETScABecLap const &amp;)=delete</argsstring>
        <name>PETScABecLap</name>
        <param>
          <type><ref refid="classamrex_1_1PETScABecLap" kindref="compound">PETScABecLap</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a6d1500243e6bcc0c8546240f4fb1ae6d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PETScABecLap::PETScABecLap</definition>
        <argsstring>(PETScABecLap &amp;&amp;) noexcept=delete</argsstring>
        <name>PETScABecLap</name>
        <param>
          <type><ref refid="classamrex_1_1PETScABecLap" kindref="compound">PETScABecLap</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a40dd9fb9d880d6ff54429144e6efbed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1PETScABecLap" kindref="compound">PETScABecLap</ref> &amp;</type>
        <definition>PETScABecLap&amp; amrex::PETScABecLap::operator=</definition>
        <argsstring>(PETScABecLap const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1PETScABecLap" kindref="compound">PETScABecLap</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="31" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab0a8a31da058bc8f88a49f49c42ad703" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PETScABecLap" kindref="compound">PETScABecLap</ref> &amp;</type>
        <definition>PETScABecLap&amp; amrex::PETScABecLap::operator=</definition>
        <argsstring>(PETScABecLap &amp;&amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1PETScABecLap" kindref="compound">PETScABecLap</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="32" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setScalars</definition>
        <argsstring>(Real sa, Real sb)</argsstring>
        <name>setScalars</name>
        <param>
          <type>Real</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="34" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setACoeffs</definition>
        <argsstring>(const MultiFab &amp;alpha)</argsstring>
        <name>setACoeffs</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="35" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setBCoeffs</definition>
        <argsstring>(const Array&lt; const MultiFab *, BL_SPACEDIM &gt; &amp;beta)</argsstring>
        <name>setBCoeffs</name>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, <ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref> &gt; &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="36" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="37" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="38" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="139" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::prepareSolver</definition>
        <argsstring>()</argsstring>
        <name>prepareSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="77" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="178" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="78" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="608" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PETScABecLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="79" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp" bodystart="723" bodyend="747"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="57">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; PetscInt &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="39" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="60">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="24">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="46">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>K</label>
      </node>
      <node id="25">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>T</label>
      </node>
      <node id="76">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="84">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
      </node>
      <node id="33">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="58">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="59" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="13">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="60" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="68">
        <label>amrex::LayoutData&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="19">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="20" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="77">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="20">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="56" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
      </node>
      <node id="47">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="50" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="39" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::unique_ptr&lt; amrex::amrex_Mat &gt;</label>
      </node>
      <node id="63">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="49" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="50">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="34">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="35" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="80">
        <label>std::vector&lt; amrex::BaseFab&lt; PetscInt &gt; * &gt;</label>
        <childnode refid="81" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="1">
        <label>amrex::PETScABecLap</label>
        <link refid="classamrex_1_1PETScABecLap"/>
        <childnode refid="2" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
          <edgelabel>m_eb_b_coeffs</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>ncells_grid</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>solver</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>b</edgelabel>
          <edgelabel>x</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>A</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>cell_id</edgelabel>
          <edgelabel>cell_id_vec</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>scalar_a</edgelabel>
          <edgelabel>scalar_b</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="36" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>amrex::BaseFab&lt; PetscInt &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>std::unique_ptr&lt; amrex::amrex_KSP &gt;</label>
      </node>
      <node id="61">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="44">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="79">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
      </node>
      <node id="41">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="28" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="70">
        <label>std::unique_ptr&lt; amrex::amrex_Vec &gt;</label>
      </node>
      <node id="37">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="52">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="10">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="18">
        <label>amrex::BoxIndexer</label>
        <link refid="structamrex_1_1BoxIndexer"/>
      </node>
      <node id="74">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::BaseFab&lt; PetscInt &gt; &gt; &gt;</label>
      </node>
      <node id="28">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="29" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="39">
        <label>std::string</label>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H" bodystart="21" bodyend="80"/>
    <listofallmembers>
      <member refid="classamrex_1_1PETScABecLap_1a4f7ec9016da8bda82d240ef488851938" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>A</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a0bdac13a79f515cc266c9babc14a7cc8" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abb0cef2ff7ee4b014b5c49b98596f4c0" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>b</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ac7dbd144ec1cfc9a3c7802f0d9a76a01" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a0c97a957588e229e248638455172fe75" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>cell_id</name></member>
      <member refid="classamrex_1_1PETScABecLap_1adce283edc6f4a7d4a016c19493c51418" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>cell_id_vec</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a12f0bff39693de9bdefaecc8c5970e93" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a2a350b0e24a97da1c350b8116d0341ec" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a47fa463023a9096542d2409e1e439a4a" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1PETScABecLap_1afca4d4cd5e3361c1d6fd1c64eff38141" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a29c773ff5410f84e04566b1ed48c38bc" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a12f8c2e606928f4ba9bf4cc909e830ae" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a67990960ff9c4294dafbe76031983532" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ac1cb0994a1680b55eb88828ca3e2f53f" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_eb_b_coeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3f86af74db89e2febf97b8c9d2ae3310" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abd2f0814b146783f613e60a476aa0a57" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a728df4407c4def01f16e9af80fda2ebf" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>ncells_grid</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a40dd9fb9d880d6ff54429144e6efbed3" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>operator=</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab0a8a31da058bc8f88a49f49c42ad703" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>operator=</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab2a0a84e3b1491619ab3ed49306ffdeb" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>PETScABecLap</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ae834b28c54502bd846c75a933cd86e4e" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>PETScABecLap</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a6d1500243e6bcc0c8546240f4fb1ae6d" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>PETScABecLap</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ad1eb894ae4a104ea04c6be69d08b4e1f" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>prepareSolver</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aecf6271b785a92eee2bcd891ba3111e5" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a8ac31a926fe9e667d3f4edd227a855f5" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1PETScABecLap_1abd0ebc00024206fb8e730aef57ad9fd2" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aec0887e36eeb2fb1f1ba62f3877c8ef5" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1ab8caebdccf7fca99b02b592379019228" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1PETScABecLap_1aea6aef5fab439e43995892519fee28b6" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a580b216cdd0cc4085925ba398137c59a" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a3dfb08dc31961b6f255925c4879a382d" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a976f5746ad0716c9506ffebd4c4a6cd2" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>solver</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a03a7a7428fc17a0413d54f5b9c2cb9e6" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a82c372d8519e17a10995968b370106dc" prot="private" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>x</name></member>
      <member refid="classamrex_1_1PETScABecLap_1a91d8873af4b7e4fc30dceb416fb300cc" prot="public" virt="non-virtual"><scope>amrex::PETScABecLap</scope><name>~PETScABecLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
