<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MLLinOp__K_8H" kind="file" language="C++">
    <compoundname>AMReX_MLLinOp_K.H</compoundname>
    <includes refid="AMReX__FArrayBox_8H" local="no">AMReX_FArrayBox.H</includes>
    <includes refid="AMReX__BoundCond_8H" local="no">AMReX_BoundCond.H</includes>
    <includes refid="AMReX__LO__BCTYPES_8H" local="no">AMReX_LO_BCTYPES.H</includes>
    <includes refid="AMReX__LOUtil__K_8H" local="no">AMReX_LOUtil_K.H</includes>
    <includedby refid="AMReX__MLCellABecLap_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</includedby>
    <includedby refid="AMReX__MLCellLinOp_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</includedby>
    <includedby refid="AMReX__MLEBABecLap_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</includedby>
    <includedby refid="AMReX__MLEBABecLap__K_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</includedby>
    <includedby refid="AMReX__MLTensor__2D__K_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</includedby>
    <includedby refid="AMReX__MLTensor__3D__K_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</includedby>
    <incdepgraph>
      <node id="72047">
        <label>atomic</label>
      </node>
      <node id="72104">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="72079" relation="include">
        </childnode>
        <childnode refid="72105" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72106" relation="include">
        </childnode>
        <childnode refid="72101" relation="include">
        </childnode>
        <childnode refid="72107" relation="include">
        </childnode>
        <childnode refid="72046" relation="include">
        </childnode>
      </node>
      <node id="72071">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72072" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72013" relation="include">
        </childnode>
      </node>
      <node id="72103">
        <label>iomanip</label>
      </node>
      <node id="72031">
        <label>functional</label>
      </node>
      <node id="72067">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72052" relation="include">
        </childnode>
        <childnode refid="72061" relation="include">
        </childnode>
        <childnode refid="72068" relation="include">
        </childnode>
        <childnode refid="72042" relation="include">
        </childnode>
        <childnode refid="72049" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
      </node>
      <node id="72058">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72014" relation="include">
        </childnode>
      </node>
      <node id="72040">
        <label>limits</label>
      </node>
      <node id="72057">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
      </node>
      <node id="72105">
        <label>iterator</label>
      </node>
      <node id="72002">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="72003" relation="include">
        </childnode>
        <childnode refid="72004" relation="include">
        </childnode>
        <childnode refid="72012" relation="include">
        </childnode>
        <childnode refid="72013" relation="include">
        </childnode>
        <childnode refid="72014" relation="include">
        </childnode>
        <childnode refid="72042" relation="include">
        </childnode>
        <childnode refid="72043" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72044" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
      </node>
      <node id="72011">
        <label>float.h</label>
      </node>
      <node id="72092">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72015" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72044" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72038" relation="include">
        </childnode>
      </node>
      <node id="72108">
        <label>cstdint</label>
      </node>
      <node id="72069">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="72061" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72052" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72025" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72070" relation="include">
        </childnode>
      </node>
      <node id="72091">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
      </node>
      <node id="72014">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="72015" relation="include">
        </childnode>
        <childnode refid="72013" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72008" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72037" relation="include">
        </childnode>
        <childnode refid="72003" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72038" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72041" relation="include">
        </childnode>
        <childnode refid="72005" relation="include">
        </childnode>
      </node>
      <node id="72025">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72026" relation="include">
        </childnode>
        <childnode refid="72027" relation="include">
        </childnode>
        <childnode refid="72013" relation="include">
        </childnode>
        <childnode refid="72029" relation="include">
        </childnode>
        <childnode refid="72015" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72031" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72024" relation="include">
        </childnode>
        <childnode refid="72032" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
      </node>
      <node id="72059">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="72026">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="72024" relation="include">
        </childnode>
      </node>
      <node id="72097">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="72084">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="72060" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
      </node>
      <node id="72036">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="72005" relation="include">
        </childnode>
        <childnode refid="72032" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72015" relation="include">
        </childnode>
      </node>
      <node id="72102">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="72023" relation="include">
        </childnode>
        <childnode refid="72072" relation="include">
        </childnode>
        <childnode refid="72103" relation="include">
        </childnode>
        <childnode refid="72025" relation="include">
        </childnode>
        <childnode refid="72071" relation="include">
        </childnode>
        <childnode refid="72070" relation="include">
        </childnode>
      </node>
      <node id="72038">
        <label>cmath</label>
      </node>
      <node id="72028">
        <label>cassert</label>
      </node>
      <node id="72030">
        <label>stdexcept</label>
      </node>
      <node id="72079">
        <label>numeric</label>
      </node>
      <node id="72093">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="72019" relation="include">
        </childnode>
        <childnode refid="72094" relation="include">
        </childnode>
        <childnode refid="72031" relation="include">
        </childnode>
        <childnode refid="72046" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
        <childnode refid="72086" relation="include">
        </childnode>
        <childnode refid="72095" relation="include">
        </childnode>
        <childnode refid="72091" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
      </node>
      <node id="72049">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="72003" relation="include">
        </childnode>
        <childnode refid="72014" relation="include">
        </childnode>
        <childnode refid="72042" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
      </node>
      <node id="72045">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="72038" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72005" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72041" relation="include">
        </childnode>
        <childnode refid="72019" relation="include">
        </childnode>
        <childnode refid="72046" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72047" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72048" relation="include">
        </childnode>
        <childnode refid="72049" relation="include">
        </childnode>
        <childnode refid="72050" relation="include">
        </childnode>
        <childnode refid="72053" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72057" relation="include">
        </childnode>
        <childnode refid="72058" relation="include">
        </childnode>
        <childnode refid="72059" relation="include">
        </childnode>
        <childnode refid="72060" relation="include">
        </childnode>
        <childnode refid="72081" relation="include">
        </childnode>
        <childnode refid="72082" relation="include">
        </childnode>
        <childnode refid="72037" relation="include">
        </childnode>
      </node>
      <node id="72022">
        <label>string</label>
      </node>
      <node id="72048">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="72002" relation="include">
        </childnode>
      </node>
      <node id="72061">
        <label>map</label>
      </node>
      <node id="72056">
        <label>unordered_set</label>
      </node>
      <node id="72080">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72070" relation="include">
        </childnode>
      </node>
      <node id="72113">
        <label>AMReX_LOUtil_K.H</label>
        <link refid="AMReX__LOUtil__K_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
      </node>
      <node id="72095">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="72021" relation="include">
        </childnode>
      </node>
      <node id="72063">
        <label>cfloat</label>
      </node>
      <node id="72081">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="72082" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
        <childnode refid="72005" relation="include">
        </childnode>
      </node>
      <node id="72072">
        <label>fstream</label>
      </node>
      <node id="72111">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
      </node>
      <node id="72012">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="72010" relation="include">
        </childnode>
      </node>
      <node id="72018">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="72019" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72023" relation="include">
        </childnode>
        <childnode refid="72024" relation="include">
        </childnode>
        <childnode refid="72025" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72004" relation="include">
        </childnode>
        <childnode refid="72008" relation="include">
        </childnode>
      </node>
      <node id="72089">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
        <childnode refid="72090" relation="include">
        </childnode>
        <childnode refid="72092" relation="include">
        </childnode>
        <childnode refid="72091" relation="include">
        </childnode>
      </node>
      <node id="72017">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="72034">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="72007">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="72101">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="72061" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72102" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
      </node>
      <node id="72083">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
        <childnode refid="72084" relation="include">
        </childnode>
        <childnode refid="72085" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
        <childnode refid="72088" relation="include">
        </childnode>
        <childnode refid="72089" relation="include">
        </childnode>
        <childnode refid="72093" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72048" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72086" relation="include">
        </childnode>
        <childnode refid="72052" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72005" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
        <childnode refid="72096" relation="include">
        </childnode>
        <childnode refid="72097" relation="include">
        </childnode>
      </node>
      <node id="72064">
        <label>sys/types.h</label>
      </node>
      <node id="72078">
        <label>typeinfo</label>
      </node>
      <node id="72024">
        <label>cstdio</label>
      </node>
      <node id="72086">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="72046" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
      </node>
      <node id="72033">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
      </node>
      <node id="72094">
        <label>tuple</label>
      </node>
      <node id="72073">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="72074" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
        <childnode refid="72023" relation="include">
        </childnode>
        <childnode refid="72024" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72075" relation="include">
        </childnode>
        <childnode refid="72076" relation="include">
        </childnode>
        <childnode refid="72077" relation="include">
        </childnode>
      </node>
      <node id="72107">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="72082" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
        <childnode refid="72108" relation="include">
        </childnode>
        <childnode refid="72046" relation="include">
        </childnode>
      </node>
      <node id="72065">
        <label>unistd.h</label>
      </node>
      <node id="72074">
        <label>stack</label>
      </node>
      <node id="72032">
        <label>vector</label>
      </node>
      <node id="72110">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72102" relation="include">
        </childnode>
        <childnode refid="72059" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
      </node>
      <node id="72035">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="72025" relation="include">
        </childnode>
      </node>
      <node id="72037">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72038" relation="include">
        </childnode>
      </node>
      <node id="72006">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="72021">
        <label>utility</label>
      </node>
      <node id="72019">
        <label>array</label>
      </node>
      <node id="72001">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72045" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72110" relation="include">
        </childnode>
        <childnode refid="72038" relation="include">
        </childnode>
      </node>
      <node id="72023">
        <label>sstream</label>
      </node>
      <node id="72029">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="72030" relation="include">
        </childnode>
      </node>
      <node id="72004">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="72005" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72008" relation="include">
        </childnode>
      </node>
      <node id="72015">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="72016" relation="include">
        </childnode>
      </node>
      <node id="72085">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72084" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72086" relation="include">
        </childnode>
      </node>
      <node id="72070">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="72013" relation="include">
        </childnode>
        <childnode refid="72071" relation="include">
        </childnode>
        <childnode refid="72073" relation="include">
        </childnode>
        <childnode refid="72057" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72015" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72032" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72078" relation="include">
        </childnode>
        <childnode refid="72005" relation="include">
        </childnode>
        <childnode refid="72031" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72079" relation="include">
        </childnode>
      </node>
      <node id="72060">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72023" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72061" relation="include">
        </childnode>
        <childnode refid="72062" relation="include">
        </childnode>
        <childnode refid="72046" relation="include">
        </childnode>
        <childnode refid="72041" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
        <childnode refid="72063" relation="include">
        </childnode>
        <childnode refid="72064" relation="include">
        </childnode>
        <childnode refid="72065" relation="include">
        </childnode>
        <childnode refid="72066" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72015" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72036" relation="include">
        </childnode>
        <childnode refid="72002" relation="include">
        </childnode>
        <childnode refid="72067" relation="include">
        </childnode>
        <childnode refid="72069" relation="include">
        </childnode>
        <childnode refid="72070" relation="include">
        </childnode>
        <childnode refid="72080" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
      </node>
      <node id="72051">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72052" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
      </node>
      <node id="72043">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="72003" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
      </node>
      <node id="72008">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="72009" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72006" relation="include">
        </childnode>
      </node>
      <node id="72066">
        <label>sys/wait.h</label>
      </node>
      <node id="72003">
        <label>iosfwd</label>
      </node>
      <node id="72039">
        <label>cstdlib</label>
      </node>
      <node id="72077">
        <label>cfenv</label>
      </node>
      <node id="72009">
        <label>iostream</label>
      </node>
      <node id="72042">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="72003" relation="include">
        </childnode>
        <childnode refid="72013" relation="include">
        </childnode>
        <childnode refid="72014" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
      </node>
      <node id="72044">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="72014" relation="include">
        </childnode>
        <childnode refid="72026" relation="include">
        </childnode>
      </node>
      <node id="72052">
        <label>cstddef</label>
      </node>
      <node id="72068">
        <label>unordered_map</label>
      </node>
      <node id="72106">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="72086" relation="include">
        </childnode>
        <childnode refid="72082" relation="include">
        </childnode>
        <childnode refid="72101" relation="include">
        </childnode>
        <childnode refid="72104" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
        <childnode refid="72046" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72099" relation="include">
        </childnode>
      </node>
      <node id="72082">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72026" relation="include">
        </childnode>
        <childnode refid="72027" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72083" relation="include">
        </childnode>
        <childnode refid="72084" relation="include">
        </childnode>
        <childnode refid="72090" relation="include">
        </childnode>
        <childnode refid="72092" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
        <childnode refid="72098" relation="include">
        </childnode>
        <childnode refid="72100" relation="include">
        </childnode>
        <childnode refid="72088" relation="include">
        </childnode>
        <childnode refid="72085" relation="include">
        </childnode>
        <childnode refid="72089" relation="include">
        </childnode>
        <childnode refid="72101" relation="include">
        </childnode>
        <childnode refid="72104" relation="include">
        </childnode>
        <childnode refid="72109" relation="include">
        </childnode>
      </node>
      <node id="72041">
        <label>climits</label>
      </node>
      <node id="72109">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="72055">
        <label>mutex</label>
      </node>
      <node id="72062">
        <label>chrono</label>
      </node>
      <node id="72000">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX_MLLinOp_K.H"/>
        <childnode refid="72001" relation="include">
        </childnode>
        <childnode refid="72111" relation="include">
        </childnode>
        <childnode refid="72112" relation="include">
        </childnode>
        <childnode refid="72113" relation="include">
        </childnode>
      </node>
      <node id="72096">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="72076">
        <label>csignal</label>
      </node>
      <node id="72053">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="72052" relation="include">
        </childnode>
        <childnode refid="72054" relation="include">
        </childnode>
        <childnode refid="72032" relation="include">
        </childnode>
        <childnode refid="72055" relation="include">
        </childnode>
        <childnode refid="72056" relation="include">
        </childnode>
        <childnode refid="72031" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
      </node>
      <node id="72046">
        <label>type_traits</label>
      </node>
      <node id="72054">
        <label>set</label>
      </node>
      <node id="72050">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="72051" relation="include">
        </childnode>
      </node>
      <node id="72013">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="72100">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="72051" relation="include">
        </childnode>
      </node>
      <node id="72005">
        <label>algorithm</label>
      </node>
      <node id="72087">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72019" relation="include">
        </childnode>
        <childnode refid="72025" relation="include">
        </childnode>
        <childnode refid="72060" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
        <childnode refid="72084" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
      </node>
      <node id="72112">
        <label>AMReX_LO_BCTYPES.H</label>
        <link refid="AMReX__LO__BCTYPES_8H"/>
      </node>
      <node id="72027">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="72028" relation="include">
        </childnode>
      </node>
      <node id="72090">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72091" relation="include">
        </childnode>
      </node>
      <node id="72075">
        <label>execinfo.h</label>
      </node>
      <node id="72099">
        <label>cstring</label>
      </node>
      <node id="72020">
        <label>memory</label>
      </node>
      <node id="72098">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="72052" relation="include">
        </childnode>
        <childnode refid="72099" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72020" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
        <childnode refid="72086" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
      </node>
      <node id="72016">
        <label>inttypes.h</label>
      </node>
      <node id="72088">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72087" relation="include">
        </childnode>
        <childnode refid="72086" relation="include">
        </childnode>
        <childnode refid="72051" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
      </node>
      <node id="72010">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72011" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="72122">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="72123">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="72116">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="72115">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="72119">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="72121">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="72122" relation="include">
        </childnode>
      </node>
      <node id="72126">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="72125">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="72122" relation="include">
        </childnode>
        <childnode refid="72126" relation="include">
        </childnode>
      </node>
      <node id="72118">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="72117" relation="include">
        </childnode>
        <childnode refid="72119" relation="include">
        </childnode>
        <childnode refid="72120" relation="include">
        </childnode>
      </node>
      <node id="72117">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="72124">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="72125" relation="include">
        </childnode>
      </node>
      <node id="72114">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX_MLLinOp_K.H"/>
        <childnode refid="72115" relation="include">
        </childnode>
        <childnode refid="72116" relation="include">
        </childnode>
        <childnode refid="72117" relation="include">
        </childnode>
        <childnode refid="72118" relation="include">
        </childnode>
        <childnode refid="72123" relation="include">
        </childnode>
        <childnode refid="72124" relation="include">
        </childnode>
      </node>
      <node id="72120">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="72121" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_MLLINOP_K_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_MLLINOP_K_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FArrayBox_8H" kindref="compound">AMReX_FArrayBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BoundCond_8H" kindref="compound">AMReX_BoundCond.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LO__BCTYPES_8H" kindref="compound">AMReX_LO_BCTYPES.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LOUtil__K_8H" kindref="compound">AMReX_LOUtil_K.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="12" refid="namespaceamrex_1a882954a845b7502d0d977d66cef0c433" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a882954a845b7502d0d977d66cef0c433" kindref="member">mllinop_apply_bc_x</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phi,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder,<sp/>Real<sp/>dxinv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inhomog,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/></highlight><highlight class="comment">//<sp/>boundary<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1-2*side;<sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>lo<sp/>and<sp/>-1<sp/>for<sp/>hi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bct)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref>:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>phi(i+s,j,k,icomp);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a911e22551a8578fcc62588ad4232a1b1" kindref="member">AMREX_LO_REFLECT_ODD</ref>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>-phi(i+s,j,k,icomp);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a874725e18b8a17a13d2200cea4c11c47" kindref="member">AMREX_LO_DIRICHLET</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NX<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(blen+1,<sp/>maxorder);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>x{-bcl<sp/>*<sp/>dxinv,<sp/>0.5_rt,<sp/>1.5_rt,<sp/>2.5_rt};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>coef{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a21e5b8295b57ab90e4ddd05a04ca5a85" kindref="member">poly_interp_coeff</ref>(-0.5_rt,<sp/>&amp;x[0],<sp/>NX,<sp/>&amp;coef[0]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>tmp<sp/>=<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>1;<sp/>m<sp/>&lt;<sp/>NX;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>phi(i+m*s,j,k,icomp)<sp/>*<sp/>coef[m];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inhomog)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>+=<sp/>bcval(i,j,k,icomp)*coef[0];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="73" refid="namespaceamrex_1aac16b07fc20fe0c280ede86b36906b5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aac16b07fc20fe0c280ede86b36906b5a" kindref="member">mllinop_apply_bc_y</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phi,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder,<sp/>Real<sp/>dyinv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inhomog,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/></highlight><highlight class="comment">//<sp/>boundary<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1-2*side;<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>lo<sp/>and<sp/>-1<sp/>for<sp/>hi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bct)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>phi(i,j+s,k,icomp);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a911e22551a8578fcc62588ad4232a1b1" kindref="member">AMREX_LO_REFLECT_ODD</ref>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>-phi(i,j+s,k,icomp);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a874725e18b8a17a13d2200cea4c11c47" kindref="member">AMREX_LO_DIRICHLET</ref>:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NX<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(blen+1,<sp/>maxorder);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>x{-bcl<sp/>*<sp/>dyinv,<sp/>0.5_rt,<sp/>1.5_rt,<sp/>2.5_rt};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>coef{};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a21e5b8295b57ab90e4ddd05a04ca5a85" kindref="member">poly_interp_coeff</ref>(-0.5_rt,<sp/>&amp;x[0],<sp/>NX,<sp/>&amp;coef[0]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>tmp<sp/>=<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>1;<sp/>m<sp/>&lt;<sp/>NX;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>phi(i,j+m*s,k,icomp)<sp/>*<sp/>coef[m];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inhomog)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>+=<sp/>bcval(i,j,k,icomp)*coef[0];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="134" refid="namespaceamrex_1a4e1faf5b4e4f220d3c4ca9133533e793" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4e1faf5b4e4f220d3c4ca9133533e793" kindref="member">mllinop_apply_bc_z</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phi,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder,<sp/>Real<sp/>dzinv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inhomog,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/></highlight><highlight class="comment">//<sp/>boundary<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1-2*side;<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>lo<sp/>and<sp/>-1<sp/>for<sp/>hi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bct)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>phi(i,j,k+s,icomp);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a911e22551a8578fcc62588ad4232a1b1" kindref="member">AMREX_LO_REFLECT_ODD</ref>:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>-phi(i,j,k+s,icomp);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a874725e18b8a17a13d2200cea4c11c47" kindref="member">AMREX_LO_DIRICHLET</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NX<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(blen+1,<sp/>maxorder);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>x{-bcl<sp/>*<sp/>dzinv,<sp/>0.5_rt,<sp/>1.5_rt,<sp/>2.5_rt};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>coef{};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a21e5b8295b57ab90e4ddd05a04ca5a85" kindref="member">poly_interp_coeff</ref>(-0.5_rt,<sp/>&amp;x[0],<sp/>NX,<sp/>&amp;coef[0]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask(i,j,k)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>tmp<sp/>=<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>1;<sp/>m<sp/>&lt;<sp/>NX;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>phi(i,j,k+m*s,icomp)<sp/>*<sp/>coef[m];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inhomog)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi(i,j,k,icomp)<sp/>+=<sp/>bcval(i,j,k,icomp)*coef[0];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="195" refid="namespaceamrex_1a0c9506e3ea468bf968ad5911a33bc12b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0c9506e3ea468bf968ad5911a33bc12b" kindref="member">mllinop_comp_interp_coef0_x</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder,<sp/>Real<sp/>dxinv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>lo.x;<sp/></highlight><highlight class="comment">//<sp/>boundary<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>lo.x<sp/>+<sp/>(1-2*side);<sp/></highlight><highlight class="comment">//<sp/>interior<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bct)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref>:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(ii,j,k,icomp)<sp/>=<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a911e22551a8578fcc62588ad4232a1b1" kindref="member">AMREX_LO_REFLECT_ODD</ref>:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(ii,j,k,icomp)<sp/>=<sp/>(mask(ib,j,k)<sp/>&gt;<sp/>0)<sp/>?<sp/>1.0_rt<sp/>:<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a874725e18b8a17a13d2200cea4c11c47" kindref="member">AMREX_LO_DIRICHLET</ref>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NX<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(blen+1,<sp/>maxorder);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>x{-bcl<sp/>*<sp/>dxinv,<sp/>0.5_rt,<sp/>1.5_rt,<sp/>2.5_rt};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>coef{};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a21e5b8295b57ab90e4ddd05a04ca5a85" kindref="member">poly_interp_coeff</ref>(-0.5_rt,<sp/>&amp;x[0],<sp/>NX,<sp/>&amp;coef[0]);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(ii,j,k,icomp)<sp/>=<sp/>(mask(ib,j,k)<sp/>&gt;<sp/>0)<sp/>?<sp/>coef[1]<sp/>:<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="242" refid="namespaceamrex_1a25b23e315bc6488e9b047820d326d54e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a25b23e315bc6488e9b047820d326d54e" kindref="member">mllinop_comp_interp_coef0_y</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder,<sp/>Real<sp/>dyinv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jb<sp/>=<sp/>lo.y;<sp/></highlight><highlight class="comment">//<sp/>boundary<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ji<sp/>=<sp/>lo.y<sp/>+<sp/>(1-2*side);<sp/></highlight><highlight class="comment">//<sp/>interior<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bct)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref>:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,ji,k,icomp)<sp/>=<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a911e22551a8578fcc62588ad4232a1b1" kindref="member">AMREX_LO_REFLECT_ODD</ref>:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,ji,k,icomp)<sp/>=<sp/>(mask(i,jb,k)<sp/>&gt;<sp/>0)<sp/>?<sp/>1.0_rt<sp/>:<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a874725e18b8a17a13d2200cea4c11c47" kindref="member">AMREX_LO_DIRICHLET</ref>:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NX<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(blen+1,<sp/>maxorder);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>x{-bcl<sp/>*<sp/>dyinv,<sp/>0.5_rt,<sp/>1.5_rt,<sp/>2.5_rt};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>coef{};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a21e5b8295b57ab90e4ddd05a04ca5a85" kindref="member">poly_interp_coeff</ref>(-0.5_rt,<sp/>&amp;x[0],<sp/>NX,<sp/>&amp;coef[0]);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,ji,k,icomp)<sp/>=<sp/>(mask(i,jb,k)<sp/>&gt;<sp/>0)<sp/>?<sp/>coef[1]<sp/>:<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="289" refid="namespaceamrex_1aad0255c2e4fb4e87956b3b98f4ef3866" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aad0255c2e4fb4e87956b3b98f4ef3866" kindref="member">mllinop_comp_interp_coef0_z</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder,<sp/>Real<sp/>dzinv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kb<sp/>=<sp/>lo.z;<sp/></highlight><highlight class="comment">//<sp/>bound<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ki<sp/>=<sp/>lo.z<sp/>+<sp/>(1-2*side);<sp/></highlight><highlight class="comment">//<sp/>interior<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bct)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref>:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,ki,icomp)<sp/>=<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a911e22551a8578fcc62588ad4232a1b1" kindref="member">AMREX_LO_REFLECT_ODD</ref>:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,ki,icomp)<sp/>=<sp/>(mask(i,j,kb)<sp/>&gt;<sp/>0)<sp/>?<sp/>1.0_rt<sp/>:<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AMReX__LO__BCTYPES_8H_1a874725e18b8a17a13d2200cea4c11c47" kindref="member">AMREX_LO_DIRICHLET</ref>:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NX<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(blen+1,<sp/>maxorder);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>x{-bcl<sp/>*<sp/>dzinv,<sp/>0.5_rt,<sp/>1.5_rt,<sp/>2.5_rt};</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;Real,4&gt;</ref><sp/>coef{};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a21e5b8295b57ab90e4ddd05a04ca5a85" kindref="member">poly_interp_coeff</ref>(-0.5_rt,<sp/>&amp;x[0],<sp/>NX,<sp/>&amp;coef[0]);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,ki,icomp)<sp/>=<sp/>(mask(i,j,kb)<sp/>&gt;<sp/>0)<sp/>?<sp/>coef[1]<sp/>:<sp/>0.0_rt;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="336" refid="namespaceamrex_1ae487611c34bcb26c65d66582fcc35af9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae487611c34bcb26c65d66582fcc35af9" kindref="member">mllinop_apply_innu_xlo</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcoef,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_bcoef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>(has_bcoef)<sp/>?<sp/>bcoef(i+1,j,k,icomp)<sp/>:<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i+1,j,k,icomp)<sp/>-=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="351" refid="namespaceamrex_1ae380bf43b808735dff7e2122895daf7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae380bf43b808735dff7e2122895daf7d" kindref="member">mllinop_apply_innu_xhi</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcoef,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_bcoef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>(has_bcoef)<sp/>?<sp/>bcoef(i,j,k,icomp)<sp/>:<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i-1,j,k,icomp)<sp/>+=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="366" refid="namespaceamrex_1ad1682b85a41ee48f0f5973e7a5d444ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad1682b85a41ee48f0f5973e7a5d444ee" kindref="member">mllinop_apply_innu_ylo</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcoef,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_bcoef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>(has_bcoef)<sp/>?<sp/>bcoef(i,j+1,k,icomp)<sp/>:<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i,j+1,k,icomp)<sp/>-=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="381" refid="namespaceamrex_1a592c023722bfcfeb42b1ce8ff8e15d58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a592c023722bfcfeb42b1ce8ff8e15d58" kindref="member">mllinop_apply_innu_ylo_m</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/>Real<sp/>xlo,<sp/>Real<sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>xlo<sp/>+<sp/>(i+0.5)*dx;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i,j+1,k,icomp)<sp/>-=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="395" refid="namespaceamrex_1aec6e449f7e5fcbbdb616d9bec743df79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aec6e449f7e5fcbbdb616d9bec743df79" kindref="member">mllinop_apply_innu_yhi</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcoef,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_bcoef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>(has_bcoef)<sp/>?<sp/>bcoef(i,j,k,icomp)<sp/>:<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i,j-1,k,icomp)<sp/>+=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="410" refid="namespaceamrex_1a8b50389c58f67d8284cf1610cae2f457" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8b50389c58f67d8284cf1610cae2f457" kindref="member">mllinop_apply_innu_yhi_m</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/>Real<sp/>xlo,<sp/>Real<sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>xlo<sp/>+<sp/>(i+0.5)*dx;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i,j-1,k,icomp)<sp/>+=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="424" refid="namespaceamrex_1aa46ff4dd3ec8bad24a3f0fb2b4443ea7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aa46ff4dd3ec8bad24a3f0fb2b4443ea7" kindref="member">mllinop_apply_innu_zlo</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcoef,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_bcoef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>(has_bcoef)<sp/>?<sp/>bcoef(i,j,k+1,icomp)<sp/>:<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i,j,k+1,icomp)<sp/>-=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="439" refid="namespaceamrex_1ae56dc86f2b001cd9934c11fe0921dd5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae56dc86f2b001cd9934c11fe0921dd5f" kindref="member">mllinop_apply_innu_zhi</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;int const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcoef,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref><sp/>bct,<sp/>Real<sp/>bcl,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bcval,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_bcoef,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bct<sp/>==<sp/><ref refid="AMReX__LO__BCTYPES_8H_1a0f804066c7b2b4d304482ea1751def60" kindref="member">AMREX_LO_NEUMANN</ref><sp/>and<sp/>mask(i,j,k)<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>b<sp/>=<sp/>(has_bcoef)<sp/>?<sp/>bcoef(i,j,k,icomp)<sp/>:<sp/>1.0_rt;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs(i,j,k-1,icomp)<sp/>+=<sp/>fac*b*bcval(i,j,k,icomp);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H"/>
  </compounddef>
</doxygen>
