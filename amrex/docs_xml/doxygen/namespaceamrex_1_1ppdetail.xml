<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1ppdetail" kind="namespace" language="C++">
    <compoundname>amrex::ppdetail</compoundname>
    <innerclass refid="structamrex_1_1ppdetail_1_1ArithmeticOptional__TT" prot="public">amrex::ppdetail::ArithmeticOptional_TT</innerclass>
    <innerclass refid="structamrex_1_1ppdetail_1_1ArithmeticOptional__TT_3_01std_1_1optional_3_01T_01_4_00_01std_1_1enab4f56f7972e96cd506ee631fce7d5eac" prot="public">amrex::ppdetail::ArithmeticOptional_TT&lt; std::optional&lt; T &gt;, std::enable_if_t&lt; std::is_arithmetic_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="structamrex_1_1ppdetail_1_1ArithmeticOptional__TT_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is_7c3fb6f4fd99b8c14ba54247f995ec7f" prot="public">amrex::ppdetail::ArithmeticOptional_TT&lt; T, std::enable_if_t&lt; std::is_arithmetic_v&lt; T &gt; &gt; &gt;</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceamrex_1_1ppdetail_1ad602b2284379a42d0d6e88489ef86105" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structamrex_1_1ppdetail_1_1ArithmeticOptional__TT" kindref="compound">ArithmeticOptional_TT</ref>&lt; T &gt;::value_type</type>
        <definition>using amrex::ppdetail::underlying_type_t = typedef typename ArithmeticOptional_TT&lt;T&gt;::value_type</definition>
        <argsstring></argsstring>
        <name>underlying_type_t</name>
        <qualifiedname>amrex::ppdetail::underlying_type_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="54" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1ppdetail_1ae3062fc5ca3dda7517b74219ee21f684" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool amrex::ppdetail::IsArithmeticOptional_v</definition>
        <argsstring></argsstring>
        <name>IsArithmeticOptional_v</name>
        <qualifiedname>amrex::ppdetail::IsArithmeticOptional_v</qualifiedname>
        <initializer>= <ref refid="structamrex_1_1ppdetail_1_1ArithmeticOptional__TT" kindref="compound">ArithmeticOptional_TT</ref>&lt;T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="51" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="31" column="1"/>
  </compounddef>
</doxygen>
