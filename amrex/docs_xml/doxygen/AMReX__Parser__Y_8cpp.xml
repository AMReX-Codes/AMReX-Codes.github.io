<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AMReX__Parser__Y_8cpp" kind="file" language="C++">
    <compoundname>AMReX_Parser_Y.cpp</compoundname>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <includes refid="AMReX__Parser__Y_8H" local="no">AMReX_Parser_Y.H</includes>
    <includes refid="amrex__parser_8tab_8h" local="no">amrex_parser.tab.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdarg</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="56">
        <label>atomic</label>
      </node>
      <node id="34">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="37">
        <label>limits</label>
      </node>
      <node id="48">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>float.h</label>
      </node>
      <node id="25">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="32">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="9">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>numeric</label>
      </node>
      <node id="65">
        <label>amrex_parser.tab.h</label>
        <link refid="amrex__parser_8tab_8h"/>
      </node>
      <node id="66">
        <label>cstdarg</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="4">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp</label>
        <link refid="AMReX__Parser__Y_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>typeinfo</label>
      </node>
      <node id="5">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AMReX_Config.H</label>
      </node>
      <node id="6">
        <label>cstdio</label>
      </node>
      <node id="54">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>stack</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="42">
        <label>utility</label>
      </node>
      <node id="49">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>array</label>
      </node>
      <node id="55">
        <label>sstream</label>
      </node>
      <node id="26">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>AMReX_Parser_Y.H</label>
        <link refid="AMReX__Parser__Y_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>iosfwd</label>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="28">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>cstddef</label>
      </node>
      <node id="51">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>climits</label>
      </node>
      <node id="57">
        <label>csignal</label>
      </node>
      <node id="19">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>type_traits</label>
      </node>
      <node id="64">
        <label>set</label>
      </node>
      <node id="36">
        <label>algorithm</label>
      </node>
      <node id="63">
        <label>cstring</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="27">
        <label>inttypes.h</label>
      </node>
      <node id="43">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" prot="public" static="no">
        <name>PARSER_MOVEUP_R</name>
        <param><defname>node</defname></param>
        <param><defname>v</defname></param>
        <initializer>    struct parser_node* n = node-&gt;r-&gt;r; \
    int ip = node-&gt;r-&gt;rip; \
    node-&gt;r = n; \
    node-&gt;lvp.v = v; \
    node-&gt;rip   = ip;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" line="353" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" prot="public" static="no">
        <name>PARSER_MOVEUP_L</name>
        <param><defname>node</defname></param>
        <param><defname>v</defname></param>
        <initializer>    struct parser_node* n = node-&gt;l-&gt;r; \
    int ip = node-&gt;l-&gt;rip; \
    node-&gt;r = n; \
    node-&gt;lvp.v = v; \
    node-&gt;rip   = ip;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" line="359" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" prot="public" static="no">
        <name>PARSER_EVAL_R</name>
        <param><defname>node</defname></param>
        <initializer>node-&gt;r-&gt;lvp.v</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" line="365" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" prot="public" static="no">
        <name>PARSER_EVAL_L</name>
        <param><defname>node</defname></param>
        <initializer>node-&gt;l-&gt;lvp.v</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" line="366" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__Parser__Y_8cpp_1a6593ff8ba47094dc48dc4180c83ff22a" prot="public" static="no">
        <name>PARSER_NEG_MOVEUP</name>
        <param><defname>node</defname></param>
        <initializer>    node-&gt;r = node-&gt;l-&gt;r; \
    node-&gt;lvp.v = -node-&gt;l-&gt;lvp.v; \
    node-&gt;rip = node-&gt;l-&gt;rip;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" line="368" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__Parser__Y_8cpp_1ab76fb0f384d4c8daa7bda6aa6f55aba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_parsererror</definition>
        <argsstring>(char const *s,...)</argsstring>
        <name>amrex_parsererror</name>
        <param>
          <type>char const *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" line="10" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp" bodystart="10" bodyend="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Parser__Y_8H" kindref="compound">AMReX_Parser_Y.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="amrex__parser_8tab_8h" kindref="compound">amrex_parser.tab.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="AMReX__Parser__Y_8cpp_1ab76fb0f384d4c8daa7bda6aa6f55aba9" kindref="member">amrex_parsererror</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*s,<sp/>...)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::va_list<sp/>vl;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(vl,<sp/>s);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vfprintf(stderr,<sp/>s,<sp/>vl);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(vl);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*<sp/><ref refid="namespaceamrex_1a9fe4a92c659abb78e4d7fec74ac8952c" kindref="member">parser_root</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>called<sp/>by<sp/>a<sp/>bison<sp/>rule<sp/>to<sp/>store<sp/>the<sp/>original<sp/>AST<sp/>in<sp/>a<sp/>static<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="namespaceamrex_1ad611b2a5542fba47b36125c772d02700" kindref="member">parser_defexpr</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>body)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a9fe4a92c659abb78e4d7fec74ac8952c" kindref="member">parser_root</ref><sp/>=<sp/>body;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="namespaceamrex_1ae51f56e5de666bd486e02809fb95826a" kindref="member">parser_makesymbol</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol-&gt;name<sp/>=<sp/>strdup(name);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol-&gt;ip<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>symbol;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="namespaceamrex_1a54e375fb078fbde3c46609319674551f" kindref="member">parser_newnode</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883" kindref="member">parser_node_t</ref><sp/>type,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>l,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>r)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;l<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;r<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="namespaceamrex_1af52966118e944ed96c7d6ed24c08d837" kindref="member">parser_newnumber</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;value<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)<sp/>r;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="namespaceamrex_1ad839d03442a4323dfb7b2b9578b6b9fd" kindref="member">parser_newsymbol</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*<sp/>symbol)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)<sp/>symbol;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="namespaceamrex_1af7520cc9fa8b9a8de8e845d02b75db77" kindref="member">parser_newf1</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" kindref="member">parser_f1_t</ref><sp/>ftype,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>l)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;l<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;ftype<sp/>=<sp/>ftype;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)<sp/>tmp;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="namespaceamrex_1a1a35a66f1f45aa77d0be9afe8def5501" kindref="member">parser_newf2</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/>ftype,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>l,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>r)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f2*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;l<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;r<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;ftype<sp/>=<sp/>ftype;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)<sp/>tmp;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="namespaceamrex_1a6762c0fee754bd1ce564f76ef81253b6" kindref="member">parser_newf3</ref><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051b" kindref="member">parser_f3_t</ref><sp/>ftype,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>n1,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>n2,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>n3)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f3*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;n1<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;n2<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;n3<sp/>=<sp/>n3;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;ftype<sp/>=<sp/>ftype;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)<sp/>tmp;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="namespaceamrex_1a63cdcee7f7165d07558abfd490a3cf8f" kindref="member">parser_newassign</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*<sp/>sym,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>v)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_assign*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;s<sp/>=<sp/>sym;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;v<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)<sp/>r;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="namespaceamrex_1af77166ee4bf8e84e0628c8d6ef96f055" kindref="member">parser_newlist</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>nl,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>nr)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nl;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;l<sp/>=<sp/>nl;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;r<sp/>=<sp/>nr;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">amrex_parser*</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="namespaceamrex_1ae66dc6e64e2bbaeb5e33f845f1021f4f" kindref="member">amrex_parser_new</ref><sp/>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>my_parser<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">amrex_parser*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>my_parser-&gt;sz_mempool<sp/>=<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(<ref refid="namespaceamrex_1a9fe4a92c659abb78e4d7fec74ac8952c" kindref="member">parser_root</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>my_parser-&gt;p_root<sp/>=<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(my_parser-&gt;sz_mempool);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>my_parser-&gt;p_free<sp/>=<sp/>my_parser-&gt;p_root;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>my_parser-&gt;ast<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/><ref refid="namespaceamrex_1a9fe4a92c659abb78e4d7fec74ac8952c" kindref="member">parser_root</ref>,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>1:<sp/>free<sp/>the<sp/>source<sp/>parser_root<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)my_parser-&gt;p_root<sp/>+<sp/>my_parser-&gt;sz_mempool<sp/>!=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)my_parser-&gt;p_free)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;amrex_parser_new:<sp/>error<sp/>in<sp/>memory<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(my_parser-&gt;ast);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>my_parser;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="namespaceamrex_1a2f20d75c59ef143705ccaeaef9897c17" kindref="member">amrex_parser_delete</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>parser)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amrex__iparser_8tab_8cpp_1af07d89f5ceaea0c7c8252cc41fd75f37" kindref="member">std::free</ref>(parser-&gt;p_root);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amrex__iparser_8tab_8cpp_1af07d89f5ceaea0c7c8252cc41fd75f37" kindref="member">std::free</ref>(parser);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">std::size_t</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref><sp/>(std::size_t<sp/><ref refid="namespaceamrex_1af1a6e68ce22e31df053e21b069ecdcfb" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align_size<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>x<sp/>=<sp/><ref refid="namespaceamrex_1af1a6e68ce22e31df053e21b069ecdcfb" kindref="member">N</ref><sp/>+<sp/>(align_size-1);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>x<sp/>&amp;<sp/>(align_size-1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>my_parser,<sp/>std::size_t<sp/><ref refid="namespaceamrex_1af1a6e68ce22e31df053e21b069ecdcfb" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>r<sp/>=<sp/>my_parser-&gt;p_free;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>my_parser-&gt;p_free<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)r<sp/>+<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(<ref refid="namespaceamrex_1af1a6e68ce22e31df053e21b069ecdcfb" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">amrex_parser*</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="namespaceamrex_1af09002432ee048d8be86ce24cac1b230" kindref="member">parser_dup</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>source)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">amrex_parser*<sp/>dest<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">amrex_parser*)<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;sz_mempool<sp/>=<sp/>source-&gt;sz_mempool;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;p_root<sp/>=<sp/><ref refid="amrex__iparser_8tab_8cpp_1a5faf6a2d99f50a4655dd390199a8db7b" kindref="member">std::malloc</ref>(dest-&gt;sz_mempool);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;p_free<sp/>=<sp/>dest-&gt;p_root;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;ast<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(dest,<sp/>source-&gt;ast,<sp/>0);<sp/></highlight><highlight class="comment">/*<sp/>0:<sp/>don&apos;t<sp/>free<sp/>the<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">std::size_t</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(std::strlen(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node)-&gt;name)+1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(node-&gt;l)<sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2))</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;s))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1aa04d33642e47699eedfa904aa011b199" kindref="member">parser_aligned_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a70b4e8ec482471a9d5c1a2b17c2420b2" kindref="member">parser_ast_size</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_size:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>my_parser,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>move)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)result)-&gt;name<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(my_parser,<sp/>std::strlen(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node)-&gt;name)+1);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::strcpy(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)result)-&gt;name,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node<sp/><sp/>)-&gt;name);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)result)-&gt;l<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/>node-&gt;l,<sp/>move);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)result)-&gt;r<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/>node-&gt;r,<sp/>move);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)result)-&gt;l<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/>node-&gt;l,<sp/>move);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)result)-&gt;r<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)result)-&gt;l<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l,<sp/>move);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f2*)result)-&gt;l<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l,<sp/>move);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f2*)result)-&gt;r<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r,<sp/>move);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f3*)result)-&gt;n1<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1,<sp/>move);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f3*)result)-&gt;n2<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2,<sp/>move);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f3*)result)-&gt;n3<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3,<sp/>move);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_assign*)result)-&gt;s<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_assign*)node)-&gt;s),<sp/>move);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_assign*)result)-&gt;v<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v,<sp/>move);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)result)-&gt;r<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/>node-&gt;r,<sp/>move);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespaceamrex_1a9ec644ecf6ca85c38caddcdca5543c99" kindref="member">parser_allocate</ref>(my_parser,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(result,<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*)result)-&gt;l<sp/>=<sp/><ref refid="namespaceamrex_1ad3b98b9aec198e9456f562949577675c" kindref="member">parser_ast_dup</ref>(my_parser,<sp/>node-&gt;l,<sp/>move);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_dup:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(move)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>we<sp/>only<sp/>do<sp/>this<sp/>on<sp/>the<sp/>original<sp/>AST.<sp/><sp/>We<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>need<sp/>to<sp/>call<sp/>free<sp/>for<sp/>AST<sp/>stored<sp/>in<sp/>amrex_parser<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>is<sp/>not<sp/>allocated<sp/>with<sp/>std::malloc<sp/>directly.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amrex__iparser_8tab_8cpp_1af07d89f5ceaea0c7c8252cc41fd75f37" kindref="member">std::free</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node)-&gt;name);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amrex__iparser_8tab_8cpp_1af07d89f5ceaea0c7c8252cc41fd75f37" kindref="member">std::free</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)node);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*)result;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARSER_MOVEUP_R(node,<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>parser_node*<sp/>n<sp/>=<sp/>node-&gt;r-&gt;r;<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>ip<sp/>=<sp/>node-&gt;r-&gt;rip;<sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>n;<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>v;<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARSER_MOVEUP_L(node,<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>parser_node*<sp/>n<sp/>=<sp/>node-&gt;l-&gt;r;<sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>ip<sp/>=<sp/>node-&gt;l-&gt;rip;<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>n;<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>v;<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARSER_EVAL_R(node)<sp/>node-&gt;r-&gt;lvp.v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARSER_EVAL_L(node)<sp/>node-&gt;l-&gt;lvp.v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARSER_NEG_MOVEUP(node)<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;<sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>-node-&gt;l-&gt;lvp.v;<sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>node-&gt;rip<sp/>=<sp/>node-&gt;l-&gt;rip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>to<sp/>free<sp/>memory<sp/>because<sp/>we<sp/>only<sp/>call<sp/>this<sp/>on<sp/>ASTs<sp/>in</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>amrex_parser<sp/>that<sp/>are<sp/>allocated<sp/>from<sp/>the<sp/>memory<sp/>pool.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>;<sp/></highlight><highlight class="comment">//<sp/>For<sp/>*_PP,<sp/>the<sp/>names<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>l<sp/>and<sp/>r<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>+<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>+<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>+<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>+<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>+<sp/>(#rl<sp/>+<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>+<sp/>#rl)<sp/>+<sp/>node_rr,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>+<sp/>(node_rl<sp/>+<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>+<sp/>#rr)<sp/>+<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>+<sp/>(#rl<sp/>-<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>+<sp/>#rl)<sp/>-<sp/>node_rr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>+<sp/>(node_rl<sp/>-<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>-<sp/>#rr)<sp/>+<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>+<sp/>node_lr)<sp/>+<sp/>#r<sp/>-&gt;<sp/>nodel_lr<sp/>+<sp/>(#ll<sp/>+<sp/>#r),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>+<sp/>#lr)<sp/>+<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>+<sp/>(#lr<sp/>+<sp/>#r),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>-<sp/>node_lr)<sp/>+<sp/>#r<sp/>-&gt;<sp/>(#ll<sp/>+<sp/>#r)<sp/>-<sp/>node_lr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>-<sp/>#lr)<sp/>+<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>+<sp/>(#r<sp/>-<sp/>#lr),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>-((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>-<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>-<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>-<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>-<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>-<sp/>(#rl<sp/>+<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>-<sp/>#rl)<sp/>-<sp/>node_rr,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>-<sp/>(node_rl<sp/>+<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>-<sp/>#rr)<sp/>-<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>-<sp/>(#rl<sp/>-<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>-<sp/>#rl)<sp/>+<sp/>node_rr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>-<sp/>(node_rl<sp/>-<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>+<sp/>#rr)<sp/>-<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>+<sp/>node_lr)<sp/>-<sp/>#r<sp/>-&gt;<sp/>node_lr<sp/>-<sp/>(#r<sp/>-<sp/>#ll),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>+<sp/>#lr)<sp/>-<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>-<sp/>(#r<sp/>-<sp/>#lr),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>-<sp/>node_lr)<sp/>-<sp/>#r<sp/>-&gt;<sp/>(#ll<sp/>-<sp/>#r)<sp/>-<sp/>node_lr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>-<sp/>#lr)<sp/>-<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>-<sp/>(#r<sp/>+<sp/>#lr),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>*<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>*<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>*<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>*<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>*<sp/>(#rl<sp/>*<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>*<sp/>#rl)<sp/>*<sp/>node_rr,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>*<sp/>(node_rl<sp/>*<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>*<sp/>#rr)<sp/>*<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>*<sp/>(#rl<sp/>/<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>*<sp/>#rl)<sp/>/<sp/>node_rr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>*<sp/>(node_rl<sp/>/<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>/<sp/>#rr)<sp/>*<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>*<sp/>node_lr)<sp/>*<sp/>#r<sp/>-&gt;<sp/>nodel_lr<sp/>*<sp/>(#ll<sp/>*<sp/>#r),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>*<sp/>#lr)<sp/>*<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>+<sp/>(#lr<sp/>*<sp/>#r),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>/<sp/>node_lr)<sp/>*<sp/>#r<sp/>-&gt;<sp/>(#ll<sp/>*<sp/>#r)<sp/>/<sp/>node_lr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>/<sp/>#lr)<sp/>*<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>*<sp/>(#r<sp/>/<sp/>#lr),<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.v<sp/>=<sp/>double(1.)/((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/><sp/><sp/><sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>/<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>/<sp/><ref refid="AMReX__Parser__Y_8cpp_1afbff47b8f6ed01ed41e91024681aaf7b" kindref="member">PARSER_EVAL_R</ref>(node);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1ab1ce64456a61cab718681cca462dca5b" kindref="member">PARSER_MOVEUP_R</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>/<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="AMReX__Parser__Y_8cpp_1aea8302ef14ce5c5d3756fe16648af101" kindref="member">PARSER_EVAL_L</ref>(node)<sp/>/<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a9d428819a9f4e0c46d6c68f580aa3db2" kindref="member">PARSER_MOVEUP_L</ref>(node,<sp/>v);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>/<sp/>(#rl<sp/>*<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>/<sp/>#rl)<sp/>/<sp/>node_rr,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>/<sp/>(node_rl<sp/>*<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>/<sp/>#rr)<sp/>/<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>/<sp/>(#rl<sp/>/<sp/>node_rr)<sp/>-&gt;<sp/>(#l<sp/>/<sp/>#rl)<sp/>*<sp/>node_rr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;r;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>#l<sp/>/<sp/>(node_rl<sp/>/<sp/>#rr)<sp/>-&gt;<sp/>(#l<sp/>*<sp/>#rr)<sp/>/<sp/>node_rl,<sp/>same<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;r-&gt;l;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>*<sp/>node_lr)<sp/>/<sp/>#r<sp/>-&gt;<sp/>node_lr<sp/>*<sp/>(#ll<sp/>/<sp/>#r),<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>*<sp/>#lr)<sp/>/<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>*<sp/>(#lr<sp/>/<sp/>#r),<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(#ll<sp/>/<sp/>node_lr)<sp/>/<sp/>#r<sp/>-&gt;<sp/>(#ll<sp/>/<sp/>#r)<sp/>/<sp/>node_lr,<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;l))-&gt;value</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(node_ll<sp/>/<sp/>#lr)<sp/>/<sp/>#r<sp/>-&gt;<sp/>node_ll<sp/>*<sp/>1./(#r<sp/>*<sp/>#lr),<sp/>type<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1.)/v;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>-((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a6593ff8ba47094dc48dc4180c83ff22a" kindref="member">PARSER_NEG_MOVEUP</ref>(node);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a6593ff8ba47094dc48dc4180c83ff22a" kindref="member">PARSER_NEG_MOVEUP</ref>(node);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a6593ff8ba47094dc48dc4180c83ff22a" kindref="member">PARSER_NEG_MOVEUP</ref>(node);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Parser__Y_8cpp_1a6593ff8ba47094dc48dc4180c83ff22a" kindref="member">PARSER_NEG_MOVEUP</ref>(node);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(#ll<sp/>+<sp/>node_lr)<sp/>-&gt;<sp/>-#ll<sp/>-<sp/>node_lr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(node_ll<sp/>+<sp/>#lr)<sp/>-&gt;<sp/>-#lr<sp/>-<sp/>node_ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(#ll<sp/>-<sp/>node_lr)<sp/>-&gt;<sp/>-#ll<sp/>+<sp/>node_lr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(node_ll<sp/>-<sp/>#lr)<sp/>-&gt;<sp/>#lr<sp/>-<sp/>node_ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(#ll<sp/>*<sp/>node_lr)<sp/>-&gt;<sp/>-#ll<sp/>*<sp/>node_lr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(node_ll<sp/>*<sp/>#lr)<sp/>-&gt;<sp/>-#lr<sp/>*<sp/>node_ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(#ll<sp/>/<sp/>node_lr)<sp/>-&gt;<sp/>-#ll<sp/>/<sp/>node_lr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;r;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(node-&gt;l-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>-(node_ll<sp/>/<sp/>#lr)<sp/>-&gt;<sp/>(-1/#lr)<sp/>*<sp/>node_ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r<sp/>=<sp/>node-&gt;l-&gt;l;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value<sp/>=</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(-1.0)<sp/>/<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;l-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="namespaceamrex_1a28d9f515eaa0f8b6c464afd9e8e26839" kindref="member">parser_call_f1</ref></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;ftype,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l))-&gt;value);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="namespaceamrex_1a9ad43c67a92cbfee740c7219dede60de" kindref="member">parser_call_f2</ref></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;ftype,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l))-&gt;value,</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r))-&gt;value);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;ftype<sp/>==<sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca7b172eaccc69212b5526d8a1675b2399" kindref="member">PARSER_POW</ref>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_node*<sp/>n<sp/>=<sp/>node-&gt;l;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-3.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;ftype<sp/>=<sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a694d2e1b1cd6961ea07b123547a0f88d" kindref="member">PARSER_POW_M3</ref>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-2.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;ftype<sp/>=<sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af3809c32926c5365d39bd5264042e3ae" kindref="member">PARSER_POW_M2</ref>;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;ftype<sp/>=<sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a6959884c4754748c098c6cf1e1d7f15e" kindref="member">PARSER_POW_M1</ref>;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;ftype<sp/>=<sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589aba931b8a257cc61167d87f8f0c2a4894" kindref="member">PARSER_POW_P1</ref>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;ftype<sp/>=<sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a44be2664933f05ef4a513d624e6c2094" kindref="member">PARSER_POW_P2</ref>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3.0<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;l<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_f1*)node)-&gt;ftype<sp/>=<sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0b1f0dc2037efb1f7674c9fdca44b561" kindref="member">PARSER_POW_P3</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="namespaceamrex_1ac8fc246b5e107c0247b09a8c97395063" kindref="member">parser_call_f3</ref></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;ftype,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1))-&gt;value,</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2))-&gt;value,</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_number*)(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3))-&gt;value);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>node-&gt;lvp.v<sp/>+<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>node-&gt;lvp.v<sp/>-<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>node-&gt;lvp.v<sp/>*<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;r-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>node-&gt;lvp.v<sp/>/<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;r))-&gt;value;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;l-&gt;type<sp/>==<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>-((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)(node-&gt;l))-&gt;value;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_optimize:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><ref refid="namespaceamrex_1a06594171e7a4be2ffa644282ffb4318c" kindref="member">parser_ast_print_f1</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*<sp/>f1,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>space,<sp/>AllPrint&amp;<sp/>printer)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(f1-&gt;ftype)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a3fb34ef0b3bf8980039c8b7938964511" kindref="member">PARSER_SQRT</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SQRT\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a5659297c786f4248f15bf8990826f06c" kindref="member">PARSER_EXP</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EXP\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a6d472fc8669b810eccc4c8ccfaf4c1d6" kindref="member">PARSER_LOG</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LOG\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af1f083ccd600c4f36a89b024f39f62d0" kindref="member">PARSER_LOG10</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LOG10\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a723f6e0a6ed9422b505ce4ea722a9242" kindref="member">PARSER_SIN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIN\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a146c14c8d7badfe1adbfa704245f686e" kindref="member">PARSER_COS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;COS\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a45e9ea1f41504ce7c2d125cc59fa08ea" kindref="member">PARSER_TAN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TAN\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ab1139ce456ce4f10e58ddb98628a9e67" kindref="member">PARSER_ASIN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ASIN\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a4bb2d123de0d48093170da3df9163321" kindref="member">PARSER_ACOS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ACOS\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589adcff340768238477e235ec55d511e0ac" kindref="member">PARSER_ATAN</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ATAN\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af9f5e87ccf73aa564cab896e5737f3f2" kindref="member">PARSER_SINH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SINH\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a1c44c6c982e5f5394b02f66a59cbcbf0" kindref="member">PARSER_COSH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;COSH\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0e8b5d96d71e43edef0273b7e86277ee" kindref="member">PARSER_TANH</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TANH\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589ae01afc57c89c498c5363a6be1fd64eab" kindref="member">PARSER_ABS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ABS\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a694d2e1b1cd6961ea07b123547a0f88d" kindref="member">PARSER_POW_M3</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW(,-3)\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589af3809c32926c5365d39bd5264042e3ae" kindref="member">PARSER_POW_M2</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW(,-2)\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a6959884c4754748c098c6cf1e1d7f15e" kindref="member">PARSER_POW_M1</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW(,-1)\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589aba931b8a257cc61167d87f8f0c2a4894" kindref="member">PARSER_POW_P1</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW(,1)\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a44be2664933f05ef4a513d624e6c2094" kindref="member">PARSER_POW_P2</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW(,2)\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589a0b1f0dc2037efb1f7674c9fdca44b561" kindref="member">PARSER_POW_P3</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW(,3)\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parser_ast_print_f1:<sp/>Unknown<sp/>function<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f1-&gt;ftype<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(f1-&gt;l,<sp/>space+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>printer);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><ref refid="namespaceamrex_1a5e499cb244d7c4453e040dbed04999f3" kindref="member">parser_ast_print_f2</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*<sp/>f2,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>space,<sp/>AllPrint&amp;<sp/>printer)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(f2-&gt;ftype)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca7b172eaccc69212b5526d8a1675b2399" kindref="member">PARSER_POW</ref>:</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;POW\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabbb10d89f09bab7d5aa1b256c361fe4b" kindref="member">PARSER_GT</ref>:</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GT\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca27a45d5e1783028fbc362d8e4f35d752" kindref="member">PARSER_LT</ref>:</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LT\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca627eafb93eb5cc55cc6f1bd716ee6461" kindref="member">PARSER_GEQ</ref>:</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GEQ\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca4d0e5b2b972b4bf0ffa84bb373ec9c77" kindref="member">PARSER_LEQ</ref>:</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LEQ\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcae7a9987ba06f3e22647b6455a894d954" kindref="member">PARSER_EQ</ref>:</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EQ\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3a1729e1b576ae7d414ae6ba76c3b194" kindref="member">PARSER_NEQ</ref>:</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NEQ\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca2d8f7fc88d138e332180438e1171ee57" kindref="member">PARSER_AND</ref>:</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AND\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bca3b65381fef1e4a480813955566ac6224" kindref="member">PARSER_OR</ref>:</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OR\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcacb0b84f852fe36fbb6ffafd2455f9644" kindref="member">PARSER_HEAVISIDE</ref>:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HEAVISIDE\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcaace05cc3a245149a82643a976e7e139a" kindref="member">PARSER_JN</ref>:</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JN\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcab15097a6b28d7658374164aa5eabf155" kindref="member">PARSER_MIN</ref>:</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MIN\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bcabc0c26e39e66ba16b2fa97b76c9dae35" kindref="member">PARSER_MAX</ref>:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAX\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parser_ast_print_f2:<sp/>Unknown<sp/>function<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f2-&gt;ftype<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(f2-&gt;l,<sp/>space+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>printer);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(f2-&gt;r,<sp/>space+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>printer);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><ref refid="namespaceamrex_1ada212d97189e97f78572fc6c64c888d2" kindref="member">parser_ast_print_f3</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*<sp/>f3,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>space,<sp/>AllPrint&amp;<sp/>printer)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>more_space<sp/>=<sp/>space<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(f3-&gt;ftype)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2a6ee79bf3b5c5b67de8ef46a663051ba8ecdd6c594b2624b8d56c95e2e48d836" kindref="member">PARSER_IF</ref>:</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IF\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parser_ast_print_f3:<sp/>Unknown<sp/>function<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f3-&gt;ftype<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(f3-&gt;n1,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(f3-&gt;n2,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(f3-&gt;n3,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>space,<sp/>AllPrint&amp;<sp/>printer)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>more_space<sp/>=<sp/>space<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NUMBER:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;VARIABLE:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)node)-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ADD\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;l,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;r,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SUB\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;l,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;r,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MUL\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;l,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;r,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DIV\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;l,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;r,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NEG\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;l,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a06594171e7a4be2ffa644282ffb4318c" kindref="member">parser_ast_print_f1</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node,<sp/>space,<sp/>printer);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5e499cb244d7c4453e040dbed04999f3" kindref="member">parser_ast_print_f2</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node,<sp/>space,<sp/>printer);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada212d97189e97f78572fc6c64c888d2" kindref="member">parser_ast_print_f3</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node,<sp/>space,<sp/>printer);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_assign*)node)-&gt;s-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;LIST\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;l,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(node-&gt;r,<sp/>more_space,<sp/>printer);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ADD:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;lvp.v<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SUB:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;lvp.v<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MUL:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;lvp.v<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DIV:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;lvp.v<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NEG:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ADD:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;name</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SUB:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;name</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MUL:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;name</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer<sp/>&lt;&lt;<sp/>space<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DIV:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;name</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)(node-&gt;r))-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_print:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(node-&gt;l);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(node-&gt;r);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(d1,d2)+1;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(node-&gt;l)+1;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(d1,d2)+1;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>({d1,d2,d3})+1;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d+1;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_print:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::strcmp(name,<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node)-&gt;name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)node)-&gt;ip<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;l,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;r,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;l,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;r,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;l,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;l,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(node-&gt;r,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;lvp.ip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;l))-&gt;ip;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;rip<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_symbol*)(node-&gt;r))-&gt;ip;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parser_ast_regvar:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>();</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::strcmp(name,<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node)-&gt;name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;type<sp/>=<sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">parser_number*)node)-&gt;value<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(node-&gt;l,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(node-&gt;r,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(node-&gt;l,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(node-&gt;r,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_setconst:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node,<sp/>std::set&lt;std::string&gt;&amp;<sp/>symbols)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;type)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9fa1ed2645825d754693a50b5dbee64" kindref="member">PARSER_NUMBER</ref>:</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a33139f0d7c11fb241cad32250195de18" kindref="member">PARSER_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols.emplace(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_symbol*)node)-&gt;name);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aaddab969e826ae0bac16443c30c2705f" kindref="member">PARSER_ADD</ref>:</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a5e96b8800b23a4312ab9ab355eedaac8" kindref="member">PARSER_SUB</ref>:</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a34b1051c3e736038efa50c56e966fac7" kindref="member">PARSER_MUL</ref>:</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa5ff06ac4391a65f278df5a954d5a6d2" kindref="member">PARSER_DIV</ref>:</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac49c16fd05dd693a9cc948e30cf48cb1" kindref="member">PARSER_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a8d1d89048963fcb37253727fec77fcd6" kindref="member">PARSER_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ab2d70451fe0f516e9dd8376c8d4b81e3" kindref="member">PARSER_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0dddd04ba4439c819abb459d82d8c6b6" kindref="member">PARSER_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a705f34196073afbdc27635fcf758a5b7" kindref="member">PARSER_LIST</ref>:</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(node-&gt;l,<sp/>symbols);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(node-&gt;r,<sp/>symbols);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a6429047d5b0bf3a06a6b6375b39f4159" kindref="member">PARSER_NEG</ref>:</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ae9cc9d5dd84411ef2efd22a0c1f775ea" kindref="member">PARSER_NEG_P</ref>:</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(node-&gt;l,<sp/>symbols);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a67341a513537b8aa38737d076a142649" kindref="member">PARSER_F1</ref>:</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f1*)node)-&gt;l,<sp/>symbols);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883af549bd0564bc7302b40b87b67b296aad" kindref="member">PARSER_F2</ref>:</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;l,<sp/>symbols);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f2*)node)-&gt;r,<sp/>symbols);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883addb390004a66cd17993db3c37d2ab248" kindref="member">PARSER_F3</ref>:</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n1,<sp/>symbols);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n2,<sp/>symbols);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_f3*)node)-&gt;n3,<sp/>symbols);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883ac0862fc2f508fb56ae7cae7fc86a282c" kindref="member">PARSER_ASSIGN</ref>:</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_assign*)node)-&gt;v,<sp/>symbols);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a0b5cc0f9de072091ceee304bbc358040" kindref="member">PARSER_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883aa2b83120a5db07be0ad4fe6ad9c16b05" kindref="member">PARSER_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a933cecbebd1feeb97ae914db16cbf57f" kindref="member">PARSER_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad9039fea6c6d400df4ca8e5fef35b883a79b5ef7712fa2cb254d44b42ed767d2d" kindref="member">PARSER_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(node-&gt;r,<sp/>symbols);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;parser_ast_get_symbols:<sp/>unknown<sp/>node<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node-&gt;type));</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><ref refid="namespaceamrex_1a2287c28084a10ac6a9cfb4b2a50892fc" kindref="member">parser_regvar</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>parser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aee105e6b691d9fa51fef6e50c7ebb155" kindref="member">parser_ast_regvar</ref>(parser-&gt;ast,<sp/>name,<sp/>i);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><ref refid="namespaceamrex_1a4051597b502fed03ea3b07d5f6cbb042" kindref="member">parser_setconst</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>parser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a406674d4bafc2a2a465b8127fa8f9f5e" kindref="member">parser_ast_setconst</ref>(parser-&gt;ast,<sp/>name,<sp/>c);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5f9cf029d313196bd5c43c1d272ea9fe" kindref="member">parser_ast_optimize</ref>(parser-&gt;ast);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><ref refid="namespaceamrex_1a53d306308d380a6d874ad24396fa7673" kindref="member">parser_print</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>parser)</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref><sp/>printer{};</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>printer.<ref refid="classamrex_1_1Print_1a7c4b1f95c46cd9f3e0435d36b25af7ca" kindref="member">SetPrecision</ref>(17);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a66ddc6ab338df01029fd9257eaac0d03" kindref="member">parser_ast_print</ref>(parser-&gt;ast,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">),<sp/>printer);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal">std::set&lt;std::string&gt;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><ref refid="namespaceamrex_1aa4683ef8db99a703c386785fc95e1d29" kindref="member">parser_get_symbols</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>parser)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/>symbols;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa6f528d976ad891f720f534495b97f53" kindref="member">parser_ast_get_symbols</ref>(parser-&gt;ast,<sp/>symbols);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>symbols;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><ref refid="namespaceamrex_1a511dc2f5222b878782000339b1858f3c" kindref="member">parser_depth</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>amrex_parser*<sp/>parser)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6815d583f941a297bbef6d77214829c8" kindref="member">parser_ast_depth</ref>(parser-&gt;ast);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Y.cpp"/>
  </compounddef>
</doxygen>
