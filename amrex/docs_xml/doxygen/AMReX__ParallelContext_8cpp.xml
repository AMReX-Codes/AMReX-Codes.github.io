<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__ParallelContext_8cpp" kind="file" language="C++">
    <compoundname>AMReX_ParallelContext.cpp</compoundname>
    <includes local="no">sstream</includes>
    <includes refid="AMReX__ParallelContext_8H" local="no">AMReX_ParallelContext.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <incdepgraph>
      <node id="32321">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="32322" relation="include">
        </childnode>
        <childnode refid="32323" relation="include">
        </childnode>
        <childnode refid="32324" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
      </node>
      <node id="32334">
        <label>functional</label>
      </node>
      <node id="32359">
        <label>limits</label>
      </node>
      <node id="32345">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
      </node>
      <node id="32352">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32354" relation="include">
        </childnode>
        <childnode refid="32356" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32357" relation="include">
        </childnode>
        <childnode refid="32361" relation="include">
        </childnode>
        <childnode refid="32362" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32348" relation="include">
        </childnode>
        <childnode refid="32363" relation="include">
        </childnode>
        <childnode refid="32324" relation="include">
        </childnode>
        <childnode refid="32329" relation="include">
        </childnode>
        <childnode refid="32350" relation="include">
        </childnode>
      </node>
      <node id="32357">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
        <childnode refid="32358" relation="include">
        </childnode>
        <childnode refid="32359" relation="include">
        </childnode>
        <childnode refid="32360" relation="include">
        </childnode>
        <childnode refid="32325" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32348" relation="include">
        </childnode>
        <childnode refid="32324" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32347" relation="include">
        </childnode>
        <childnode refid="32329" relation="include">
        </childnode>
      </node>
      <node id="32328">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="32329" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32331" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32326" relation="include">
        </childnode>
        <childnode refid="32322" relation="include">
        </childnode>
      </node>
      <node id="32324">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="32325" relation="include">
        </childnode>
        <childnode refid="32326" relation="include">
        </childnode>
        <childnode refid="32322" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
      </node>
      <node id="32358">
        <label>cmath</label>
      </node>
      <node id="32332">
        <label>stdexcept</label>
      </node>
      <node id="32365">
        <label>numeric</label>
      </node>
      <node id="32335">
        <label>string</label>
      </node>
      <node id="32323">
        <label>fstream</label>
      </node>
      <node id="32356">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="32346" relation="include">
        </childnode>
      </node>
      <node id="32348">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="32349" relation="include">
        </childnode>
        <childnode refid="32322" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32320" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32328" relation="include">
        </childnode>
        <childnode refid="32329" relation="include">
        </childnode>
        <childnode refid="32350" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
      </node>
      <node id="32351">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="32347">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="32364">
        <label>typeinfo</label>
      </node>
      <node id="32336">
        <label>cstdio</label>
      </node>
      <node id="32350">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="32329" relation="include">
        </childnode>
      </node>
      <node id="32338">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="32339" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32320" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
        <childnode refid="32342" relation="include">
        </childnode>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32344" relation="include">
        </childnode>
      </node>
      <node id="32339">
        <label>stack</label>
      </node>
      <node id="32326">
        <label>vector</label>
      </node>
      <node id="32327">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="32328" relation="include">
        </childnode>
      </node>
      <node id="32329">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="32340">
        <label>utility</label>
      </node>
      <node id="32349">
        <label>array</label>
      </node>
      <node id="32320">
        <label>sstream</label>
      </node>
      <node id="32331">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="32332" relation="include">
        </childnode>
      </node>
      <node id="32354">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="32325" relation="include">
        </childnode>
        <childnode refid="32329" relation="include">
        </childnode>
        <childnode refid="32347" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
      </node>
      <node id="32319">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp</label>
        <link refid="AMReX_ParallelContext.cpp"/>
        <childnode refid="32320" relation="include">
        </childnode>
        <childnode refid="32321" relation="include">
        </childnode>
        <childnode refid="32337" relation="include">
        </childnode>
      </node>
      <node id="32337">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32321" relation="include">
        </childnode>
        <childnode refid="32338" relation="include">
        </childnode>
        <childnode refid="32345" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
        <childnode refid="32348" relation="include">
        </childnode>
        <childnode refid="32324" relation="include">
        </childnode>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32326" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32364" relation="include">
        </childnode>
        <childnode refid="32325" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32359" relation="include">
        </childnode>
        <childnode refid="32365" relation="include">
        </childnode>
      </node>
      <node id="32362">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32329" relation="include">
        </childnode>
      </node>
      <node id="32355">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
        <childnode refid="32348" relation="include">
        </childnode>
      </node>
      <node id="32353">
        <label>iosfwd</label>
      </node>
      <node id="32341">
        <label>cstdlib</label>
      </node>
      <node id="32344">
        <label>cfenv</label>
      </node>
      <node id="32333">
        <label>iostream</label>
      </node>
      <node id="32361">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32357" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
      </node>
      <node id="32363">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="32357" relation="include">
        </childnode>
      </node>
      <node id="32360">
        <label>climits</label>
      </node>
      <node id="32343">
        <label>csignal</label>
      </node>
      <node id="32330">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="32325">
        <label>algorithm</label>
      </node>
      <node id="32342">
        <label>execinfo.h</label>
      </node>
      <node id="32322">
        <label>memory</label>
      </node>
      <node id="32346">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="32347" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1ParallelContext">amrex::ParallelContext</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelContext_8H" kindref="compound">AMReX_ParallelContext.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="7" refid="namespaceamrex_1_1ParallelContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ParallelContext<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Frame&gt;</ref><sp/><ref refid="namespaceamrex_1_1ParallelContext_1a9bffb84c7ffc09c79a7a48e953322be2" kindref="member">frames</ref>;<sp/></highlight><highlight class="comment">//<sp/>stack<sp/>of<sp/>communicator<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ad61cafd4a0e7503e8cd29810f57736e9" kindref="member">Frame::Frame</ref><sp/>(<ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>io_rank)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>comm(c),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_id(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_mpi_tag(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a705e1be005fbada39a2ca69f6dae9b88" kindref="member">ParallelDescriptor::MinTag</ref>()),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_io_rank(io_rank),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_out_filename(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_out(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_group(comm,<sp/>&amp;group);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_rank(comm,<sp/>&amp;m_rank_me);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_size(comm,<sp/>&amp;m_nranks);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rank_me<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nranks<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ad61cafd4a0e7503e8cd29810f57736e9" kindref="member">Frame::Frame</ref><sp/>(<ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>c)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref>(c,<sp/>-1,<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ad61cafd4a0e7503e8cd29810f57736e9" kindref="member">Frame::Frame</ref><sp/>(<ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>comm<sp/><sp/><sp/><sp/><sp/>(rhs.comm),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/><sp/><sp/><sp/>(rhs.group),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_id<sp/><sp/><sp/><sp/><sp/>(rhs.m_id),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_rank_me(rhs.m_rank_me),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nranks<sp/>(rhs.m_nranks),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_mpi_tag(rhs.m_mpi_tag),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_io_rank(rhs.m_io_rank),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_out_filename(std::move(rhs.m_out_filename)),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_out<sp/><sp/><sp/><sp/>(std::move(rhs.m_out))</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.group<sp/>=<sp/><ref refid="AMReX__ccse-mpi_8H_1a9cf3986bb3558f4a3ec7b69ea79871f6" kindref="member">MPI_GROUP_NULL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a7a812b3ef64087f0bcc566deaffbcb16" kindref="member">Frame::~Frame</ref><sp/>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1ParallelContext_1_1Frame_1a2cb41a80f7a3c545e1e537bf84acbbc9" kindref="member">group</ref><sp/>!=<sp/><ref refid="AMReX__ccse-mpi_8H_1a9cf3986bb3558f4a3ec7b69ea79871f6" kindref="member">MPI_GROUP_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Group_free(&amp;<ref refid="classamrex_1_1ParallelContext_1_1Frame_1a2cb41a80f7a3c545e1e537bf84acbbc9" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a4ac441a72d5f7d8e4d98ee63a05334fe" kindref="member">Frame::local_to_global_rank</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lrank)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a4ac441a72d5f7d8e4d98ee63a05334fe" kindref="member">local_to_global_rank</ref>(&amp;r,<sp/>&amp;lrank,<sp/>1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a4ac441a72d5f7d8e4d98ee63a05334fe" kindref="member">Frame::local_to_global_rank</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>global,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>local,<sp/>std::size_t<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frames.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Group_translate_ranks(<ref refid="namespaceamrex_1_1ParallelContext_1ab19f592bc08ecbeb28c478752d6602fd" kindref="member">GroupSub</ref>(),<sp/>n,<sp/>const_cast&lt;int*&gt;(local),<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a2ac214c9799843152abe583b8c714501" kindref="member">GroupAll</ref>(),<sp/>global);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>global[i]<sp/>=<sp/>local[i];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>global[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ab51f20c0cdf0ceeef52a84d239329d12" kindref="member">Frame::global_to_local_rank</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grank)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ab51f20c0cdf0ceeef52a84d239329d12" kindref="member">global_to_local_rank</ref>(&amp;r,<sp/>&amp;grank,<sp/>1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ab51f20c0cdf0ceeef52a84d239329d12" kindref="member">Frame::global_to_local_rank</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>local,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>global,<sp/>std::size_t<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frames.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Group_translate_ranks(<ref refid="namespaceamrex_1_1ParallelContext_1a2ac214c9799843152abe583b8c714501" kindref="member">GroupAll</ref>(),<sp/>n,<sp/>const_cast&lt;int*&gt;(global),<sp/><ref refid="namespaceamrex_1_1ParallelContext_1ab19f592bc08ecbeb28c478752d6602fd" kindref="member">GroupSub</ref>(),<sp/>local);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>local[i]<sp/>=<sp/>global[i];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>local[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1ac7e3ccd77b7a012c1c66b7c3bbdf6509" kindref="member">Frame::get_inc_mpi_tag</ref><sp/>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_tag<sp/>=<sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a0c03450ec8650e511181fb540b42e880" kindref="member">m_mpi_tag</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a0c03450ec8650e511181fb540b42e880" kindref="member">m_mpi_tag</ref><sp/>=<sp/>(<ref refid="classamrex_1_1ParallelContext_1_1Frame_1a0c03450ec8650e511181fb540b42e880" kindref="member">m_mpi_tag</ref><sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab1375009d4e5cd0730cada71e3f18c33" kindref="member">ParallelDescriptor::MaxTag</ref>())<sp/>?</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a0c03450ec8650e511181fb540b42e880" kindref="member">m_mpi_tag</ref><sp/>+<sp/>1<sp/>:<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a705e1be005fbada39a2ca69f6dae9b88" kindref="member">ParallelDescriptor::MinTag</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur_tag;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a1bc1579142503db5584556389166c169" kindref="member">Frame::set_ofs_name</ref><sp/>(std::string<sp/>filename)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a9137c45cc574cabfd0194ab8ed082116" kindref="member">m_out</ref>.reset();<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>changing<sp/>name,<sp/>close<sp/>previous<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a3ae9cdc97369e2f1381f095af24e497e" kindref="member">m_out_filename</ref><sp/>=<sp/>std::move(filename);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">std::ofstream<sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="classamrex_1_1ParallelContext_1_1Frame_1abf278a69530b55db1c0156e40db89e0c" kindref="member">Frame::get_ofs_ptr</ref><sp/>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1ParallelContext_1_1Frame_1a3ae9cdc97369e2f1381f095af24e497e" kindref="member">m_out_filename</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classamrex_1_1ParallelContext_1_1Frame_1a9137c45cc574cabfd0194ab8ed082116" kindref="member">m_out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a9137c45cc574cabfd0194ab8ed082116" kindref="member">m_out</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::ofstream(<ref refid="classamrex_1_1ParallelContext_1_1Frame_1a3ae9cdc97369e2f1381f095af24e497e" kindref="member">m_out_filename</ref>,<sp/><ref refid="AMReX__MLNodeLap__2d_8F90_1aa73b1bd51de1204686813e341958b9c7" kindref="member">std::ios_base::app</ref>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParallelContext_1_1Frame_1a9137c45cc574cabfd0194ab8ed082116" kindref="member">m_out</ref>.get();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp"/>
  </compounddef>
</doxygen>
