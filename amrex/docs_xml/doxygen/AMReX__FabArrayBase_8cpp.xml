<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__FabArrayBase_8cpp" kind="file" language="C++">
    <compoundname>AMReX_FabArrayBase.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__Geometry_8H" local="no">AMReX_Geometry.H</includes>
    <includes refid="AMReX__FArrayBox_8H" local="no">AMReX_FArrayBox.H</includes>
    <includes refid="AMReX__BArena_8H" local="no">AMReX_BArena.H</includes>
    <includes refid="AMReX__CArena_8H" local="no">AMReX_CArena.H</includes>
    <incdepgraph>
      <node id="16691">
        <label>list</label>
      </node>
      <node id="16607">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX_FabArrayBase.cpp"/>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16609" relation="include">
        </childnode>
        <childnode refid="16690" relation="include">
        </childnode>
        <childnode refid="16670" relation="include">
        </childnode>
        <childnode refid="16692" relation="include">
        </childnode>
        <childnode refid="16697" relation="include">
        </childnode>
        <childnode refid="16699" relation="include">
        </childnode>
        <childnode refid="16700" relation="include">
        </childnode>
      </node>
      <node id="16651">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16652" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16618" relation="include">
        </childnode>
      </node>
      <node id="16663">
        <label>iomanip</label>
      </node>
      <node id="16635">
        <label>functional</label>
      </node>
      <node id="16611">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16615" relation="include">
        </childnode>
        <childnode refid="16616" relation="include">
        </childnode>
        <childnode refid="16643" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
      </node>
      <node id="16704">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
      </node>
      <node id="16622">
        <label>limits</label>
      </node>
      <node id="16658">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
      </node>
      <node id="16688">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="16660" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16687" relation="include">
        </childnode>
      </node>
      <node id="16644">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16645" relation="include">
        </childnode>
        <childnode refid="16646" relation="include">
        </childnode>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
        <childnode refid="16616" relation="include">
        </childnode>
        <childnode refid="16647" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16648" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
      </node>
      <node id="16681">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16648" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16621" relation="include">
        </childnode>
      </node>
      <node id="16649">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
      </node>
      <node id="16609">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16611" relation="include">
        </childnode>
        <childnode refid="16649" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
        <childnode refid="16661" relation="include">
        </childnode>
        <childnode refid="16665" relation="include">
        </childnode>
        <childnode refid="16662" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
        <childnode refid="16667" relation="include">
        </childnode>
      </node>
      <node id="16619">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16621" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16623" relation="include">
        </childnode>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16642" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16632" relation="include">
        </childnode>
      </node>
      <node id="16631">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16633" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16635" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16630" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
      </node>
      <node id="16705">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="16680">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="16669">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="16670" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
      </node>
      <node id="16641">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
      </node>
      <node id="16662">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="16629" relation="include">
        </childnode>
        <childnode refid="16652" relation="include">
        </childnode>
        <childnode refid="16663" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16651" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
      </node>
      <node id="16621">
        <label>cmath</label>
      </node>
      <node id="16696">
        <label>cassert</label>
      </node>
      <node id="16634">
        <label>stdexcept</label>
      </node>
      <node id="16660">
        <label>numeric</label>
      </node>
      <node id="16643">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
        <childnode refid="16616" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
      </node>
      <node id="16698">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="16621" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16623" relation="include">
        </childnode>
        <childnode refid="16626" relation="include">
        </childnode>
        <childnode refid="16664" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16643" relation="include">
        </childnode>
        <childnode refid="16699" relation="include">
        </childnode>
        <childnode refid="16700" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16658" relation="include">
        </childnode>
        <childnode refid="16704" relation="include">
        </childnode>
        <childnode refid="16705" relation="include">
        </childnode>
        <childnode refid="16670" relation="include">
        </childnode>
        <childnode refid="16667" relation="include">
        </childnode>
      </node>
      <node id="16610">
        <label>string</label>
      </node>
      <node id="16687">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16662" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
      </node>
      <node id="16678">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="16644" relation="include">
        </childnode>
      </node>
      <node id="16614">
        <label>map</label>
      </node>
      <node id="16703">
        <label>unordered_set</label>
      </node>
      <node id="16652">
        <label>fstream</label>
      </node>
      <node id="16692">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16693" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
        <childnode refid="16694" relation="include">
        </childnode>
        <childnode refid="16665" relation="include">
        </childnode>
      </node>
      <node id="16646">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="16639" relation="include">
        </childnode>
      </node>
      <node id="16694">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16626" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16695" relation="include">
        </childnode>
      </node>
      <node id="16625">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="16626" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16628" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16629" relation="include">
        </childnode>
        <childnode refid="16630" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
      </node>
      <node id="16686">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16670" relation="include">
        </childnode>
      </node>
      <node id="16624">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="16661">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
        <childnode refid="16662" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16664" relation="include">
        </childnode>
      </node>
      <node id="16640">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="16668">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16669" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16679" relation="include">
        </childnode>
        <childnode refid="16680" relation="include">
        </childnode>
      </node>
      <node id="16672">
        <label>sys/types.h</label>
      </node>
      <node id="16665">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="16619" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
      </node>
      <node id="16659">
        <label>typeinfo</label>
      </node>
      <node id="16630">
        <label>cstdio</label>
      </node>
      <node id="16676">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="16664" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
      </node>
      <node id="16637">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
      </node>
      <node id="16653">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="16654" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16628" relation="include">
        </childnode>
        <childnode refid="16629" relation="include">
        </childnode>
        <childnode refid="16630" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16655" relation="include">
        </childnode>
        <childnode refid="16656" relation="include">
        </childnode>
        <childnode refid="16657" relation="include">
        </childnode>
      </node>
      <node id="16673">
        <label>unistd.h</label>
      </node>
      <node id="16654">
        <label>stack</label>
      </node>
      <node id="16636">
        <label>vector</label>
      </node>
      <node id="16706">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16662" relation="include">
        </childnode>
        <childnode refid="16705" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
      </node>
      <node id="16638">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="16631" relation="include">
        </childnode>
      </node>
      <node id="16632">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="16628">
        <label>utility</label>
      </node>
      <node id="16626">
        <label>array</label>
      </node>
      <node id="16697">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16698" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16706" relation="include">
        </childnode>
        <childnode refid="16621" relation="include">
        </childnode>
      </node>
      <node id="16629">
        <label>sstream</label>
      </node>
      <node id="16633">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="16634" relation="include">
        </childnode>
      </node>
      <node id="16645">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16642" relation="include">
        </childnode>
      </node>
      <node id="16675">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16669" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
      </node>
      <node id="16650">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16651" relation="include">
        </childnode>
        <childnode refid="16653" relation="include">
        </childnode>
        <childnode refid="16658" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16659" relation="include">
        </childnode>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16635" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16660" relation="include">
        </childnode>
      </node>
      <node id="16670">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16671" relation="include">
        </childnode>
        <childnode refid="16664" relation="include">
        </childnode>
        <childnode refid="16672" relation="include">
        </childnode>
        <childnode refid="16673" relation="include">
        </childnode>
        <childnode refid="16674" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16611" relation="include">
        </childnode>
        <childnode refid="16649" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
      </node>
      <node id="16666">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
      </node>
      <node id="16647">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16632" relation="include">
        </childnode>
      </node>
      <node id="16642">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
      </node>
      <node id="16674">
        <label>sys/wait.h</label>
      </node>
      <node id="16617">
        <label>iosfwd</label>
      </node>
      <node id="16620">
        <label>cstdlib</label>
      </node>
      <node id="16657">
        <label>cfenv</label>
      </node>
      <node id="16612">
        <label>iostream</label>
      </node>
      <node id="16616">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
      </node>
      <node id="16648">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="16619" relation="include">
        </childnode>
      </node>
      <node id="16613">
        <label>cstddef</label>
      </node>
      <node id="16615">
        <label>unordered_map</label>
      </node>
      <node id="16667">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16668" relation="include">
        </childnode>
        <childnode refid="16669" relation="include">
        </childnode>
        <childnode refid="16681" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16682" relation="include">
        </childnode>
        <childnode refid="16684" relation="include">
        </childnode>
        <childnode refid="16685" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16686" relation="include">
        </childnode>
        <childnode refid="16687" relation="include">
        </childnode>
        <childnode refid="16688" relation="include">
        </childnode>
        <childnode refid="16689" relation="include">
        </childnode>
      </node>
      <node id="16623">
        <label>climits</label>
      </node>
      <node id="16689">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="16702">
        <label>mutex</label>
      </node>
      <node id="16671">
        <label>chrono</label>
      </node>
      <node id="16679">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="16656">
        <label>csignal</label>
      </node>
      <node id="16700">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16701" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16702" relation="include">
        </childnode>
        <childnode refid="16703" relation="include">
        </childnode>
        <childnode refid="16635" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
      </node>
      <node id="16664">
        <label>type_traits</label>
      </node>
      <node id="16701">
        <label>set</label>
      </node>
      <node id="16699">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="16666" relation="include">
        </childnode>
      </node>
      <node id="16618">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="16684">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="16666" relation="include">
        </childnode>
      </node>
      <node id="16690">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="16654" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16691" relation="include">
        </childnode>
        <childnode refid="16626" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
      </node>
      <node id="16608">
        <label>algorithm</label>
      </node>
      <node id="16677">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16626" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16670" relation="include">
        </childnode>
        <childnode refid="16669" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
      </node>
      <node id="16655">
        <label>execinfo.h</label>
      </node>
      <node id="16683">
        <label>cstring</label>
      </node>
      <node id="16695">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16683" relation="include">
        </childnode>
        <childnode refid="16612" relation="include">
        </childnode>
        <childnode refid="16621" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16696" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
      </node>
      <node id="16693">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
      </node>
      <node id="16627">
        <label>memory</label>
      </node>
      <node id="16682">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16683" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
      </node>
      <node id="16685">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
        <childnode refid="16620" relation="include">
        </childnode>
      </node>
      <node id="16639">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="16640" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabArrayBase_8H" kindref="compound">AMReX_FabArrayBase.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Geometry_8H" kindref="compound">AMReX_Geometry.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FArrayBox_8H" kindref="compound">AMReX_FArrayBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BArena_8H" kindref="compound">AMReX_BArena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CArena_8H" kindref="compound">AMReX_CArena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MemProfiler_8H" kindref="compound">AMReX_MemProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EB2_8H" kindref="compound">AMReX_EB2.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EBFabFactory_8H" kindref="compound">AMReX_EBFabFactory.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>values<sp/>in<sp/>Initialize()!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ae4f336f53eda93074deacddef4d22055" kindref="member">FabArrayBase::MaxComp</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_GPU)<sp/>&amp;&amp;<sp/>defined(AMREX_USE_GPU_PRAGMA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AMREX_SPACEDIM<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>(1024000);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_SPACEDIM<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>(1024000,1024000);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>(1024000,1024000,1024000);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AMREX_SPACEDIM<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>(1024000);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_SPACEDIM<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>(1024000,1024000);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>(1024000,8,8);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(1024000,<sp/>1024000,<sp/>1024000));</highlight></codeline>
<codeline lineno="52"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a31677ce1cdddcbc405f41bb1a4351d35" kindref="member">FabArrayBase::mfghostiter_tile_size</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(1024000,<sp/>1024000,<sp/>1024000));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(1024000,<sp/>8,<sp/>8));</highlight></codeline>
<codeline lineno="55"><highlight class="normal">IntVect<sp/><ref refid="classamrex_1_1FabArrayBase_1a31677ce1cdddcbc405f41bb1a4351d35" kindref="member">FabArrayBase::mfghostiter_tile_size</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(1024000,<sp/>8,<sp/>8));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1acefd7d2a27952d4bac78ac9befcda8eb" kindref="member">FabArrayBase::TACache</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a19a98e6afcf41af75c85278285c1e66b" kindref="member">FabArrayBase::m_TheTileArrayCache</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a0985ab08746761a6517115f000e0a8ac" kindref="member">FabArrayBase::FBCache</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">FabArrayBase::m_TheFBCache</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a68151f78c47e353f18a8077ce54afc30" kindref="member">FabArrayBase::CPCache</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">FabArrayBase::m_TheCPCache</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a68a25147d3410960af381727954394ba" kindref="member">FabArrayBase::FPinfoCache</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">FabArrayBase::m_TheFillPatchCache</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1ab93444c8298b6446b699b33cf6c9247b" kindref="member">FabArrayBase::CFinfoCache</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2ee44b09d17bdb0425ab128b7ebc3cc5" kindref="member">FabArrayBase::m_TheCrseFineCache</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">FabArrayBase::CacheStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">FabArrayBase::m_TAC_stats</ref>(</highlight><highlight class="stringliteral">&quot;TileArrayCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">FabArrayBase::CacheStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">FabArrayBase::m_FBC_stats</ref>(</highlight><highlight class="stringliteral">&quot;FBCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">FabArrayBase::CacheStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">FabArrayBase::m_CPC_stats</ref>(</highlight><highlight class="stringliteral">&quot;CopyCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">FabArrayBase::CacheStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">FabArrayBase::m_FPinfo_stats</ref>(</highlight><highlight class="stringliteral">&quot;FillPatchCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">FabArrayBase::CacheStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">FabArrayBase::m_CFinfo_stats</ref>(</highlight><highlight class="stringliteral">&quot;CrseFineCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">std::map&lt;FabArrayBase::BDKey,<sp/>int&gt;<sp/><ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">FabArrayBase::m_BD_count</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">FabArrayBase::FabArrayStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2678095b2d8ac82dac74b035a15d30f9" kindref="member">FabArrayBase::m_FA_stats</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">std::map&lt;std::string,FabArrayBase::meminfo&gt;<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">FabArrayBase::m_mem_usage</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a4674b38da90801075df354a3491a8d17" kindref="member">FabArrayBase::m_region_tag</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>Arena*<sp/>the_fa_arena<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a4581192d404c43071aaa653b2bbf28e3" kindref="member">FabArrayBase::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>values<sp/>here!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>FabArrayBase::MaxComp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ParmParse<sp/>pp(</highlight><highlight class="stringliteral">&quot;fabarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>tilesize(AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp.queryarr(</highlight><highlight class="stringliteral">&quot;mfiter_tile_size&quot;</highlight><highlight class="normal">,<sp/>tilesize,<sp/>0,<sp/>AMREX_SPACEDIM))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;AMREX_SPACEDIM;<sp/>i++)<sp/><ref refid="classamrex_1_1FabArrayBase_1a8635aa060ab92c84d2641b61e0584052" kindref="member">FabArrayBase::mfiter_tile_size</ref>[i]<sp/>=<sp/>tilesize[i];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp.queryarr(</highlight><highlight class="stringliteral">&quot;mfghostiter_tile_size&quot;</highlight><highlight class="normal">,<sp/>tilesize,<sp/>0,<sp/>AMREX_SPACEDIM))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;AMREX_SPACEDIM;<sp/>i++)<sp/><ref refid="classamrex_1_1FabArrayBase_1a31677ce1cdddcbc405f41bb1a4351d35" kindref="member">FabArrayBase::mfghostiter_tile_size</ref>[i]<sp/>=<sp/>tilesize[i];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp.queryarr(</highlight><highlight class="stringliteral">&quot;comm_tile_size&quot;</highlight><highlight class="normal">,<sp/>tilesize,<sp/>0,<sp/>AMREX_SPACEDIM))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;AMREX_SPACEDIM;<sp/>i++)<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>[i]<sp/>=<sp/>tilesize[i];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;maxcomp&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FabArrayBase::MaxComp);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1ae4f336f53eda93074deacddef4d22055" kindref="member">MaxComp</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ae4f336f53eda93074deacddef4d22055" kindref="member">MaxComp</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a3e62b2c32fa5036fc1bb1dff1d819de6" kindref="member">ParallelDescriptor::UseGpuAwareMpi</ref>())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the_fa_arena<sp/>=<sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the_fa_arena<sp/>=<sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref>(<ref refid="classamrex_1_1FabArrayBase_1ae281696e28cac4d5387cdb5660d9aa3d" kindref="member">FabArrayBase::Finalize</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a60a5588f410871ac0d6c15c495979ed0" kindref="member">MemProfiler::add</ref>(<ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a66050f0c470418cb4ab408bc117f3e63" kindref="member">name</ref>,<sp/>std::function&lt;MemProfiler::MemInfo()&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>([]<sp/>()<sp/>-&gt;<sp/>MemProfiler::MemInfo<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{m_TAC_stats.bytes,<sp/>m_TAC_stats.bytes_hwm};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a60a5588f410871ac0d6c15c495979ed0" kindref="member">MemProfiler::add</ref>(<ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a66050f0c470418cb4ab408bc117f3e63" kindref="member">name</ref>,<sp/>std::function&lt;MemProfiler::MemInfo()&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>([]<sp/>()<sp/>-&gt;<sp/>MemProfiler::MemInfo<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{m_FBC_stats.bytes,<sp/>m_FBC_stats.bytes_hwm};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a60a5588f410871ac0d6c15c495979ed0" kindref="member">MemProfiler::add</ref>(<ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a66050f0c470418cb4ab408bc117f3e63" kindref="member">name</ref>,<sp/>std::function&lt;MemProfiler::MemInfo()&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>([]<sp/>()<sp/>-&gt;<sp/>MemProfiler::MemInfo<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{m_CPC_stats.bytes,<sp/>m_CPC_stats.bytes_hwm};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a60a5588f410871ac0d6c15c495979ed0" kindref="member">MemProfiler::add</ref>(<ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a66050f0c470418cb4ab408bc117f3e63" kindref="member">name</ref>,<sp/>std::function&lt;MemProfiler::MemInfo()&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>([]<sp/>()<sp/>-&gt;<sp/>MemProfiler::MemInfo<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{m_FPinfo_stats.bytes,<sp/>m_FPinfo_stats.bytes_hwm};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MemProfiler_1a60a5588f410871ac0d6c15c495979ed0" kindref="member">MemProfiler::add</ref>(<ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a66050f0c470418cb4ab408bc117f3e63" kindref="member">name</ref>,<sp/>std::function&lt;MemProfiler::MemInfo()&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>([]<sp/>()<sp/>-&gt;<sp/>MemProfiler::MemInfo<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{m_CFinfo_stats.bytes,<sp/>m_CFinfo_stats.bytes_hwm};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">Arena*</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="namespaceamrex_1ac0bc81ab4fe0135fc65a2b5154ff25ab" kindref="member">The_FA_Arena</ref><sp/>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>the_fa_arena;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase::FabArrayBase</ref><sp/>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a9d0b50241fbebae6e3d53e301cf2b23a" kindref="member">FabArrayBase::~FabArrayBase</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a79b45950358798ae16a0dc928b8ee0ba" kindref="member">FabArrayBase::define</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxs,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvar,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngrow)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a79b45950358798ae16a0dc928b8ee0ba" kindref="member">define</ref>(bxs,<sp/>dm,<sp/>nvar,<sp/>IntVect(ngrow));</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a79b45950358798ae16a0dc928b8ee0ba" kindref="member">FabArrayBase::define</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxs,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvar,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngrow)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ngrow.allGE(<ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>()));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref>.<ref refid="classamrex_1_1BoxArray_1a011f9535b7bcab7cb5e43dace246b310" kindref="member">size</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>.clear();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ab4d5df57a6eaa1d785d131b059b43e18" kindref="member">ownership</ref>.clear();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aad48d978f6df9294ff3cbdb8978b8914" kindref="member">n_grow</ref><sp/>=<sp/>ngrow;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a4ff6141edd1ba1d1940c45b98a619b04" kindref="member">n_comp</ref><sp/>=<sp/>nvar;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref><sp/>=<sp/>bxs;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dm.ProcessorMap().size()<sp/>==<sp/>bxs.size());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1adcb92e864340876da67df2fc64d8bdd7" kindref="member">distributionMap</ref><sp/>=<sp/>dm;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref><sp/>=<sp/>distributionMap.getIndexArray();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ab4d5df57a6eaa1d785d131b059b43e18" kindref="member">ownership</ref><sp/>=<sp/>distributionMap.getOwnerShip();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a10399c20d1f9186d481354025e58f6dc" kindref="member">FabArrayBase::clear</ref><sp/>()</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref>.<ref refid="classamrex_1_1BoxArray_1afed0e52f6570fe4960ce4758f5558761" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>distributionMap<sp/>=<sp/>DistributionMapping();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>.clear();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ab4d5df57a6eaa1d785d131b059b43e18" kindref="member">ownership</ref>.clear();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref><sp/>=<sp/>BDKey();</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">Box</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1adce0fffa78b25dbbfa1f82701e579425" kindref="member">FabArrayBase::fabbox</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(<ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref>[K],<sp/><ref refid="classamrex_1_1FabArrayBase_1aad48d978f6df9294ff3cbdb8978b8914" kindref="member">n_grow</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a1f6dc68b468c213274abf8e9219b532a" kindref="member">FabArrayBase::bytesOfMapOfCopyComTagContainers</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">FabArrayBase::MapOfCopyComTagContainers</ref>&amp;<sp/>m)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">MapOfCopyComTagContainers</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MapOfCopyComTagContainers::const_iterator<sp/>it<sp/>=<sp/>m.begin();<sp/>it<sp/>!=<sp/>m.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(it-&gt;first)<sp/>+<sp/><ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(it-&gt;second)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespaceamrex_1a7f37efe5218c4a111e61fa4605f40595" kindref="member">amrex::gcc_map_node_extra_bytes</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CPC_1adaa49caf28b03fdc57f976dad0652434" kindref="member">FabArrayBase::CPC::bytes</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="223"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FabArrayBase::CPC);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_LocTags)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(*m_LocTags);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_SndTags)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="classamrex_1_1FabArrayBase_1a1f6dc68b468c213274abf8e9219b532a" kindref="member">FabArrayBase::bytesOfMapOfCopyComTagContainers</ref>(*m_SndTags);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_RcvTags)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="classamrex_1_1FabArrayBase_1a1f6dc68b468c213274abf8e9219b532a" kindref="member">FabArrayBase::bytesOfMapOfCopyComTagContainers</ref>(*m_RcvTags);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FB_1acb108759a2c55fbbef82e4d1291fda41" kindref="member">FabArrayBase::FB::bytes</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="240"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FabArrayBase::FB);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_LocTags)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(*m_LocTags);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_SndTags)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="classamrex_1_1FabArrayBase_1a1f6dc68b468c213274abf8e9219b532a" kindref="member">FabArrayBase::bytesOfMapOfCopyComTagContainers</ref>(*m_SndTags);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_RcvTags)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/><ref refid="classamrex_1_1FabArrayBase_1a1f6dc68b468c213274abf8e9219b532a" kindref="member">FabArrayBase::bytesOfMapOfCopyComTagContainers</ref>(*m_RcvTags);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1TileArray_1abbdb20e918fb0ae2b300aa830bcfc1f7" kindref="member">FabArrayBase::TileArray::bytes</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="257"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*this)<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(<ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(this-&gt;numLocalTiles)<sp/><sp/><sp/><sp/><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;numLocalTiles))</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(<ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(this-&gt;indexMap)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;indexMap))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(<ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(this-&gt;localIndexMap)<sp/><sp/><sp/><sp/><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;localIndexMap))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(<ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(this-&gt;localTileIndexMap)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;localTileIndexMap))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(<ref refid="namespaceamrex_1a003d372afe53e36bd0cc6c549c0d1e9b" kindref="member">amrex::bytesOf</ref>(this-&gt;tileArray)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;tileArray));</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stuff<sp/>used<sp/>for<sp/>copy()<sp/>caching.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CPC_1a40e6f166da5f2d045cdbe945f0b40878" kindref="member">FabArrayBase::CPC::CPC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>dstfa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>dstng,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>srcfa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>srcng,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Periodicity&amp;<sp/>period)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_srcbdk(srcfa.<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()),<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstbdk(dstfa.<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()),<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_srcng(srcng),<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstng(dstng),<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_period(period),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_srcba(srcfa.<ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>()),<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstba(dstfa.<ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>()),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_threadsafe_loc(false),<sp/>m_threadsafe_rcv(false),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags(0),<sp/>m_SndTags(0),<sp/>m_RcvTags(0),<sp/>m_nuse(0)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1FabArray_1a4b2db0304bc84a002692917c83bc1626" kindref="member">define</ref>(m_dstba,<sp/>dstfa.DistributionMap(),<sp/>dstfa.IndexArray(),<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_srcba,<sp/>srcfa.DistributionMap(),<sp/>srcfa.IndexArray());</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CPC_1a40e6f166da5f2d045cdbe945f0b40878" kindref="member">FabArrayBase::CPC::CPC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>dstba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dstdm,<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>dstidx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>dstng,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>srcba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>srcdm,<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>srcidx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>srcng,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Periodicity&amp;<sp/>period,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myproc)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_srcbdk(),<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstbdk(),<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_srcng(srcng),<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstng(dstng),<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_period(period),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_srcba(srcba),<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstba(dstba),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_threadsafe_loc(false),<sp/>m_threadsafe_rcv(false),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags(0),<sp/>m_SndTags(0),<sp/>m_RcvTags(0),<sp/>m_nuse(0)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1FabArray_1a4b2db0304bc84a002692917c83bc1626" kindref="member">define</ref>(dstba,<sp/>dstdm,<sp/>dstidx,<sp/>srcba,<sp/>srcdm,<sp/>srcidx,<sp/>myproc);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CPC_1a97655cd5ccd143f3ab9c2a154d4d4f2f" kindref="member">FabArrayBase::CPC::~CPC</ref><sp/>()</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_LocTags;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_SndTags;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_RcvTags;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CPC_1a8899d4aaf8c5e2d8677a9b09f90e206b" kindref="member">FabArrayBase::CPC::define</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba_dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm_dst,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>imap_dst,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba_src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm_src,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>imap_src,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">MyProc</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FabArrayBase::CPC::define()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ba_dst.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ba_src.size()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ba_dst.ixType()<sp/>==<sp/>ba_src.ixType());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>m_LocTags<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1aad1bcd5a45514f9dffbeaa327d3aa880" kindref="member">CopyComTag::CopyComTagsContainer</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>m_SndTags<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>m_RcvTags<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(imap_dst.empty()<sp/>&amp;&amp;<sp/>imap_src.empty()))<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlocal_src<sp/>=<sp/>imap_src.size();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>ng_src<sp/>=<sp/>m_srcng;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlocal_dst<sp/>=<sp/>imap_dst.size();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>ng_dst<sp/>=<sp/>m_dstng;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>m_period.shiftIntVect();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>send_tags<sp/>=<sp/>*m_SndTags;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlocal_src;<sp/>++i)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>k_src<sp/>=<sp/>imap_src[i];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx_src<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(ba_src[k_src],<sp/>ng_src);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;IntVect&gt;::const_iterator<sp/>pit=pshifts.begin();<sp/>pit!=pshifts.end();<sp/>++pit)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_dst.intersections(bx_src+(*pit),<sp/>isects,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ng_dst);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>M<sp/>=<sp/>isects.size();<sp/>j<sp/>&lt;<sp/>M;<sp/>++j)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_dst<sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].first;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].second;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_owner<sp/>=<sp/>dm_dst[k_dst];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0653e205c26f3961aa756292d5f8dbc4" kindref="member">ParallelDescriptor::sameTeam</ref>(dst_owner))<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy<sp/>will<sp/>be<sp/>dealt<sp/>with<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyProc<sp/>==<sp/>dm_src[k_src])<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tags[dst_owner].push_back(CopyComTag(bx,<sp/>bx-(*pit),<sp/>k_dst,<sp/>k_src));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>recv_tags<sp/>=<sp/>*m_RcvTags;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseFab&lt;int&gt;<sp/>localtouch(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>()),<sp/>remotetouch(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_OPENMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex__omp__module_1a88c4536a09e2cc9d9edff5cd040814db" kindref="member">omp_get_max_threads</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_USE_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a9854dea7eb2ee59093ed0bd80af9063e" kindref="member">ParallelDescriptor::TeamSize</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlocal_dst;<sp/>++i)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>k_dst<sp/>=<sp/>imap_dst[i];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx_dst<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(ba_dst[k_dst],<sp/>ng_dst);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.resize(bx_dst);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.setVal(0);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.resize(bx_dst);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.setVal(0);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;IntVect&gt;::const_iterator<sp/>pit=pshifts.begin();<sp/>pit!=pshifts.end();<sp/>++pit)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_src.intersections(bx_dst+(*pit),<sp/>isects,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ng_src);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>M<sp/>=<sp/>isects.size();<sp/>j<sp/>&lt;<sp/>M;<sp/>++j)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_src<sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].first;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].second<sp/>-<sp/>*pit;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_owner<sp/>=<sp/>dm_src[k_src];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0653e205c26f3961aa756292d5f8dbc4" kindref="member">ParallelDescriptor::sameTeam</ref>(src_owner,<sp/>MyProc))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList<sp/>tilelist(bx,<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_tile<sp/><sp/>=<sp/>tilelist.begin(),</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End_tile<sp/>=<sp/>tilelist.end();<sp/><sp/><sp/>it_tile<sp/>!=<sp/>End_tile;<sp/>++it_tile)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags-&gt;push_back(CopyComTag(*it_tile,<sp/>(*it_tile)+(*pit),<sp/>k_dst,<sp/>k_src));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.plus(1,<sp/>bx);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyProc<sp/>==<sp/>dm_dst[k_dst])<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_tags[src_owner].push_back(CopyComTag(bx,<sp/>bx+(*pit),<sp/>k_dst,<sp/>k_src));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.plus(1,<sp/>bx);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe<sp/>if<sp/>a<sp/>cell<sp/>is<sp/>touched<sp/>no<sp/>more<sp/>than<sp/>once<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>checking<sp/>thread<sp/>safety<sp/>if<sp/>it<sp/>is<sp/>safe<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/>m_threadsafe_loc<sp/>=<sp/>localtouch.max()<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/>m_threadsafe_rcv<sp/>=<sp/>remotetouch.max()<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipass<sp/>=<sp/>0;<sp/>ipass<sp/>&lt;<sp/>2;<sp/>++ipass)<sp/></highlight><highlight class="comment">//<sp/>pass<sp/>0:<sp/>send;<sp/>pass<sp/>1:<sp/>recv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref><sp/>&amp;<sp/>Tags<sp/>=<sp/>(ipass<sp/>==<sp/>0)<sp/>?<sp/>*m_SndTags<sp/>:<sp/>*m_RcvTags;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>Tags)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CopyComTag&gt;&amp;<sp/>cctv<sp/>=<sp/>kv.second;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>fix<sp/>the<sp/>order<sp/>so<sp/>that<sp/>the<sp/>send<sp/>and<sp/>recv<sp/>processes<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(cctv.begin(),<sp/>cctv.end());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CPC_1a40e6f166da5f2d045cdbe945f0b40878" kindref="member">FabArrayBase::CPC::CPC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>ng,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dstdm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>srcdm)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_srcbdk(),<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstbdk(),<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_srcng(ng),<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstng(ng),<sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_period(),</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_srcba(ba),<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstba(ba),</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_threadsafe_loc(true),<sp/>m_threadsafe_rcv(true),</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags(0),<sp/>m_SndTags(0),<sp/>m_RcvTags(0),<sp/>m_nuse(0)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ba.size()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>m_LocTags<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1aad1bcd5a45514f9dffbeaa327d3aa880" kindref="member">CopyComTag::CopyComTagsContainer</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>m_SndTags<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>m_RcvTags<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>N<sp/>=<sp/>ba.size();<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_owner<sp/>=<sp/>srcdm[i];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_owner<sp/>=<sp/>dstdm[i];</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_owner<sp/>==<sp/>myproc<sp/>||<sp/>dst_owner<sp/>==<sp/>myproc)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(ba[i],<sp/>ng);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList<sp/>tilelist(bx,<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_owner<sp/>==<sp/>myproc<sp/>&amp;&amp;<sp/>dst_owner<sp/>==<sp/>myproc)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tbx<sp/>:<sp/>tilelist)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags-&gt;push_back(CopyComTag(tbx,<sp/>tbx,<sp/>i,<sp/>i));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Tags<sp/>=<sp/>(src_owner<sp/>==<sp/>myproc)<sp/>?<sp/>(*m_SndTags)[dst_owner]<sp/>:<sp/>(*m_RcvTags)[src_owner];</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tags.push_back(CopyComTag(bx,<sp/>bx,<sp/>i,<sp/>i));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a937cce5d85fb91c1bddad5f9f3c0adc4" kindref="member">FabArrayBase::flushCPC</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_assertion)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="498"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(no_assertion<sp/>||<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CPCacheIter&gt;<sp/>others;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;CPCacheIter,CPCacheIter&gt;<sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.equal_range(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1ae1a0d2f95995d26b5afe7c866f760bd6" kindref="member">CPCacheIter</ref><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>srckey<sp/>=<sp/>it-&gt;second-&gt;m_srcbdk;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>dstkey<sp/>=<sp/>it-&gt;second-&gt;m_dstbdk;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>((srckey==dstkey<sp/>&amp;&amp;<sp/>srckey==<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>)<sp/>||<sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>==srckey)<sp/>||<sp/>(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>==dstkey));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srckey<sp/>!=<sp/>dstkey)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>otherkey<sp/>=<sp/>(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref><sp/>==<sp/>srckey)<sp/>?<sp/>dstkey<sp/>:<sp/>srckey;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;CPCacheIter,CPCacheIter&gt;<sp/>o_er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.equal_range(otherkey);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1ae1a0d2f95995d26b5afe7c866f760bd6" kindref="member">CPCacheIter</ref><sp/>oit<sp/>=<sp/>o_er_it.first;<sp/>oit<sp/>!=<sp/>o_er_it.second;<sp/>++oit)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second<sp/>==<sp/>oit-&gt;second)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>others.push_back(oit);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>-=<sp/>it-&gt;second-&gt;bytes();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.erase(er_it.first,<sp/>er_it.second);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;CPCacheIter&gt;::iterator<sp/>it<sp/>=<sp/>others.begin(),</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End<sp/>=<sp/>others.end();<sp/>it<sp/>!=<sp/>End;<sp/>++it)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.erase(*it);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a3212be804b64d0f051f907c75fbad3d6" kindref="member">FabArrayBase::flushCPCache</ref><sp/>()</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1ae1a0d2f95995d26b5afe7c866f760bd6" kindref="member">CPCacheIter</ref><sp/>it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first<sp/>==<sp/>it-&gt;second-&gt;m_srcbdk)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.clear();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArrayBase::CPC&amp;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a887fcf01f365f0cd92d32fceeba8ee3a" kindref="member">FabArrayBase::getCPC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>dstng,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>srcng,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Periodicity&amp;<sp/>period)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="558"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FabArrayBase::getCPC()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.getBDKey()<sp/>==<sp/>src.m_bdkey);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().<ref refid="classamrex_1_1FabArrayBase_1a682fdf86619f6028fea2805d9693ae22" kindref="member">ixType</ref>()<sp/>==<sp/>src.boxArray().<ref refid="classamrex_1_1IndexType_1a3ddfa522c3996c79af3aa5985c8af10a" kindref="member">ixType</ref>());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>srckey<sp/>=<sp/>src.getBDKey();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>dstkey<sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;CPCacheIter,CPCacheIter&gt;<sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.equal_range(dstkey);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1ae1a0d2f95995d26b5afe7c866f760bd6" kindref="member">CPCacheIter</ref><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;m_srcng<sp/><sp/>==<sp/>srcng<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstng<sp/><sp/>==<sp/>dstng<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_srcbdk<sp/>==<sp/>srckey<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstbdk<sp/>==<sp/>dstkey<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_period<sp/>==<sp/>period<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_srcba<sp/><sp/>==<sp/>src.boxArray()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstba<sp/><sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>())</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(it-&gt;second);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>build<sp/>a<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>CPC*<sp/>new_cpc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CPC(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dstng,<sp/>src,<sp/>srcng,<sp/>period);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>+=<sp/>new_cpc-&gt;bytes();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(<ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref>,<sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>new_cpc-&gt;m_nuse<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a83dcba41161d5a1672578ee871232dfa" kindref="member">recordBuild</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.insert(er_it.second,<sp/>CPCache::value_type(dstkey,new_cpc));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srckey<sp/>!=<sp/>dstkey)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aaa3d9b6c8292268b0472cc7c9895f10e" kindref="member">m_TheCPCache</ref>.insert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPCache::value_type(srckey,new_cpc));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*new_cpc;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>stuff<sp/>for<sp/>fill<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FB_1a83c1bd14a26930c23280b11356906fbb" kindref="member">FabArrayBase::FB::FB</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>fa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>nghost,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cross,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Periodicity&amp;<sp/>period,<sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enforce_periodicity_only)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_typ(fa.<ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().<ref refid="classamrex_1_1FabArrayBase_1a682fdf86619f6028fea2805d9693ae22" kindref="member">ixType</ref>()),<sp/>m_crse_ratio(fa.<ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().crseRatio()),</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ngrow(nghost),<sp/>m_cross(cross),</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_epo(enforce_periodicity_only),<sp/>m_period(period),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_threadsafe_loc(false),<sp/>m_threadsafe_rcv(false),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags(new<sp/>CopyComTag::<ref refid="classamrex_1_1FabArrayBase_1a1bb6a09ada00b5b7a900d8fecbf92e3c" kindref="member">CopyComTagsContainer</ref>),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_SndTags(new<sp/>CopyComTag::<ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">MapOfCopyComTagContainers</ref>),</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_RcvTags(new<sp/>CopyComTag::<ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">MapOfCopyComTagContainers</ref>),</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nuse(0)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FabArrayBase::FB::FB()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fa.IndexArray().empty())<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enforce_periodicity_only)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(m_cross==</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define_epo(fa);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define_fb(fa);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FB_1a782fbc8576a01acde04fd3e8c6686c4b" kindref="member">FabArrayBase::FB::define_fb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>fa)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyProc<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fa.boxArray();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fa.DistributionMap();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imap<sp/><sp/><sp/><sp/><sp/>=<sp/>fa.IndexArray();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>local<sp/>copy,<sp/>all<sp/>workers<sp/>in<sp/>the<sp/>same<sp/>team<sp/>will<sp/>have<sp/>the<sp/>identical<sp/>copy<sp/>of<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>they<sp/>can<sp/>share<sp/>work.<sp/><sp/>But<sp/>for<sp/>remote<sp/>communication,<sp/>they<sp/>are<sp/>all<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlocal<sp/>=<sp/>imap.size();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>ng<sp/>=<sp/>m_ngrow;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>m_period.shiftIntVect();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>send_tags<sp/>=<sp/>*m_SndTags;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlocal;<sp/>++i)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ksnd<sp/>=<sp/>imap[i];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>vbx<sp/>=<sp/>ba[ksnd];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pit=pshifts.cbegin();<sp/>pit!=pshifts.cend();<sp/>++pit)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.intersections(vbx+(*pit),<sp/>isects,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ng);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>M<sp/>=<sp/>isects.size();<sp/>j<sp/>&lt;<sp/>M;<sp/>++j)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>krcv<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].first;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].second;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_owner<sp/>=<sp/>dm[krcv];</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0653e205c26f3961aa756292d5f8dbc4" kindref="member">ParallelDescriptor::sameTeam</ref>(dst_owner))<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy<sp/>will<sp/>be<sp/>dealt<sp/>with<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyProc<sp/>==<sp/>dm[ksnd])<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList&amp;<sp/>bl<sp/>=<sp/><ref refid="namespaceamrex_1a7cb1edb123daa9e2146ae0db8e2ed910" kindref="member">amrex::boxDiff</ref>(bx,<sp/>ba[krcv]);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref><sp/>lit<sp/>=<sp/>bl.begin();<sp/>lit<sp/>!=<sp/>bl.end();<sp/>++lit)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tags[dst_owner].push_back(CopyComTag(*lit,<sp/>(*lit)-(*pit),<sp/>krcv,<sp/>ksnd));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>recv_tags<sp/>=<sp/>*m_RcvTags;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseFab&lt;int&gt;<sp/>localtouch(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>()),<sp/>remotetouch(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>());</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_OPENMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex__omp__module_1a88c4536a09e2cc9d9edff5cd040814db" kindref="member">omp_get_max_threads</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_USE_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a9854dea7eb2ee59093ed0bd80af9063e" kindref="member">ParallelDescriptor::TeamSize</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlocal;<sp/>++i)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>krcv<sp/>=<sp/>imap[i];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>vbx<sp/><sp/><sp/>=<sp/>ba[krcv];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bxrcv<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(vbx,<sp/>ng);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.resize(bxrcv);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.setVal(0);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.resize(bxrcv);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.setVal(0);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pit=pshifts.cbegin();<sp/>pit!=pshifts.cend();<sp/>++pit)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.intersections(bxrcv+(*pit),<sp/>isects);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>M<sp/>=<sp/>isects.size();<sp/>j<sp/>&lt;<sp/>M;<sp/>++j)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ksnd<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].first;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>dst_bx<sp/><sp/><sp/>=<sp/>isects[j].second<sp/>-<sp/>*pit;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_owner<sp/>=<sp/>dm[ksnd];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList&amp;<sp/>bl<sp/>=<sp/><ref refid="namespaceamrex_1a7cb1edb123daa9e2146ae0db8e2ed910" kindref="member">amrex::boxDiff</ref>(dst_bx,<sp/>vbx);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref><sp/>lit<sp/>=<sp/>bl.begin();<sp/>lit<sp/>!=<sp/>bl.end();<sp/>++lit)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>blbx<sp/>=<sp/>*lit;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0653e205c26f3961aa756292d5f8dbc4" kindref="member">ParallelDescriptor::sameTeam</ref>(src_owner))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList<sp/>tilelist(blbx,<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_tile<sp/><sp/>=<sp/>tilelist.begin(),</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End_tile<sp/>=<sp/>tilelist.end();<sp/><sp/><sp/>it_tile<sp/>!=<sp/>End_tile;<sp/>++it_tile)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags-&gt;push_back(CopyComTag(*it_tile,<sp/>(*it_tile)+(*pit),<sp/>krcv,<sp/>ksnd));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.plus(1,<sp/>blbx);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyProc<sp/>==<sp/>dm[krcv])<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_tags[src_owner].push_back(CopyComTag(blbx,<sp/>blbx+(*pit),<sp/>krcv,<sp/>ksnd));</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.plus(1,<sp/>blbx);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe<sp/>if<sp/>a<sp/>cell<sp/>is<sp/>touched<sp/>no<sp/>more<sp/>than<sp/>once<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>checking<sp/>thread<sp/>safety<sp/>if<sp/>it<sp/>is<sp/>safe<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/>m_threadsafe_loc<sp/>=<sp/>localtouch.max()<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/>m_threadsafe_rcv<sp/>=<sp/>remotetouch.max()<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipass<sp/>=<sp/>0;<sp/>ipass<sp/>&lt;<sp/>2;<sp/>++ipass)<sp/></highlight><highlight class="comment">//<sp/>pass<sp/>0:<sp/>send;<sp/>pass<sp/>1:<sp/>recv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref><sp/>&amp;<sp/>Tags<sp/>=<sp/>(ipass<sp/>==<sp/>0)<sp/>?<sp/>*m_SndTags<sp/>:<sp/>*m_RcvTags;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>to_be_deleted;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>Tags)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CopyComTag&gt;&amp;<sp/>cctv<sp/>=<sp/>kv.second;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>fix<sp/>the<sp/>order<sp/>so<sp/>that<sp/>the<sp/>send<sp/>and<sp/>recv<sp/>processes<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(cctv.begin(),<sp/>cctv.end());</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CopyComTag&gt;<sp/>cctv_tags_cross;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cctv_tags_cross.reserve(cctv.size());</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tag<sp/>:<sp/>cctv)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>tag.dbox;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>d2s<sp/>=<sp/>tag.sbox.smallEnd()<sp/>-<sp/>tag.dbox.smallEnd();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Box&gt;<sp/>boxes;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_cross)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>dstvbx<sp/>=<sp/>ba[tag.dstIndex];</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>dir++)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>lo<sp/>=<sp/>dstvbx;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo.setSmall(dir,<sp/>dstvbx.smallEnd(dir)<sp/>-<sp/>ng[dir]);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo.setBig<sp/><sp/>(dir,<sp/>dstvbx.smallEnd(dir)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo<sp/>&amp;=<sp/>bx;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lo.ok())<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes.push_back(lo);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>hi<sp/>=<sp/>dstvbx;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi.setSmall(dir,<sp/>dstvbx.bigEnd(dir)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi.setBig<sp/><sp/>(dir,<sp/>dstvbx.bigEnd(dir)<sp/>+<sp/>ng[dir]);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>&amp;=<sp/>bx;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hi.ok())<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes.push_back(hi);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes.push_back(bx);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!boxes.empty())<sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cross_box<sp/>:<sp/>boxes)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_cross)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cctv_tags_cross.push_back(CopyComTag(cross_box,<sp/>cross_box+d2s,<sp/></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag.dstIndex,<sp/>tag.srcIndex));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cctv_tags_cross.empty())<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cctv.swap(cctv_tags_cross);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key<sp/>:<sp/>to_be_deleted)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tags.erase(key);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FB_1a53df06970b8cf1cb353ec184bb5422ef" kindref="member">FabArrayBase::FB::define_epo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>fa)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyProc<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fa.boxArray();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fa.DistributionMap();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imap<sp/><sp/><sp/><sp/><sp/>=<sp/>fa.IndexArray();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>local<sp/>copy,<sp/>all<sp/>workers<sp/>in<sp/>the<sp/>same<sp/>team<sp/>will<sp/>have<sp/>the<sp/>identical<sp/>copy<sp/>of<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>they<sp/>can<sp/>share<sp/>work.<sp/><sp/>But<sp/>for<sp/>remote<sp/>communication,<sp/>they<sp/>are<sp/>all<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlocal<sp/>=<sp/>imap.size();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>ng<sp/>=<sp/>m_ngrow;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType&amp;<sp/>typ<sp/>=<sp/>ba.ixType();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;IntVect&gt;&amp;<sp/>pshifts<sp/>=<sp/>m_period.shiftIntVect();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>send_tags<sp/>=<sp/>*m_SndTags;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>pdomain<sp/>=<sp/>m_period.Domain();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>pdomain.convert(typ);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlocal;<sp/>++i)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ksnd<sp/>=<sp/>imap[i];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>bxsnd<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(ba[ksnd],ng);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>bxsnd<sp/>&amp;=<sp/>pdomain;<sp/></highlight><highlight class="comment">//<sp/>source<sp/>must<sp/>be<sp/>inside<sp/>the<sp/>periodic<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bxsnd.ok())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pit=pshifts.cbegin();<sp/>pit!=pshifts.cend();<sp/>++pit)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pit<sp/>!=<sp/><ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>())</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.intersections(bxsnd+(*pit),<sp/>isects,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ng);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>M<sp/>=<sp/>isects.size();<sp/>j<sp/>&lt;<sp/>M;<sp/>++j)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>krcv<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].first;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].second;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_owner<sp/>=<sp/>dm[krcv];</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0653e205c26f3961aa756292d5f8dbc4" kindref="member">ParallelDescriptor::sameTeam</ref>(dst_owner))<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy<sp/>will<sp/>be<sp/>dealt<sp/>with<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyProc<sp/>==<sp/>dm[ksnd])<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList&amp;<sp/>bl<sp/>=<sp/><ref refid="namespaceamrex_1a7cb1edb123daa9e2146ae0db8e2ed910" kindref="member">amrex::boxDiff</ref>(bx,<sp/>pdomain);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref><sp/>lit<sp/>=<sp/>bl.begin();<sp/>lit<sp/>!=<sp/>bl.end();<sp/>++lit)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_tags[dst_owner].push_back(CopyComTag(*lit,<sp/>(*lit)-(*pit),<sp/>krcv,<sp/>ksnd));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>recv_tags<sp/>=<sp/>*m_RcvTags;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseFab&lt;int&gt;<sp/>localtouch(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>()),<sp/>remotetouch(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>());</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_OPENMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex__omp__module_1a88c4536a09e2cc9d9edff5cd040814db" kindref="member">omp_get_max_threads</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_USE_GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a9854dea7eb2ee59093ed0bd80af9063e" kindref="member">ParallelDescriptor::TeamSize</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlocal;<sp/>++i)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>krcv<sp/>=<sp/>imap[i];</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>vbx<sp/><sp/><sp/>=<sp/>ba[krcv];</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bxrcv<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(vbx,<sp/>ng);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdomain.contains(bxrcv))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.resize(bxrcv);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.setVal(0);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.resize(bxrcv);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.setVal(0);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;IntVect&gt;::const_iterator<sp/>pit=pshifts.begin();<sp/>pit!=pshifts.end();<sp/>++pit)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pit<sp/>!=<sp/><ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>())</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.intersections(bxrcv+(*pit),<sp/>isects,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ng);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>M<sp/>=<sp/>isects.size();<sp/>j<sp/>&lt;<sp/>M;<sp/>++j)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ksnd<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>isects[j].first;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>dst_bx<sp/><sp/><sp/>=<sp/>isects[j].second<sp/>-<sp/>*pit;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_owner<sp/>=<sp/>dm[ksnd];</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList&amp;<sp/>bl<sp/>=<sp/><ref refid="namespaceamrex_1a7cb1edb123daa9e2146ae0db8e2ed910" kindref="member">amrex::boxDiff</ref>(dst_bx,<sp/>pdomain);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref><sp/>lit<sp/>=<sp/>bl.begin();<sp/>lit<sp/>!=<sp/>bl.end();<sp/>++lit)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>sbx<sp/>=<sp/>(*lit)<sp/>+<sp/>(*pit);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbx<sp/>&amp;=<sp/>pdomain;<sp/></highlight><highlight class="comment">//<sp/>source<sp/>must<sp/>be<sp/>inside<sp/>the<sp/>periodic<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sbx.ok())<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>dbx<sp/>=<sp/>sbx<sp/>-<sp/>(*pit);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0653e205c26f3961aa756292d5f8dbc4" kindref="member">ParallelDescriptor::sameTeam</ref>(src_owner))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList<sp/>tilelist(dbx,<sp/><ref refid="classamrex_1_1FabArrayBase_1aec4332affa6c055da41aab70b684a064" kindref="member">FabArrayBase::comm_tile_size</ref>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_tile<sp/><sp/>=<sp/>tilelist.begin(),</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End_tile<sp/>=<sp/>tilelist.end();<sp/><sp/><sp/>it_tile<sp/>!=<sp/>End_tile;<sp/>++it_tile)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LocTags-&gt;push_back(CopyComTag(*it_tile,<sp/>(*it_tile)+(*pit),<sp/>krcv,<sp/>ksnd));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localtouch.plus(1,<sp/>dbx);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyProc<sp/>==<sp/>dm[krcv])<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_tags[src_owner].push_back(CopyComTag(dbx,<sp/>sbx,<sp/>krcv,<sp/>ksnd));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotetouch.plus(1,<sp/>dbx);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_local)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe<sp/>if<sp/>a<sp/>cell<sp/>is<sp/>touched<sp/>no<sp/>more<sp/>than<sp/>once<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>checking<sp/>thread<sp/>safety<sp/>if<sp/>it<sp/>is<sp/>safe<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_local<sp/>=<sp/>m_threadsafe_loc<sp/>=<sp/>localtouch.max()<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_remote)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_remote<sp/>=<sp/>m_threadsafe_rcv<sp/>=<sp/>remotetouch.max()<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipass<sp/>=<sp/>0;<sp/>ipass<sp/>&lt;<sp/>2;<sp/>++ipass)<sp/></highlight><highlight class="comment">//<sp/>pass<sp/>0:<sp/>send;<sp/>pass<sp/>1:<sp/>recv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CopyComTag_1ac93e9be5fadb2a282072412f8801a271" kindref="member">CopyComTag::MapOfCopyComTagContainers</ref><sp/>&amp;<sp/>Tags<sp/>=<sp/>(ipass<sp/>==<sp/>0)<sp/>?<sp/>*m_SndTags<sp/>:<sp/>*m_RcvTags;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>Tags)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CopyComTag&gt;&amp;<sp/>cctv<sp/>=<sp/>kv.second;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>fix<sp/>the<sp/>order<sp/>so<sp/>that<sp/>the<sp/>send<sp/>and<sp/>recv<sp/>processes<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(cctv.begin(),<sp/>cctv.end());</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FB_1a3a5bf414a1fa823843b3c35d2ee5bbc9" kindref="member">FabArrayBase::FB::~FB</ref><sp/>()</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_LocTags;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_SndTags;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_RcvTags;</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a53cf0c60964630e381fd523a72fbf267" kindref="member">FabArrayBase::flushFB</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_assertion)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="997"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(no_assertion<sp/>||<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;FBCacheIter,FBCacheIter&gt;<sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.equal_range(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1aba788e1a081a9e668ba53d504e75a352" kindref="member">FBCacheIter</ref><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>-=<sp/>it-&gt;second-&gt;bytes();</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.erase(er_it.first,<sp/>er_it.second);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1afafdcf4e581478be608bb916274857d5" kindref="member">FabArrayBase::flushFBCache</ref><sp/>()</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1aba788e1a081a9e668ba53d504e75a352" kindref="member">FBCacheIter</ref><sp/>it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.clear();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArrayBase::FB&amp;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a5b4a0572662ad2d1a9cc30f3c6d8fd73" kindref="member">FabArrayBase::getFB</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>nghost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Periodicity&amp;<sp/>period,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cross,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enforce_periodicity_only)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1028"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FabArrayBase::getFB()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;FBCacheIter,FBCacheIter&gt;<sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.equal_range(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1aba788e1a081a9e668ba53d504e75a352" kindref="member">FBCacheIter</ref><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;m_typ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().<ref refid="classamrex_1_1FabArrayBase_1a682fdf86619f6028fea2805d9693ae22" kindref="member">ixType</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_crse_ratio<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().crseRatio()<sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_ngrow<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>nghost<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_cross<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>cross<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_epo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>enforce_periodicity_only<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_period<sp/><sp/><sp/><sp/><sp/>==<sp/>period<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(it-&gt;second);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>build<sp/>a<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>FB*<sp/>new_fb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FB(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>nghost,<sp/>cross,<sp/>period,<sp/>enforce_periodicity_only);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_PROFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>+=<sp/>new_fb-&gt;bytes();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(<ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref>,<sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>new_fb-&gt;m_nuse<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a83dcba41161d5a1672578ee871232dfa" kindref="member">recordBuild</ref>();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a9d064b2059eb4cdd082f41be30e0d496" kindref="member">m_TheFBCache</ref>.insert(er_it.second,<sp/>FBCache::value_type(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>,new_fb));</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*new_fb;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FPinfo_1a7d5547cfa295be7873e4c0ce9dfefc3f" kindref="member">FabArrayBase::FPinfo::FPinfo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>srcfa,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>dstfa,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstdomain,</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><sp/><sp/><sp/><sp/><sp/>dstng,</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxConverter&amp;<sp/>coarsener,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdomain,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EB2::IndexSpace*<sp/>index_space)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_srcbdk<sp/><sp/><sp/>(srcfa.<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()),</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstbdk<sp/><sp/><sp/>(dstfa.<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()),</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstdomain(dstdomain),</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dstng<sp/><sp/><sp/><sp/>(dstng),</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_coarsener(coarsener.clone()),</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nuse<sp/><sp/><sp/><sp/><sp/>(0)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FPinfo::FPinfo()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>srcba<sp/>=<sp/>srcfa.boxArray();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>dstba<sp/>=<sp/>dstfa.boxArray();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srcba.ixType()<sp/>==<sp/>dstba.ixType());</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType&amp;<sp/>boxtype<sp/>=<sp/>dstba.ixType();</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(boxtype<sp/>==<sp/>dstdomain.ixType());</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dstng.allLE(dstfa.nGrowVect()));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dstdm<sp/>=<sp/>dstfa.DistributionMap();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxList<sp/>bl(boxtype);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>iprocs;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>N<sp/>=<sp/>dstba.size();<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>bx<sp/>=<sp/>dstba[i];</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.grow(m_dstng);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>m_dstdomain;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BoxList<sp/>leftover<sp/>=<sp/>srcba.complementIn(bx);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ismybox<sp/>=<sp/>(dstdm[i]<sp/>==<sp/>myproc);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1BoxList_1a9ac637c8d0a5920984658586a6b56a18" kindref="member">BoxList::const_iterator</ref><sp/>bli<sp/>=<sp/>leftover.begin();<sp/>bli<sp/>!=<sp/>leftover.end();<sp/>++bli)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl.push_back(m_coarsener-&gt;doit(*bli));</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ismybox)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_boxes.push_back(*bli);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_idxs.push_back(i);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iprocs.push_back(dstdm[i]);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iprocs.empty())<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_crse_patch.define(bl);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_crse_patch.define(std::move(iprocs));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index_space)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact_crse_patch<sp/>=<sp/><ref refid="namespaceamrex_1ad3c5c0681fda33ffa62120cefe254379" kindref="member">makeEBFabFactory</ref>(index_space,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_space-&gt;getGeometry(cdomain),</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_crse_patch,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_crse_patch,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0},<sp/><ref refid="namespaceamrex_1a7de82761ed632e5ee0b9f912c856aebcaf17aaabc20bfe045075927934fed52d2" kindref="member">EBSupport::basic</ref>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact_crse_patch.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1abda821661019fb0a77eb3a9706dc7330" kindref="member">FArrayBoxFactory</ref>());</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FPinfo_1a189905997fd17cf4f8a1e19d7f6a714a" kindref="member">FabArrayBase::FPinfo::~FPinfo</ref><sp/>()</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_coarsener;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1FPinfo_1a6ed6631b099ca859cafbafb3779e5393" kindref="member">FabArrayBase::FPinfo::bytes</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1143"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FabArrayBase::FPinfo);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Box)<sp/>*<sp/>(ba_crse_patch.capacity()<sp/>+<sp/>dst_boxes.capacity());</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)<sp/>*<sp/>(dm_crse_patch.capacity()<sp/>+<sp/>dst_idxs.capacity());</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArrayBase::FPinfo&amp;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a4150aeaf73494b1649babafad05d1d21" kindref="member">FabArrayBase::TheFPinfo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>srcfa,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>dstfa,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstdomain,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><sp/><sp/><sp/><sp/><sp/>dstng,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxConverter&amp;<sp/>coarsener,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdomain,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EB2::IndexSpace*<sp/>index_space)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FabArrayBase::TheFPinfo()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>srckey<sp/>=<sp/>srcfa.getBDKey();</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>dstkey<sp/>=<sp/>dstfa.getBDKey();</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;FPinfoCacheIter,FPinfoCacheIter&gt;<sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.equal_range(dstkey);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1a3272dd508dcab2f679993ef1308a4278" kindref="member">FPinfoCacheIter</ref><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;m_srcbdk<sp/><sp/><sp/><sp/>==<sp/>srckey<sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstbdk<sp/><sp/><sp/><sp/>==<sp/>dstkey<sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstdomain<sp/>==<sp/>dstdomain<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstng<sp/><sp/><sp/><sp/><sp/>==<sp/>dstng<sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_dstdomain.ixType()<sp/>==<sp/>dstdomain.ixType()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_coarsener-&gt;doit(it-&gt;second-&gt;m_dstdomain)<sp/>==<sp/>coarsener.doit(dstdomain))</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(it-&gt;second);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>build<sp/>a<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>FPinfo*<sp/>new_fpc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FPinfo(srcfa,<sp/>dstfa,<sp/>dstdomain,<sp/>dstng,<sp/>coarsener,<sp/>cdomain,<sp/>index_space);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>+=<sp/>new_fpc-&gt;bytes();</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(<ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref>,<sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>new_fpc-&gt;m_nuse<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a83dcba41161d5a1672578ee871232dfa" kindref="member">recordBuild</ref>();</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.insert(er_it.second,<sp/>FPinfoCache::value_type(dstkey,new_fpc));</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srckey<sp/>!=<sp/>dstkey)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.insert(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FPinfoCache::value_type(srckey,new_fpc));</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*new_fpc;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1ae7aac9d7bfa41ac76f80543a6a8c1898" kindref="member">FabArrayBase::flushFPinfo</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_assertion)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(no_assertion<sp/>||<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;FPinfoCacheIter&gt;<sp/>others;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;FPinfoCacheIter,FPinfoCacheIter&gt;<sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.equal_range(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1a3272dd508dcab2f679993ef1308a4278" kindref="member">FPinfoCacheIter</ref><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>srckey<sp/>=<sp/>it-&gt;second-&gt;m_srcbdk;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>dstkey<sp/>=<sp/>it-&gt;second-&gt;m_dstbdk;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>((srckey==dstkey<sp/>&amp;&amp;<sp/>srckey==<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>)<sp/>||<sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>==srckey)<sp/>||<sp/>(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>==dstkey));</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srckey<sp/>!=<sp/>dstkey)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>otherkey<sp/>=<sp/>(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref><sp/>==<sp/>srckey)<sp/>?<sp/>dstkey<sp/>:<sp/>srckey;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;FPinfoCacheIter,FPinfoCacheIter&gt;<sp/>o_er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.equal_range(otherkey);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1a3272dd508dcab2f679993ef1308a4278" kindref="member">FPinfoCacheIter</ref><sp/>oit<sp/>=<sp/>o_er_it.first;<sp/>oit<sp/>!=<sp/>o_er_it.second;<sp/>++oit)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second<sp/>==<sp/>oit-&gt;second)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>others.push_back(oit);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>-=<sp/>it-&gt;second-&gt;bytes();</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.erase(er_it.first,<sp/>er_it.second);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;FPinfoCacheIter&gt;::iterator<sp/>it<sp/>=<sp/>others.begin(),</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End<sp/>=<sp/>others.end();<sp/>it<sp/>!=<sp/>End;<sp/>++it)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a85557ba47b4be7646013a3a7ae5ff1ae" kindref="member">m_TheFillPatchCache</ref>.erase(*it);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CFinfo_1a2ad23c41fccd032693997df69c0bce0d" kindref="member">FabArrayBase::CFinfo::CFinfo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>finefa,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/><sp/><sp/><sp/><sp/>finegm,</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><sp/><sp/><sp/><sp/><sp/>ng,</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_periodic,</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_physbndry)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_fine_bdk<sp/>(finefa.<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()),</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ng<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ng),</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_include_periodic(include_periodic),</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_include_physbndry(include_physbndry),</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nuse<sp/><sp/><sp/><sp/><sp/>(0)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;CFinfo::CFinfo()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fine_domain<sp/>=<sp/>Domain(finegm,<sp/>ng,<sp/>include_periodic,<sp/>include_physbndry);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>fba<sp/>=<sp/><ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(finefa.boxArray(),<sp/><ref refid="classamrex_1_1IndexType_1a9f800856dcfdcc8175c7797403f213da" kindref="member">IndexType::TheCellType</ref>());</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>fdm<sp/>=<sp/>finefa.DistributionMap();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxList<sp/>bl(fba.ixType());</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>iprocs;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>N<sp/>=<sp/>fba.size();<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>bx<sp/>=<sp/>fba[i];</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.grow(m_ng);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>m_fine_domain;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxList&amp;<sp/>noncovered<sp/>=<sp/>fba.complementIn(bx);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>b<sp/>:<sp/>noncovered)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bl.push_back(b);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iprocs.push_back(fdm[i]);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdm[i]<sp/>==<sp/>myproc)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fine_grid_idx.push_back(i);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iprocs.empty())</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_cfb.define(bl);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_cfb.define(std::move(iprocs));</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal">Box</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CFinfo_1a6145a3808144108357bbbedffdfbd34e" kindref="member">FabArrayBase::CFinfo::Domain</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>ng,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_periodic,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_physbndry)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(BL_NO_FORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>bx<sp/>=<sp/>geom.Domain();</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geom.isPeriodic(idim))<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(include_periodic)<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.<ref refid="classamrex_1_1Box_1ab6232053a39e1b010d0d9a1b269f53ff" kindref="member">grow</ref>(idim,<sp/>ng[idim]);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(include_physbndry)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.<ref refid="classamrex_1_1Box_1ab6232053a39e1b010d0d9a1b269f53ff" kindref="member">grow</ref>(idim,<sp/>ng[idim]);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bx;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Box();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><ref refid="structamrex_1_1FabArrayBase_1_1CFinfo_1a1ad1de7e23d0c28d572e9e1b76175142" kindref="member">FabArrayBase::CFinfo::bytes</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1314"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FabArrayBase::CFinfo);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Box)<sp/>*<sp/>ba_cfb.capacity();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)<sp/>*<sp/>(dm_cfb.capacity()<sp/>+<sp/>fine_grid_idx.capacity());</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArrayBase::CFinfo&amp;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1aaf2887a9352fecedc071410a48baea1c" kindref="member">FabArrayBase::TheCFinfo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1acc0d46f9c8551ec9c1c6d6658103db15" kindref="member">FabArrayBase</ref>&amp;<sp/>finefa,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/><sp/><sp/><sp/><sp/>finegm,</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/><sp/><sp/><sp/><sp/><sp/>ng,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_periodic,</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_physbndry)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;FabArrayBase::TheCFinfo()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BDKey&amp;<sp/>key<sp/>=<sp/>finefa.getBDKey();</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a2ee44b09d17bdb0425ab128b7ebc3cc5" kindref="member">m_TheCrseFineCache</ref>.equal_range(key);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;m_fine_bdk<sp/><sp/><sp/><sp/>==<sp/>key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_fine_domain<sp/>==<sp/><ref refid="structamrex_1_1FabArrayBase_1_1CFinfo_1a6145a3808144108357bbbedffdfbd34e" kindref="member">CFinfo::Domain</ref>(finegm,<sp/>ng,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_periodic,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_physbndry)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;m_ng<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>ng)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(it-&gt;second);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>build<sp/>a<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>CFinfo*<sp/>new_cfinfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CFinfo(finefa,<sp/>finegm,<sp/>ng,<sp/>include_periodic,<sp/>include_physbndry);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>+=<sp/>new_cfinfo-&gt;bytes();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(<ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref>,<sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>new_cfinfo-&gt;m_nuse<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a83dcba41161d5a1672578ee871232dfa" kindref="member">recordBuild</ref>();</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2ee44b09d17bdb0425ab128b7ebc3cc5" kindref="member">m_TheCrseFineCache</ref>.insert(er_it.second,<sp/>CFinfoCache::value_type(key,new_cfinfo));</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*new_cfinfo;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a9d3dbb0a351f570080f23f75febd836d" kindref="member">FabArrayBase::flushCFinfo</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_assertion)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(no_assertion<sp/>||<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>er_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a2ee44b09d17bdb0425ab128b7ebc3cc5" kindref="member">m_TheCrseFineCache</ref>.equal_range(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>er_it.first;<sp/>it<sp/>!=<sp/>er_it.second;<sp/>++it)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>-=<sp/>it-&gt;second-&gt;bytes();</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(it-&gt;second-&gt;m_nuse);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2ee44b09d17bdb0425ab128b7ebc3cc5" kindref="member">m_TheCrseFineCache</ref>.erase(er_it.first,<sp/>er_it.second);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1ae281696e28cac4d5387cdb5660d9aa3d" kindref="member">FabArrayBase::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1afafdcf4e581478be608bb916274857d5" kindref="member">FabArrayBase::flushFBCache</ref>();</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3212be804b64d0f051f907c75fbad3d6" kindref="member">FabArrayBase::flushCPCache</ref>();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ac5c3b09365bcaf3c92ec8d296da74ccc" kindref="member">FabArrayBase::flushTileArrayCache</ref>();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">amrex::system::verbose</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2678095b2d8ac82dac74b035a15d30f9" kindref="member">m_FA_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1FabArrayStats_1ac7a3b634768f8a95e0aa31ffcc826cee" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1af8307191fd4e0c163ca7d23b89bf02ec" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1af8307191fd4e0c163ca7d23b89bf02ec" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1af8307191fd4e0c163ca7d23b89bf02ec" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1af8307191fd4e0c163ca7d23b89bf02ec" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1af8307191fd4e0c163ca7d23b89bf02ec" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">amrex::system::verbose</ref><sp/>&gt;<sp/>10)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>will<sp/>lower<sp/>this<sp/>to<sp/>1<sp/>after<sp/>it&apos;s<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a56e425df3c8bb2e6aea3510d19646ceb" kindref="member">printMemUsage</ref>();</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a4674b38da90801075df354a3491a8d17" kindref="member">m_region_tag</ref>.clear();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref><sp/>=<sp/>CacheStats(</highlight><highlight class="stringliteral">&quot;TileArrayCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a3b56b89f624446bcdfbbf6800de73675" kindref="member">m_FBC_stats</ref><sp/>=<sp/>CacheStats(</highlight><highlight class="stringliteral">&quot;FBCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7300ef91cdc58de4230d68dee3691006" kindref="member">m_CPC_stats</ref><sp/>=<sp/>CacheStats(</highlight><highlight class="stringliteral">&quot;CopyCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a5766cde9fd9e095f4d8f9f1731eb9047" kindref="member">m_FPinfo_stats</ref><sp/>=<sp/>CacheStats(</highlight><highlight class="stringliteral">&quot;FillPatchCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7bc1878e44728621bf3f21e2ad7d87b5" kindref="member">m_CFinfo_stats</ref><sp/>=<sp/>CacheStats(</highlight><highlight class="stringliteral">&quot;CrseFineCache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">m_BD_count</ref>.clear();</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2678095b2d8ac82dac74b035a15d30f9" kindref="member">m_FA_stats</ref><sp/>=<sp/>FabArrayStats();</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>the_fa_arena<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArrayBase::TileArray*<sp/></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1ab8548585b1a018f9d0a85cd43a719fe8" kindref="member">FabArrayBase::getTileArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>tilesize)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1417"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>TileArray*<sp/>p;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical(gettilearray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>crse_ratio<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().<ref refid="classamrex_1_1BoxArray_1a4c29b9c027bf459bb2d368484e90bb76" kindref="member">crseRatio</ref>();</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;FabArrayBase::m_TheTileArrayCache[<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>][std::pair&lt;IntVect,IntVect&gt;(tilesize,crse_ratio)];</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;nuse<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a1abcd5df36dacaa8b31e6fcaaed30be3" kindref="member">buildTileArray</ref>(tilesize,<sp/>*p);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;nuse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a83dcba41161d5a1672578ee871232dfa" kindref="member">recordBuild</ref>();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>+=<sp/>p-&gt;bytes();</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(<ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a980e78201fb5e2da49f3f92b87bda68f" kindref="member">bytes_hwm</ref>,</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>master</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(p-&gt;nuse);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1a07a1075ba91654c00909193f65076bc1" kindref="member">recordUse</ref>();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a1abcd5df36dacaa8b31e6fcaaed30be3" kindref="member">FabArrayBase::buildTileArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>tileSize,<sp/>TileArray&amp;<sp/>ta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1452"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>store<sp/>Tiles<sp/>always<sp/>as<sp/>cell-centered<sp/>boxes,<sp/>even<sp/>if<sp/>the<sp/>boxarray<sp/>is<sp/>nodal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tileSize<sp/>==<sp/><ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>())</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1a6512ea611a6c04b5710334d9d9bfbb4e" kindref="member">isOwner</ref>(i))</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>[i];<sp/></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref>.<ref refid="classamrex_1_1BoxArray_1a8366f694b15adc33374df70cdd56d0b5" kindref="member">getCellCenteredBox</ref>(K);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.indexMap.push_back(K);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.localIndexMap.push_back(i);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.localTileIndexMap.push_back(0);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.numLocalTiles.push_back(1);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.tileArray.push_back(bx);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>local_idxs(N);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::iota(<ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">std::begin</ref>(local_idxs),<sp/><ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">std::end</ref>(local_idxs),<sp/>0);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BL_USE_TEAM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nworkers<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9854dea7eb2ee59093ed0bd80af9063e" kindref="member">ParallelDescriptor::TeamSize</ref>();</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nworkers<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reorder<sp/>it<sp/>so<sp/>that<sp/>each<sp/>worker<sp/>will<sp/>be<sp/>more<sp/>likely<sp/>to<sp/>work<sp/>on<sp/>their<sp/>own<sp/>fabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stable_sort(local_idxs.begin(),<sp/>local_idxs.end(),<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)<sp/></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>this-&gt;distributionMap[this-&gt;<ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>[i]]<sp/></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>this-&gt;distributionMap[this-&gt;<ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>[j]];<sp/>});</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;int&gt;::const_iterator<sp/>it<sp/>=<sp/>local_idxs.begin();<sp/>it<sp/>!=<sp/>local_idxs.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>*it;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>index<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a15c2b54df8386a9d38216410edce884c" kindref="member">indexArray</ref>[i];<sp/></highlight><highlight class="comment">//<sp/>global<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref>.<ref refid="classamrex_1_1BoxArray_1a8366f694b15adc33374df70cdd56d0b5" kindref="member">getCellCenteredBox</ref>(K);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>This<sp/>must<sp/>be<sp/>consistent<sp/>with<sp/>ParticleContainer::getTileIndex<sp/>function!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect<sp/>nt_in_fab,<sp/>tsize,<sp/>nleft;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntiles<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;AMREX_SPACEDIM;<sp/>d++)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(d);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nt_in_fab[d]<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(ncells/tileSize[d],<sp/>1);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsize<sp/><sp/><sp/><sp/>[d]<sp/>=<sp/>ncells/nt_in_fab[d];</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nleft<sp/><sp/><sp/><sp/>[d]<sp/>=<sp/>ncells<sp/>-<sp/>nt_in_fab[d]*tsize[d];</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntiles<sp/>*=<sp/>nt_in_fab[d];</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect<sp/><ref refid="namespaceamrex__eb2__2d__moudle_1aab81169d541116d5fa7dd5546ab66df4" kindref="member">small</ref>,<sp/>big,<sp/>ijk;<sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>the<sp/>initial<sp/>values<sp/>are<sp/>all<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ijk[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>ntiles;<sp/>++t)<sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.indexMap.push_back(K);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.localIndexMap.push_back(i);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.localTileIndexMap.push_back(t);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.numLocalTiles.push_back(ntiles);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;AMREX_SPACEDIM;<sp/>d++)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ijk[d]&lt;nt_in_fab[d]-1)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ijk[d]++;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ijk[d]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;AMREX_SPACEDIM;<sp/>d++)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ijk[d]<sp/>&lt;<sp/>nleft[d])<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small[d]<sp/>=<sp/>ijk[d]*(tsize[d]+1);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big[d]<sp/>=<sp/>small[d]<sp/>+<sp/>tsize[d];</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small[d]<sp/>=<sp/>ijk[d]*tsize[d]<sp/>+<sp/>nleft[d];</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big[d]<sp/>=<sp/>small[d]<sp/>+<sp/>tsize[d]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>tbx(small,<sp/>big,<sp/><ref refid="classamrex_1_1IndexType_1a9f800856dcfdcc8175c7797403f213da" kindref="member">IndexType::TheCellType</ref>());</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.shift(bx.smallEnd());</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.tileArray.push_back(tbx);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1aa5c5f9aa77f5d7c4c73fafea2dc0116e" kindref="member">FabArrayBase::flushTileArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>tileSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_assertion)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1545"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(no_assertion<sp/>||<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1acefd7d2a27952d4bac78ac9befcda8eb" kindref="member">TACache</ref>&amp;<sp/>tao<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a19a98e6afcf41af75c85278285c1e66b" kindref="member">m_TheTileArrayCache</ref>;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>TACache::iterator<sp/>tao_it<sp/>=<sp/>tao.find(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tao_it<sp/>!=<sp/>tao.end())<sp/></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tileSize<sp/>==<sp/><ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>())<sp/></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TAMap::const_iterator<sp/>tai_it<sp/>=<sp/>tao_it-&gt;second.begin();</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tai_it<sp/>!=<sp/>tao_it-&gt;second.end();<sp/>++tai_it)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>-=<sp/>tai_it-&gt;second.bytes();</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(tai_it-&gt;second.nuse);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tao.erase(tao_it);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a905802e4dcdc5377e09d455fc80f0400" kindref="member">TAMap</ref>&amp;<sp/>tai<sp/>=<sp/>tao_it-&gt;second;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntVect&amp;<sp/>crse_ratio<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>().<ref refid="classamrex_1_1BoxArray_1a4c29b9c027bf459bb2d368484e90bb76" kindref="member">crseRatio</ref>();</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TAMap::iterator<sp/>tai_it<sp/>=<sp/>tai.find(std::pair&lt;IntVect,IntVect&gt;(tileSize,crse_ratio));</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tai_it<sp/>!=<sp/>tai.end())<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>-=<sp/>tai_it-&gt;second.bytes();</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(tai_it-&gt;second.nuse);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tai.erase(tai_it);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1ac5c3b09365bcaf3c92ec8d296da74ccc" kindref="member">FabArrayBase::flushTileArrayCache</ref><sp/>()</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TACache::const_iterator<sp/>tao_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a19a98e6afcf41af75c85278285c1e66b" kindref="member">m_TheTileArrayCache</ref>.begin();</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>tao_it<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1a19a98e6afcf41af75c85278285c1e66b" kindref="member">m_TheTileArrayCache</ref>.end();<sp/>++tao_it)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TAMap::const_iterator<sp/>tai_it<sp/>=<sp/>tao_it-&gt;second.begin();</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tai_it<sp/>!=<sp/>tao_it-&gt;second.end();<sp/>++tai_it)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ad5b0a149bdeafb7efdf4d377e1b4e7f7" kindref="member">recordErase</ref>(tai_it-&gt;second.nuse);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a19a98e6afcf41af75c85278285c1e66b" kindref="member">m_TheTileArrayCache</ref>.clear();</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MEM_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a7ac2d31ebea84512f6379331df5c8d75" kindref="member">m_TAC_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1CacheStats_1ac3e292406516e42938e9542b7605eea6" kindref="member">bytes</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a8b95df9ab5980407e45865e8876791be" kindref="member">FabArrayBase::clearThisBD</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_assertion)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1FabArrayBase_1ae63b22ccabe6c5af01dd0779c60740c8" kindref="member">boxarray</ref>.<ref refid="classamrex_1_1BoxArray_1ae71159edaa4456e59699f01955144d97" kindref="member">empty</ref>()<sp/>||<sp/>no_assertion<sp/>||<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>==<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;BDKey,<sp/>int&gt;::iterator<sp/>cnt_it<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">m_BD_count</ref>.find(<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt_it<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">m_BD_count</ref>.end())<sp/></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(cnt_it-&gt;second);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt_it-&gt;second<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">m_BD_count</ref>.erase(cnt_it);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>is<sp/>the<sp/>last<sp/>one<sp/>built<sp/>with<sp/>these<sp/>BoxArray<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>DistributionMapping,<sp/>erase<sp/>it<sp/>from<sp/>caches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1aa5c5f9aa77f5d7c4c73fafea2dc0116e" kindref="member">flushTileArray</ref>(<ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>(),<sp/>no_assertion);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1ae7aac9d7bfa41ac76f80543a6a8c1898" kindref="member">flushFPinfo</ref>(no_assertion);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a9d3dbb0a351f570080f23f75febd836d" kindref="member">flushCFinfo</ref>(no_assertion);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a53cf0c60964630e381fd523a72fbf267" kindref="member">flushFB</ref>(no_assertion);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a937cce5d85fb91c1bddad5f9f3c0adc4" kindref="member">flushCPC</ref>(no_assertion);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a294641949d2f4dd2161ba42a6b10d570" kindref="member">FabArrayBase::addThisBD</ref><sp/>()</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref><sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>();</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>++(<ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">m_BD_count</ref>[<ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>]);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2678095b2d8ac82dac74b035a15d30f9" kindref="member">m_FA_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1FabArrayStats_1a79668291012755d981986b35942faa12" kindref="member">recordMaxNumBoxArrays</ref>(<ref refid="classamrex_1_1FabArrayBase_1a8b7b09c9194e173ed0b7df6ec34847ad" kindref="member">m_BD_count</ref>.size());</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a2678095b2d8ac82dac74b035a15d30f9" kindref="member">m_FA_stats</ref>.<ref refid="structamrex_1_1FabArrayBase_1_1FabArrayStats_1a6fc4a42952792e21c6af56f1b7d38799" kindref="member">recordMaxNumBAUse</ref>(cnt);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a3918d10004ca8f4494fd9e6099bdabc3" kindref="member">FabArrayBase::updateBDKey</ref><sp/>()</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1FabArrayBase_1aa0cb5039380dc0545d40ac5ac6589943" kindref="member">getBDKey</ref>()<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1a2865ec7ad6d6f09cf1a3a891b603144c" kindref="member">m_bdkey</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a8b95df9ab5980407e45865e8876791be" kindref="member">clearThisBD</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a294641949d2f4dd2161ba42a6b10d570" kindref="member">addThisBD</ref>();</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1ae87329fe7a046f188ea78e63047152b6" kindref="member">FabArrayBase::WaitForAsyncSends</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_snds,</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;MPI_Request&gt;&amp;<sp/>send_reqs,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;char*&gt;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_data,</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;MPI_Status&gt;&amp;<sp/><sp/>stats)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(N_snds<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.resize(N_snds);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(send_reqs.size()<sp/>==<sp/>N_snds);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(send_data.size()<sp/>==<sp/>N_snds);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab581b8dba6006dbb3457d925c4b0f244" kindref="member">ParallelDescriptor::Waitall</ref>(send_reqs,<sp/>stats);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*BL_USE_MPI*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal">FabArrayBase::CheckRcvStats(Vector&lt;MPI_Status&gt;&amp;<sp/>recv_stats,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>recv_size,</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1affc17fe964f9f670fb06e09d6134b4ff" kindref="member">MPI_Datatype</ref><sp/>datatype,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>recv_size.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recv_size[i]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Get_count(&amp;recv_stats[i],<sp/>datatype,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>recv_size[i])<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1acafd26c0f64d958aed9ee56043c4f10e" kindref="member">amrex::Verbose</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Proc.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1_1ParallelContext_1a5f6737315bff6905419103b17acf3d06" kindref="member">ParallelContext::MyProcSub</ref>()</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>received<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>count<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>counts<sp/>of<sp/>data<sp/>from<sp/>Proc.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>recv_stats[i].MPI_SOURCE</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>tag<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recv_stats[i].MPI_TAG</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>error<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recv_stats[i].MPI_ERROR</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>but<sp/>the<sp/>expected<sp/>counts<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recv_size[i]</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>tag<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tag<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><ref refid="namespaceamrex_1ab1b1f90152c1c5636d634b475056389e" kindref="member">operator&lt;&lt; </ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArrayBase::BDKey&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.m_ba_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.m_dm_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1addf663082b0bdfcedda41fc8bbca4d5f" kindref="member">FabArrayBase::updateMemUsage</ref><sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tag,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nbytes,<sp/>Arena<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*ar*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mi<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">m_mem_usage</ref>[tag];</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>mi.nbytes<sp/>+=<sp/>nbytes;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>mi.nbytes_hwm<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(mi.nbytes,<sp/>mi.nbytes_hwm);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a56e425df3c8bb2e6aea3510d19646ceb" kindref="member">FabArrayBase::printMemUsage</ref><sp/>()</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelContext_1af766eba670e3bba30b2b8db7f20e8885" kindref="member">ParallelContext::IOProcessorSub</ref>())</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MultiFab<sp/>Tag,<sp/>current<sp/>usage<sp/>and<sp/>hwm<sp/>in<sp/>bytes\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">m_mem_usage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>kv.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>kv.second.nbytes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>kv.second.nbytes_hwm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a81ec42351b1a6d214b67e0285322f802" kindref="member">FabArrayBase::queryMemUsage</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">m_mem_usage</ref>.find(t);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">m_mem_usage</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r-&gt;second.nbytes;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a3e30aecf380fdf1926564da7155a5bc5" kindref="member">FabArrayBase::queryMemUsageHWM</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">m_mem_usage</ref>.find(t);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/><ref refid="classamrex_1_1FabArrayBase_1aa70ee9b229ec1e56083fd9519a92a000" kindref="member">m_mem_usage</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r-&gt;second.nbytes_hwm;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a18cdf2cc3d52d7d4d7dbf8c24ce614ee" kindref="member">FabArrayBase::pushRegionTag</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>t)</highlight></codeline>
<codeline lineno="1745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a4674b38da90801075df354a3491a8d17" kindref="member">m_region_tag</ref>.emplace_back(t);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a18cdf2cc3d52d7d4d7dbf8c24ce614ee" kindref="member">FabArrayBase::pushRegionTag</ref><sp/>(std::string<sp/>t)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a4674b38da90801075df354a3491a8d17" kindref="member">m_region_tag</ref>.emplace_back(std::move(t));</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase_1a2de51872d78b63b8c99c30eac65f3ee3" kindref="member">FabArrayBase::popRegionTag</ref><sp/>()</highlight></codeline>
<codeline lineno="1757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArrayBase_1a4674b38da90801075df354a3491a8d17" kindref="member">m_region_tag</ref>.pop_back();</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp"/>
  </compounddef>
</doxygen>
