<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__PlotFileUtil_8cpp" kind="file" language="C++">
    <compoundname>AMReX_PlotFileUtil.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">iomanip</includes>
    <includes refid="AMReX__VisMF_8H" local="no">AMReX_VisMF.H</includes>
    <includes refid="AMReX__PlotFileUtil_8H" local="no">AMReX_PlotFileUtil.H</includes>
    <incdepgraph>
      <node id="33895">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33843" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
      </node>
      <node id="33868">
        <label>functional</label>
      </node>
      <node id="33844">
        <label>iomanip</label>
      </node>
      <node id="33888">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33890" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33891" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
      </node>
      <node id="33950">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
      </node>
      <node id="33857">
        <label>limits</label>
      </node>
      <node id="33902">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
      </node>
      <node id="33941">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="33904" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
      </node>
      <node id="33877">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33878" relation="include">
        </childnode>
        <childnode refid="33880" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33886" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33887" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
      </node>
      <node id="33930">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33927" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33887" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33883" relation="include">
        </childnode>
      </node>
      <node id="33851">
        <label>cstdint</label>
      </node>
      <node id="33920">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33888" relation="include">
        </childnode>
        <childnode refid="33907" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
        <childnode refid="33921" relation="include">
        </childnode>
        <childnode refid="33913" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
        <childnode refid="33922" relation="include">
        </childnode>
      </node>
      <node id="33907">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
      </node>
      <node id="33931">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
      </node>
      <node id="33842">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX_PlotFileUtil.cpp"/>
        <childnode refid="33843" relation="include">
        </childnode>
        <childnode refid="33844" relation="include">
        </childnode>
        <childnode refid="33845" relation="include">
        </childnode>
        <childnode refid="33955" relation="include">
        </childnode>
      </node>
      <node id="33881">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33883" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33884" relation="include">
        </childnode>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33879" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
      </node>
      <node id="33845">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33843" relation="include">
        </childnode>
        <childnode refid="33848" relation="include">
        </childnode>
        <childnode refid="33849" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33851" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33854" relation="include">
        </childnode>
        <childnode refid="33944" relation="include">
        </childnode>
        <childnode refid="33954" relation="include">
        </childnode>
      </node>
      <node id="33863">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33866" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
      </node>
      <node id="33905">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="33937">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="33924">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="33914" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
      </node>
      <node id="33876">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
      </node>
      <node id="33894">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="33873" relation="include">
        </childnode>
        <childnode refid="33843" relation="include">
        </childnode>
        <childnode refid="33844" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33895" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
      </node>
      <node id="33883">
        <label>cmath</label>
      </node>
      <node id="33912">
        <label>cassert</label>
      </node>
      <node id="33867">
        <label>stdexcept</label>
      </node>
      <node id="33904">
        <label>numeric</label>
      </node>
      <node id="33932">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33933" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33916" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33926" relation="include">
        </childnode>
        <childnode refid="33934" relation="include">
        </childnode>
        <childnode refid="33931" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
      </node>
      <node id="33891">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
      </node>
      <node id="33945">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="33883" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33884" relation="include">
        </childnode>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33916" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33935" relation="include">
        </childnode>
        <childnode refid="33891" relation="include">
        </childnode>
        <childnode refid="33946" relation="include">
        </childnode>
        <childnode refid="33947" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33902" relation="include">
        </childnode>
        <childnode refid="33950" relation="include">
        </childnode>
        <childnode refid="33905" relation="include">
        </childnode>
        <childnode refid="33914" relation="include">
        </childnode>
        <childnode refid="33951" relation="include">
        </childnode>
        <childnode refid="33922" relation="include">
        </childnode>
      </node>
      <node id="33847">
        <label>string</label>
      </node>
      <node id="33940">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
        <childnode refid="33927" relation="include">
        </childnode>
      </node>
      <node id="33935">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="33877" relation="include">
        </childnode>
      </node>
      <node id="33858">
        <label>map</label>
      </node>
      <node id="33956">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="33851" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33944" relation="include">
        </childnode>
        <childnode refid="33854" relation="include">
        </childnode>
        <childnode refid="33957" relation="include">
        </childnode>
        <childnode refid="33913" relation="include">
        </childnode>
      </node>
      <node id="33949">
        <label>unordered_set</label>
      </node>
      <node id="33953">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="33934">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="33850" relation="include">
        </childnode>
      </node>
      <node id="33952">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="33920" relation="include">
        </childnode>
        <childnode refid="33943" relation="include">
        </childnode>
      </node>
      <node id="33951">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="33922" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
      </node>
      <node id="33843">
        <label>fstream</label>
      </node>
      <node id="33908">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33909" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
        <childnode refid="33910" relation="include">
        </childnode>
        <childnode refid="33913" relation="include">
        </childnode>
      </node>
      <node id="33943">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
        <childnode refid="33920" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33944" relation="include">
        </childnode>
        <childnode refid="33910" relation="include">
        </childnode>
        <childnode refid="33922" relation="include">
        </childnode>
      </node>
      <node id="33880">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="33852" relation="include">
        </childnode>
      </node>
      <node id="33910">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33911" relation="include">
        </childnode>
      </node>
      <node id="33871">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33873" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
      </node>
      <node id="33929">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33930" relation="include">
        </childnode>
        <childnode refid="33931" relation="include">
        </childnode>
      </node>
      <node id="33875">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="33921">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33916" relation="include">
        </childnode>
      </node>
      <node id="33853">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="33923">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33924" relation="include">
        </childnode>
        <childnode refid="33925" relation="include">
        </childnode>
        <childnode refid="33927" relation="include">
        </childnode>
        <childnode refid="33928" relation="include">
        </childnode>
        <childnode refid="33929" relation="include">
        </childnode>
        <childnode refid="33932" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33935" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33926" relation="include">
        </childnode>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33936" relation="include">
        </childnode>
        <childnode refid="33937" relation="include">
        </childnode>
      </node>
      <node id="33917">
        <label>sys/types.h</label>
      </node>
      <node id="33913">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
      </node>
      <node id="33903">
        <label>typeinfo</label>
      </node>
      <node id="33869">
        <label>cstdio</label>
      </node>
      <node id="33926">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="33916" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
      </node>
      <node id="33874">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
      </node>
      <node id="33933">
        <label>tuple</label>
      </node>
      <node id="33849">
        <label>future</label>
      </node>
      <node id="33958">
        <label>AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33956" relation="include">
        </childnode>
        <childnode refid="33845" relation="include">
        </childnode>
      </node>
      <node id="33897">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="33898" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33873" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33899" relation="include">
        </childnode>
        <childnode refid="33900" relation="include">
        </childnode>
        <childnode refid="33901" relation="include">
        </childnode>
      </node>
      <node id="33918">
        <label>unistd.h</label>
      </node>
      <node id="33898">
        <label>stack</label>
      </node>
      <node id="33859">
        <label>vector</label>
      </node>
      <node id="33893">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33905" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
      </node>
      <node id="33862">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="33863" relation="include">
        </childnode>
      </node>
      <node id="33864">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="33850">
        <label>utility</label>
      </node>
      <node id="33872">
        <label>array</label>
      </node>
      <node id="33854">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33856" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33861" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33888" relation="include">
        </childnode>
        <childnode refid="33892" relation="include">
        </childnode>
        <childnode refid="33893" relation="include">
        </childnode>
        <childnode refid="33907" relation="include">
        </childnode>
        <childnode refid="33908" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
        <childnode refid="33914" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33902" relation="include">
        </childnode>
        <childnode refid="33913" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33920" relation="include">
        </childnode>
        <childnode refid="33943" relation="include">
        </childnode>
        <childnode refid="33905" relation="include">
        </childnode>
        <childnode refid="33926" relation="include">
        </childnode>
        <childnode refid="33952" relation="include">
        </childnode>
        <childnode refid="33945" relation="include">
        </childnode>
        <childnode refid="33922" relation="include">
        </childnode>
        <childnode refid="33953" relation="include">
        </childnode>
      </node>
      <node id="33944">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33945" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33893" relation="include">
        </childnode>
        <childnode refid="33883" relation="include">
        </childnode>
      </node>
      <node id="33873">
        <label>sstream</label>
      </node>
      <node id="33957">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="33854" relation="include">
        </childnode>
        <childnode refid="33952" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
      </node>
      <node id="33866">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="33867" relation="include">
        </childnode>
      </node>
      <node id="33878">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
        <childnode refid="33879" relation="include">
        </childnode>
      </node>
      <node id="33925">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33924" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33926" relation="include">
        </childnode>
      </node>
      <node id="33896">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33895" relation="include">
        </childnode>
        <childnode refid="33897" relation="include">
        </childnode>
        <childnode refid="33902" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33903" relation="include">
        </childnode>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33904" relation="include">
        </childnode>
      </node>
      <node id="33914">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33915" relation="include">
        </childnode>
        <childnode refid="33916" relation="include">
        </childnode>
        <childnode refid="33917" relation="include">
        </childnode>
        <childnode refid="33918" relation="include">
        </childnode>
        <childnode refid="33919" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33888" relation="include">
        </childnode>
        <childnode refid="33907" relation="include">
        </childnode>
        <childnode refid="33896" relation="include">
        </childnode>
      </node>
      <node id="33906">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
      </node>
      <node id="33886">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
      </node>
      <node id="33879">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
      </node>
      <node id="33919">
        <label>sys/wait.h</label>
      </node>
      <node id="33846">
        <label>iosfwd</label>
      </node>
      <node id="33882">
        <label>cstdlib</label>
      </node>
      <node id="33901">
        <label>cfenv</label>
      </node>
      <node id="33855">
        <label>iostream</label>
      </node>
      <node id="33885">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
      </node>
      <node id="33887">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="33881" relation="include">
        </childnode>
      </node>
      <node id="33889">
        <label>cstddef</label>
      </node>
      <node id="33890">
        <label>unordered_map</label>
      </node>
      <node id="33892">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33891" relation="include">
        </childnode>
      </node>
      <node id="33922">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33923" relation="include">
        </childnode>
        <childnode refid="33924" relation="include">
        </childnode>
        <childnode refid="33930" relation="include">
        </childnode>
        <childnode refid="33927" relation="include">
        </childnode>
        <childnode refid="33938" relation="include">
        </childnode>
        <childnode refid="33939" relation="include">
        </childnode>
        <childnode refid="33928" relation="include">
        </childnode>
        <childnode refid="33925" relation="include">
        </childnode>
        <childnode refid="33929" relation="include">
        </childnode>
        <childnode refid="33940" relation="include">
        </childnode>
        <childnode refid="33941" relation="include">
        </childnode>
        <childnode refid="33942" relation="include">
        </childnode>
      </node>
      <node id="33884">
        <label>climits</label>
      </node>
      <node id="33942">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="33948">
        <label>mutex</label>
      </node>
      <node id="33955">
        <label>AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33908" relation="include">
        </childnode>
        <childnode refid="33956" relation="include">
        </childnode>
        <childnode refid="33958" relation="include">
        </childnode>
      </node>
      <node id="33915">
        <label>chrono</label>
      </node>
      <node id="33936">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="33900">
        <label>csignal</label>
      </node>
      <node id="33848">
        <label>thread</label>
      </node>
      <node id="33947">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33861" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33948" relation="include">
        </childnode>
        <childnode refid="33949" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
      </node>
      <node id="33916">
        <label>type_traits</label>
      </node>
      <node id="33861">
        <label>set</label>
      </node>
      <node id="33946">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="33906" relation="include">
        </childnode>
      </node>
      <node id="33865">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="33954">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
      </node>
      <node id="33939">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="33906" relation="include">
        </childnode>
      </node>
      <node id="33860">
        <label>algorithm</label>
      </node>
      <node id="33927">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33914" relation="include">
        </childnode>
        <childnode refid="33924" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
      </node>
      <node id="33899">
        <label>execinfo.h</label>
      </node>
      <node id="33856">
        <label>cstring</label>
      </node>
      <node id="33911">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33856" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33883" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33912" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
      </node>
      <node id="33909">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
      </node>
      <node id="33870">
        <label>memory</label>
      </node>
      <node id="33938">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33856" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
        <childnode refid="33926" relation="include">
        </childnode>
        <childnode refid="33927" relation="include">
        </childnode>
      </node>
      <node id="33928">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33927" relation="include">
        </childnode>
        <childnode refid="33926" relation="include">
        </childnode>
        <childnode refid="33906" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
      </node>
      <node id="33852">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="33853" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__VisMF_8H" kindref="compound">AMReX_VisMF.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__PlotFileUtil_8H" kindref="compound">AMReX_PlotFileUtil.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EBFabFactory_8H" kindref="compound">AMReX_EBFabFactory.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">std::string<sp/><ref refid="namespaceamrex_1a6e1c541c50331b9a3c005b80b4503f85" kindref="member">LevelPath</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6e3a82e54e91d8c7543596b2c2476250" kindref="member">Concatenate</ref>(levelPrefix,<sp/>level,<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.,<sp/>Level_5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::string<sp/><ref refid="namespaceamrex_1ab4ba0c733501dc74a5d254dac0bfc47d" kindref="member">MultiFabHeaderPath</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6e1c541c50331b9a3c005b80b4503f85" kindref="member">LevelPath</ref>(level,<sp/>levelPrefix)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>mfPrefix;<sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.,<sp/>Level_4/Cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::string<sp/><ref refid="namespaceamrex_1a438b71d250fb65fd385716c745be94ad" kindref="member">LevelFullPath</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;plotfilename,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r(plotfilename);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>r.empty()<sp/>&amp;&amp;<sp/>r.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/><ref refid="namespaceamrex_1a6e1c541c50331b9a3c005b80b4503f85" kindref="member">LevelPath</ref>(level,<sp/>levelPrefix);<sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.,<sp/>plt00005/Level_5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">std::string<sp/><ref refid="namespaceamrex_1a81e8d2ba5c7abaf7b2ca9bd2f43d5fb1" kindref="member">MultiFabFileFullPrefix</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plotfilename,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r(plotfilename);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>r.empty()<sp/>&amp;&amp;<sp/>r.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>+=<sp/><ref refid="namespaceamrex_1ab4ba0c733501dc74a5d254dac0bfc47d" kindref="member">MultiFabHeaderPath</ref>(level,<sp/>levelPrefix,<sp/>mfPrefix);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">PreBuildDirectorHierarchy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;dirName,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;subDirPrefix,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSubDirs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>callBarrier)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="namespaceamrex_1a832f4ad883cbc470d76cde70a099e912" kindref="member">UtilCreateCleanDirectory</ref>(dirName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>dont<sp/>call<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>nSubDirs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fullpath<sp/>=<sp/><ref refid="namespaceamrex_1a438b71d250fb65fd385716c745be94ad" kindref="member">LevelFullPath</ref>(i,<sp/>dirName);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a832f4ad883cbc470d76cde70a099e912" kindref="member">UtilCreateCleanDirectory</ref>(fullpath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>dont<sp/>call<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(callBarrier)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a732a4be5017987f2d6edc0fcd2329301" kindref="member">ParallelDescriptor::Barrier</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="namespaceamrex_1aeaa559cd77a4c889c84b144f59a6e35c" kindref="member">WriteGenericPlotfileHeader</ref><sp/>(std::ostream<sp/>&amp;HeaderFile,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlevels,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;BoxArray&gt;<sp/>&amp;bArray,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;<sp/>&amp;varnames,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;<sp/>&amp;geom,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>time,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;<sp/>&amp;level_steps,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;IntVect&gt;<sp/>&amp;ref_ratio,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;versionName,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;WriteGenericPlotfileHeader()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>bArray.size());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>geom.size());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>ref_ratio.size()+1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>level_steps.size());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finest_level(nlevels<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>HeaderFile.precision(17);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>this<sp/>is<sp/>the<sp/>generic<sp/>plot<sp/>file<sp/>type<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>versionName<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>varnames.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivar<sp/>=<sp/>0;<sp/>ivar<sp/>&lt;<sp/>varnames.size();<sp/>++ivar)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>varnames[ivar]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>AMREX_SPACEDIM<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>time<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>finest_level<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>geom[0].ProbLo(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>geom[0].ProbHi(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>finest_level;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>ref_ratio[i][0]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>finest_level;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>geom[i].Domain()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>finest_level;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>level_steps[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>finest_level;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>geom[i].CellSize()[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>(int)<sp/>geom[0].Coord()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;=<sp/>finest_level;<sp/>++level)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bArray[level].size()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>level_steps[level]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bArray[level].size();<sp/>++i)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box<sp/>&amp;b(bArray[level][i]);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealBox<sp/>loc<sp/>=<sp/>RealBox(b,<sp/>geom[level].CellSize(),<sp/>geom[level].ProbLo());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/>loc.lo(n)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>loc.hi(n)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/><ref refid="namespaceamrex_1ab4ba0c733501dc74a5d254dac0bfc47d" kindref="member">MultiFabHeaderPath</ref>(level,<sp/>levelPrefix,<sp/>mfPrefix)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="namespaceamrex_1ab16f5968ad28ec7664abd985a11e9c20" kindref="member">WriteMultiLevelPlotfile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plotfilename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlevels,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;const<sp/>MultiFab*&gt;&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>varnames,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;&amp;<sp/>geom,<sp/>Real<sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>level_steps,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;IntVect&gt;&amp;<sp/>ref_ratio,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;versionName,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>extra_dirs)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;WriteMultiLevelPlotfile()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>mf.size());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>geom.size());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>ref_ratio.size()+1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>level_steps.size());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(mf[0]-&gt;nComp()<sp/>==<sp/>varnames.size());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finest_level<sp/>=<sp/>nlevels-1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>saveNFiles(VisMF::GetNOutFiles());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>VisMF::SetNOutFiles(std::max(1024,saveNFiles));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>callBarrier(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">PreBuildDirectorHierarchy</ref>(plotfilename,<sp/>levelPrefix,<sp/>nlevels,<sp/>callBarrier);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!extra_dirs.empty())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>extra_dirs)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>ed<sp/>=<sp/>plotfilename+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+d;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">amrex::PreBuildDirectorHierarchy</ref>(ed,<sp/>levelPrefix,<sp/>nlevels,<sp/>callBarrier);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a732a4be5017987f2d6edc0fcd2329301" kindref="member">ParallelDescriptor::Barrier</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1a0027a67a36ec8d1b6eca3e2377c9c050" kindref="member">VisMF::IO_Buffer</ref><sp/>io_buffer(<ref refid="classamrex_1_1VisMF_1a257a59151037552c3e665c3ea3a5786fac67ac04832d2bbe370aa12c6ca513e85" kindref="member">VisMF::IO_Buffer_Size</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>HeaderFileName(plotfilename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>HeaderFile;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile.rdbuf()-&gt;pubsetbuf(io_buffer.dataPtr(),<sp/>io_buffer.size());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile.open(HeaderFileName.c_str(),<sp/>std::ofstream::out<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream::trunc<sp/>|</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream::binary);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>HeaderFile.good())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">FileOpenFailed</ref>(HeaderFileName);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;BoxArray&gt;<sp/>boxArrays(nlevels);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level(0);<sp/>level<sp/>&lt;<sp/>boxArrays.size();<sp/>++level)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>boxArrays[level]<sp/>=<sp/>mf[level]-&gt;boxArray();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aeaa559cd77a4c889c84b144f59a6e35c" kindref="member">WriteGenericPlotfileHeader</ref>(HeaderFile,<sp/>nlevels,<sp/>boxArrays,<sp/>varnames,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom,<sp/>time,<sp/>level_steps,<sp/>ref_ratio,<sp/>versionName,<sp/>levelPrefix,<sp/>mfPrefix);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;=<sp/>finest_level;<sp/>++level)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab*<sp/>data;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MultiFab&gt;<sp/>mf_tmp;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mf[level]-&gt;nGrow()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf_tmp.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(mf[level]-&gt;boxArray(),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf[level]-&gt;DistributionMap(),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf[level]-&gt;nComp(),<sp/>0,<sp/>MFInfo(),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf[level]-&gt;Factory()));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(*mf_tmp,<sp/>*mf[level],<sp/>0,<sp/>0,<sp/>mf[level]-&gt;nComp(),<sp/>0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>mf_tmp.get();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>mf[level];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1a865aac1ae0e0fde40a0470d75eb44935" kindref="member">VisMF::Write</ref>(*data,<sp/><ref refid="namespaceamrex_1a81e8d2ba5c7abaf7b2ca9bd2f43d5fb1" kindref="member">MultiFabFileFullPrefix</ref>(level,<sp/>plotfilename,<sp/>levelPrefix,<sp/>mfPrefix));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>VisMF::SetNOutFiles(saveNFiles);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>write<sp/>a<sp/>plotfile<sp/>to<sp/>disk<sp/>given:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-plotfile<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-vector<sp/>of<sp/>MultiFabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-vector<sp/>of<sp/>Geometrys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>variable<sp/>names<sp/>are<sp/>written<sp/>as<sp/>&quot;Var0&quot;,<sp/>&quot;Var1&quot;,<sp/>etc.<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>refinement<sp/>ratio<sp/>is<sp/>computed<sp/>from<sp/>the<sp/>Geometry<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;time&quot;<sp/>and<sp/>&quot;level_steps&quot;<sp/>are<sp/>set<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a87ec6f46642e5c4b2b89b545500be320" kindref="member">WriteMLMF</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;plotfilename,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;const<sp/>MultiFab*&gt;&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;<sp/>&amp;geom)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlevs<sp/>=<sp/>mf.size();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>mf[0]-&gt;nComp();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variables<sp/>names<sp/>are<sp/>&quot;Var0&quot;,<sp/>&quot;Var1&quot;,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;std::string&gt;<sp/>varnames(ncomp);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;ncomp;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>varnames[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Var&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>refinement<sp/>ratio<sp/>by<sp/>looking<sp/>at<sp/>hi<sp/>coordinates<sp/>of<sp/>domain<sp/>at<sp/>each<sp/>level<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>geometry<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;IntVect&gt;<sp/>ref_ratio(nlevs-1);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlevs-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>(geom[i+1].Domain()).bigEnd(d)/(geom[i].Domain()).bigEnd(d);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_ratio[i][d]<sp/>=<sp/>rr;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>step_array<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>step_array(nlevs,0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>time<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>time<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ab16f5968ad28ec7664abd985a11e9c20" kindref="member">WriteMultiLevelPlotfile</ref>(plotfilename,<sp/>nlevs,<sp/>mf,<sp/>varnames,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom,<sp/>time,<sp/>step_array,<sp/>ref_ratio);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="namespaceamrex_1ace783f22796d80958dc5a14440a432fb" kindref="member">WriteMultiLevelPlotfileHeaders</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>plotfilename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlevels,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;const<sp/>MultiFab*&gt;<sp/>&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>varnames,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>geom,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;<sp/><sp/>&amp;<sp/>level_steps,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;IntVect&gt;<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>ref_ratio,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>versionName,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>levelPrefix,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>mfPrefix,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;<sp/>&amp;<sp/>extra_dirs)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;WriteMultiLevelPlotfile()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finest_level<sp/>=<sp/>nlevels-1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>callBarrier(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">PreBuildDirectorHierarchy</ref>(plotfilename,<sp/>levelPrefix,<sp/>nlevels,<sp/>callBarrier);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!extra_dirs.empty())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>extra_dirs)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>ed<sp/>=<sp/>plotfilename+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+d;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">amrex::PreBuildDirectorHierarchy</ref>(ed,<sp/>levelPrefix,<sp/>nlevels,<sp/>callBarrier);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a732a4be5017987f2d6edc0fcd2329301" kindref="member">ParallelDescriptor::Barrier</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1a0027a67a36ec8d1b6eca3e2377c9c050" kindref="member">VisMF::IO_Buffer</ref><sp/>io_buffer(<ref refid="classamrex_1_1VisMF_1a257a59151037552c3e665c3ea3a5786fac67ac04832d2bbe370aa12c6ca513e85" kindref="member">VisMF::IO_Buffer_Size</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>HeaderFileName(plotfilename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>HeaderFile;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile.rdbuf()-&gt;pubsetbuf(io_buffer.dataPtr(),<sp/>io_buffer.size());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile.open(HeaderFileName.c_str(),<sp/>std::ofstream::out<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream::trunc<sp/>|</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream::binary);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>HeaderFile.good())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">FileOpenFailed</ref>(HeaderFileName);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;BoxArray&gt;<sp/>boxArrays(nlevels);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level(0);<sp/>level<sp/>&lt;<sp/>boxArrays.size();<sp/>++level)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxArrays[level]<sp/>=<sp/>mf[level]-&gt;boxArray();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aeaa559cd77a4c889c84b144f59a6e35c" kindref="member">WriteGenericPlotfileHeader</ref>(HeaderFile,<sp/>nlevels,<sp/>boxArrays,<sp/>varnames,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom,<sp/>time,<sp/>level_steps,<sp/>ref_ratio,<sp/>versionName,<sp/>levelPrefix,<sp/>mfPrefix);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;=<sp/>finest_level;<sp/>++level)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab<sp/>*<sp/>data;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>mf[level];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1a8f08ad07cd586ef21006e86958609655" kindref="member">VisMF::WriteOnlyHeader</ref>(*data,<sp/><ref refid="namespaceamrex_1a81e8d2ba5c7abaf7b2ca9bd2f43d5fb1" kindref="member">MultiFabFileFullPrefix</ref>(level,<sp/>plotfilename,<sp/>levelPrefix,<sp/>mfPrefix));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="namespaceamrex_1aa5343920d9b5ee1307ca697274eca84a" kindref="member">WriteSingleLevelPlotfile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plotfilename,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>mf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>varnames,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom,<sp/>Real<sp/>time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level_step,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;versionName,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>extra_dirs)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;const<sp/>MultiFab*&gt;<sp/>mfarr(1,&amp;mf);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;Geometry&gt;<sp/>geomarr(1,geom);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>level_steps(1,level_step);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;IntVect&gt;<sp/>ref_ratio;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ab16f5968ad28ec7664abd985a11e9c20" kindref="member">WriteMultiLevelPlotfile</ref>(plotfilename,<sp/>1,<sp/>mfarr,<sp/>varnames,<sp/>geomarr,<sp/>time,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_steps,<sp/>ref_ratio,<sp/>versionName,<sp/>levelPrefix,<sp/>mfPrefix,<sp/>extra_dirs);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_EB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">EB_WriteSingleLevelPlotfile<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plotfilename,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>mf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>varnames,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom,<sp/>Real<sp/>time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level_step,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;versionName,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>extra_dirs)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;const<sp/>MultiFab*&gt;<sp/>mfarr(1,&amp;mf);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;Geometry&gt;<sp/>geomarr(1,geom);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>level_steps(1,level_step);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;IntVect&gt;<sp/>ref_ratio;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>EB_WriteMultiLevelPlotfile(plotfilename,<sp/>1,<sp/>mfarr,<sp/>varnames,<sp/>geomarr,<sp/>time,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_steps,<sp/>ref_ratio,<sp/>versionName,<sp/>levelPrefix,<sp/>mfPrefix,<sp/>extra_dirs);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">EB_WriteMultiLevelPlotfile<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>plotfilename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlevels,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;const<sp/>MultiFab*&gt;&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>varnames,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;&amp;<sp/>geom,<sp/>Real<sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>level_steps,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;IntVect&gt;&amp;<sp/>ref_ratio,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;versionName,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;levelPrefix,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;mfPrefix,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>extra_dirs)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;WriteMultiLevelPlotfile()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>mf.size());</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>geom.size());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>ref_ratio.size()+1);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nlevels<sp/>&lt;=<sp/>level_steps.size());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(mf[0]-&gt;nComp()<sp/>==<sp/>varnames.size());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(mf[0]-&gt;hasEBFabFactory(),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EB_WriteMultiLevelPlotfile:<sp/>does<sp/>not<sp/>have<sp/>EB<sp/>Factory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finest_level<sp/>=<sp/>nlevels-1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>saveNFiles(VisMF::GetNOutFiles());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>VisMF::SetNOutFiles(std::max(1024,saveNFiles));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>callBarrier(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">PreBuildDirectorHierarchy</ref>(plotfilename,<sp/>levelPrefix,<sp/>nlevels,<sp/>callBarrier);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!extra_dirs.empty())<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>:<sp/>extra_dirs)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>ed<sp/>=<sp/>plotfilename+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+d;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa099c9a81b678f94bc075120f85f0df2" kindref="member">amrex::PreBuildDirectorHierarchy</ref>(ed,<sp/>levelPrefix,<sp/>nlevels,<sp/>callBarrier);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a732a4be5017987f2d6edc0fcd2329301" kindref="member">ParallelDescriptor::Barrier</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1a0027a67a36ec8d1b6eca3e2377c9c050" kindref="member">VisMF::IO_Buffer</ref><sp/>io_buffer(<ref refid="classamrex_1_1VisMF_1a257a59151037552c3e665c3ea3a5786fac67ac04832d2bbe370aa12c6ca513e85" kindref="member">VisMF::IO_Buffer_Size</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>HeaderFileName(plotfilename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>HeaderFile;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile.rdbuf()-&gt;pubsetbuf(io_buffer.dataPtr(),<sp/>io_buffer.size());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile.open(HeaderFileName.c_str(),<sp/>std::ofstream::out<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream::trunc<sp/>|</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream::binary);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>HeaderFile.good())<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">FileOpenFailed</ref>(HeaderFileName);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;BoxArray&gt;<sp/>boxArrays(nlevels);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level(0);<sp/>level<sp/>&lt;<sp/>boxArrays.size();<sp/>++level)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxArrays[level]<sp/>=<sp/>mf[level]-&gt;boxArray();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;std::string&gt;<sp/>vn<sp/>=<sp/>varnames;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vn.push_back(</highlight><highlight class="stringliteral">&quot;vfrac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aeaa559cd77a4c889c84b144f59a6e35c" kindref="member">WriteGenericPlotfileHeader</ref>(HeaderFile,<sp/>nlevels,<sp/>boxArrays,<sp/>vn,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom,<sp/>time,<sp/>level_steps,<sp/>ref_ratio,<sp/>versionName,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelPrefix,<sp/>mfPrefix);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>0;<sp/>lev<sp/>&lt;<sp/>nlevels;<sp/>++lev)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeaderFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1.0e-6\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;=<sp/>finest_level;<sp/>++level)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>mf[level]-&gt;nComp();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab<sp/>mf_tmp(mf[level]-&gt;boxArray(),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf[level]-&gt;DistributionMap(),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc+1,<sp/>0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(mf_tmp,<sp/>*mf[level],<sp/>0,<sp/>0,<sp/>nc,<sp/>0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mf[level]-&gt;Factory());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(mf_tmp,<sp/>factory.getVolFrac(),<sp/>0,<sp/>nc,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1a865aac1ae0e0fde40a0470d75eb44935" kindref="member">VisMF::Write</ref>(mf_tmp,<sp/><ref refid="namespaceamrex_1a81e8d2ba5c7abaf7b2ca9bd2f43d5fb1" kindref="member">MultiFabFileFullPrefix</ref>(level,<sp/>plotfilename,<sp/>levelPrefix,<sp/>mfPrefix));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>VisMF::SetNOutFiles(saveNFiles);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp"/>
  </compounddef>
</doxygen>
