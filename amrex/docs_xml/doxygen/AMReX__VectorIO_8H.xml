<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__VectorIO_8H" kind="file" language="C++">
    <compoundname>AMReX_VectorIO.H</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="AMReX__FPC_8H" local="yes">AMReX_FPC.H</includes>
    <includes refid="AMReX__FabConv_8H" local="yes">AMReX_FabConv.H</includes>
    <includes refid="AMReX__IntConv_8H" local="yes">AMReX_IntConv.H</includes>
    <includedby refid="AMReX__VectorIO_8cpp" local="yes">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.cpp</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="48066">
        <label>functional</label>
      </node>
      <node id="48062">
        <label>float.h</label>
      </node>
      <node id="48078">
        <label>cstdint</label>
      </node>
      <node id="48050">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48052" relation="include">
        </childnode>
        <childnode refid="48053" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48066" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48067" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
      </node>
      <node id="48052">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="48048" relation="include">
        </childnode>
      </node>
      <node id="48075">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="48073" relation="include">
        </childnode>
        <childnode refid="48067" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
      </node>
      <node id="48064">
        <label>cmath</label>
      </node>
      <node id="48054">
        <label>cassert</label>
      </node>
      <node id="48057">
        <label>stdexcept</label>
      </node>
      <node id="48046">
        <label>string</label>
      </node>
      <node id="48042">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48047" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48049" relation="include">
        </childnode>
        <childnode refid="48050" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48072" relation="include">
        </childnode>
        <childnode refid="48074" relation="include">
        </childnode>
      </node>
      <node id="48071">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="48069">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="48061">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="48076">
        <label>AMReX_IntConv.H</label>
        <link refid="AMReX__IntConv_8H"/>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48077" relation="include">
        </childnode>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
      </node>
      <node id="48048">
        <label>cstdio</label>
      </node>
      <node id="48068">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
      </node>
      <node id="48067">
        <label>vector</label>
      </node>
      <node id="48070">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="48050" relation="include">
        </childnode>
      </node>
      <node id="48063">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
      </node>
      <node id="48051">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="48045">
        <label>utility</label>
      </node>
      <node id="48043">
        <label>array</label>
      </node>
      <node id="48047">
        <label>sstream</label>
      </node>
      <node id="48056">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="48057" relation="include">
        </childnode>
      </node>
      <node id="48072">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="48073" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48074" relation="include">
        </childnode>
      </node>
      <node id="48058">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="48059" relation="include">
        </childnode>
      </node>
      <node id="48074">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
      </node>
      <node id="48041">
        <label>iosfwd</label>
      </node>
      <node id="48065">
        <label>cstdlib</label>
      </node>
      <node id="48038">
        <label>iostream</label>
      </node>
      <node id="48049">
        <label>type_traits</label>
      </node>
      <node id="48055">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="48040">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="48041" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48075" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
      </node>
      <node id="48073">
        <label>algorithm</label>
      </node>
      <node id="48053">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="48054" relation="include">
        </childnode>
      </node>
      <node id="48077">
        <label>cstring</label>
      </node>
      <node id="48039">
        <label>AMReX_FPC.H</label>
        <link refid="AMReX__FPC_8H"/>
        <childnode refid="48040" relation="include">
        </childnode>
      </node>
      <node id="48044">
        <label>memory</label>
      </node>
      <node id="48059">
        <label>inttypes.h</label>
      </node>
      <node id="48060">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
      </node>
      <node id="48037">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.H</label>
        <link refid="AMReX_VectorIO.H"/>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
        <childnode refid="48076" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48087">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="48088" relation="include">
        </childnode>
      </node>
      <node id="48084">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="48082">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="48083">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="48084" relation="include">
        </childnode>
      </node>
      <node id="48085">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="48081" relation="include">
        </childnode>
      </node>
      <node id="48086">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48087" relation="include">
        </childnode>
        <childnode refid="48088" relation="include">
        </childnode>
      </node>
      <node id="48080">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.cpp</label>
        <link refid="AMReX__VectorIO_8cpp"/>
      </node>
      <node id="48090">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="48081" relation="include">
        </childnode>
      </node>
      <node id="48081">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48083" relation="include">
        </childnode>
        <childnode refid="48084" relation="include">
        </childnode>
        <childnode refid="48085" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48089" relation="include">
        </childnode>
      </node>
      <node id="48089">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="48090" relation="include">
        </childnode>
      </node>
      <node id="48088">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="48079">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.H</label>
        <link refid="AMReX_VectorIO.H"/>
        <childnode refid="48080" relation="include">
        </childnode>
        <childnode refid="48081" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_VECTORIO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_VECTORIO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__FPC_8H" kindref="compound">AMReX_FPC.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__FabConv_8H" kindref="compound">AMReX_FabConv.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__IntConv_8H" kindref="compound">AMReX_IntConv.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0718da697f64bda3be2152538b70d4c5" kindref="member">writeIntData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classamrex_1_1FPC_1a9cad45e259106beaa8e4dc56f613bd06" kindref="member">FPC::NativeIntDescriptor</ref>());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1af8ec915a2cffc7c342e1f15e52cbd697" kindref="member">readIntData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a601aaf049a30edfae3541b7f8ae1e0fc" kindref="member">writeLongData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classamrex_1_1FPC_1a6f67a43bd516bcc9547cb3b76424b2b8" kindref="member">FPC::NativeLongDescriptor</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aa5a1f4f1c5cbe7672f12c62b9db96746" kindref="member">readLongData</ref>(Long*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1af9790d1f61a6d21ce4e9f92c58ac0600" kindref="member">writeRealData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd<sp/>=<sp/><ref refid="classamrex_1_1FPC_1ab470772000cfb5f507edc5f294383bbc" kindref="member">FPC::NativeRealDescriptor</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aa6f624229959bee80f1444371bb5babc" kindref="member">readRealData</ref>(Real*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f9c3dd444d301063e6190234413bda4" kindref="member">writeFloatData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd<sp/>=<sp/><ref refid="classamrex_1_1FPC_1a56bb549e278ccc2611fd389c3d2b6bdb" kindref="member">FPC::Native32RealDescriptor</ref>());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4c085d3b27d107f62bdb36f5ecc0f326" kindref="member">readFloatData</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a9cb2d187853bfabaaf7d74de8c950c25" kindref="member">writeDoubleData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd<sp/>=<sp/><ref refid="classamrex_1_1FPC_1a3e122a19b07bc732bf83c360354ef2a4" kindref="member">FPC::Native64RealDescriptor</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac590394599f7ea721cf8999331d0436e" kindref="member">readDoubleData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespaceamrex_1ac0401938be1aa864fb878ee171a6fb14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac0401938be1aa864fb878ee171a6fb14" kindref="member">writeData</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0718da697f64bda3be2152538b70d4c5" kindref="member">writeIntData</ref>(data,<sp/>size,<sp/>os);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="namespaceamrex_1a01a43d1a99e96ce0f348dc5659029a6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac0401938be1aa864fb878ee171a6fb14" kindref="member">writeData</ref><sp/>(Long<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a601aaf049a30edfae3541b7f8ae1e0fc" kindref="member">writeLongData</ref>(data,<sp/>size,<sp/>os);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="namespaceamrex_1a2e3bdcedf2e665446f241d3d34cb5b31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac0401938be1aa864fb878ee171a6fb14" kindref="member">writeData</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f9c3dd444d301063e6190234413bda4" kindref="member">writeFloatData</ref>(data,<sp/>size,<sp/>os);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="namespaceamrex_1a1950e496a6aafaad04f6b147af3bd6e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac0401938be1aa864fb878ee171a6fb14" kindref="member">writeData</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a9cb2d187853bfabaaf7d74de8c950c25" kindref="member">writeDoubleData</ref>(data,<sp/>size,<sp/>os);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="namespaceamrex_1a5836a4ae751b9857848ec279e0a7dc4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5836a4ae751b9857848ec279e0a7dc4a" kindref="member">readData</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1af8ec915a2cffc7c342e1f15e52cbd697" kindref="member">readIntData</ref>(data,<sp/>size,<sp/>is,<sp/><ref refid="classamrex_1_1FPC_1a9cad45e259106beaa8e4dc56f613bd06" kindref="member">FPC::NativeIntDescriptor</ref>());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="namespaceamrex_1a9b9259c0e2e12b54971dac6fe224ba97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5836a4ae751b9857848ec279e0a7dc4a" kindref="member">readData</ref><sp/>(Long<sp/>*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa5a1f4f1c5cbe7672f12c62b9db96746" kindref="member">readLongData</ref>(data,<sp/>size,<sp/>is,<sp/><ref refid="classamrex_1_1FPC_1a6f67a43bd516bcc9547cb3b76424b2b8" kindref="member">FPC::NativeLongDescriptor</ref>());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="namespaceamrex_1afd3603d5627ea48a5c25919fa90482f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5836a4ae751b9857848ec279e0a7dc4a" kindref="member">readData</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4c085d3b27d107f62bdb36f5ecc0f326" kindref="member">readFloatData</ref>(data,<sp/>size,<sp/>is,<sp/><ref refid="classamrex_1_1FPC_1a56bb549e278ccc2611fd389c3d2b6bdb" kindref="member">FPC::Native32RealDescriptor</ref>());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="namespaceamrex_1a9bed38ec3405646ecda2cfbd8b179733" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5836a4ae751b9857848ec279e0a7dc4a" kindref="member">readData</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac590394599f7ea721cf8999331d0436e" kindref="member">readDoubleData</ref>(data,<sp/>size,<sp/>is,<sp/><ref refid="classamrex_1_1FPC_1a3e122a19b07bc732bf83c360354ef2a4" kindref="member">FPC::Native64RealDescriptor</ref>());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.H"/>
  </compounddef>
</doxygen>
