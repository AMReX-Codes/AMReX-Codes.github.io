<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MLEBTensorOp_8cpp" kind="file" language="C++">
    <compoundname>AMReX_MLEBTensorOp.cpp</compoundname>
    <includes refid="AMReX__MLEBTensorOp_8H" local="no">AMReX_MLEBTensorOp.H</includes>
    <includes refid="AMReX__EBMultiFabUtil_8H" local="no">AMReX_EBMultiFabUtil.H</includes>
    <includes refid="AMReX__MultiFabUtil_8H" local="no">AMReX_MultiFabUtil.H</includes>
    <includes refid="AMReX__MLTensor__K_8H" local="no">AMReX_MLTensor_K.H</includes>
    <includes refid="AMReX__MLEBTensor__K_8H" local="no">AMReX_MLEBTensor_K.H</includes>
    <includes refid="AMReX__MLEBABecLap_8H" local="no">AMReX_MLEBABecLap.H</includes>
    <incdepgraph>
      <node id="71417">
        <label>atomic</label>
      </node>
      <node id="71330">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX_MLEBTensorOp.cpp"/>
        <childnode refid="71331" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71332" relation="include">
        </childnode>
      </node>
      <node id="71445">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="71390" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71447" relation="include">
        </childnode>
        <childnode refid="71444" relation="include">
        </childnode>
        <childnode refid="71448" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
      </node>
      <node id="71381">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71379" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71346" relation="include">
        </childnode>
      </node>
      <node id="71380">
        <label>iomanip</label>
      </node>
      <node id="71364">
        <label>functional</label>
      </node>
      <node id="71482">
        <label>queue</label>
      </node>
      <node id="71408">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71409" relation="include">
        </childnode>
        <childnode refid="71375" relation="include">
        </childnode>
        <childnode refid="71410" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
      </node>
      <node id="71424">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
      </node>
      <node id="71373">
        <label>limits</label>
      </node>
      <node id="71388">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
      </node>
      <node id="71468">
        <label>AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71469" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71352" relation="include">
        </childnode>
      </node>
      <node id="71446">
        <label>iterator</label>
      </node>
      <node id="71335">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71337" relation="include">
        </childnode>
        <childnode refid="71345" relation="include">
        </childnode>
        <childnode refid="71346" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71375" relation="include">
        </childnode>
        <childnode refid="71376" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71377" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
      </node>
      <node id="71344">
        <label>float.h</label>
      </node>
      <node id="71490">
        <label>AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
      </node>
      <node id="71436">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71367" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71348" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71377" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
      </node>
      <node id="71415">
        <label>cstdint</label>
      </node>
      <node id="71458">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71408" relation="include">
        </childnode>
        <childnode refid="71411" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
        <childnode refid="71378" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
      </node>
      <node id="71411">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
      </node>
      <node id="71435">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
      </node>
      <node id="71347">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="71348" relation="include">
        </childnode>
        <childnode refid="71346" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71341" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71370" relation="include">
        </childnode>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71374" relation="include">
        </childnode>
        <childnode refid="71338" relation="include">
        </childnode>
      </node>
      <node id="71480">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71379" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71415" relation="include">
        </childnode>
        <childnode refid="71482" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71456" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71484" relation="include">
        </childnode>
      </node>
      <node id="71453">
        <label>AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71468" relation="include">
        </childnode>
        <childnode refid="71471" relation="include">
        </childnode>
        <childnode refid="71480" relation="include">
        </childnode>
      </node>
      <node id="71358">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71359" relation="include">
        </childnode>
        <childnode refid="71360" relation="include">
        </childnode>
        <childnode refid="71346" relation="include">
        </childnode>
        <childnode refid="71362" relation="include">
        </childnode>
        <childnode refid="71348" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71364" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71357" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
      </node>
      <node id="71391">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="71359">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="71357" relation="include">
        </childnode>
      </node>
      <node id="71491">
        <label>AMReX_MultiFabUtilI.H</label>
        <link refid="AMReX__MultiFabUtilI_8H"/>
      </node>
      <node id="71441">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="71489">
        <label>AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
      </node>
      <node id="71428">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="71401" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
      </node>
      <node id="71369">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="71338" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71348" relation="include">
        </childnode>
      </node>
      <node id="71378">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="71356" relation="include">
        </childnode>
        <childnode refid="71379" relation="include">
        </childnode>
        <childnode refid="71380" relation="include">
        </childnode>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71381" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
      </node>
      <node id="71371">
        <label>cmath</label>
      </node>
      <node id="71361">
        <label>cassert</label>
      </node>
      <node id="71363">
        <label>stdexcept</label>
      </node>
      <node id="71390">
        <label>numeric</label>
      </node>
      <node id="71452">
        <label>AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71488">
        <label>AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="71489" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
      </node>
      <node id="71471">
        <label>AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="71472" relation="include">
        </childnode>
        <childnode refid="71479" relation="include">
        </childnode>
      </node>
      <node id="71437">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="71352" relation="include">
        </childnode>
        <childnode refid="71438" relation="include">
        </childnode>
        <childnode refid="71364" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71439" relation="include">
        </childnode>
        <childnode refid="71435" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
      </node>
      <node id="71410">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71375" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
      </node>
      <node id="71451">
        <label>AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="71452" relation="include">
        </childnode>
      </node>
      <node id="71416">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="71371" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71338" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71374" relation="include">
        </childnode>
        <childnode refid="71352" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71417" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71418" relation="include">
        </childnode>
        <childnode refid="71410" relation="include">
        </childnode>
        <childnode refid="71419" relation="include">
        </childnode>
        <childnode refid="71420" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71388" relation="include">
        </childnode>
        <childnode refid="71424" relation="include">
        </childnode>
        <childnode refid="71391" relation="include">
        </childnode>
        <childnode refid="71401" relation="include">
        </childnode>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71370" relation="include">
        </childnode>
      </node>
      <node id="71496">
        <label>AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71497" relation="include">
        </childnode>
      </node>
      <node id="71355">
        <label>string</label>
      </node>
      <node id="71331">
        <label>AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="71332" relation="include">
        </childnode>
      </node>
      <node id="71418">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="71335" relation="include">
        </childnode>
      </node>
      <node id="71396">
        <label>map</label>
      </node>
      <node id="71454">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="71415" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71456" relation="include">
        </childnode>
        <childnode refid="71465" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
      </node>
      <node id="71423">
        <label>unordered_set</label>
      </node>
      <node id="71476">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71408" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71376" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71477" relation="include">
        </childnode>
        <childnode refid="71475" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71396" relation="include">
        </childnode>
      </node>
      <node id="71462">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="71463" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
      </node>
      <node id="71412">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
      </node>
      <node id="71495">
        <label>AMReX_LOUtil_K.H</label>
        <link refid="AMReX__LOUtil__K_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
      </node>
      <node id="71439">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="71354" relation="include">
        </childnode>
      </node>
      <node id="71450">
        <label>AMReX_EBSupport.H</label>
        <link refid="AMReX__EBSupport_8H"/>
      </node>
      <node id="71404">
        <label>cfloat</label>
      </node>
      <node id="71461">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="71458" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
      </node>
      <node id="71425">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71338" relation="include">
        </childnode>
      </node>
      <node id="71379">
        <label>fstream</label>
      </node>
      <node id="71395">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71397" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
        <childnode refid="71398" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
      </node>
      <node id="71460">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71458" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71398" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
      </node>
      <node id="71475">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
      </node>
      <node id="71345">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="71343" relation="include">
        </childnode>
      </node>
      <node id="71472">
        <label>AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="71408" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71376" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71475" relation="include">
        </childnode>
        <childnode refid="71476" relation="include">
        </childnode>
      </node>
      <node id="71398">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71352" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71399" relation="include">
        </childnode>
      </node>
      <node id="71351">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="71352" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71356" relation="include">
        </childnode>
        <childnode refid="71357" relation="include">
        </childnode>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71337" relation="include">
        </childnode>
        <childnode refid="71341" relation="include">
        </childnode>
      </node>
      <node id="71433">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71367" relation="include">
        </childnode>
        <childnode refid="71434" relation="include">
        </childnode>
        <childnode refid="71436" relation="include">
        </childnode>
        <childnode refid="71435" relation="include">
        </childnode>
      </node>
      <node id="71350">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="71486">
        <label>AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="71487" relation="include">
        </childnode>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71469" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71488" relation="include">
        </childnode>
        <childnode refid="71491" relation="include">
        </childnode>
      </node>
      <node id="71469">
        <label>AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
        <childnode refid="71456" relation="include">
        </childnode>
        <childnode refid="71465" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
      </node>
      <node id="71459">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
        <childnode refid="71378" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
      </node>
      <node id="71367">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="71340">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="71444">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71378" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
      </node>
      <node id="71427">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71367" relation="include">
        </childnode>
        <childnode refid="71428" relation="include">
        </childnode>
        <childnode refid="71429" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
        <childnode refid="71432" relation="include">
        </childnode>
        <childnode refid="71433" relation="include">
        </childnode>
        <childnode refid="71437" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71418" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71338" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71440" relation="include">
        </childnode>
        <childnode refid="71441" relation="include">
        </childnode>
      </node>
      <node id="71463">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
        <childnode refid="71377" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71341" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
      </node>
      <node id="71333">
        <label>AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="71334" relation="include">
        </childnode>
        <childnode refid="71394" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
      </node>
      <node id="71405">
        <label>sys/types.h</label>
      </node>
      <node id="71413">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
      </node>
      <node id="71484">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="71382" relation="include">
        </childnode>
        <childnode refid="71364" relation="include">
        </childnode>
      </node>
      <node id="71389">
        <label>typeinfo</label>
      </node>
      <node id="71357">
        <label>cstdio</label>
      </node>
      <node id="71473">
        <label>AMReX_BCRec.H</label>
        <link refid="AMReX__BCRec_8H"/>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71474" relation="include">
        </childnode>
      </node>
      <node id="71430">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="71403" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
      </node>
      <node id="71366">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71367" relation="include">
        </childnode>
      </node>
      <node id="71438">
        <label>tuple</label>
      </node>
      <node id="71492">
        <label>AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71476" relation="include">
        </childnode>
        <childnode refid="71493" relation="include">
        </childnode>
      </node>
      <node id="71474">
        <label>AMReX_BC_TYPES.H</label>
        <link refid="AMReX__BC__TYPES_8H"/>
      </node>
      <node id="71467">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
      </node>
      <node id="71383">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="71384" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71356" relation="include">
        </childnode>
        <childnode refid="71357" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71385" relation="include">
        </childnode>
        <childnode refid="71386" relation="include">
        </childnode>
        <childnode refid="71387" relation="include">
        </childnode>
      </node>
      <node id="71448">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71415" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
      </node>
      <node id="71406">
        <label>unistd.h</label>
      </node>
      <node id="71464">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="71384">
        <label>stack</label>
      </node>
      <node id="71365">
        <label>vector</label>
      </node>
      <node id="71334">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71378" relation="include">
        </childnode>
        <childnode refid="71391" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
      </node>
      <node id="71368">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="71358" relation="include">
        </childnode>
      </node>
      <node id="71370">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
      </node>
      <node id="71339">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="71498">
        <label>AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="71494" relation="include">
        </childnode>
        <childnode refid="71414" relation="include">
        </childnode>
        <childnode refid="71499" relation="include">
        </childnode>
      </node>
      <node id="71354">
        <label>utility</label>
      </node>
      <node id="71352">
        <label>array</label>
      </node>
      <node id="71456">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71400" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
        <childnode refid="71338" relation="include">
        </childnode>
        <childnode refid="71421" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71408" relation="include">
        </childnode>
        <childnode refid="71457" relation="include">
        </childnode>
        <childnode refid="71334" relation="include">
        </childnode>
        <childnode refid="71411" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
        <childnode refid="71401" relation="include">
        </childnode>
        <childnode refid="71346" relation="include">
        </childnode>
        <childnode refid="71388" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
        <childnode refid="71378" relation="include">
        </childnode>
        <childnode refid="71458" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
        <childnode refid="71391" relation="include">
        </childnode>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71462" relation="include">
        </childnode>
      </node>
      <node id="71455">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71334" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
      </node>
      <node id="71356">
        <label>sstream</label>
      </node>
      <node id="71465">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="71456" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71378" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
      </node>
      <node id="71487">
        <label>AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="71416" relation="include">
        </childnode>
      </node>
      <node id="71332">
        <label>AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="71333" relation="include">
        </childnode>
        <childnode refid="71451" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
      </node>
      <node id="71362">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="71363" relation="include">
        </childnode>
      </node>
      <node id="71337">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="71338" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71341" relation="include">
        </childnode>
      </node>
      <node id="71348">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="71349" relation="include">
        </childnode>
      </node>
      <node id="71429">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71428" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71430" relation="include">
        </childnode>
      </node>
      <node id="71382">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="71346" relation="include">
        </childnode>
        <childnode refid="71381" relation="include">
        </childnode>
        <childnode refid="71383" relation="include">
        </childnode>
        <childnode refid="71388" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71348" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71389" relation="include">
        </childnode>
        <childnode refid="71338" relation="include">
        </childnode>
        <childnode refid="71364" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71390" relation="include">
        </childnode>
      </node>
      <node id="71401">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71356" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71402" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
        <childnode refid="71374" relation="include">
        </childnode>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71404" relation="include">
        </childnode>
        <childnode refid="71405" relation="include">
        </childnode>
        <childnode refid="71406" relation="include">
        </childnode>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71348" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71408" relation="include">
        </childnode>
        <childnode refid="71411" relation="include">
        </childnode>
        <childnode refid="71382" relation="include">
        </childnode>
        <childnode refid="71412" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
      </node>
      <node id="71392">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
      </node>
      <node id="71376">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
      </node>
      <node id="71341">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71339" relation="include">
        </childnode>
      </node>
      <node id="71407">
        <label>sys/wait.h</label>
      </node>
      <node id="71336">
        <label>iosfwd</label>
      </node>
      <node id="71372">
        <label>cstdlib</label>
      </node>
      <node id="71387">
        <label>cfenv</label>
      </node>
      <node id="71342">
        <label>iostream</label>
      </node>
      <node id="71375">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71346" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
      </node>
      <node id="71466">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="71408" relation="include">
        </childnode>
        <childnode refid="71467" relation="include">
        </childnode>
      </node>
      <node id="71377">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71359" relation="include">
        </childnode>
      </node>
      <node id="71393">
        <label>cstddef</label>
      </node>
      <node id="71409">
        <label>unordered_map</label>
      </node>
      <node id="71457">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71375" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71410" relation="include">
        </childnode>
      </node>
      <node id="71447">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71444" relation="include">
        </childnode>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
        <childnode refid="71403" relation="include">
        </childnode>
        <childnode refid="71354" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71400" relation="include">
        </childnode>
      </node>
      <node id="71426">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71359" relation="include">
        </childnode>
        <childnode refid="71360" relation="include">
        </childnode>
        <childnode refid="71367" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71427" relation="include">
        </childnode>
        <childnode refid="71428" relation="include">
        </childnode>
        <childnode refid="71434" relation="include">
        </childnode>
        <childnode refid="71436" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
        <childnode refid="71442" relation="include">
        </childnode>
        <childnode refid="71443" relation="include">
        </childnode>
        <childnode refid="71432" relation="include">
        </childnode>
        <childnode refid="71429" relation="include">
        </childnode>
        <childnode refid="71433" relation="include">
        </childnode>
        <childnode refid="71444" relation="include">
        </childnode>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71449" relation="include">
        </childnode>
      </node>
      <node id="71374">
        <label>climits</label>
      </node>
      <node id="71470">
        <label>AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
      </node>
      <node id="71493">
        <label>AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="71494" relation="include">
        </childnode>
      </node>
      <node id="71499">
        <label>AMReX_MLEBABecLap_3D_K.H</label>
        <link refid="AMReX__MLEBABecLap__3D__K_8H"/>
      </node>
      <node id="71414">
        <label>AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="71415" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71396" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71334" relation="include">
        </childnode>
      </node>
      <node id="71449">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="71422">
        <label>mutex</label>
      </node>
      <node id="71402">
        <label>chrono</label>
      </node>
      <node id="71394">
        <label>AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="71395" relation="include">
        </childnode>
        <childnode refid="71414" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
      </node>
      <node id="71494">
        <label>AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71475" relation="include">
        </childnode>
        <childnode refid="71479" relation="include">
        </childnode>
        <childnode refid="71495" relation="include">
        </childnode>
      </node>
      <node id="71440">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="71386">
        <label>csignal</label>
      </node>
      <node id="71477">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="71478" relation="include">
        </childnode>
        <childnode refid="71456" relation="include">
        </childnode>
        <childnode refid="71395" relation="include">
        </childnode>
      </node>
      <node id="71481">
        <label>thread</label>
      </node>
      <node id="71478">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
      </node>
      <node id="71420">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71421" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
        <childnode refid="71422" relation="include">
        </childnode>
        <childnode refid="71423" relation="include">
        </childnode>
        <childnode refid="71364" relation="include">
        </childnode>
        <childnode refid="71355" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
      </node>
      <node id="71403">
        <label>type_traits</label>
      </node>
      <node id="71421">
        <label>set</label>
      </node>
      <node id="71419">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="71392" relation="include">
        </childnode>
      </node>
      <node id="71346">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="71483">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="71336" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71368" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71348" relation="include">
        </childnode>
      </node>
      <node id="71443">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="71392" relation="include">
        </childnode>
      </node>
      <node id="71338">
        <label>algorithm</label>
      </node>
      <node id="71431">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71352" relation="include">
        </childnode>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71401" relation="include">
        </childnode>
        <childnode refid="71367" relation="include">
        </childnode>
        <childnode refid="71428" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
      </node>
      <node id="71485">
        <label>AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
      </node>
      <node id="71479">
        <label>AMReX_LO_BCTYPES.H</label>
        <link refid="AMReX__LO__BCTYPES_8H"/>
      </node>
      <node id="71360">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="71361" relation="include">
        </childnode>
      </node>
      <node id="71497">
        <label>AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="71498" relation="include">
        </childnode>
      </node>
      <node id="71434">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71435" relation="include">
        </childnode>
      </node>
      <node id="71385">
        <label>execinfo.h</label>
      </node>
      <node id="71400">
        <label>cstring</label>
      </node>
      <node id="71399">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71400" relation="include">
        </childnode>
        <childnode refid="71342" relation="include">
        </childnode>
        <childnode refid="71371" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71350" relation="include">
        </childnode>
        <childnode refid="71365" relation="include">
        </childnode>
        <childnode refid="71347" relation="include">
        </childnode>
        <childnode refid="71401" relation="include">
        </childnode>
        <childnode refid="71370" relation="include">
        </childnode>
      </node>
      <node id="71397">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="71373" relation="include">
        </childnode>
        <childnode refid="71358" relation="include">
        </childnode>
        <childnode refid="71343" relation="include">
        </childnode>
        <childnode refid="71351" relation="include">
        </childnode>
        <childnode refid="71369" relation="include">
        </childnode>
        <childnode refid="71335" relation="include">
        </childnode>
      </node>
      <node id="71353">
        <label>memory</label>
      </node>
      <node id="71442">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="71393" relation="include">
        </childnode>
        <childnode refid="71400" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
        <childnode refid="71353" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
      </node>
      <node id="71349">
        <label>inttypes.h</label>
      </node>
      <node id="71432">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="71339" relation="include">
        </childnode>
        <childnode refid="71366" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71392" relation="include">
        </childnode>
        <childnode refid="71372" relation="include">
        </childnode>
      </node>
      <node id="71343">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="71340" relation="include">
        </childnode>
        <childnode refid="71344" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLEBTensorOp_8H" kindref="compound">AMReX_MLEBTensorOp.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__EBMultiFabUtil_8H" kindref="compound">AMReX_EBMultiFabUtil.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MultiFabUtil_8H" kindref="compound">AMReX_MultiFabUtil.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLTensor__K_8H" kindref="compound">AMReX_MLTensor_K.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLEBTensor__K_8H" kindref="compound">AMReX_MLEBTensor_K.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLEBABecLap_8H" kindref="compound">AMReX_MLEBABecLap.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kappa_num_mglevs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1adccad5fb53a52c9b7227847cfc4a636d" kindref="member">MLEBTensorOp::MLEBTensorOp</ref><sp/>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1ad3027675177497cdb23a984a50ebcb12" kindref="member">MLEBABecLap::setScalars</ref>(1.0,1.0);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1adccad5fb53a52c9b7227847cfc4a636d" kindref="member">MLEBTensorOp::MLEBTensorOp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;&amp;<sp/>a_geom,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;BoxArray&gt;&amp;<sp/>a_grids,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;DistributionMapping&gt;&amp;<sp/>a_dmap,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LPInfo&amp;<sp/>a_info,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;EBFArrayBoxFactory<sp/>const*&gt;&amp;<sp/>a_factory)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1ad3027675177497cdb23a984a50ebcb12" kindref="member">MLEBABecLap::setScalars</ref>(1.0,1.0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1ac6b1462f39aa6a60a2bfd0cd6e687aee" kindref="member">define</ref>(a_geom,<sp/>a_grids,<sp/>a_dmap,<sp/>a_info,<sp/>a_factory);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a5efda34c10df7a5f5d4c738a60c04e9f" kindref="member">MLEBTensorOp::~MLEBTensorOp</ref><sp/>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1ac6b1462f39aa6a60a2bfd0cd6e687aee" kindref="member">MLEBTensorOp::define</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;&amp;<sp/>a_geom,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;BoxArray&gt;&amp;<sp/>a_grids,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;DistributionMapping&gt;&amp;<sp/>a_dmap,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LPInfo&amp;<sp/>a_info,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;EBFArrayBoxFactory<sp/>const*&gt;&amp;<sp/>a_factory)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLEBTensorOp::define()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1a1b6b22d7fff8c3ba94d4468f0394db3a" kindref="member">MLEBABecLap::define</ref>(a_geom,<sp/>a_grids,<sp/>a_dmap,<sp/>a_info,<sp/>a_factory);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>.clear();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>.resize(<ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>.resize(<ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>.resize(<ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev<sp/>=<sp/>0;<sp/>amrlev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>();<sp/>++amrlev)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].resize(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(kappa_num_mglevs,<ref refid="classamrex_1_1MLLinOp_1a257d196611ba0ab9d861dc5e0dc23502" kindref="member">NMGLevels</ref>(amrlev)));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev].resize(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>[amrlev].resize(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>0;<sp/>mglev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].size();<sp/>++mglev)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][mglev][idim].define</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(<ref refid="classamrex_1_1MLLinOp_1a3f9b0a7c3a91ca7e13664dbfe7115eed" kindref="member">m_grids</ref>[amrlev][mglev],</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim)),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1a80552ba3fc7cdd6bb00739c66327ae2c" kindref="member">m_dmap</ref>[amrlev][mglev],<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MFInfo(),<sp/>*<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>[amrlev][mglev][idim].define</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespaceamrex_1a314545dbd77212eb64c3a248c754eda6" kindref="member">amrex::convert</ref>(<ref refid="classamrex_1_1MLLinOp_1a3f9b0a7c3a91ca7e13664dbfe7115eed" kindref="member">m_grids</ref>[amrlev][mglev],</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim)),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1a80552ba3fc7cdd6bb00739c66327ae2c" kindref="member">m_dmap</ref>[amrlev][mglev],</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_SPACEDIM,<sp/>IntVect(1)-<ref refid="classamrex_1_1IntVect_1a954f4b14ca735fce3499ea57f0ad7102" kindref="member">IntVect::TheDimensionVector</ref>(idim),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MFInfo(),<sp/>*<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>[amrlev][mglev][idim].setVal(0.0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][mglev].define(<ref refid="classamrex_1_1MLLinOp_1a3f9b0a7c3a91ca7e13664dbfe7115eed" kindref="member">m_grids</ref>[amrlev][mglev],</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1a80552ba3fc7cdd6bb00739c66327ae2c" kindref="member">m_dmap</ref>[amrlev][mglev],</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>MFInfo(),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev]);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a6907d1c2b45662f70a24cc5deef001ca" kindref="member">MLEBTensorOp::setShearViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;MultiFab<sp/>const*,AMREX_SPACEDIM&gt;&amp;<sp/>eta,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">Location</ref><sp/>a_beta_loc)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1ae025087505b611d886e4ce39371d6e21" kindref="member">MLEBABecLap::setBCoeffs</ref>(amrlev,<sp/>eta,<sp/>a_beta_loc);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a6907d1c2b45662f70a24cc5deef001ca" kindref="member">MLEBTensorOp::setShearViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/>Real<sp/>eta)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1ae025087505b611d886e4ce39371d6e21" kindref="member">MLEBABecLap::setBCoeffs</ref>(amrlev,<sp/>eta);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a386cf912b2462e16023d9dd81c527552" kindref="member">MLEBTensorOp::setBulkViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;MultiFab<sp/>const*,AMREX_SPACEDIM&gt;&amp;<sp/>kappa)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][0][idim],<sp/>*kappa[idim],<sp/>0,<sp/>0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ac24f61712e93b25ebcd55639f30ce2" kindref="member">m_has_kappa</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a386cf912b2462e16023d9dd81c527552" kindref="member">MLEBTensorOp::setBulkViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/>Real<sp/>kappa)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][0][idim].setVal(kappa);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ac24f61712e93b25ebcd55639f30ce2" kindref="member">m_has_kappa</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a7c8d573df03c82ad4c1bbb8cec38f6aa" kindref="member">MLEBTensorOp::setEBShearViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/>MultiFab<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>eta)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1a9acab9bf4580bb611d63434f8e2daeed" kindref="member">MLEBABecLap::setEBHomogDirichlet</ref>(amrlev,<sp/>eta);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a7c8d573df03c82ad4c1bbb8cec38f6aa" kindref="member">MLEBTensorOp::setEBShearViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/>Real<sp/>eta)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1a9acab9bf4580bb611d63434f8e2daeed" kindref="member">MLEBABecLap::setEBHomogDirichlet</ref>(amrlev,<sp/>eta);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a3aa0e1f0a27c29c4cf2f73d97c19e6b9" kindref="member">MLEBTensorOp::setEBBulkViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/>MultiFab<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>kappa)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][0],<sp/>kappa,<sp/>0,<sp/>0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aed368e6d9fa6a5cb5b193e4368d39cb7" kindref="member">m_has_eb_kappa</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a3aa0e1f0a27c29c4cf2f73d97c19e6b9" kindref="member">MLEBTensorOp::setEBBulkViscosity</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/>Real<sp/>kappa)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kappa<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][0].setVal(kappa);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aed368e6d9fa6a5cb5b193e4368d39cb7" kindref="member">m_has_eb_kappa</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1ac5b58dbd133f156387504e220e53148b" kindref="member">MLEBTensorOp::prepareForSolve</ref><sp/>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ac24f61712e93b25ebcd55639f30ce2" kindref="member">m_has_kappa</ref><sp/>==<sp/><ref refid="classamrex_1_1MLEBTensorOp_1aed368e6d9fa6a5cb5b193e4368d39cb7" kindref="member">m_has_eb_kappa</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MLEBTensorOp:<sp/>must<sp/>call<sp/>both<sp/>setBulkViscosity<sp/>and<sp/>setEBBulkViscosity<sp/>or<sp/>none.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ac24f61712e93b25ebcd55639f30ce2" kindref="member">m_has_kappa</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>()-1;<sp/>amrlev<sp/>&gt;=<sp/>0;<sp/>--amrlev)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>1;<sp/>mglev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].size();<sp/>++mglev)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3df9dbf65687fa616a98a6be2789eedd" kindref="member">amrex::EB_average_down_faces</ref>(<ref refid="namespaceamrex_1a1c2496ecb409639e8639cf01881d0acb" kindref="member">GetArrOfConstPtrs</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][mglev-1]),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3d178420751d1cce6bd2661d614fbb33" kindref="member">GetArrOfPtrs</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][mglev<sp/><sp/>]),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect(<ref refid="classamrex_1_1MLLinOp_1aaa5616982aef27c68c5ae5544092c7db" kindref="member">mg_coarsen_ratio</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amrlev<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3df9dbf65687fa616a98a6be2789eedd" kindref="member">amrex::EB_average_down_faces</ref>(<ref refid="namespaceamrex_1a1c2496ecb409639e8639cf01881d0acb" kindref="member">GetArrOfConstPtrs</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev<sp/><sp/>].back()),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3d178420751d1cce6bd2661d614fbb33" kindref="member">GetArrOfPtrs</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev-1].front()),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect(<ref refid="classamrex_1_1MLLinOp_1aaa5616982aef27c68c5ae5544092c7db" kindref="member">mg_coarsen_ratio</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev<sp/>=<sp/>0;<sp/>amrlev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>();<sp/>++amrlev)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>0;<sp/>mglev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].size();<sp/>++mglev)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][mglev][idim].setVal(0.0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MLEBTensorOp_1aed368e6d9fa6a5cb5b193e4368d39cb7" kindref="member">m_has_eb_kappa</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>()-1;<sp/>amrlev<sp/>&gt;=<sp/>0;<sp/>--amrlev)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>1;<sp/>mglev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev].<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>();<sp/>++mglev)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae62657fb0ffcd40a902dc22f0c64906f" kindref="member">amrex::EB_average_down_boundaries</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][mglev-1],</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][mglev<sp/><sp/>],</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect(<ref refid="classamrex_1_1MLLinOp_1aaa5616982aef27c68c5ae5544092c7db" kindref="member">mg_coarsen_ratio</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amrlev<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae62657fb0ffcd40a902dc22f0c64906f" kindref="member">amrex::EB_average_down_boundaries</ref>(<ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev<sp/><sp/>].back(),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev-1].front(),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect(<ref refid="classamrex_1_1MLLinOp_1aaa5616982aef27c68c5ae5544092c7db" kindref="member">mg_coarsen_ratio</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev<sp/>=<sp/>0;<sp/>amrlev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>();<sp/>++amrlev)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>0;<sp/>mglev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev].<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>();<sp/>++mglev)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][mglev].setVal(0.0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev<sp/>=<sp/>0;<sp/>amrlev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLLinOp_1adcfe0a91f9b85388c17eee6172f02975" kindref="member">NAMRLevels</ref>();<sp/>++amrlev)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp<sp/>=<sp/>idim;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1aa06c264011c21bb5a97070ae7cf250d3" kindref="member">MultiFab::Xpay</ref>(<ref refid="classamrex_1_1MLEBABecLap_1ad631dff72b03c8a0d629bd735a63078e" kindref="member">m_b_coeffs</ref>[amrlev][0][idim],<sp/>4./3.,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][0][idim],<sp/>0,<sp/>icomp,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1a10d9a42df59b0c48c0de0bc3a2b41cca" kindref="member">MLEBABecLap::prepareForSolve</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a41724f08da04298ded08c9e8d6e9bfc4" kindref="member">MLEBTensorOp::apply</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev,<sp/>MultiFab&amp;<sp/>out,<sp/>MultiFab&amp;<sp/>in,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884" kindref="member">BCMode</ref><sp/>bc_mode,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3" kindref="member">StateMode</ref><sp/>s_mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MLMGBndry*<sp/>bndry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="197"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLEBTensorOp::apply()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBABecLap_1a8e392e42b5c238124145af83776d575a" kindref="member">MLEBABecLap::apply</ref>(amrlev,<sp/>mglev,<sp/>out,<sp/>in,<sp/>bc_mode,<sp/>s_mode,<sp/>bndry);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mglev<sp/>&gt;=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a6d2f3fc91f97b79571cdc6826df99f8f" kindref="member">applyBCTensor</ref>(amrlev,<sp/>mglev,<sp/>in,<sp/>bc_mode,<sp/>s_mode,<sp/>bndry);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev].get());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab*<sp/>vfrac<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getVolFrac())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(factory)<sp/>?<sp/>factory-&gt;getAreaFrac()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fcent<sp/>=<sp/>(factory)<sp/>?<sp/>factory-&gt;getFaceCent()</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiCutFab*<sp/>bcent<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getBndryCent())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dxinv<sp/>=<sp/>geom.InvCellSizeArray();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;MultiFab,AMREX_SPACEDIM&gt;&amp;<sp/>fluxmf<sp/>=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>iMultiFab<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mask<sp/>=<sp/><ref refid="classamrex_1_1MLEBABecLap_1a820de6c415b8f6911cf96c94788cb102" kindref="member">m_cc_mask</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>etaebmf<sp/>=<sp/>*<ref refid="classamrex_1_1MLEBABecLap_1a1644cbea6bac7ad1b9ae4a039cf96cc4" kindref="member">m_eb_b_coeffs</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>kapebmf<sp/>=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1aa52b74715e6fd800ad391684b5a2321b" kindref="member">m_eb_kappa</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>bscalar<sp/>=<sp/><ref refid="classamrex_1_1MLEBABecLap_1a1fb977f5a6b0c8682e5f658a4dc9db0c" kindref="member">m_b_scalar</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a7dbccf225414f8b9fe8d9eecc8dbdfca" kindref="member">compCrossTerms</ref>(amrlev,<sp/>mglev,<sp/>in);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>MFItInfo<sp/>mfi_info;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a84b4e8c1e004493e6e16003405cec793" kindref="member">Gpu::notInLaunchRegion</ref>())<sp/>mfi_info.EnableTiling().SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(out,<sp/>mfi_info);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>axfab<sp/>=<sp/>out.array(mfi);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fxfab<sp/>=<sp/>fluxmf[0].const_array(mfi);,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fyfab<sp/>=<sp/>fluxmf[1].const_array(mfi);,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fzfab<sp/>=<sp/>fluxmf[2].const_array(mfi););</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bx,<sp/>tbx,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa0a1f3457116407605913261d4c2e7f9" kindref="member">mltensor_cross_terms</ref>(tbx,<sp/>axfab,<sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(fxfab,fyfab,fzfab),<sp/>dxinv,<sp/>bscalar);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>vfab<sp/>=<sp/>in.const_array(mfi);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>etab<sp/>=<sp/>etaebmf.const_array(mfi);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>kapb<sp/>=<sp/>kapebmf.const_array(mfi);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;int<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ccm<sp/>=<sp/>mask.const_array(mfi);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;EBCellFlag<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>flag<sp/>=<sp/>flags-&gt;const_array(mfi);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>vol<sp/>=<sp/>vfrac-&gt;const_array(mfi);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apx<sp/>=<sp/>area[0]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apy<sp/>=<sp/>area[1]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apz<sp/>=<sp/>area[2]-&gt;const_array(mfi););</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcx<sp/>=<sp/>fcent[0]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcy<sp/>=<sp/>fcent[1]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcz<sp/>=<sp/>fcent[2]-&gt;const_array(mfi););</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bc<sp/>=<sp/>bcent-&gt;const_array(mfi);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bx,<sp/>tbx,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac61b7cbdcf9c0ee4f5a88686c8dece64" kindref="member">mlebtensor_cross_terms</ref>(tbx,<sp/>axfab,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(fxfab,fyfab,fzfab),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfab,<sp/>etab,<sp/>kapb,<sp/>ccm,<sp/>flag,<sp/>vol,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(apx,apy,apz),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(fcx,fcy,fcz),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc,<sp/>dxinv,<sp/>bscalar);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a6d2f3fc91f97b79571cdc6826df99f8f" kindref="member">MLEBTensorOp::applyBCTensor</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev,<sp/>MultiFab&amp;<sp/>vel,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884" kindref="member">BCMode</ref><sp/>bc_mode,<sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3" kindref="member">StateMode</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MLMGBndry*<sp/>bndry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="280"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inhomog<sp/>=<sp/>bc_mode<sp/>==<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884ae9990b3a39151b6f2175caa7621e0c4b" kindref="member">BCMode::Inhomogeneous</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imaxorder<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ac516dba583aede117f89e339423f6114" kindref="member">maxorder</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bcondloc<sp/>=<sp/>*<ref refid="classamrex_1_1MLCellLinOp_1a20a2d5349510243c481d2b6ce1992f5c" kindref="member">m_bcondloc</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>maskvals<sp/>=<sp/><ref refid="classamrex_1_1MLCellLinOp_1af7504eedbd467f1237874cbc10dd6d39" kindref="member">m_maskvals</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>FArrayBox<sp/>foofab(<ref refid="classamrex_1_1Box_1a706adbfbd33e0269b3c2688ba5b36959" kindref="member">Box::TheUnitBox</ref>(),3);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>foo<sp/>=<sp/>foofab.array();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dxinv<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].InvCellSizeArray();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>domain<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].growPeriodicDomain(1);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev].get());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>MFItInfo<sp/>mfi_info;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a84b4e8c1e004493e6e16003405cec793" kindref="member">Gpu::notInLaunchRegion</ref>())<sp/>mfi_info.SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(vel,<sp/>mfi_info);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>vbx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(vbx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>!=<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>velfab<sp/>=<sp/>vel.array(mfi);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>bdlv<sp/>=<sp/>bcondloc.bndryLocs(mfi);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>bdcv<sp/>=<sp/>bcondloc.bndryConds(mfi);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;BoundCond,2*AMREX_SPACEDIM*AMREX_SPACEDIM&gt;<sp/>bct;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuArray&lt;Real,2*AMREX_SPACEDIM*AMREX_SPACEDIM&gt;<sp/>bcl;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>face;<sp/>face;<sp/>++face)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Orientation<sp/>ori<sp/>=<sp/>face();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iface<sp/>=<sp/>ori;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp<sp/>=<sp/>0;<sp/>icomp<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++icomp)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bct[iface*AMREX_SPACEDIM+icomp]<sp/>=<sp/>bdcv[icomp][ori];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcl[iface*AMREX_SPACEDIM+icomp]<sp/>=<sp/>bdlv[icomp][ori];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mxlo<sp/>=<sp/>maskvals[Orientation(0,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref><sp/>)].array(mfi);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mylo<sp/>=<sp/>maskvals[Orientation(1,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref><sp/>)].array(mfi);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mxhi<sp/>=<sp/>maskvals[Orientation(0,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410ae82bb2777abd5901ea82ca6721b716a8" kindref="member">Orientation::high</ref>)].array(mfi);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>myhi<sp/>=<sp/>maskvals[Orientation(1,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410ae82bb2777abd5901ea82ca6721b716a8" kindref="member">Orientation::high</ref>)].array(mfi);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bvxlo<sp/>=<sp/>(bndry<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*bndry)[Orientation(0,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref><sp/>)].array(mfi)<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bvylo<sp/>=<sp/>(bndry<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*bndry)[Orientation(1,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref><sp/>)].array(mfi)<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bvxhi<sp/>=<sp/>(bndry<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*bndry)[Orientation(0,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410ae82bb2777abd5901ea82ca6721b716a8" kindref="member">Orientation::high</ref>)].array(mfi)<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bvyhi<sp/>=<sp/>(bndry<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*bndry)[Orientation(1,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410ae82bb2777abd5901ea82ca6721b716a8" kindref="member">Orientation::high</ref>)].array(mfi)<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a98b67baa1382f64a8b07abb4c2edbf92" kindref="member">AMREX_HOST_DEVICE_FOR_1D</ref><sp/>(<sp/>4,<sp/>icorner,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1acc8db936023bb83534878c495096ff64" kindref="member">mltensor_fill_corners</ref>(icorner,<sp/>vbx,<sp/>velfab,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxlo,<sp/>mylo,<sp/>mxhi,<sp/>myhi,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bvxlo,<sp/>bvylo,<sp/>bvxhi,<sp/>bvyhi,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bct,<sp/>bcl,<sp/>inhomog,<sp/>imaxorder,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxinv,<sp/>domain);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mzlo<sp/>=<sp/>maskvals[Orientation(2,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref><sp/>)].array(mfi);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mzhi<sp/>=<sp/>maskvals[Orientation(2,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410ae82bb2777abd5901ea82ca6721b716a8" kindref="member">Orientation::high</ref>)].array(mfi);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bvzlo<sp/>=<sp/>(bndry<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*bndry)[Orientation(2,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref><sp/>)].array(mfi)<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bvzhi<sp/>=<sp/>(bndry<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*bndry)[Orientation(2,<ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410ae82bb2777abd5901ea82ca6721b716a8" kindref="member">Orientation::high</ref>)].array(mfi)<sp/>:<sp/>foo;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a98b67baa1382f64a8b07abb4c2edbf92" kindref="member">AMREX_HOST_DEVICE_FOR_1D</ref><sp/>(<sp/>12,<sp/>iedge,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a00ec4e5df9a2b021aa3f478be15da8bd" kindref="member">mltensor_fill_edges</ref>(iedge,<sp/>vbx,<sp/>velfab,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxlo,<sp/>mylo,<sp/>mzlo,<sp/>mxhi,<sp/>myhi,<sp/>mzhi,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bvxlo,<sp/>bvylo,<sp/>bvzlo,<sp/>bvxhi,<sp/>bvyhi,<sp/>bvzhi,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bct,<sp/>bcl,<sp/>inhomog,<sp/>imaxorder,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxinv,<sp/>domain);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a98b67baa1382f64a8b07abb4c2edbf92" kindref="member">AMREX_HOST_DEVICE_FOR_1D</ref><sp/>(<sp/>8,<sp/>icorner,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1acc8db936023bb83534878c495096ff64" kindref="member">mltensor_fill_corners</ref>(icorner,<sp/>vbx,<sp/>velfab,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxlo,<sp/>mylo,<sp/>mzlo,<sp/>mxhi,<sp/>myhi,<sp/>mzhi,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bvxlo,<sp/>bvylo,<sp/>bvzlo,<sp/>bvxhi,<sp/>bvyhi,<sp/>bvzhi,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bct,<sp/>bcl,<sp/>inhomog,<sp/>imaxorder,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxinv,<sp/>domain);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>vel.EnforcePeriodicity(0,<sp/>AMREX_SPACEDIM,<sp/>IntVect(1),</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].periodicity());</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a7dbccf225414f8b9fe8d9eecc8dbdfca" kindref="member">MLEBTensorOp::compCrossTerms</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev,<sp/>MultiFab<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mf)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="383"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev].get());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(factory)<sp/>?<sp/>factory-&gt;getAreaFrac()</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dxinv<sp/>=<sp/>geom.InvCellSizeArray();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;MultiFab,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>etamf<sp/>=<sp/><ref refid="classamrex_1_1MLEBABecLap_1ad631dff72b03c8a0d629bd735a63078e" kindref="member">m_b_coeffs</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;MultiFab,AMREX_SPACEDIM&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>kapmf<sp/>=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;MultiFab,AMREX_SPACEDIM&gt;&amp;<sp/>fluxmf<sp/>=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>MFItInfo<sp/>mfi_info;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a84b4e8c1e004493e6e16003405cec793" kindref="member">Gpu::notInLaunchRegion</ref>())<sp/>mfi_info.EnableTiling().SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(mf,<sp/>mfi_info);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xbx<sp/>=<sp/>mfi.nodaltilebox(0);,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ybx<sp/>=<sp/>mfi.nodaltilebox(1);,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zbx<sp/>=<sp/>mfi.nodaltilebox(2););</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grow<sp/>by<sp/>1<sp/>because<sp/>of<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(<ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(bx,1))<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fxfab<sp/>=<sp/>fluxmf[0].array(mfi);,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fyfab<sp/>=<sp/>fluxmf[1].array(mfi);,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fzfab<sp/>=<sp/>fluxmf[2].array(mfi););</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>xbx,<sp/>txbx,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Loop_8H_1a17fd46bf5cf689e1b3eb8b6f202c065c" kindref="member">AMREX_LOOP_4D</ref>(txbx,<sp/>AMREX_SPACEDIM,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fxfab(i,j,k,n)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ybx,<sp/>tybx,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Loop_8H_1a17fd46bf5cf689e1b3eb8b6f202c065c" kindref="member">AMREX_LOOP_4D</ref>(tybx,<sp/>AMREX_SPACEDIM,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fyfab(i,j,k,n)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>zbx,<sp/>tzbx,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Loop_8H_1a17fd46bf5cf689e1b3eb8b6f202c065c" kindref="member">AMREX_LOOP_4D</ref>(tzbx,<sp/>AMREX_SPACEDIM,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzfab(i,j,k,n)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fxfab<sp/>=<sp/>fluxmf[0].array(mfi);,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fyfab<sp/>=<sp/>fluxmf[1].array(mfi);,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fzfab<sp/>=<sp/>fluxmf[2].array(mfi););</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vfab<sp/>=<sp/>mf.const_array(mfi);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>etaxfab<sp/>=<sp/>etamf[0].const_array(mfi);,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>etayfab<sp/>=<sp/>etamf[1].const_array(mfi);,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>etazfab<sp/>=<sp/>etamf[2].const_array(mfi););</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kapxfab<sp/>=<sp/>kapmf[0].const_array(mfi);,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kapyfab<sp/>=<sp/>kapmf[1].const_array(mfi);,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kapzfab<sp/>=<sp/>kapmf[2].const_array(mfi););</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>xbx,<sp/>txbx,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa79853b0cab3cbfe3804729e7675b729" kindref="member">mltensor_cross_terms_fx</ref>(txbx,fxfab,vfab,etaxfab,kapxfab,dxinv);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ybx,<sp/>tybx,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a2ffac1526faa35147f6fe549bf3119c1" kindref="member">mltensor_cross_terms_fy</ref>(tybx,fyfab,vfab,etayfab,kapyfab,dxinv);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>zbx,<sp/>tzbx,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad93748f17b8e306ce7349fa9dbe6064f" kindref="member">mltensor_cross_terms_fz</ref>(tzbx,fzfab,vfab,etazfab,kapzfab,dxinv);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apx<sp/>=<sp/>area[0]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apy<sp/>=<sp/>area[1]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apz<sp/>=<sp/>area[2]-&gt;const_array(mfi););</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;EBCellFlag<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>flag<sp/>=<sp/>flags-&gt;const_array(mfi);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>xbx,<sp/>txbx,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a059a494810a9ddc7aa57ab5b501a6025" kindref="member">mlebtensor_cross_terms_fx</ref>(txbx,fxfab,vfab,etaxfab,kapxfab,apx,flag,dxinv);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ybx,<sp/>tybx,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1913138abf02461d6489df16bc3347ce" kindref="member">mlebtensor_cross_terms_fy</ref>(tybx,fyfab,vfab,etayfab,kapyfab,apy,flag,dxinv);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>zbx,<sp/>tzbx,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad46645c4dbacf8e91ba0da6669b6a517" kindref="member">mlebtensor_cross_terms_fz</ref>(tzbx,fzfab,vfab,etazfab,kapzfab,apz,flag,dxinv);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fluxmf[idim].FillBoundary(0,<sp/>AMREX_SPACEDIM,<sp/>geom.periodicity());</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1a739281050ab5aebe8d61a56992049a58" kindref="member">MLEBTensorOp::compFlux</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;MultiFab*,AMREX_SPACEDIM&gt;&amp;<sp/>fluxes,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>sol,<sp/><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">Location</ref><sp/>loc)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="507"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLEBTensorOp::compFlux()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(loc==<ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3ad1a130e88790663b2124d7dbd3e9f81e" kindref="member">Location::FaceCenter</ref><sp/>||<sp/>loc==<ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3a91efbc33209256821c57a53ef9ddbc51" kindref="member">Location::FaceCentroid</ref>)<sp/>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;MLEBTensorOp::compFlux()<sp/>unknown<sp/>location<sp/>for<sp/>fluxes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1ad0816a3544ac9068766ffa765185c96a" kindref="member">getNComp</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLCellLinOp_1acd6c78c0e6307234b1539ba81caadb9c" kindref="member">MLEBABecLap::compFlux</ref>(amrlev,<sp/>fluxes,<sp/>sol,<sp/>loc);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mglev<sp/>&gt;=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1a1ab2cb2c4fcbbbf0e3fdedad325fd6b9" kindref="member">m_kappa</ref>[amrlev].<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a6d2f3fc91f97b79571cdc6826df99f8f" kindref="member">applyBCTensor</ref>(amrlev,<sp/>mglev,<sp/>sol,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884ae9990b3a39151b6f2175caa7621e0c4b" kindref="member">BCMode::Inhomogeneous</ref>,<sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3a49b21ad0d38942f635877e7bbc5d7a1e" kindref="member">StateMode::Solution</ref>,<sp/><ref refid="classamrex_1_1MLCellLinOp_1ab8f93178ea3f02ba63da966de7796970" kindref="member">m_bndry_sol</ref>[amrlev].</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev].get());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(factory)<sp/>?<sp/>factory-&gt;getAreaFrac()</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dxinv<sp/>=<sp/>geom.InvCellSizeArray();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;MultiFab,AMREX_SPACEDIM&gt;&amp;<sp/>fluxmf<sp/>=<sp/><ref refid="classamrex_1_1MLEBTensorOp_1abb70c0cd0ba0b1da3fe27e69bb2fe792" kindref="member">m_tauflux</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>bscalar<sp/>=<sp/><ref refid="classamrex_1_1MLEBABecLap_1a1fb977f5a6b0c8682e5f658a4dc9db0c" kindref="member">m_b_scalar</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a7dbccf225414f8b9fe8d9eecc8dbdfca" kindref="member">compCrossTerms</ref>(amrlev,<sp/>mglev,<sp/>sol);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>MFItInfo<sp/>mfi_info;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a84b4e8c1e004493e6e16003405cec793" kindref="member">Gpu::notInLaunchRegion</ref>())<sp/>mfi_info.EnableTiling().SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(sol,<sp/>mfi_info);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>nbx<sp/>=<sp/>mfi.nodaltilebox(idim);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>dst<sp/>=<sp/>fluxes[idim]-&gt;array(mfi);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/>src<sp/>=<sp/>fluxmf[idim].array(mfi);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af44071ada5d6349748d7ee4bd8fcd8d9" kindref="member">AMREX_HOST_DEVICE_FOR_4D</ref><sp/>(nbx,<sp/>ncomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst(i,j,k,n)<sp/>+=<sp/>bscalar*src(i,j,k,n);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>loc==<ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3ad1a130e88790663b2124d7dbd3e9f81e" kindref="member">Location::FaceCenter</ref><sp/>)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>nbx<sp/>=<sp/>mfi.nodaltilebox(idim);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>dst<sp/>=<sp/>fluxes[idim]-&gt;array(mfi);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/>src<sp/>=<sp/>fluxmf[idim].array(mfi);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ap<sp/>=<sp/>area[idim]-&gt;array(mfi);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>nbx,<sp/>tbx,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a77f03519172d1d7e4fa612d7d622b68d" kindref="member">mlebtensor_flux_0</ref>(tbx,<sp/>dst,<sp/>src,<sp/>ap,<sp/>bscalar);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>loc==Location::FaceCentroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iMultiFab&amp;<sp/>ccmask<sp/>=<sp/><ref refid="classamrex_1_1MLEBABecLap_1a820de6c415b8f6911cf96c94788cb102" kindref="member">m_cc_mask</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xbx<sp/>=<sp/>mfi.nodaltilebox(0);,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ybx<sp/>=<sp/>mfi.nodaltilebox(1);,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zbx<sp/>=<sp/>mfi.nodaltilebox(2););</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/>fx<sp/>=<sp/>fluxmf[0].const_array(mfi);,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/>fy<sp/>=<sp/>fluxmf[1].const_array(mfi);,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/>fz<sp/>=<sp/>fluxmf[2].const_array(mfi););</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>Ax<sp/>=<sp/>fluxes[0]-&gt;array(mfi);,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>Ay<sp/>=<sp/>fluxes[1]-&gt;array(mfi);,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>Az<sp/>=<sp/>fluxes[2]-&gt;array(mfi););</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fcent<sp/>=<sp/>factory-&gt;getFaceCent();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apx<sp/>=<sp/>area[0]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apy<sp/>=<sp/>area[1]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>apz<sp/>=<sp/>area[2]-&gt;const_array(mfi););</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcx<sp/>=<sp/>fcent[0]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcy<sp/>=<sp/>fcent[1]-&gt;const_array(mfi);,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fcz<sp/>=<sp/>fcent[2]-&gt;const_array(mfi););</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;int<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msk<sp/>=<sp/>ccmask.const_array(mfi);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_only<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xbx,<sp/>txbx,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a9130680fcb99caafd72b4d9ae3e9eb9f" kindref="member">mlebtensor_flux_x</ref>(txbx,<sp/>Ax,<sp/>fx,<sp/>apx,<sp/>fcx,<sp/>bscalar,<sp/>msk,<sp/>face_only,<sp/>xbx);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ybx,<sp/>tybx,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a365a24c5c08a65e176a7ecbc30fcdf02" kindref="member">mlebtensor_flux_y</ref>(tybx,<sp/>Ay,<sp/>fy,<sp/>apy,<sp/>fcy,<sp/>bscalar,<sp/>msk,<sp/>face_only,<sp/>ybx);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>zbx,<sp/>tzbx,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a89d786ec5288aa690f96d476bac72a36" kindref="member">mlebtensor_flux_z</ref>(tzbx,<sp/>Az,<sp/>fz,<sp/>apz,<sp/>fcz,<sp/>bscalar,<sp/>msk,<sp/>face_only,<sp/>zbx);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><ref refid="classamrex_1_1MLEBTensorOp_1ac889d56720eb02c4fe2feac08e677fbb" kindref="member">MLEBTensorOp::compVelGrad</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;MultiFab*,AMREX_SPACEDIM&gt;&amp;<sp/>fluxes,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>sol,<sp/><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">Location</ref><sp/>loc)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="628"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLEBTensorOp::compVelGrad()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(loc==<ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3ad1a130e88790663b2124d7dbd3e9f81e" kindref="member">Location::FaceCenter</ref><sp/>||<sp/>loc==<ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3a91efbc33209256821c57a53ef9ddbc51" kindref="member">Location::FaceCentroid</ref>)<sp/>)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;MLEBTensorOp::compVelGrad()<sp/>unknown<sp/>location<sp/>for<sp/>VelGradients.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLEBTensorOp_1a6d2f3fc91f97b79571cdc6826df99f8f" kindref="member">applyBCTensor</ref>(amrlev,<sp/>mglev,<sp/>sol,<sp/><ref refid="classamrex_1_1MLLinOp_1a5aa01a1ef6b0b3a471f02f65ae4b4884ae9990b3a39151b6f2175caa7621e0c4b" kindref="member">BCMode::Inhomogeneous</ref>,<sp/><ref refid="classamrex_1_1MLLinOp_1a1f2821b4a51da49d862dae1e757bb8c3a49b21ad0d38942f635877e7bbc5d7a1e" kindref="member">StateMode::Solution</ref>,<sp/><ref refid="classamrex_1_1MLCellLinOp_1ab8f93178ea3f02ba63da966de7796970" kindref="member">m_bndry_sol</ref>[amrlev].</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">EBFArrayBoxFactory<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classamrex_1_1MLLinOp_1aca26a5ef5d68cae3dcabea0a5d8c2493" kindref="member">m_factory</ref>[amrlev][mglev].get());</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabArray&lt;EBCellFlagFab&gt;*<sp/>flags<sp/>=<sp/>(factory)<sp/>?<sp/>&amp;(factory-&gt;getMultiEBCellFlagFab())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(factory)<sp/>?<sp/>factory-&gt;getAreaFrac()</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Array&lt;const<sp/>MultiCutFab*,AMREX_SPACEDIM&gt;{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dxinv<sp/>=<sp/>geom.InvCellSizeArray();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_fluxes<sp/>=<sp/>AMREX_SPACEDIM*AMREX_SPACEDIM;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>MFItInfo<sp/>mfi_info;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a84b4e8c1e004493e6e16003405cec793" kindref="member">Gpu::notInLaunchRegion</ref>())<sp/>mfi_info.EnableTiling().SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;FArrayBox,AMREX_SPACEDIM&gt;<sp/>fluxfab_tmp;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(sol,<sp/>mfi_info);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fabtyp<sp/>=<sp/>(flags)<sp/>?<sp/>(*flags)[mfi].getType(bx)<sp/>:<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaa72ed46ebb1280e51746ce28ded53942" kindref="member">FabType::covered</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabtyp<sp/>==<sp/><ref refid="namespaceamrex_1abd2e3d292645433cefc947725585f87aaaf37d08ae228a87dc6b265fd1019c97d" kindref="member">FabType::regular</ref>)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vfab<sp/>=<sp/>sol.const_array(mfi);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xbx<sp/>=<sp/>mfi.nodaltilebox(0);,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ybx<sp/>=<sp/>mfi.nodaltilebox(1);,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zbx<sp/>=<sp/>mfi.nodaltilebox(2););</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(fluxfab_tmp[0].resize(xbx,dim_fluxes);,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fluxfab_tmp[1].resize(ybx,dim_fluxes);,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fluxfab_tmp[2].resize(zbx,dim_fluxes););</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Elixir<sp/>fxeli<sp/>=<sp/>fluxfab_tmp[0].elixir();,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Elixir<sp/>fyeli<sp/>=<sp/>fluxfab_tmp[1].elixir();,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Elixir<sp/>fzeli<sp/>=<sp/>fluxfab_tmp[2].elixir(););</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fxfab<sp/>=<sp/>fluxfab_tmp[0].array();,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fyfab<sp/>=<sp/>fluxfab_tmp[1].array();,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fzfab<sp/>=<sp/>fluxfab_tmp[2].array(););</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>xbx,<sp/>txbx,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aafde504ed29d84d378ee26965063ef33" kindref="member">mltensor_vel_grads_fx</ref>(txbx,fxfab,vfab,dxinv);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ybx,<sp/>tybx,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4d7c87a8e9b0b1dc90954b934f537c25" kindref="member">mltensor_vel_grads_fy</ref>(tybx,fyfab,vfab,dxinv);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>zbx,<sp/>tzbx,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1abe403dd0f01f4e3f9afccff917612d3f" kindref="member">mltensor_vel_grads_fz</ref>(tzbx,fzfab,vfab,dxinv);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>derivatives<sp/>are<sp/>put<sp/>in<sp/>the<sp/>array<sp/>with<sp/>the<sp/>following<sp/>order:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>component:<sp/>0<sp/><sp/><sp/><sp/>,<sp/><sp/>1<sp/><sp/><sp/><sp/>,<sp/><sp/>2<sp/><sp/><sp/><sp/>,<sp/><sp/>3<sp/><sp/><sp/><sp/>,<sp/><sp/>4<sp/><sp/><sp/><sp/>,<sp/>5<sp/><sp/><sp/><sp/>,<sp/><sp/>6<sp/><sp/><sp/><sp/>,<sp/><sp/>7<sp/><sp/><sp/><sp/>,<sp/><sp/>8<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>2D:<sp/><sp/><sp/><sp/><sp/>dU/dx,<sp/><sp/>dV/dx,<sp/><sp/>dU/dy,<sp/><sp/>dV/dy<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>3D:<sp/><sp/><sp/><sp/><sp/>dU/dx,<sp/><sp/>dV/dx,<sp/><sp/>dW/dx,<sp/><sp/>dU/dy,<sp/><sp/>dV/dy,<sp/>dW/dy,<sp/><sp/>dU/dz,<sp/><sp/>dV/dz,<sp/><sp/>dW/dz<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idim<sp/>=<sp/>0;<sp/>idim<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++idim)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>nbx<sp/>=<sp/>mfi.nodaltilebox(idim);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>dst<sp/>=<sp/>fluxes[idim]-&gt;array(mfi);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array4&lt;Real<sp/>const&gt;<sp/>src<sp/>=<sp/>fluxfab_tmp[idim].const_array();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1afd60f7bb161794f08fe97f8f36e1f52d" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D</ref><sp/>(nbx,<sp/>dim_fluxes,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst(i,j,k,n)<sp/>=<sp/>src(i,j,k,n);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>loc==<ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3ad1a130e88790663b2124d7dbd3e9f81e" kindref="member">Location::FaceCenter</ref><sp/>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;compVelGrad<sp/>not<sp/>yet<sp/>implemented<sp/>for<sp/>cut-cells<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>loc==Location::FaceCentroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;compVelGrad<sp/>not<sp/>yet<sp/>implemented<sp/>for<sp/>cut-cells<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp"/>
  </compounddef>
</doxygen>
