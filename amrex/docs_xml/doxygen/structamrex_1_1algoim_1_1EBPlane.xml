<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1algoim_1_1EBPlane" kind="struct" language="C++" prot="public">
    <compoundname>amrex::algoim::EBPlane</compoundname>
    <includes refid="AMReX__algoim__K_8H" local="no">AMReX_algoim_K.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt;</type>
        <definition>GpuArray&lt;Real,3&gt; amrex::algoim::EBPlane::cent</definition>
        <argsstring></argsstring>
        <name>cent</name>
        <qualifiedname>amrex::algoim::EBPlane::cent</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="25" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt;</type>
        <definition>GpuArray&lt;Real,3&gt; amrex::algoim::EBPlane::norm</definition>
        <argsstring></argsstring>
        <name>norm</name>
        <qualifiedname>amrex::algoim::EBPlane::norm</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="26" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="26" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a99b33ff9062162a71e2f1533c76c3a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::algoim::EBPlane::EBPlane</definition>
        <argsstring>()=default</argsstring>
        <name>EBPlane</name>
        <qualifiedname>amrex::algoim::EBPlane::EBPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a2a965a37d0e5dbe63248bef13e85d057" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::algoim::EBPlane::EBPlane</definition>
        <argsstring>(GpuArray&lt; Real, 3 &gt; const &amp;c, GpuArray&lt; Real, 3 &gt; const n) noexcept</argsstring>
        <name>EBPlane</name>
        <qualifiedname>amrex::algoim::EBPlane::EBPlane</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt; const &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt; const</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="32" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1ae9c6ab23dcae359d1ef2a241be06bcd7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::algoim::EBPlane::EBPlane</definition>
        <argsstring>(Real cx, Real cy, Real cz, Real nx, Real ny, Real nz) noexcept</argsstring>
        <name>EBPlane</name>
        <qualifiedname>amrex::algoim::EBPlane::EBPlane</qualifiedname>
        <param>
          <type>Real</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>cz</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1adc46c5c27ad7c283881c7443f212402e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ Real</type>
        <definition>__host__ __device__ Real amrex::algoim::EBPlane::operator()</definition>
        <argsstring>(Real x, Real y, Real z) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::algoim::EBPlane::operator()</qualifiedname>
        <param>
          <type>Real</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="43" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a6b0f93e5fb91576aa742ead76b287f28" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ Real</type>
        <definition>__host__ __device__ Real amrex::algoim::EBPlane::operator()</definition>
        <argsstring>(GpuArray&lt; Real, 3 &gt; const &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::algoim::EBPlane::operator()</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; Real, 3 &gt; const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="49" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a08dd2f8834034e52e5c3283f0a885907" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ Real</type>
        <definition>__host__ __device__ Real amrex::algoim::EBPlane::grad</definition>
        <argsstring>(int d) const noexcept</argsstring>
        <name>grad</name>
        <qualifiedname>amrex::algoim::EBPlane::grad</qualifiedname>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="56" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="56" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::GpuArray&lt; Real, 3 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="1">
        <label>amrex::algoim::EBPlane</label>
        <link refid="structamrex_1_1algoim_1_1EBPlane"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cent</edgelabel>
          <edgelabel>norm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="24" bodyend="60"/>
    <listofallmembers>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>cent</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a99b33ff9062162a71e2f1533c76c3a3e" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>EBPlane</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a2a965a37d0e5dbe63248bef13e85d057" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>EBPlane</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1ae9c6ab23dcae359d1ef2a241be06bcd7" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>EBPlane</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a08dd2f8834034e52e5c3283f0a885907" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>grad</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>norm</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1adc46c5c27ad7c283881c7443f212402e" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>operator()</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a6b0f93e5fb91576aa742ead76b287f28" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
