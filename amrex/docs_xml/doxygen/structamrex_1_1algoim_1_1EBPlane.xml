<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1algoim_1_1EBPlane" kind="struct" language="C++" prot="public">
    <compoundname>amrex::algoim::EBPlane</compoundname>
    <includes refid="AMReX__algoim__K_8H" local="no">AMReX_algoim_K.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; Real, 3 &gt;</type>
        <definition>GpuArray&lt;Real,3&gt; amrex::algoim::EBPlane::cent</definition>
        <argsstring></argsstring>
        <name>cent</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; Real, 3 &gt;</type>
        <definition>GpuArray&lt;Real,3&gt; amrex::algoim::EBPlane::norm</definition>
        <argsstring></argsstring>
        <name>norm</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a99b33ff9062162a71e2f1533c76c3a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::algoim::EBPlane::EBPlane</definition>
        <argsstring>()=default</argsstring>
        <name>EBPlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a7c2e51a599be952eca2b472845b39ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> constexpr</type>
        <definition>AMREX_GPU_HOST_DEVICE constexpr amrex::algoim::EBPlane::EBPlane</definition>
        <argsstring>(GpuArray&lt; Real, 3 &gt; const &amp;c, GpuArray&lt; Real, 3 &gt; const n) noexcept</argsstring>
        <name>EBPlane</name>
        <param>
          <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; Real, 3 &gt; const &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; Real, 3 &gt; const</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="31" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1adf23bf8265a3989c1a637df965da16c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> constexpr</type>
        <definition>AMREX_GPU_HOST_DEVICE constexpr amrex::algoim::EBPlane::EBPlane</definition>
        <argsstring>(Real cx, Real cy, Real cz, Real nx, Real ny, Real nz) noexcept</argsstring>
        <name>EBPlane</name>
        <param>
          <type>Real</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>cz</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE Real amrex::algoim::EBPlane::operator()</definition>
        <argsstring>(Real x, Real y, Real z) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>Real</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1a289724cd28f09eb3d384c5a9f432c082" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE Real amrex::algoim::EBPlane::operator()</definition>
        <argsstring>(GpuArray&lt; Real, 3 &gt; const &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; Real, 3 &gt; const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="48" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1EBPlane_1aa39038dcf72fcf8a8b57513432875bf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE Real amrex::algoim::EBPlane::grad</definition>
        <argsstring>(int d) const noexcept</argsstring>
        <name>grad</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="55" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="55" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="22" bodyend="59"/>
    <listofallmembers>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>cent</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a99b33ff9062162a71e2f1533c76c3a3e" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>EBPlane</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a7c2e51a599be952eca2b472845b39ae4" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>EBPlane</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1adf23bf8265a3989c1a637df965da16c9" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>EBPlane</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1aa39038dcf72fcf8a8b57513432875bf2" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>grad</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>norm</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>operator()</name></member>
      <member refid="structamrex_1_1algoim_1_1EBPlane_1a289724cd28f09eb3d384c5a9f432c082" prot="public" virt="non-virtual"><scope>amrex::algoim::EBPlane</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
