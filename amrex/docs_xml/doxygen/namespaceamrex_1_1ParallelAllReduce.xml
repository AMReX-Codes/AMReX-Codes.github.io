<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceamrex_1_1ParallelAllReduce" kind="namespace" language="C++">
    <compoundname>amrex::ParallelAllReduce</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1abc654239660dfc6eb557813ef5314650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Max</definition>
        <argsstring>(T &amp;v, MPI_Comm comm)</argsstring>
        <name>Max</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="124" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1ac6513212c95687334df1e0ee67cc96a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Max</definition>
        <argsstring>(T *v, int cnt, MPI_Comm comm)</argsstring>
        <name>Max</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>cnt</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="128" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a22a60add9d9c9a8d562a9417d297f9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Max</definition>
        <argsstring>(Vector&lt; std::reference_wrapper&lt; T &gt; &gt; v, MPI_Comm comm)</argsstring>
        <name>Max</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::reference_wrapper&lt; T &gt; &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="132" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1ab295f18b74675ea0f559d2563eace87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Min</definition>
        <argsstring>(T &amp;v, MPI_Comm comm)</argsstring>
        <name>Min</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="137" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a9a24ed2b1803fba71b1ab93b44db7a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Min</definition>
        <argsstring>(T *v, int cnt, MPI_Comm comm)</argsstring>
        <name>Min</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>cnt</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="141" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1ab75655a29ac29049cb6b1fafbd12a7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Min</definition>
        <argsstring>(Vector&lt; std::reference_wrapper&lt; T &gt; &gt; v, MPI_Comm comm)</argsstring>
        <name>Min</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::reference_wrapper&lt; T &gt; &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="145" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a8f0fba40aa737060c0ac09832c9bf877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Sum</definition>
        <argsstring>(T &amp;v, MPI_Comm comm)</argsstring>
        <name>Sum</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="150" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a93a9a9427252098f6da83a7116c4219d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Sum</definition>
        <argsstring>(T *v, int cnt, MPI_Comm comm)</argsstring>
        <name>Sum</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>cnt</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="154" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a647e136efea8ad3d3e88887700c5f1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Sum</definition>
        <argsstring>(Vector&lt; std::reference_wrapper&lt; T &gt; &gt; v, MPI_Comm comm)</argsstring>
        <name>Sum</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::reference_wrapper&lt; T &gt; &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="158" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a220eeb19edc1365466cc0acfec9ee3d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::Or</definition>
        <argsstring>(bool &amp;v, MPI_Comm comm)</argsstring>
        <name>Or</name>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="162" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllReduce_1a809a9a78d9cfb7c86a0dd7b72a212fd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelAllReduce::And</definition>
        <argsstring>(bool &amp;v, MPI_Comm comm)</argsstring>
        <name>And</name>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="168" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="168" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelReduce.H" line="121" column="1"/>
  </compounddef>
</doxygen>
