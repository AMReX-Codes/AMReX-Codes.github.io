<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1AsyncOut" kind="namespace" language="C++">
    <compoundname>amrex::AsyncOut</compoundname>
    <innerclass refid="structamrex_1_1AsyncOut_1_1WriteInfo" prot="public">amrex::AsyncOut::WriteInfo</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1ad322c4e7eab6b75bf9448b5b7d464ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="30" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1a2040a56976bffbbfac29f5e01800ea3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="58" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1adbc79ec1aacd0106757683aea46b43ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AsyncOut::UseAsyncOut</definition>
        <argsstring>()</argsstring>
        <name>UseAsyncOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="70" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1a2a9d5d76aba34e026f1d33404c6bfe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1AsyncOut_1_1WriteInfo" kindref="compound">WriteInfo</ref></type>
        <definition>WriteInfo amrex::AsyncOut::GetWriteInfo</definition>
        <argsstring>(int rank)</argsstring>
        <name>GetWriteInfo</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="72" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="72" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1aa1f51f051314b9228d4e287292937139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Submit</definition>
        <argsstring>(std::function&lt; void()&gt; &amp;&amp;a_f)</argsstring>
        <name>Submit</name>
        <param>
          <type>std::function&lt; void()&gt; &amp;&amp;</type>
          <declname>a_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="95" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1ad1040f8c8e03807e7557a56891873d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Submit</definition>
        <argsstring>(std::function&lt; void()&gt; const &amp;a_f)</argsstring>
        <name>Submit</name>
        <param>
          <type>std::function&lt; void()&gt; const &amp;</type>
          <declname>a_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="100" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1aee3a42cfdf4c23b913fe7b42f8a22185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Finish</definition>
        <argsstring>()</argsstring>
        <name>Finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="105" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1a98b17038c0286de4668a2bed1102d3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Wait</definition>
        <argsstring>()</argsstring>
        <name>Wait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="110" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="110" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1AsyncOut_1a9b651e401d0a75620501243cc1171a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AsyncOut::Notify</definition>
        <argsstring>()</argsstring>
        <name>Notify</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="125" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" bodystart="125" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp" line="10" column="1"/>
  </compounddef>
</doxygen>
