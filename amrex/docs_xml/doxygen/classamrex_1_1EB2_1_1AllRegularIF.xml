<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1AllRegularIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::AllRegularIF</compoundname>
    <basecompoundref refid="structamrex_1_1GPUable" prot="public" virt="non-virtual">amrex::GPUable</basecompoundref>
    <includes refid="AMReX__EB2__IF__AllRegular_8H" local="no">AMReX_EB2_IF_AllRegular.H</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1AllRegularIF_1afe65b0a23a8c6a2c423aba19003ea70e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr Real</type>
        <definition>constexpr Real amrex::EB2::AllRegularIF::operator()</definition>
        <argsstring>(const RealArray &amp;) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::EB2::AllRegularIF::operator()</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1aeb06fab72f85728954130adbe25c5397" kindref="member">RealArray</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H" line="16" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1AllRegularIF_1a8936b2316aa453270e493d10b20b7844" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr Real</type>
        <definition>constexpr Real amrex::EB2::AllRegularIF::operator()</definition>
        <argsstring>(Real, Real, Real) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::EB2::AllRegularIF::operator()</qualifiedname>
        <param>
          <type>Real</type>
        </param>
        <param>
          <type>Real</type>
        </param>
        <param>
          <type>Real</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H" line="18" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H" bodystart="18" bodyend="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::EB2::AllRegularIF</label>
        <link refid="classamrex_1_1EB2_1_1AllRegularIF"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>amrex::EB2::AllRegularIF</label>
        <link refid="classamrex_1_1EB2_1_1AllRegularIF"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H" line="12" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H" bodystart="14" bodyend="19"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1AllRegularIF_1afe65b0a23a8c6a2c423aba19003ea70e" prot="public" virt="non-virtual"><scope>amrex::EB2::AllRegularIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1AllRegularIF_1a8936b2316aa453270e493d10b20b7844" prot="public" virt="non-virtual"><scope>amrex::EB2::AllRegularIF</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
