<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1ParIter" kind="class" language="C++" prot="public">
    <compoundname>amrex::ParIter</compoundname>
    <basecompoundref refid="classamrex_1_1ParIterBase" prot="public" virt="non-virtual">amrex::ParIterBase&lt; false, NStructReal, 0, 0, 0, DefaultAllocator &gt;</basecompoundref>
    <includes refid="AMReX__ParIter_8H" local="no">AMReX_ParIter.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
        <defval>0</defval>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1a179fafc569924202b166896b608cd5c2" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1afd49966c2934da75f6393511e0969426" prot="public" static="no">
        <type><ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;</type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ContainerType =  ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="104" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1ae8d26140003b63881c371560529f701b" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1a71a0cf043ed329a849e9a33c5e1515fc" kindref="member">ContainerType::ParticleTileType</ref></type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParticleTileType =  typename ContainerType::ParticleTileType</definition>
        <argsstring></argsstring>
        <name>ParticleTileType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="106" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1ac91c68097538c16c7eac2c7d35fadd37" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1a1572c7cc0ca6b5030a7440b85ee1a193" kindref="member">ContainerType::AoS</ref></type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::AoS =  typename ContainerType::AoS</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="107" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1af4be85fd6660434e52068e601531cd00" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1aec513fd16f52bafcec98962f1a904d18" kindref="member">ContainerType::SoA</ref></type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::SoA =  typename ContainerType::SoA</definition>
        <argsstring></argsstring>
        <name>SoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="108" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1a8b272e429ae3329aee47e959f0edac44" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1a8f2c6c0bd73cc3e08c6a93759082b712" kindref="member">ContainerType::ParticleType</ref></type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParticleType =  typename ContainerType::ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="109" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1abf095116c5c4c64339fd5e1676940e32" prot="public" static="no">
        <type>typename SoA::RealVector</type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::RealVector =  typename SoA::RealVector</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="110" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParIter_1a97c48bb7d4553b82a31d8bf5752b9fb7" prot="public" static="no">
        <type>typename SoA::IntVector</type>
        <definition>using amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::IntVector =  typename SoA::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="111" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ParIter_1a1988adc067068c23c027862f1adb752b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParIter</definition>
        <argsstring>(ContainerType &amp;pc, int level)</argsstring>
        <name>ParIter</name>
        <param>
          <type><ref refid="classamrex_1_1ParIter_1afd49966c2934da75f6393511e0969426" kindref="member">ContainerType</ref> &amp;</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="113" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParIter_1a8aa59afc6672994754e73b5e4b4ec9d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParIter</definition>
        <argsstring>(ContainerType &amp;pc, int level, MFItInfo &amp;info)</argsstring>
        <name>ParIter</name>
        <param>
          <type><ref refid="classamrex_1_1ParIter_1afd49966c2934da75f6393511e0969426" kindref="member">ContainerType</ref> &amp;</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1MFItInfo" kindref="compound">MFItInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="117" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="117" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
      </node>
      <node id="1">
        <label>amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;</label>
        <link refid="classamrex_1_1ParIter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::ParIterBase&lt; false, NStructReal, 0, 0, 0, DefaultAllocator &gt;</label>
        <link refid="classamrex_1_1ParIterBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
        <childnode refid="4" relation="usage">
          <edgelabel>fabArray</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>index_map</edgelabel>
          <edgelabel>local_index_map</edgelabel>
          <edgelabel>local_tile_index_map</edgelabel>
          <edgelabel>num_local_tiles</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>tile_array</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>device_sync</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>typ</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="6" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="27">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
      </node>
      <node id="29">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="25">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="14">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="24" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::ParIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;</label>
        <link refid="classamrex_1_1ParIter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="21">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::ParIterBase&lt; false, NStructReal, 0, 0, 0, DefaultAllocator &gt;</label>
        <link refid="classamrex_1_1ParIterBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_valid_index</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_particle_tiles</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="20" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="20">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="12">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::Vector&lt; ParticleTilePtr &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="14" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>std::vector&lt; ParticleTilePtr, std::allocator&lt; ParticleTilePtr &gt; &gt;</label>
      </node>
      <node id="4">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::MFIter::DeviceSync</label>
        <link refid="structamrex_1_1MFIter_1_1DeviceSync"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="101" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="99" bodyend="120"/>
    <listofallmembers>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a96650cf6d7f0f21d0f4b118ae897d008" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>AllBoxes</name></member>
      <member refid="classamrex_1_1MFIter_1ab2fc387b6146040c8efcef278b258f78" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>allow_multiple_mfiters</name></member>
      <member refid="classamrex_1_1MFIter_1a3a8a7a77b913c5ddc8b352f2610e9cd1" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>allowMultipleMFIters</name></member>
      <member refid="classamrex_1_1ParIter_1ac91c68097538c16c7eac2c7d35fadd37" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>AoS</name></member>
      <member refid="classamrex_1_1ParIterBase_1a87c8eb867adbab1b3344a443697e5db1" prot="private" virt="non-virtual"><scope>amrex::ParIter</scope><name>AoSRef</name></member>
      <member refid="classamrex_1_1MFIter_1a65b335b52bc54d9eaf7030a4fce20cf8" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>beginIndex</name></member>
      <member refid="classamrex_1_1ParIterBase_1ad3d92919cb41e735423dccda02ff23ab" prot="private" virt="non-virtual"><scope>amrex::ParIter</scope><name>ContainerRef</name></member>
      <member refid="classamrex_1_1ParIter_1afd49966c2934da75f6393511e0969426" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ContainerType</name></member>
      <member refid="classamrex_1_1MFIter_1abfba09b9f27138141e9758d1a8ea2e4b" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>currentIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a46b0a938c3d5f41c379d0adc7bf19c0d" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>depth</name></member>
      <member refid="classamrex_1_1MFIter_1a55734d57f0abbb384833f35c1a5422ef" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>device_sync</name></member>
      <member refid="classamrex_1_1MFIter_1a47d2e159ed2d66cd78498ea5bea35a17" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MFIter_1a16fa2d144bcc71d665056de5938c4b32" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>dynamic</name></member>
      <member refid="classamrex_1_1MFIter_1a427faab13c7d1f9d72b476452df519e1" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>endIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a198baf9d7f4a208f217569a0c6f02183" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>fabArray</name></member>
      <member refid="classamrex_1_1MFIter_1a3290eb14472377e0118842344967a44c" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>fabbox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>Flags</name></member>
      <member refid="classamrex_1_1MFIter_1a1184620f493f560be355cf02e5a0e619" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>flags</name></member>
      <member refid="classamrex_1_1ParIterBase_1abf1fa4e3c562abdac87b87b7797c457f" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>Geom</name></member>
      <member refid="classamrex_1_1ParIterBase_1aaec254ecf817d407421b5fa91010d486" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>GetArrayOfStructs</name></member>
      <member refid="classamrex_1_1ParIterBase_1ac3faed78f1761aca4429c4e7d76a71e1" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>GetLevel</name></member>
      <member refid="classamrex_1_1ParIterBase_1a788ebcc210553cc0c90c0a608af9c0fe" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>GetPairIndex</name></member>
      <member refid="classamrex_1_1ParIterBase_1a118abe9490a5ad60844d3880904c125d" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>GetParticleTile</name></member>
      <member refid="classamrex_1_1ParIterBase_1ae0e20743445f8b3685d29d21e22d4b33" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>GetStructOfArrays</name></member>
      <member refid="classamrex_1_1MFIter_1ae59e3e67c7b94d6b15158d177dd8cdc8" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a972ba6223b0f4ccca81791b9510b3002" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a1e344ffd39d3dba95d582a7d93c1ad97" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1ac9653cce066f73c95c3ec89f46f38ba1" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aa69f73dbf7931e2d0a3889de2db4a42b" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>index</name></member>
      <member refid="classamrex_1_1MFIter_1ac482cbbf5ecee6f2593a3e4437623082" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>index_map</name></member>
      <member refid="classamrex_1_1MFIter_1addaa9305a4ee5dda972e835164b70e29" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1ParIter_1a97c48bb7d4553b82a31d8bf5752b9fb7" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>IntVector</name></member>
      <member refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>isValid</name></member>
      <member refid="classamrex_1_1MFIter_1a3658deeec368fbc6be8f9555ac37bab5" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>length</name></member>
      <member refid="classamrex_1_1MFIter_1a8a8cdb1fbae0dace9fcc0dc622c3409d" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>local_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1a72828c9a333be0dfff3e89e350fd0e11" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>local_tile_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1ab9afc4ebb6b729bcecdba6b22a317e88" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>LocalIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a02c0b04b49bf0116bc21ee53e3593225" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>LocalTileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1ae0aa4364654842ee9aaba3d573fb6b01" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>m_fa</name></member>
      <member refid="classamrex_1_1ParIterBase_1a20a786f38ef42015697589c6801d1346" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>m_level</name></member>
      <member refid="classamrex_1_1ParIterBase_1aeafec33e131a22e26e21f6e03423a8de" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>m_pariter_index</name></member>
      <member refid="classamrex_1_1ParIterBase_1a6f91dd2344c8c4856e16985d86f284eb" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>m_particle_tiles</name></member>
      <member refid="classamrex_1_1ParIterBase_1ab5cf28ec985a9559ee4c2972fd30fb29" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>m_pc</name></member>
      <member refid="classamrex_1_1ParIterBase_1a3c60e00f2a77c8e80a7b4c39bbe6b04c" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>m_valid_index</name></member>
      <member refid="classamrex_1_1MFIter_1aac055187a5b4d7200fc77827dc28a76c" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ae7623281ac9e772db1fc5085a64aeeca" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a1d9668de99635aa50096d0f091d8b9b0" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a830e42aee76ec9fe8dae8bdd262e0b2d" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ad7a19e95ba128febb94b27d2a9d97ef1" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a970e636bf6a2d744068483806ddb7944" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a2c0a016e1d5d69073f2cab81e7c6a095" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1aecfd3f3ef12e8703caad5794968ff06a" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a66b92b6dbfbe1a498ba614df28817709" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a07296b12634219c4a15337435852a67b" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>nextDynamicIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a7a17b4a775ec84d2987cb480c38ed271" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>nodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38af1e51da50b24860035a3665786fe9d14" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>NoTeamBarrier</name></member>
      <member refid="classamrex_1_1MFIter_1a967c3c48ccb4f316911d06fcaccb29fa" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>num_local_tiles</name></member>
      <member refid="classamrex_1_1MFIter_1afbbd9093cd125af3cebbc8f8231bb142" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>numLocalTiles</name></member>
      <member refid="classamrex_1_1ParIterBase_1a493279cbef91daebbfbc2e91f60b79b7" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>numNeighborParticles</name></member>
      <member refid="classamrex_1_1ParIterBase_1a586ac506fa5098795d01417a96e3a51c" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>numParticles</name></member>
      <member refid="classamrex_1_1ParIterBase_1ac025320b57024928de988d2c516da4e4" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>numRealParticles</name></member>
      <member refid="classamrex_1_1ParIterBase_1aa4429dcfaf1bcbc8995f82c51b5b189a" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1ParIter_1a1988adc067068c23c027862f1adb752b" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParIter</name></member>
      <member refid="classamrex_1_1ParIter_1a8aa59afc6672994754e73b5e4b4ec9d4" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParIter</name></member>
      <member refid="classamrex_1_1ParIterBase_1a0152f8f2e171c41359a4646ddc74a331" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParIterBase</name></member>
      <member refid="classamrex_1_1ParIterBase_1a5edb57edf2f392dc4412fc3ef344b319" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParIterBase</name></member>
      <member refid="classamrex_1_1ParIterBase_1ac7831cc465d1c1fa0de090a49f217273" prot="private" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParticleTilePtr</name></member>
      <member refid="classamrex_1_1ParIterBase_1ac487564b76eef9062abdc0ecfbff38da" prot="private" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParticleTileRef</name></member>
      <member refid="classamrex_1_1ParIter_1ae8d26140003b63881c371560529f701b" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParticleTileType</name></member>
      <member refid="classamrex_1_1ParIter_1a8b272e429ae3329aee47e959f0edac44" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1ParIterBase_1aed0e07578fe83ec25bacd2215c603da4" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1ParIterBase_1a156793c5ff63f6c01bc41e58b12cd39d" prot="private" virt="non-virtual"><scope>amrex::ParIter</scope><name>PCType</name></member>
      <member refid="classamrex_1_1ParIter_1abf095116c5c4c64339fd5e1676940e32" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>RealVector</name></member>
      <member refid="classamrex_1_1ParIter_1af4be85fd6660434e52068e601531cd00" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>SoA</name></member>
      <member refid="classamrex_1_1ParIterBase_1a3f02fe9f98bc158c6200b917cf470e6f" prot="private" virt="non-virtual"><scope>amrex::ParIter</scope><name>SoARef</name></member>
      <member refid="classamrex_1_1MFIter_1a6387ff79e8fcfbfdcfbc7dd8d8e78621" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>streams</name></member>
      <member refid="classamrex_1_1MFIter_1a8a7f84508a19797af16e5f3f6b13523c" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>theFabArrayBase</name></member>
      <member refid="classamrex_1_1MFIter_1a10b2f0f6900d23295fe25fd526153f43" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>tile_array</name></member>
      <member refid="classamrex_1_1MFIter_1ae64d80e0b2d14e9209c426a0654e8a1f" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1MFIter_1a4633394eac1ff3355fe082b815ed7413" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aade25ad6c9b6b92a5dbe2e022fc77912" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3563f863ba15b874a9abd0dc338c0c72" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3d73098e8ef5205fc2bce58d5ed0f21b" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>tileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a1db74b1bbdeb756077e4bc33e25a2740" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>Tiling</name></member>
      <member refid="classamrex_1_1MFIter_1a1406cbb9152b357a39e877b78eb8ff0d" prot="protected" virt="non-virtual"><scope>amrex::ParIter</scope><name>typ</name></member>
      <member refid="classamrex_1_1MFIter_1a77ae102619461dabde09c7801390b841" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>validbox</name></member>
      <member refid="classamrex_1_1MFIter_1aac3223d243bff8f86cbd227b8f1af866" prot="public" virt="non-virtual"><scope>amrex::ParIter</scope><name>~MFIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
