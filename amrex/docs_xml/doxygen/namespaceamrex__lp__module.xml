<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex__lp__module" kind="namespace" language="Fortran">
    <compoundname>amrex_lp_module</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex__lp__module_1a52ad176e23d563ad11560d5765a7f048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_linesolve</definition>
        <argsstring>(phi, phi_l1, phi_h1, rhs, rhs_l1, rhs_h1, f0, f0_l1, f0_h1, m0, m0_l1, m0_h1, f2, f2_l1, f2_h1, m2, m2_l1, m2_h1, lo, hi, nc, h)</argsstring>
        <name>amrex_lp_linesolve</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Gauss-Seidel Red-Black (GSRB): Apply the GSRB relaxation to the state phi for the equation <computeroutput>L(phi) = Div(Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" line="34" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" bodystart="41" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1a51e5fe7dc126696e649405d151735a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_adotx</definition>
        <argsstring>(y, y_l1, y_h1, x, x_l1, x_h1, lo, hi, nc, h)</argsstring>
        <name>amrex_lp_adotx</name>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>y_l1</type>
          <defname>y_l1</defname>
        </param>
        <param>
          <type>y_h1</type>
          <defname>y_h1</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" line="87" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" bodystart="93" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1add15fd9e4a0c5afd2f0dad329631aa92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_flux</definition>
        <argsstring>(x, x_l1, x_h1, xlo, xhi, nc, h, xflux, xflux_l1, xflux_h1)</argsstring>
        <name>amrex_lp_flux</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>xlo</type>
          <defname>xlo</defname>
        </param>
        <param>
          <type>xhi</type>
          <defname>xhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>xflux</type>
          <defname>xflux</defname>
        </param>
        <param>
          <type>xflux_l1</type>
          <defname>xflux_l1</defname>
        </param>
        <param>
          <type>xflux_h1</type>
          <defname>xflux_h1</defname>
        </param>
        <briefdescription>
<para>Fill in fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" line="121" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" bodystart="127" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1a3ab089c6dc36ec382dd6e64c489ea9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_gsrb</definition>
        <argsstring>(phi, phi_l1, phi_l2, phi_h1, phi_h2, rhs, rhs_l1, rhs_l2, rhs_h1, rhs_h2, f0, f0_l1, f0_l2, f0_h1, f0_h2, m0, m0_l1, m0_l2, m0_h1, m0_h2, f1, f1_l1, f1_l2, f1_h1, f1_h2, m1, m1_l1, m1_l2, m1_h1, m1_h2, f2, f2_l1, f2_l2, f2_h1, f2_h2, m2, m2_l1, m2_l2, m2_h1, m2_h2, f3, f3_l1, f3_l2, f3_h1, f3_h2, m3, m3_l1, m3_l2, m3_h1, m3_h2, lo, hi, blo, bhi, nc, h, redblack)</argsstring>
        <name>amrex_lp_gsrb</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_l2</type>
          <defname>phi_l2</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>phi_h2</type>
          <defname>phi_h2</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_l2</type>
          <defname>rhs_l2</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>rhs_h2</type>
          <defname>rhs_h2</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_l2</type>
          <defname>f0_l2</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>f0_h2</type>
          <defname>f0_h2</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_l2</type>
          <defname>m0_l2</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>m0_h2</type>
          <defname>m0_h2</defname>
        </param>
        <param>
          <type>f1</type>
          <defname>f1</defname>
        </param>
        <param>
          <type>f1_l1</type>
          <defname>f1_l1</defname>
        </param>
        <param>
          <type>f1_l2</type>
          <defname>f1_l2</defname>
        </param>
        <param>
          <type>f1_h1</type>
          <defname>f1_h1</defname>
        </param>
        <param>
          <type>f1_h2</type>
          <defname>f1_h2</defname>
        </param>
        <param>
          <type>m1</type>
          <defname>m1</defname>
        </param>
        <param>
          <type>m1_l1</type>
          <defname>m1_l1</defname>
        </param>
        <param>
          <type>m1_l2</type>
          <defname>m1_l2</defname>
        </param>
        <param>
          <type>m1_h1</type>
          <defname>m1_h1</defname>
        </param>
        <param>
          <type>m1_h2</type>
          <defname>m1_h2</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_l2</type>
          <defname>f2_l2</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>f2_h2</type>
          <defname>f2_h2</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_l2</type>
          <defname>m2_l2</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>m2_h2</type>
          <defname>m2_h2</defname>
        </param>
        <param>
          <type>f3</type>
          <defname>f3</defname>
        </param>
        <param>
          <type>f3_l1</type>
          <defname>f3_l1</defname>
        </param>
        <param>
          <type>f3_l2</type>
          <defname>f3_l2</defname>
        </param>
        <param>
          <type>f3_h1</type>
          <defname>f3_h1</defname>
        </param>
        <param>
          <type>f3_h2</type>
          <defname>f3_h2</defname>
        </param>
        <param>
          <type>m3</type>
          <defname>m3</defname>
        </param>
        <param>
          <type>m3_l1</type>
          <defname>m3_l1</defname>
        </param>
        <param>
          <type>m3_l2</type>
          <defname>m3_l2</defname>
        </param>
        <param>
          <type>m3_h1</type>
          <defname>m3_h1</defname>
        </param>
        <param>
          <type>m3_h2</type>
          <defname>m3_h2</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>blo</type>
          <defname>blo</defname>
        </param>
        <param>
          <type>bhi</type>
          <defname>bhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>redblack</type>
          <defname>redblack</defname>
        </param>
        <briefdescription>
<para>Gauss-Seidel Red-Black (GSRB): Apply the GSRB relaxation to the state phi for the equation <computeroutput>L(phi) = Div(Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_2D.F90" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_2D.F90" bodystart="43" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1a459c7b4b98ffa854ac96f6963154cce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_adotx</definition>
        <argsstring>(y, y_l1, y_l2, y_h1, y_h2, x, x_l1, x_l2, x_h1, x_h2, lo, hi, nc, h)</argsstring>
        <name>amrex_lp_adotx</name>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>y_l1</type>
          <defname>y_l1</defname>
        </param>
        <param>
          <type>y_l2</type>
          <defname>y_l2</defname>
        </param>
        <param>
          <type>y_h1</type>
          <defname>y_h1</defname>
        </param>
        <param>
          <type>y_h2</type>
          <defname>y_h2</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_2D.F90" line="109" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_2D.F90" bodystart="115" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1a723cdf4c1a46daf4fc35b87f1fff38ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_flux</definition>
        <argsstring>(x, x_l1, x_l2, x_h1, x_h2, xlo, xhi, ylo, yhi, nc, h, xflux, xflux_l1, xflux_l2, xflux_h1, xflux_h2, yflux, yflux_l1, yflux_l2, yflux_h1, yflux_h2)</argsstring>
        <name>amrex_lp_flux</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>xlo</type>
          <defname>xlo</defname>
        </param>
        <param>
          <type>xhi</type>
          <defname>xhi</defname>
        </param>
        <param>
          <type>ylo</type>
          <defname>ylo</defname>
        </param>
        <param>
          <type>yhi</type>
          <defname>yhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>xflux</type>
          <defname>xflux</defname>
        </param>
        <param>
          <type>xflux_l1</type>
          <defname>xflux_l1</defname>
        </param>
        <param>
          <type>xflux_l2</type>
          <defname>xflux_l2</defname>
        </param>
        <param>
          <type>xflux_h1</type>
          <defname>xflux_h1</defname>
        </param>
        <param>
          <type>xflux_h2</type>
          <defname>xflux_h2</defname>
        </param>
        <param>
          <type>yflux</type>
          <defname>yflux</defname>
        </param>
        <param>
          <type>yflux_l1</type>
          <defname>yflux_l1</defname>
        </param>
        <param>
          <type>yflux_l2</type>
          <defname>yflux_l2</defname>
        </param>
        <param>
          <type>yflux_h1</type>
          <defname>yflux_h1</defname>
        </param>
        <param>
          <type>yflux_h2</type>
          <defname>yflux_h2</defname>
        </param>
        <briefdescription>
<para>Fill in fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_2D.F90" line="149" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_2D.F90" bodystart="158" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1ae424f129e2f5a30230f5c8bdd59f39e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_gsrb</definition>
        <argsstring>(phi, phi_l1, phi_l2, phi_l3, phi_h1, phi_h2, phi_h3, rhs, rhs_l1, rhs_l2, rhs_l3, rhs_h1, rhs_h2, rhs_h3, f0, f0_l1, f0_l2, f0_l3, f0_h1, f0_h2, f0_h3, m0, m0_l1, m0_l2, m0_l3, m0_h1, m0_h2, m0_h3, f1, f1_l1, f1_l2, f1_l3, f1_h1, f1_h2, f1_h3, m1, m1_l1, m1_l2, m1_l3, m1_h1, m1_h2, m1_h3, f2, f2_l1, f2_l2, f2_l3, f2_h1, f2_h2, f2_h3, m2, m2_l1, m2_l2, m2_l3, m2_h1, m2_h2, m2_h3, f3, f3_l1, f3_l2, f3_l3, f3_h1, f3_h2, f3_h3, m3, m3_l1, m3_l2, m3_l3, m3_h1, m3_h2, m3_h3, f4, f4_l1, f4_l2, f4_l3, f4_h1, f4_h2, f4_h3, m4, m4_l1, m4_l2, m4_l3, m4_h1, m4_h2, m4_h3, f5, f5_l1, f5_l2, f5_l3, f5_h1, f5_h2, f5_h3, m5, m5_l1, m5_l2, m5_l3, m5_h1, m5_h2, m5_h3, lo, hi, blo, bhi, nc, h, redblack)</argsstring>
        <name>amrex_lp_gsrb</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_l2</type>
          <defname>phi_l2</defname>
        </param>
        <param>
          <type>phi_l3</type>
          <defname>phi_l3</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>phi_h2</type>
          <defname>phi_h2</defname>
        </param>
        <param>
          <type>phi_h3</type>
          <defname>phi_h3</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_l2</type>
          <defname>rhs_l2</defname>
        </param>
        <param>
          <type>rhs_l3</type>
          <defname>rhs_l3</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>rhs_h2</type>
          <defname>rhs_h2</defname>
        </param>
        <param>
          <type>rhs_h3</type>
          <defname>rhs_h3</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_l2</type>
          <defname>f0_l2</defname>
        </param>
        <param>
          <type>f0_l3</type>
          <defname>f0_l3</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>f0_h2</type>
          <defname>f0_h2</defname>
        </param>
        <param>
          <type>f0_h3</type>
          <defname>f0_h3</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_l2</type>
          <defname>m0_l2</defname>
        </param>
        <param>
          <type>m0_l3</type>
          <defname>m0_l3</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>m0_h2</type>
          <defname>m0_h2</defname>
        </param>
        <param>
          <type>m0_h3</type>
          <defname>m0_h3</defname>
        </param>
        <param>
          <type>f1</type>
          <defname>f1</defname>
        </param>
        <param>
          <type>f1_l1</type>
          <defname>f1_l1</defname>
        </param>
        <param>
          <type>f1_l2</type>
          <defname>f1_l2</defname>
        </param>
        <param>
          <type>f1_l3</type>
          <defname>f1_l3</defname>
        </param>
        <param>
          <type>f1_h1</type>
          <defname>f1_h1</defname>
        </param>
        <param>
          <type>f1_h2</type>
          <defname>f1_h2</defname>
        </param>
        <param>
          <type>f1_h3</type>
          <defname>f1_h3</defname>
        </param>
        <param>
          <type>m1</type>
          <defname>m1</defname>
        </param>
        <param>
          <type>m1_l1</type>
          <defname>m1_l1</defname>
        </param>
        <param>
          <type>m1_l2</type>
          <defname>m1_l2</defname>
        </param>
        <param>
          <type>m1_l3</type>
          <defname>m1_l3</defname>
        </param>
        <param>
          <type>m1_h1</type>
          <defname>m1_h1</defname>
        </param>
        <param>
          <type>m1_h2</type>
          <defname>m1_h2</defname>
        </param>
        <param>
          <type>m1_h3</type>
          <defname>m1_h3</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_l2</type>
          <defname>f2_l2</defname>
        </param>
        <param>
          <type>f2_l3</type>
          <defname>f2_l3</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>f2_h2</type>
          <defname>f2_h2</defname>
        </param>
        <param>
          <type>f2_h3</type>
          <defname>f2_h3</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_l2</type>
          <defname>m2_l2</defname>
        </param>
        <param>
          <type>m2_l3</type>
          <defname>m2_l3</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>m2_h2</type>
          <defname>m2_h2</defname>
        </param>
        <param>
          <type>m2_h3</type>
          <defname>m2_h3</defname>
        </param>
        <param>
          <type>f3</type>
          <defname>f3</defname>
        </param>
        <param>
          <type>f3_l1</type>
          <defname>f3_l1</defname>
        </param>
        <param>
          <type>f3_l2</type>
          <defname>f3_l2</defname>
        </param>
        <param>
          <type>f3_l3</type>
          <defname>f3_l3</defname>
        </param>
        <param>
          <type>f3_h1</type>
          <defname>f3_h1</defname>
        </param>
        <param>
          <type>f3_h2</type>
          <defname>f3_h2</defname>
        </param>
        <param>
          <type>f3_h3</type>
          <defname>f3_h3</defname>
        </param>
        <param>
          <type>m3</type>
          <defname>m3</defname>
        </param>
        <param>
          <type>m3_l1</type>
          <defname>m3_l1</defname>
        </param>
        <param>
          <type>m3_l2</type>
          <defname>m3_l2</defname>
        </param>
        <param>
          <type>m3_l3</type>
          <defname>m3_l3</defname>
        </param>
        <param>
          <type>m3_h1</type>
          <defname>m3_h1</defname>
        </param>
        <param>
          <type>m3_h2</type>
          <defname>m3_h2</defname>
        </param>
        <param>
          <type>m3_h3</type>
          <defname>m3_h3</defname>
        </param>
        <param>
          <type>f4</type>
          <defname>f4</defname>
        </param>
        <param>
          <type>f4_l1</type>
          <defname>f4_l1</defname>
        </param>
        <param>
          <type>f4_l2</type>
          <defname>f4_l2</defname>
        </param>
        <param>
          <type>f4_l3</type>
          <defname>f4_l3</defname>
        </param>
        <param>
          <type>f4_h1</type>
          <defname>f4_h1</defname>
        </param>
        <param>
          <type>f4_h2</type>
          <defname>f4_h2</defname>
        </param>
        <param>
          <type>f4_h3</type>
          <defname>f4_h3</defname>
        </param>
        <param>
          <type>m4</type>
          <defname>m4</defname>
        </param>
        <param>
          <type>m4_l1</type>
          <defname>m4_l1</defname>
        </param>
        <param>
          <type>m4_l2</type>
          <defname>m4_l2</defname>
        </param>
        <param>
          <type>m4_l3</type>
          <defname>m4_l3</defname>
        </param>
        <param>
          <type>m4_h1</type>
          <defname>m4_h1</defname>
        </param>
        <param>
          <type>m4_h2</type>
          <defname>m4_h2</defname>
        </param>
        <param>
          <type>m4_h3</type>
          <defname>m4_h3</defname>
        </param>
        <param>
          <type>f5</type>
          <defname>f5</defname>
        </param>
        <param>
          <type>f5_l1</type>
          <defname>f5_l1</defname>
        </param>
        <param>
          <type>f5_l2</type>
          <defname>f5_l2</defname>
        </param>
        <param>
          <type>f5_l3</type>
          <defname>f5_l3</defname>
        </param>
        <param>
          <type>f5_h1</type>
          <defname>f5_h1</defname>
        </param>
        <param>
          <type>f5_h2</type>
          <defname>f5_h2</defname>
        </param>
        <param>
          <type>f5_h3</type>
          <defname>f5_h3</defname>
        </param>
        <param>
          <type>m5</type>
          <defname>m5</defname>
        </param>
        <param>
          <type>m5_l1</type>
          <defname>m5_l1</defname>
        </param>
        <param>
          <type>m5_l2</type>
          <defname>m5_l2</defname>
        </param>
        <param>
          <type>m5_l3</type>
          <defname>m5_l3</defname>
        </param>
        <param>
          <type>m5_h1</type>
          <defname>m5_h1</defname>
        </param>
        <param>
          <type>m5_h2</type>
          <defname>m5_h2</defname>
        </param>
        <param>
          <type>m5_h3</type>
          <defname>m5_h3</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>blo</type>
          <defname>blo</defname>
        </param>
        <param>
          <type>bhi</type>
          <defname>bhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>redblack</type>
          <defname>redblack</defname>
        </param>
        <briefdescription>
<para>Gauss-Seidel Red-Black (GSRB): Apply the GSRB relaxation to the state phi for the equation <computeroutput>L(phi) = Div(Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_3D.F90" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_3D.F90" bodystart="45" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1a52468617f98bc1f1a904ac7ce454dd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_adotx</definition>
        <argsstring>(y, y_l1, y_l2, y_l3, y_h1, y_h2, y_h3, x, x_l1, x_l2, x_l3, x_h1, x_h2, x_h3, lo, hi, nc, h)</argsstring>
        <name>amrex_lp_adotx</name>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>y_l1</type>
          <defname>y_l1</defname>
        </param>
        <param>
          <type>y_l2</type>
          <defname>y_l2</defname>
        </param>
        <param>
          <type>y_l3</type>
          <defname>y_l3</defname>
        </param>
        <param>
          <type>y_h1</type>
          <defname>y_h1</defname>
        </param>
        <param>
          <type>y_h2</type>
          <defname>y_h2</defname>
        </param>
        <param>
          <type>y_h3</type>
          <defname>y_h3</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_l3</type>
          <defname>x_l3</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>x_h3</type>
          <defname>x_h3</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_3D.F90" line="128" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_3D.F90" bodystart="134" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__lp__module_1aacdb0836f94858f544964d3d65b0ddbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_lp_module::amrex_lp_flux</definition>
        <argsstring>(x, x_l1, x_l2, x_l3, x_h1, x_h2, x_h3, xlo, xhi, ylo, yhi, zlo, zhi, nc, h, xflux, xflux_l1, xflux_l2, xflux_l3, xflux_h1, xflux_h2, xflux_h3, yflux, yflux_l1, yflux_l2, yflux_l3, yflux_h1, yflux_h2, yflux_h3, zflux, zflux_l1, zflux_l2, zflux_l3, zflux_h1, zflux_h2, zflux_h3)</argsstring>
        <name>amrex_lp_flux</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_l3</type>
          <defname>x_l3</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>x_h3</type>
          <defname>x_h3</defname>
        </param>
        <param>
          <type>xlo</type>
          <defname>xlo</defname>
        </param>
        <param>
          <type>xhi</type>
          <defname>xhi</defname>
        </param>
        <param>
          <type>ylo</type>
          <defname>ylo</defname>
        </param>
        <param>
          <type>yhi</type>
          <defname>yhi</defname>
        </param>
        <param>
          <type>zlo</type>
          <defname>zlo</defname>
        </param>
        <param>
          <type>zhi</type>
          <defname>zhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>xflux</type>
          <defname>xflux</defname>
        </param>
        <param>
          <type>xflux_l1</type>
          <defname>xflux_l1</defname>
        </param>
        <param>
          <type>xflux_l2</type>
          <defname>xflux_l2</defname>
        </param>
        <param>
          <type>xflux_l3</type>
          <defname>xflux_l3</defname>
        </param>
        <param>
          <type>xflux_h1</type>
          <defname>xflux_h1</defname>
        </param>
        <param>
          <type>xflux_h2</type>
          <defname>xflux_h2</defname>
        </param>
        <param>
          <type>xflux_h3</type>
          <defname>xflux_h3</defname>
        </param>
        <param>
          <type>yflux</type>
          <defname>yflux</defname>
        </param>
        <param>
          <type>yflux_l1</type>
          <defname>yflux_l1</defname>
        </param>
        <param>
          <type>yflux_l2</type>
          <defname>yflux_l2</defname>
        </param>
        <param>
          <type>yflux_l3</type>
          <defname>yflux_l3</defname>
        </param>
        <param>
          <type>yflux_h1</type>
          <defname>yflux_h1</defname>
        </param>
        <param>
          <type>yflux_h2</type>
          <defname>yflux_h2</defname>
        </param>
        <param>
          <type>yflux_h3</type>
          <defname>yflux_h3</defname>
        </param>
        <param>
          <type>zflux</type>
          <defname>zflux</defname>
        </param>
        <param>
          <type>zflux_l1</type>
          <defname>zflux_l1</defname>
        </param>
        <param>
          <type>zflux_l2</type>
          <defname>zflux_l2</defname>
        </param>
        <param>
          <type>zflux_l3</type>
          <defname>zflux_l3</defname>
        </param>
        <param>
          <type>zflux_h1</type>
          <defname>zflux_h1</defname>
        </param>
        <param>
          <type>zflux_h2</type>
          <defname>zflux_h2</defname>
        </param>
        <param>
          <type>zflux_h3</type>
          <defname>zflux_h3</defname>
        </param>
        <briefdescription>
<para>Fill in fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_3D.F90" line="171" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_3D.F90" bodystart="182" bodyend="231"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LP_1D.F90" line="2" column="1"/>
  </compounddef>
</doxygen>
