<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__ABecLaplacian_8cpp" kind="file" language="C++">
    <compoundname>AMReX_ABecLaplacian.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">algorithm</includes>
    <includes refid="AMReX__ABecLaplacian_8H" local="no">AMReX_ABecLaplacian.H</includes>
    <includes refid="AMReX__ABec__F_8H" local="no">AMReX_ABec_F.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <incdepgraph>
      <node id="50793">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.cpp</label>
        <link refid="AMReX_ABecLaplacian.cpp"/>
        <childnode refid="50794" relation="include">
        </childnode>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50796" relation="include">
        </childnode>
        <childnode refid="50907" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
      </node>
      <node id="50859">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50794" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50807" relation="include">
        </childnode>
      </node>
      <node id="50883">
        <label>iomanip</label>
      </node>
      <node id="50810">
        <label>functional</label>
      </node>
      <node id="50819">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50821" relation="include">
        </childnode>
        <childnode refid="50822" relation="include">
        </childnode>
        <childnode refid="50823" relation="include">
        </childnode>
        <childnode refid="50831" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
      </node>
      <node id="50850">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
      </node>
      <node id="50828">
        <label>limits</label>
      </node>
      <node id="50849">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
      </node>
      <node id="50884">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="50866" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50881" relation="include">
        </childnode>
      </node>
      <node id="50832">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50833" relation="include">
        </childnode>
        <childnode refid="50834" relation="include">
        </childnode>
        <childnode refid="50807" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
        <childnode refid="50823" relation="include">
        </childnode>
        <childnode refid="50835" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50836" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
      </node>
      <node id="50875">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50872" relation="include">
        </childnode>
        <childnode refid="50816" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50836" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50827" relation="include">
        </childnode>
      </node>
      <node id="50838">
        <label>cstdint</label>
      </node>
      <node id="50895">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50819" relation="include">
        </childnode>
        <childnode refid="50857" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
        <childnode refid="50896" relation="include">
        </childnode>
        <childnode refid="50894" relation="include">
        </childnode>
        <childnode refid="50882" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
        <childnode refid="50867" relation="include">
        </childnode>
      </node>
      <node id="50857">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="50821" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
      </node>
      <node id="50825">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50827" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50829" relation="include">
        </childnode>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50807" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50830" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50816" relation="include">
        </childnode>
        <childnode refid="50806" relation="include">
        </childnode>
      </node>
      <node id="50805">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50807" relation="include">
        </childnode>
        <childnode refid="50808" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50810" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50804" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
      </node>
      <node id="50907">
        <label>AMReX_ABec_F.H</label>
        <link refid="AMReX__ABec__F_8H"/>
        <childnode refid="50908" relation="include">
        </childnode>
      </node>
      <node id="50851">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="50874">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="50869">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="50852" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
      </node>
      <node id="50818">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
      </node>
      <node id="50882">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="50803" relation="include">
        </childnode>
        <childnode refid="50794" relation="include">
        </childnode>
        <childnode refid="50883" relation="include">
        </childnode>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50859" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
      </node>
      <node id="50827">
        <label>cmath</label>
      </node>
      <node id="50893">
        <label>cassert</label>
      </node>
      <node id="50809">
        <label>stdexcept</label>
      </node>
      <node id="50866">
        <label>numeric</label>
      </node>
      <node id="50908">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="50834" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
      </node>
      <node id="50831">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
        <childnode refid="50823" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
      </node>
      <node id="50840">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="50827" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50829" relation="include">
        </childnode>
        <childnode refid="50798" relation="include">
        </childnode>
        <childnode refid="50841" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50816" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50842" relation="include">
        </childnode>
        <childnode refid="50831" relation="include">
        </childnode>
        <childnode refid="50843" relation="include">
        </childnode>
        <childnode refid="50845" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50849" relation="include">
        </childnode>
        <childnode refid="50850" relation="include">
        </childnode>
        <childnode refid="50851" relation="include">
        </childnode>
        <childnode refid="50852" relation="include">
        </childnode>
        <childnode refid="50867" relation="include">
        </childnode>
      </node>
      <node id="50801">
        <label>string</label>
      </node>
      <node id="50881">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="50821" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50882" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
        <childnode refid="50872" relation="include">
        </childnode>
      </node>
      <node id="50842">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="50832" relation="include">
        </childnode>
      </node>
      <node id="50821">
        <label>map</label>
      </node>
      <node id="50837">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="50838" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50839" relation="include">
        </childnode>
        <childnode refid="50887" relation="include">
        </childnode>
        <childnode refid="50900" relation="include">
        </childnode>
        <childnode refid="50894" relation="include">
        </childnode>
      </node>
      <node id="50848">
        <label>unordered_set</label>
      </node>
      <node id="50901">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50819" relation="include">
        </childnode>
        <childnode refid="50839" relation="include">
        </childnode>
        <childnode refid="50835" relation="include">
        </childnode>
        <childnode refid="50902" relation="include">
        </childnode>
        <childnode refid="50904" relation="include">
        </childnode>
        <childnode refid="50906" relation="include">
        </childnode>
        <childnode refid="50889" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50898" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50821" relation="include">
        </childnode>
      </node>
      <node id="50899">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="50898">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="50895" relation="include">
        </childnode>
        <childnode refid="50897" relation="include">
        </childnode>
      </node>
      <node id="50794">
        <label>fstream</label>
      </node>
      <node id="50889">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50821" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50890" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
        <childnode refid="50891" relation="include">
        </childnode>
        <childnode refid="50894" relation="include">
        </childnode>
      </node>
      <node id="50897">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
        <childnode refid="50895" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
        <childnode refid="50839" relation="include">
        </childnode>
        <childnode refid="50891" relation="include">
        </childnode>
        <childnode refid="50867" relation="include">
        </childnode>
      </node>
      <node id="50906">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50806" relation="include">
        </childnode>
      </node>
      <node id="50834">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="50815" relation="include">
        </childnode>
      </node>
      <node id="50891">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50798" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50892" relation="include">
        </childnode>
      </node>
      <node id="50797">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="50798" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50800" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50803" relation="include">
        </childnode>
        <childnode refid="50804" relation="include">
        </childnode>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
      </node>
      <node id="50880">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50852" relation="include">
        </childnode>
      </node>
      <node id="50814">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="50896">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
        <childnode refid="50882" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50841" relation="include">
        </childnode>
      </node>
      <node id="50816">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="50868">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50869" relation="include">
        </childnode>
        <childnode refid="50870" relation="include">
        </childnode>
        <childnode refid="50872" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50842" relation="include">
        </childnode>
        <childnode refid="50816" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50871" relation="include">
        </childnode>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50873" relation="include">
        </childnode>
        <childnode refid="50874" relation="include">
        </childnode>
      </node>
      <node id="50854">
        <label>sys/types.h</label>
      </node>
      <node id="50894">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="50825" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
      </node>
      <node id="50865">
        <label>typeinfo</label>
      </node>
      <node id="50804">
        <label>cstdio</label>
      </node>
      <node id="50871">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="50841" relation="include">
        </childnode>
        <childnode refid="50816" relation="include">
        </childnode>
      </node>
      <node id="50812">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
      </node>
      <node id="50903">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="50837" relation="include">
        </childnode>
        <childnode refid="50889" relation="include">
        </childnode>
      </node>
      <node id="50860">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="50861" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50800" relation="include">
        </childnode>
        <childnode refid="50803" relation="include">
        </childnode>
        <childnode refid="50804" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50862" relation="include">
        </childnode>
        <childnode refid="50863" relation="include">
        </childnode>
        <childnode refid="50864" relation="include">
        </childnode>
      </node>
      <node id="50855">
        <label>unistd.h</label>
      </node>
      <node id="50861">
        <label>stack</label>
      </node>
      <node id="50811">
        <label>vector</label>
      </node>
      <node id="50886">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50882" relation="include">
        </childnode>
        <childnode refid="50851" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
      </node>
      <node id="50813">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="50805" relation="include">
        </childnode>
      </node>
      <node id="50806">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="50800">
        <label>utility</label>
      </node>
      <node id="50798">
        <label>array</label>
      </node>
      <node id="50887">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50877" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50821" relation="include">
        </childnode>
        <childnode refid="50800" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50846" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50819" relation="include">
        </childnode>
        <childnode refid="50888" relation="include">
        </childnode>
        <childnode refid="50886" relation="include">
        </childnode>
        <childnode refid="50857" relation="include">
        </childnode>
        <childnode refid="50889" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
        <childnode refid="50852" relation="include">
        </childnode>
        <childnode refid="50807" relation="include">
        </childnode>
        <childnode refid="50849" relation="include">
        </childnode>
        <childnode refid="50894" relation="include">
        </childnode>
        <childnode refid="50882" relation="include">
        </childnode>
        <childnode refid="50895" relation="include">
        </childnode>
        <childnode refid="50897" relation="include">
        </childnode>
        <childnode refid="50851" relation="include">
        </childnode>
        <childnode refid="50871" relation="include">
        </childnode>
        <childnode refid="50898" relation="include">
        </childnode>
        <childnode refid="50840" relation="include">
        </childnode>
        <childnode refid="50867" relation="include">
        </childnode>
        <childnode refid="50899" relation="include">
        </childnode>
      </node>
      <node id="50839">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50840" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50886" relation="include">
        </childnode>
        <childnode refid="50827" relation="include">
        </childnode>
      </node>
      <node id="50803">
        <label>sstream</label>
      </node>
      <node id="50900">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="50887" relation="include">
        </childnode>
        <childnode refid="50898" relation="include">
        </childnode>
        <childnode refid="50882" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
      </node>
      <node id="50808">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="50809" relation="include">
        </childnode>
      </node>
      <node id="50833">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50816" relation="include">
        </childnode>
        <childnode refid="50830" relation="include">
        </childnode>
      </node>
      <node id="50870">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50869" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50871" relation="include">
        </childnode>
      </node>
      <node id="50858">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="50807" relation="include">
        </childnode>
        <childnode refid="50859" relation="include">
        </childnode>
        <childnode refid="50860" relation="include">
        </childnode>
        <childnode refid="50849" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50865" relation="include">
        </childnode>
        <childnode refid="50795" relation="include">
        </childnode>
        <childnode refid="50810" relation="include">
        </childnode>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50866" relation="include">
        </childnode>
      </node>
      <node id="50852">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50801" relation="include">
        </childnode>
        <childnode refid="50821" relation="include">
        </childnode>
        <childnode refid="50853" relation="include">
        </childnode>
        <childnode refid="50841" relation="include">
        </childnode>
        <childnode refid="50854" relation="include">
        </childnode>
        <childnode refid="50855" relation="include">
        </childnode>
        <childnode refid="50856" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50819" relation="include">
        </childnode>
        <childnode refid="50857" relation="include">
        </childnode>
        <childnode refid="50858" relation="include">
        </childnode>
      </node>
      <node id="50844">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
      </node>
      <node id="50835">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50813" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50806" relation="include">
        </childnode>
      </node>
      <node id="50830">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
      </node>
      <node id="50856">
        <label>sys/wait.h</label>
      </node>
      <node id="50824">
        <label>iosfwd</label>
      </node>
      <node id="50826">
        <label>cstdlib</label>
      </node>
      <node id="50864">
        <label>cfenv</label>
      </node>
      <node id="50802">
        <label>iostream</label>
      </node>
      <node id="50823">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50807" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
      </node>
      <node id="50902">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="50819" relation="include">
        </childnode>
        <childnode refid="50903" relation="include">
        </childnode>
      </node>
      <node id="50836">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="50825" relation="include">
        </childnode>
      </node>
      <node id="50820">
        <label>cstddef</label>
      </node>
      <node id="50822">
        <label>unordered_map</label>
      </node>
      <node id="50888">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="50824" relation="include">
        </childnode>
        <childnode refid="50823" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
        <childnode refid="50831" relation="include">
        </childnode>
      </node>
      <node id="50867">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50868" relation="include">
        </childnode>
        <childnode refid="50869" relation="include">
        </childnode>
        <childnode refid="50875" relation="include">
        </childnode>
        <childnode refid="50872" relation="include">
        </childnode>
        <childnode refid="50876" relation="include">
        </childnode>
        <childnode refid="50878" relation="include">
        </childnode>
        <childnode refid="50879" relation="include">
        </childnode>
        <childnode refid="50870" relation="include">
        </childnode>
        <childnode refid="50880" relation="include">
        </childnode>
        <childnode refid="50881" relation="include">
        </childnode>
        <childnode refid="50884" relation="include">
        </childnode>
        <childnode refid="50885" relation="include">
        </childnode>
      </node>
      <node id="50829">
        <label>climits</label>
      </node>
      <node id="50885">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="50847">
        <label>mutex</label>
      </node>
      <node id="50853">
        <label>chrono</label>
      </node>
      <node id="50873">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="50863">
        <label>csignal</label>
      </node>
      <node id="50904">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="50905" relation="include">
        </childnode>
        <childnode refid="50887" relation="include">
        </childnode>
        <childnode refid="50889" relation="include">
        </childnode>
      </node>
      <node id="50905">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="50840" relation="include">
        </childnode>
        <childnode refid="50839" relation="include">
        </childnode>
      </node>
      <node id="50845">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50846" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
        <childnode refid="50847" relation="include">
        </childnode>
        <childnode refid="50848" relation="include">
        </childnode>
        <childnode refid="50810" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
      </node>
      <node id="50841">
        <label>type_traits</label>
      </node>
      <node id="50846">
        <label>set</label>
      </node>
      <node id="50843">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="50844" relation="include">
        </childnode>
      </node>
      <node id="50807">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="50878">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="50844" relation="include">
        </childnode>
      </node>
      <node id="50795">
        <label>algorithm</label>
      </node>
      <node id="50872">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50798" relation="include">
        </childnode>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50852" relation="include">
        </childnode>
        <childnode refid="50869" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
      </node>
      <node id="50817">
        <label>AMReX_LinOp.H</label>
        <link refid="AMReX__LinOp_8H"/>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50819" relation="include">
        </childnode>
        <childnode refid="50837" relation="include">
        </childnode>
        <childnode refid="50901" relation="include">
        </childnode>
      </node>
      <node id="50862">
        <label>execinfo.h</label>
      </node>
      <node id="50877">
        <label>cstring</label>
      </node>
      <node id="50796">
        <label>AMReX_ABecLaplacian.H</label>
        <link refid="AMReX__ABecLaplacian_8H"/>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50817" relation="include">
        </childnode>
      </node>
      <node id="50892">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50877" relation="include">
        </childnode>
        <childnode refid="50802" relation="include">
        </childnode>
        <childnode refid="50827" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50814" relation="include">
        </childnode>
        <childnode refid="50811" relation="include">
        </childnode>
        <childnode refid="50893" relation="include">
        </childnode>
        <childnode refid="50825" relation="include">
        </childnode>
      </node>
      <node id="50890">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="50828" relation="include">
        </childnode>
        <childnode refid="50805" relation="include">
        </childnode>
        <childnode refid="50815" relation="include">
        </childnode>
        <childnode refid="50797" relation="include">
        </childnode>
        <childnode refid="50818" relation="include">
        </childnode>
        <childnode refid="50832" relation="include">
        </childnode>
      </node>
      <node id="50799">
        <label>memory</label>
      </node>
      <node id="50876">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="50820" relation="include">
        </childnode>
        <childnode refid="50877" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
        <childnode refid="50799" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
        <childnode refid="50871" relation="include">
        </childnode>
        <childnode refid="50872" relation="include">
        </childnode>
      </node>
      <node id="50879">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="50806" relation="include">
        </childnode>
        <childnode refid="50812" relation="include">
        </childnode>
        <childnode refid="50872" relation="include">
        </childnode>
        <childnode refid="50871" relation="include">
        </childnode>
        <childnode refid="50844" relation="include">
        </childnode>
        <childnode refid="50826" relation="include">
        </childnode>
      </node>
      <node id="50815">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="50816" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ABecLaplacian_8H" kindref="compound">AMReX_ABecLaplacian.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ABec__F_8H" kindref="compound">AMReX_ABec_F.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">Real<sp/><ref refid="classamrex_1_1ABecLaplacian_1a954471ae63b404e174b8488dd4610b67" kindref="member">ABecLaplacian::a_def</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">Real<sp/><ref refid="classamrex_1_1ABecLaplacian_1ad43bb0dc69d0d0cccf5316175aa59eeb" kindref="member">ABecLaplacian::b_def</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">Real<sp/><ref refid="classamrex_1_1ABecLaplacian_1a64576c78bed2c9421410fe29d10ec0b7" kindref="member">ABecLaplacian::alpha_def</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">Real<sp/><ref refid="classamrex_1_1ABecLaplacian_1a260cbaa3af6bc2aa931bb16c60116ee9" kindref="member">ABecLaplacian::beta_def</ref><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="classamrex_1_1ABecLaplacian_1afaf2573167e5516ad50cb8a9140500e6" kindref="member">ABecLaplacian::ABecLaplacian</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>_bd,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp(_bd,_h),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha(alpha_def),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>beta(beta_def)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>initCoefficients(_bd.boxes(),<sp/>_bd.DistributionMap());</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">ABecLaplacian::ABecLaplacian<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>_bd,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/>_h)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp(_bd,_h),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha(alpha_def),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>beta(beta_def)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>initCoefficients(_bd.boxes(),<sp/>_bd.DistributionMap());</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">ABecLaplacian::ABecLaplacian<sp/>(BndryData*<sp/><sp/>_bd,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>_h)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp(_bd,_h),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha(alpha_def),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>beta(beta_def)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>initCoefficients(_bd-&gt;boxes(),<sp/>_bd-&gt;DistributionMap());</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">ABecLaplacian::~ABecLaplacian<sp/>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>clearToLevel(-1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="52"><highlight class="normal">ABecLaplacian::norm<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ABecLaplacian::norm()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nm<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>a<sp/><sp/><sp/>=<sp/>aCoefficients(level);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bX<sp/><sp/>=<sp/>bCoefficients(0,level);,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bY<sp/><sp/>=<sp/>bCoefficients(1,level);,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bZ<sp/><sp/>=<sp/>bCoefficients(2,level););</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int<sp/>nc<sp/>=<sp/>a.nComp();<sp/>//<sp/>FIXME:<sp/>This<sp/>LinOp<sp/>only<sp/>really<sp/>support<sp/>single-component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>res<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tiling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:res)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>amfi(a,tiling);<sp/>amfi.isValid();<sp/>++amfi)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>tres;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx<sp/><sp/>=<sp/>amfi.tilebox();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>afab<sp/>=<sp/>a[amfi];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bxfab<sp/>=<sp/>bX[amfi];,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>byfab<sp/>=<sp/>bY[amfi];,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bzfab<sp/>=<sp/>bZ[amfi];);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM==2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1a9c7ee1628800f73e1b951a7ab32381fc" kindref="member">amrex_abec_norma</ref>(&amp;tres,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afab.dataPtr(),<sp/><sp/>AMREX_ARLIM(afab.loVect()),<sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),<sp/>tbx.hiVect(),<sp/>&amp;nc,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[level].data());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(BL_SPACEDIM==3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1a9c7ee1628800f73e1b951a7ab32381fc" kindref="member">amrex_abec_norma</ref>(&amp;tres,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afab.dataPtr(),<sp/><sp/>AMREX_ARLIM(afab.loVect()),<sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzfab.dataPtr(),<sp/>AMREX_ARLIM(bzfab.loVect()),<sp/>AMREX_ARLIM(bzfab.hiVect()),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),<sp/>tbx.hiVect(),<sp/>&amp;nc,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[level].data());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(res,<sp/>tres);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!local)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a552f084c17efd580d0962eb68e6b43ee" kindref="member">ParallelDescriptor::ReduceRealMax</ref>(res);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">ABecLaplacian::clearToLevel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(level<sp/>&gt;=<sp/>-1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>level+1;<sp/>i<sp/>&lt;<sp/>numLevels();<sp/>++i)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acoefs[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>acoefs[i];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acoefs[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>a_valid[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bcoefs[i][j]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bcoefs[i][j];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>b_valid[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">ABecLaplacian::prepareForLevel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp::prepareForLevel(level);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>prepareForLevel(level-1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>coefficients<sp/>were<sp/>marked<sp/>invalid,<sp/>or<sp/>if<sp/>not<sp/>yet<sp/>made,<sp/>make<sp/>new<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note:<sp/>makeCoefficients<sp/>is<sp/>a<sp/>LinOp<sp/>routine,<sp/>and<sp/>it<sp/>allocates<sp/>AND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fills<sp/>coefficients.<sp/><sp/>A<sp/>more<sp/>efficient<sp/>implementation<sp/>would<sp/>allocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>fill<sp/>in<sp/>separate<sp/>steps--we<sp/>could<sp/>then<sp/>use<sp/>the<sp/>a_valid<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>the<sp/>length<sp/>of<sp/>a_valid<sp/>to<sp/>separately<sp/>determine<sp/>whether<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>or<sp/>allocate<sp/>the<sp/>coefficient<sp/>MultiFabs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;=<sp/>a_valid.size()<sp/>||<sp/>a_valid[level]<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acoefs.size()<sp/>&lt;<sp/>level+1)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acoefs.resize(level+1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acoefs[level]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>acoefs[level];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acoefs[level]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeCoefficients(*acoefs[level],<sp/>*acoefs[level-1],<sp/>level);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_valid.resize(level+1);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_valid[level]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;=<sp/>b_valid.size()<sp/>||<sp/>b_valid[level]<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bcoefs.size()<sp/>&lt;<sp/>level+1)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs.resize(level+1);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[level][i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bcoefs[level][i];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[level][i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeCoefficients(*bcoefs[level][i],<sp/>*bcoefs[level-1][i],<sp/>level);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_valid.resize(level+1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_valid[level]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">ABecLaplacian::initCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>_ba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>_dm)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComp=1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGrow=0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>acoefs.resize(1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>bcoefs.resize(1);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>acoefs[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(_ba,<sp/>_dm,<sp/>nComp,<sp/>nGrow,<sp/>MFInfo(),<sp/><ref refid="namespaceamrex_1abda821661019fb0a77eb3a9706dc7330" kindref="member">FArrayBoxFactory</ref>());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>acoefs[0]-&gt;setVal(a_def);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>a_valid.resize(1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>a_valid[0]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BoxArray<sp/>edge_boxes(_ba);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_boxes.surroundingNodes(i);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[0][i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(edge_boxes,<sp/>_dm,<sp/>nComp,<sp/>nGrow,<sp/>MFInfo(),<sp/><ref refid="namespaceamrex_1abda821661019fb0a77eb3a9706dc7330" kindref="member">FArrayBoxFactory</ref>());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcoefs[0][i]-&gt;setVal(b_def);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>b_valid.resize(1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>b_valid[0]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">ABecLaplacian::aCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>_a)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(_a.ok());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(_a.boxArray()<sp/>==<sp/>(acoefs[0])-&gt;boxArray());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>invalidate_a_to_level(0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>(*acoefs[0]).copy(_a,0,0,1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">ABecLaplacian::ZeroACoefficients<sp/>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>invalidate_a_to_level(0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>(*acoefs[0]).setVal(0,0,acoefs[0]-&gt;nComp(),acoefs[0]-&gt;nGrow());</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">ABecLaplacian::bCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>_b,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(_b.ok());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(_b.boxArray()<sp/>==<sp/>(bcoefs[0][dir])-&gt;boxArray());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>invalidate_b_to_level(0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>(*bcoefs[0][dir]).copy(_b,0,0,1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">ABecLaplacian::bCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>_b,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridno)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(_b.box().contains((bcoefs[0][dir])-&gt;boxArray()[gridno]));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>invalidate_b_to_level(0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>(*bcoefs[0][dir])[gridno].copy(_b,0,0,1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">ABecLaplacian::aCoefficients<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>prepareForLevel(level);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*acoefs[level];</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">ABecLaplacian::bCoefficients<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>prepareForLevel(level);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*bcoefs[level][dir];</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">ABecLaplacian::setCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab<sp/>&amp;_a,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab<sp/>&amp;_bX,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab<sp/>&amp;_bY)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>aCoefficients(_a);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>bCoefficients(_bX,<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>bCoefficients(_bY,<sp/>1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">ABecLaplacian::setCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>_a,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab*<sp/>_b)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>aCoefficients(_a);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++n)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bCoefficients(_b[n],<sp/>n);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">ABecLaplacian::setCoefficients<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>_a,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;MultiFab*&gt;&amp;<sp/>_b)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>aCoefficients(_a);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++n)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bCoefficients(*_b[n],<sp/>n);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">ABecLaplacian::invalidate_a_to_level<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>lev<sp/>=<sp/>(lev<sp/>&gt;=<sp/>0<sp/>?<sp/>lev<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lev;<sp/>i<sp/>&lt;<sp/>numLevels();<sp/>i++)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_valid[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">ABecLaplacian::invalidate_b_to_level<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>lev<sp/>=<sp/>(lev<sp/>&gt;=<sp/>0<sp/>?<sp/>lev<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lev;<sp/>i<sp/>&lt;<sp/>numLevels();<sp/>i++)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_valid[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">ABecLaplacian::compFlux<sp/>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(MultiFab<sp/>&amp;xflux,<sp/>MultiFab<sp/>&amp;yflux,<sp/>MultiFab<sp/>&amp;zflux),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BC_Mode&amp;<sp/>bc_mode,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bnd_comp)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>compFlux(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(xflux,<sp/>yflux,<sp/>zflux),<sp/>in,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bc_mode,<sp/>src_comp,<sp/>dst_comp,<sp/>num_comp,<sp/>bnd_comp);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">ABecLaplacian::compFlux<sp/>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(MultiFab<sp/>&amp;xflux,<sp/>MultiFab<sp/>&amp;yflux,<sp/>MultiFab<sp/>&amp;zflux),</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>in,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_ApplyBC,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BC_Mode&amp;<sp/>bc_mode,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bnd_comp)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ABecLaplacian::compFlux()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(num_comp==1);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_ApplyBC)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>applyBC(in,src_comp,num_comp,level,bc_mode,bnd_comp);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>a<sp/>=<sp/>aCoefficients(level);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bX<sp/>=<sp/>bCoefficients(0,level);,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bY<sp/>=<sp/>bCoefficients(1,level);,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bZ<sp/>=<sp/>bCoefficients(2,level););</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tiling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>inmfi(in,tiling);<sp/>inmfi.isValid();<sp/>++inmfi)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>xbx<sp/><sp/><sp/>=<sp/>inmfi.nodaltilebox(0);,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>ybx<sp/><sp/><sp/>=<sp/>inmfi.nodaltilebox(1);,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>zbx<sp/><sp/><sp/>=<sp/>inmfi.nodaltilebox(2););</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>infab<sp/>=<sp/>in[inmfi];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bxfab<sp/>=<sp/>bX[inmfi];,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>byfab<sp/>=<sp/>bY[inmfi];,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bzfab<sp/>=<sp/>bZ[inmfi];);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(FArrayBox&amp;<sp/>xfluxfab<sp/>=<sp/>xflux[inmfi];,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>yfluxfab<sp/>=<sp/>yflux[inmfi];,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>zfluxfab<sp/>=<sp/>zflux[inmfi];);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1add5e3cd89e65bb4298f1d06de1c5c77f" kindref="member">amrex_abec_flux</ref>(infab.dataPtr(src_comp),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(infab.loVect()),<sp/>AMREX_ARLIM(infab.hiVect()),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,<sp/>a[inmfi].dataPtr(),<sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(a[inmfi].loVect()),<sp/>AMREX_ARLIM(a[inmfi].hiVect()),</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="367"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BL_SPACEDIM<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(bzfab.loVect()),<sp/>AMREX_ARLIM(bzfab.hiVect()),</highlight></codeline>
<codeline lineno="373"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="374"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xbx.loVect(),<sp/>xbx.hiVect(),<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ybx.loVect(),<sp/>ybx.hiVect(),<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zbx.loVect(),<sp/>zbx.hiVect(),<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;num_comp,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[level].data(),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfluxfab.dataPtr(dst_comp),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(xfluxfab.loVect()),<sp/>AMREX_ARLIM(xfluxfab.hiVect())</highlight></codeline>
<codeline lineno="386"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BL_SPACEDIM<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,yfluxfab.dataPtr(dst_comp),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(yfluxfab.loVect()),<sp/>AMREX_ARLIM(yfluxfab.hiVect())</highlight></codeline>
<codeline lineno="389"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="390"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,zfluxfab.dataPtr(dst_comp),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(zfluxfab.loVect()),<sp/>AMREX_ARLIM(zfluxfab.hiVect())</highlight></codeline>
<codeline lineno="393"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>defined<sp/>for<sp/>MultiGrid/CGSolver<sp/>to<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">ABecLaplacian::Fsmooth<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redBlackFlag)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ABecLaplacian::Fsmooth()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>OrientationIter<sp/>oitr;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f0<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f1<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f2<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f3<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f4<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f5<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>a<sp/>=<sp/>aCoefficients(level);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bX<sp/>=<sp/>bCoefficients(0,level);,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bY<sp/>=<sp/>bCoefficients(1,level);,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bZ<sp/>=<sp/>bCoefficients(2,level););</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>oitr.rewind();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm0<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm1<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm2<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm3<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm4<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm5<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int<sp/>nc<sp/>=<sp/>solnL.nComp();<sp/>//<sp/>FIXME:<sp/>This<sp/>LinOp<sp/>only<sp/>really<sp/>supports<sp/>single-component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tiling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>solnLmfi(solnL,tiling);<sp/>solnLmfi.isValid();<sp/>++solnLmfi)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m0<sp/>=<sp/>mm0[solnLmfi];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m1<sp/>=<sp/>mm1[solnLmfi];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m2<sp/>=<sp/>mm2[solnLmfi];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m3<sp/>=<sp/>mm3[solnLmfi];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m4<sp/>=<sp/>mm4[solnLmfi];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m5<sp/>=<sp/>mm5[solnLmfi];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx<sp/><sp/><sp/><sp/><sp/>=<sp/>solnLmfi.tilebox();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx<sp/><sp/><sp/><sp/><sp/>=<sp/>solnLmfi.validbox();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnfab<sp/>=<sp/>solnL[solnLmfi];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>rhsfab<sp/><sp/>=<sp/>rhsL[solnLmfi];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>afab<sp/><sp/><sp/><sp/>=<sp/>a[solnLmfi];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bxfab<sp/>=<sp/>bX[solnLmfi];,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>byfab<sp/>=<sp/>bY[solnLmfi];,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bzfab<sp/>=<sp/>bZ[solnLmfi];);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f0fab<sp/>=<sp/>f0[solnLmfi];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f1fab<sp/>=<sp/>f1[solnLmfi];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f2fab<sp/>=<sp/>f2[solnLmfi];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f3fab<sp/>=<sp/>f3[solnLmfi];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f4fab<sp/>=<sp/>f4[solnLmfi];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f5fab<sp/>=<sp/>f5[solnLmfi];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1ad6a8482921a73e15d024fd3b6a7348c7" kindref="member">amrex_abec_gsrb</ref>(solnfab.dataPtr(),<sp/>AMREX_ARLIM(solnfab.loVect()),AMREX_ARLIM(solnfab.hiVect()),</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.dataPtr(),<sp/>AMREX_ARLIM(rhsfab.loVect()),<sp/>AMREX_ARLIM(rhsfab.hiVect()),</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afab.dataPtr(),<sp/>AMREX_ARLIM(afab.loVect()),<sp/><sp/><sp/><sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/>AMREX_ARLIM(bxfab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/>AMREX_ARLIM(byfab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab.dataPtr(),<sp/>AMREX_ARLIM(f0fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f0fab.hiVect()),</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0.dataPtr(),<sp/>AMREX_ARLIM(m0.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m0.hiVect()),</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab.dataPtr(),<sp/>AMREX_ARLIM(f1fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f1fab.hiVect()),</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.dataPtr(),<sp/>AMREX_ARLIM(m1.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m1.hiVect()),</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2fab.dataPtr(),<sp/>AMREX_ARLIM(f2fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f2fab.hiVect()),</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.dataPtr(),<sp/>AMREX_ARLIM(m2.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m2.hiVect()),</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f3fab.dataPtr(),<sp/>AMREX_ARLIM(f3fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f3fab.hiVect()),</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m3.dataPtr(),<sp/>AMREX_ARLIM(m3.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m3.hiVect()),</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),<sp/>tbx.hiVect(),<sp/>vbx.loVect(),<sp/>vbx.hiVect(),</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>h[level].data(),<sp/>&amp;redBlackFlag);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1ad6a8482921a73e15d024fd3b6a7348c7" kindref="member">amrex_abec_gsrb</ref>(solnfab.dataPtr(),<sp/>AMREX_ARLIM(solnfab.loVect()),AMREX_ARLIM(solnfab.hiVect()),</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.dataPtr(),<sp/>AMREX_ARLIM(rhsfab.loVect()),<sp/>AMREX_ARLIM(rhsfab.hiVect()),</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afab.dataPtr(),<sp/>AMREX_ARLIM(afab.loVect()),<sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzfab.dataPtr(),<sp/>AMREX_ARLIM(bzfab.loVect()),<sp/>AMREX_ARLIM(bzfab.hiVect()),</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab.dataPtr(),<sp/>AMREX_ARLIM(f0fab.loVect()),<sp/>AMREX_ARLIM(f0fab.hiVect()),</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0.dataPtr(),<sp/>AMREX_ARLIM(m0.loVect()),<sp/>AMREX_ARLIM(m0.hiVect()),</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab.dataPtr(),<sp/>AMREX_ARLIM(f1fab.loVect()),<sp/>AMREX_ARLIM(f1fab.hiVect()),</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.dataPtr(),<sp/>AMREX_ARLIM(m1.loVect()),<sp/>AMREX_ARLIM(m1.hiVect()),</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2fab.dataPtr(),<sp/>AMREX_ARLIM(f2fab.loVect()),<sp/>AMREX_ARLIM(f2fab.hiVect()),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.dataPtr(),<sp/>AMREX_ARLIM(m2.loVect()),<sp/>AMREX_ARLIM(m2.hiVect()),</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f3fab.dataPtr(),<sp/>AMREX_ARLIM(f3fab.loVect()),<sp/>AMREX_ARLIM(f3fab.hiVect()),</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m3.dataPtr(),<sp/>AMREX_ARLIM(m3.loVect()),<sp/>AMREX_ARLIM(m3.hiVect()),</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f4fab.dataPtr(),<sp/>AMREX_ARLIM(f4fab.loVect()),<sp/>AMREX_ARLIM(f4fab.hiVect()),</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m4.dataPtr(),<sp/>AMREX_ARLIM(m4.loVect()),<sp/>AMREX_ARLIM(m4.hiVect()),</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f5fab.dataPtr(),<sp/>AMREX_ARLIM(f5fab.loVect()),<sp/>AMREX_ARLIM(f5fab.hiVect()),</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m5.dataPtr(),<sp/>AMREX_ARLIM(m5.loVect()),<sp/>AMREX_ARLIM(m5.hiVect()),</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),<sp/>tbx.hiVect(),<sp/>vbx.loVect(),<sp/>vbx.hiVect(),</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>h[level].data(),<sp/>&amp;redBlackFlag);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">ABecLaplacian::Fsmooth_jacobi<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ABecLaplacian::Fsmooth_jacobi()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>OrientationIter<sp/>oitr;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f0<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f1<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f2<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f3<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f4<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f5<sp/>=<sp/>undrrelxr[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>a<sp/>=<sp/>aCoefficients(level);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bX<sp/>=<sp/>bCoefficients(0,level);,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bY<sp/>=<sp/>bCoefficients(1,level);,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bZ<sp/>=<sp/>bCoefficients(2,level););</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>oitr.rewind();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm0<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm1<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm2<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm3<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm4<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm5<sp/>=<sp/>maskvals[level][oitr()];<sp/>oitr++;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int<sp/>nc<sp/>=<sp/>solnL.nComp();<sp/>//<sp/>FIXME:<sp/>This<sp/>LinOp<sp/>only<sp/>really<sp/>supports<sp/>single-component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>solnLmfi(solnL);<sp/>solnLmfi.isValid();<sp/>++solnLmfi)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m0<sp/>=<sp/>mm0[solnLmfi];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m1<sp/>=<sp/>mm1[solnLmfi];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m2<sp/>=<sp/>mm2[solnLmfi];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m3<sp/>=<sp/>mm3[solnLmfi];</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m4<sp/>=<sp/>mm4[solnLmfi];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m5<sp/>=<sp/>mm5[solnLmfi];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx<sp/><sp/><sp/><sp/><sp/>=<sp/>solnLmfi.validbox();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnfab<sp/>=<sp/>solnL[solnLmfi];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>rhsfab<sp/><sp/>=<sp/>rhsL[solnLmfi];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>afab<sp/><sp/><sp/><sp/>=<sp/>a[solnLmfi];</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bxfab<sp/>=<sp/>bX[solnLmfi];,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>byfab<sp/>=<sp/>bY[solnLmfi];,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bzfab<sp/>=<sp/>bZ[solnLmfi];);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f0fab<sp/>=<sp/>f0[solnLmfi];</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f1fab<sp/>=<sp/>f1[solnLmfi];</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f2fab<sp/>=<sp/>f2[solnLmfi];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f3fab<sp/>=<sp/>f3[solnLmfi];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f4fab<sp/>=<sp/>f4[solnLmfi];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>f5fab<sp/>=<sp/>f5[solnLmfi];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1ace97edc02ed7f0652a794c61ba28d1f0" kindref="member">amrex_abec_jacobi</ref>(solnfab.dataPtr(),<sp/>AMREX_ARLIM(solnfab.loVect()),AMREX_ARLIM(solnfab.hiVect()),</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.dataPtr(),<sp/>AMREX_ARLIM(rhsfab.loVect()),<sp/>AMREX_ARLIM(rhsfab.hiVect()),</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afab.dataPtr(),<sp/>AMREX_ARLIM(afab.loVect()),<sp/><sp/><sp/><sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/>AMREX_ARLIM(bxfab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/>AMREX_ARLIM(byfab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab.dataPtr(),<sp/>AMREX_ARLIM(f0fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f0fab.hiVect()),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0.dataPtr(),<sp/>AMREX_ARLIM(m0.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m0.hiVect()),</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab.dataPtr(),<sp/>AMREX_ARLIM(f1fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f1fab.hiVect()),</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.dataPtr(),<sp/>AMREX_ARLIM(m1.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m1.hiVect()),</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2fab.dataPtr(),<sp/>AMREX_ARLIM(f2fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f2fab.hiVect()),</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.dataPtr(),<sp/>AMREX_ARLIM(m2.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m2.hiVect()),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f3fab.dataPtr(),<sp/>AMREX_ARLIM(f3fab.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(f3fab.hiVect()),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m3.dataPtr(),<sp/>AMREX_ARLIM(m3.loVect()),<sp/><sp/><sp/>AMREX_ARLIM(m3.hiVect()),</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx.loVect(),<sp/>vbx.hiVect(),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>h[level].data());</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1ace97edc02ed7f0652a794c61ba28d1f0" kindref="member">amrex_abec_jacobi</ref>(solnfab.dataPtr(),<sp/>AMREX_ARLIM(solnfab.loVect()),AMREX_ARLIM(solnfab.hiVect()),</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsfab.dataPtr(),<sp/>AMREX_ARLIM(rhsfab.loVect()),<sp/>AMREX_ARLIM(rhsfab.hiVect()),</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afab.dataPtr(),<sp/>AMREX_ARLIM(afab.loVect()),<sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzfab.dataPtr(),<sp/>AMREX_ARLIM(bzfab.loVect()),<sp/>AMREX_ARLIM(bzfab.hiVect()),</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab.dataPtr(),<sp/>AMREX_ARLIM(f0fab.loVect()),<sp/>AMREX_ARLIM(f0fab.hiVect()),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0.dataPtr(),<sp/>AMREX_ARLIM(m0.loVect()),<sp/>AMREX_ARLIM(m0.hiVect()),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab.dataPtr(),<sp/>AMREX_ARLIM(f1fab.loVect()),<sp/>AMREX_ARLIM(f1fab.hiVect()),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.dataPtr(),<sp/>AMREX_ARLIM(m1.loVect()),<sp/>AMREX_ARLIM(m1.hiVect()),</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2fab.dataPtr(),<sp/>AMREX_ARLIM(f2fab.loVect()),<sp/>AMREX_ARLIM(f2fab.hiVect()),</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.dataPtr(),<sp/>AMREX_ARLIM(m2.loVect()),<sp/>AMREX_ARLIM(m2.hiVect()),</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f3fab.dataPtr(),<sp/>AMREX_ARLIM(f3fab.loVect()),<sp/>AMREX_ARLIM(f3fab.hiVect()),</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m3.dataPtr(),<sp/>AMREX_ARLIM(m3.loVect()),<sp/>AMREX_ARLIM(m3.hiVect()),</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f4fab.dataPtr(),<sp/>AMREX_ARLIM(f4fab.loVect()),<sp/>AMREX_ARLIM(f4fab.hiVect()),</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m4.dataPtr(),<sp/>AMREX_ARLIM(m4.loVect()),<sp/>AMREX_ARLIM(m4.hiVect()),</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f5fab.dataPtr(),<sp/>AMREX_ARLIM(f5fab.loVect()),<sp/>AMREX_ARLIM(f5fab.hiVect()),</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m5.dataPtr(),<sp/>AMREX_ARLIM(m5.loVect()),<sp/>AMREX_ARLIM(m5.hiVect()),</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx.loVect(),<sp/>vbx.hiVect(),</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>h[level].data());</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal">ABecLaplacian::Fapply<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>y,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>x,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_comp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_comp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_comp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>Fapply(y,dst_comp,x,src_comp,num_comp,level);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">ABecLaplacian::Fapply<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>y,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_comp,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>x,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_comp,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_comp,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ABecLaplacian::Fapply()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(y.nComp()&gt;=dst_comp+num_comp);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(x.nComp()&gt;=src_comp+num_comp);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>a<sp/><sp/><sp/>=<sp/>aCoefficients(level);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bX<sp/><sp/>=<sp/>bCoefficients(0,level);,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bY<sp/><sp/>=<sp/>bCoefficients(1,level);,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>bZ<sp/><sp/>=<sp/>bCoefficients(2,level););</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tiling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>ymfi(y,tiling);<sp/>ymfi.isValid();<sp/>++ymfi)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx<sp/><sp/>=<sp/>ymfi.tilebox();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>yfab<sp/>=<sp/>y[ymfi];</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>xfab<sp/>=<sp/>x[ymfi];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>afab<sp/>=<sp/>a[ymfi];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bxfab<sp/>=<sp/>bX[ymfi];,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>byfab<sp/>=<sp/>bY[ymfi];,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>bzfab<sp/>=<sp/>bZ[ymfi];);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1af414bd0958182619ee5d732b4c7f025f" kindref="member">amrex_abec_adotx</ref>(yfab.dataPtr(dst_comp),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(yfab.loVect()),AMREX_ARLIM(yfab.hiVect()),</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab.dataPtr(src_comp),</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(xfab.loVect()),<sp/>AMREX_ARLIM(xfab.hiVect()),</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,<sp/>afab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(afab.loVect()),<sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),<sp/>tbx.hiVect(),<sp/>&amp;num_comp,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[level].data());</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex__abec__module_1af414bd0958182619ee5d732b4c7f025f" kindref="member">amrex_abec_adotx</ref>(yfab.dataPtr(dst_comp),</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(yfab.loVect()),<sp/>AMREX_ARLIM(yfab.hiVect()),</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfab.dataPtr(src_comp),</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(xfab.loVect()),<sp/>AMREX_ARLIM(xfab.hiVect()),</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha,<sp/>&amp;beta,<sp/>afab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(afab.loVect()),<sp/>AMREX_ARLIM(afab.hiVect()),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bxfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(bxfab.loVect()),<sp/>AMREX_ARLIM(bxfab.hiVect()),</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(byfab.loVect()),<sp/>AMREX_ARLIM(byfab.hiVect()),</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(bzfab.loVect()),<sp/>AMREX_ARLIM(bzfab.hiVect()),</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),<sp/>tbx.hiVect(),<sp/>&amp;num_comp,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[level].data());</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.cpp"/>
  </compounddef>
</doxygen>
