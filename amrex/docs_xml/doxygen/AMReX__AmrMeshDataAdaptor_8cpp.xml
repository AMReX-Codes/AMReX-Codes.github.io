<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__AmrMeshDataAdaptor_8cpp" kind="file" language="C++">
    <compoundname>AMReX_AmrMeshDataAdaptor.cpp</compoundname>
    <includes refid="AMReX__AmrMeshDataAdaptor_8H" local="yes">AMReX_AmrMeshDataAdaptor.H</includes>
    <includes local="yes">Profiler.h</includes>
    <includes refid="Error_8h" local="yes">Error.h</includes>
    <includes local="yes">VTKUtils.h</includes>
    <includes local="no">vtkObjectFactory.h</includes>
    <includes local="no">vtkOverlappingAMR.h</includes>
    <includes local="no">vtkAMRBox.h</includes>
    <includes local="no">vtkUniformGrid.h</includes>
    <includes local="no">vtkDataSetAttributes.h</includes>
    <includes local="no">vtkUnsignedCharArray.h</includes>
    <includes local="no">vtkFloatArray.h</includes>
    <includes local="no">vtkDoubleArray.h</includes>
    <includes local="no">vtkCellData.h</includes>
    <includes local="no">vtkPointData.h</includes>
    <includes refid="AMReX__BoxArray_8H" local="no">AMReX_BoxArray.H</includes>
    <includes refid="AMReX__Geometry_8H" local="no">AMReX_Geometry.H</includes>
    <includes refid="AMReX__RealBox_8H" local="no">AMReX_RealBox.H</includes>
    <includes refid="AMReX__Box_8H" local="no">AMReX_Box.H</includes>
    <includes refid="AMReX__ArrayLim_8H" local="no">AMReX_ArrayLim.H</includes>
    <includes refid="AMReX__MFIter_8H" local="no">AMReX_MFIter.H</includes>
    <includes refid="AMReX__DistributionMapping_8H" local="no">AMReX_DistributionMapping.H</includes>
    <includes refid="AMReX__IndexType_8H" local="no">AMReX_IndexType.H</includes>
    <includes refid="AMReX__InSituUtils_8H" local="no">AMReX_InSituUtils.H</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">array</includes>
    <incdepgraph>
      <node id="69490">
        <label>atomic</label>
      </node>
      <node id="69445">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
      </node>
      <node id="69404">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69405" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69395" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
      </node>
      <node id="69459">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69464">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69403">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69501">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="69484">
        <label>iomanip</label>
      </node>
      <node id="69398">
        <label>functional</label>
      </node>
      <node id="69407">
        <label>limits</label>
      </node>
      <node id="69434">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
      </node>
      <node id="69415">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
      </node>
      <node id="69471">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
      </node>
      <node id="69519">
        <label>vtkPointData.h</label>
      </node>
      <node id="69425">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69426" relation="include">
        </childnode>
        <childnode refid="69415" relation="include">
        </childnode>
        <childnode refid="69427" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
      </node>
      <node id="69497">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69447" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69493" relation="include">
        </childnode>
        <childnode refid="69396" relation="include">
        </childnode>
      </node>
      <node id="69486">
        <label>iterator</label>
      </node>
      <node id="69394">
        <label>float.h</label>
      </node>
      <node id="69494">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69428" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
        <childnode refid="69495" relation="include">
        </childnode>
        <childnode refid="69445" relation="include">
        </childnode>
        <childnode refid="69483" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69458" relation="include">
        </childnode>
      </node>
      <node id="69477">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69402">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
      </node>
      <node id="69385">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69386" relation="include">
        </childnode>
      </node>
      <node id="69440">
        <label>cstdint</label>
      </node>
      <node id="69409">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69418" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69374" relation="include">
        </childnode>
      </node>
      <node id="69506">
        <label>Error.h</label>
        <link refid="Error_8h"/>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69379" relation="include">
        </childnode>
        <childnode refid="69389" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69507" relation="include">
        </childnode>
        <childnode refid="69508" relation="include">
        </childnode>
      </node>
      <node id="69421">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69379" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69423" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69414" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69424" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69391" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69428" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
        <childnode refid="69438" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69441" relation="include">
        </childnode>
      </node>
      <node id="69500">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="69501" relation="include">
        </childnode>
        <childnode refid="69502" relation="include">
        </childnode>
      </node>
      <node id="69482">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69483" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
      </node>
      <node id="69469">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69401" relation="include">
        </childnode>
        <childnode refid="69470" relation="include">
        </childnode>
        <childnode refid="69472" relation="include">
        </childnode>
        <childnode refid="69471" relation="include">
        </childnode>
      </node>
      <node id="69520">
        <label>AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69514" relation="include">
        </childnode>
        <childnode refid="69515" relation="include">
        </childnode>
        <childnode refid="69516" relation="include">
        </childnode>
        <childnode refid="69517" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69443" relation="include">
        </childnode>
        <childnode refid="69409" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69412" relation="include">
        </childnode>
        <childnode refid="69496" relation="include">
        </childnode>
        <childnode refid="69428" relation="include">
        </childnode>
        <childnode refid="69415" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
      </node>
      <node id="69473">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69374" relation="include">
        </childnode>
        <childnode refid="69474" relation="include">
        </childnode>
        <childnode refid="69398" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69475" relation="include">
        </childnode>
        <childnode refid="69471" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
      </node>
      <node id="69408">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69391" relation="include">
        </childnode>
      </node>
      <node id="69432">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69433" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69379" relation="include">
        </childnode>
        <childnode refid="69380" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
      </node>
      <node id="69401">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
      </node>
      <node id="69503">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69440" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69497" relation="include">
        </childnode>
        <childnode refid="69491" relation="include">
        </childnode>
        <childnode refid="69504" relation="include">
        </childnode>
        <childnode refid="69445" relation="include">
        </childnode>
      </node>
      <node id="69396">
        <label>cmath</label>
      </node>
      <node id="69507">
        <label>errno.h</label>
      </node>
      <node id="69386">
        <label>cassert</label>
      </node>
      <node id="69393">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69394" relation="include">
        </childnode>
      </node>
      <node id="69389">
        <label>stdexcept</label>
      </node>
      <node id="69387">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69436">
        <label>numeric</label>
      </node>
      <node id="69504">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69491" relation="include">
        </childnode>
        <childnode refid="69498" relation="include">
        </childnode>
        <childnode refid="69483" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
      </node>
      <node id="69505">
        <label>Profiler.h</label>
      </node>
      <node id="69377">
        <label>string</label>
      </node>
      <node id="69462">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69421" relation="include">
        </childnode>
        <childnode refid="69401" relation="include">
        </childnode>
        <childnode refid="69463" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69464" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69374" relation="include">
        </childnode>
      </node>
      <node id="69515">
        <label>vtkUnsignedCharArray.h</label>
      </node>
      <node id="69422">
        <label>map</label>
      </node>
      <node id="69518">
        <label>vtkCellData.h</label>
      </node>
      <node id="69454">
        <label>unordered_set</label>
      </node>
      <node id="69450">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
      </node>
      <node id="69463">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69421" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
      </node>
      <node id="69512">
        <label>vtkAMRBox.h</label>
      </node>
      <node id="69383">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69509">
        <label>VTKUtils.h</label>
      </node>
      <node id="69424">
        <label>cfloat</label>
      </node>
      <node id="69405">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
      </node>
      <node id="69430">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69431" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
      </node>
      <node id="69431">
        <label>fstream</label>
      </node>
      <node id="69427">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69415" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
      </node>
      <node id="69467">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69463" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
      </node>
      <node id="69400">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69401" relation="include">
        </childnode>
      </node>
      <node id="69478">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69479" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
      </node>
      <node id="69382">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69384" relation="include">
        </childnode>
        <childnode refid="69385" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
        <childnode refid="69388" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69391" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69395" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69398" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69380" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
      </node>
      <node id="69438">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
        <childnode refid="69439" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69440" relation="include">
        </childnode>
      </node>
      <node id="69390">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69439">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
      </node>
      <node id="69442">
        <label>sys/types.h</label>
      </node>
      <node id="69480">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
      </node>
      <node id="69449">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
      </node>
      <node id="69508">
        <label>string.h</label>
      </node>
      <node id="69457">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69458" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
      </node>
      <node id="69435">
        <label>typeinfo</label>
      </node>
      <node id="69384">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69380" relation="include">
        </childnode>
      </node>
      <node id="69443">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69444" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
        <childnode refid="69409" relation="include">
        </childnode>
        <childnode refid="69445" relation="include">
        </childnode>
      </node>
      <node id="69451">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69452" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
        <childnode refid="69453" relation="include">
        </childnode>
        <childnode refid="69454" relation="include">
        </childnode>
        <childnode refid="69398" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
      </node>
      <node id="69370">
        <label>AMReX_Config.H</label>
      </node>
      <node id="69380">
        <label>cstdio</label>
      </node>
      <node id="69502">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="69474">
        <label>tuple</label>
      </node>
      <node id="69428">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
      </node>
      <node id="69417">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69384" relation="include">
        </childnode>
      </node>
      <node id="69429">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
        <childnode refid="69430" relation="include">
        </childnode>
        <childnode refid="69432" relation="include">
        </childnode>
        <childnode refid="69434" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69391" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69435" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
        <childnode refid="69398" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69436" relation="include">
        </childnode>
        <childnode refid="69437" relation="include">
        </childnode>
      </node>
      <node id="69416">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
      </node>
      <node id="69372">
        <label>AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69409" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69443" relation="include">
        </childnode>
        <childnode refid="69428" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69446" relation="include">
        </childnode>
      </node>
      <node id="69465">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
      </node>
      <node id="69418">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69396" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69421" relation="include">
        </childnode>
        <childnode refid="69395" relation="include">
        </childnode>
      </node>
      <node id="69433">
        <label>stack</label>
      </node>
      <node id="69399">
        <label>vector</label>
      </node>
      <node id="69448">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
      </node>
      <node id="69496">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69494" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69497" relation="include">
        </childnode>
        <childnode refid="69409" relation="include">
        </childnode>
        <childnode refid="69458" relation="include">
        </childnode>
      </node>
      <node id="69488">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69458" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69440" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
      </node>
      <node id="69513">
        <label>vtkUniformGrid.h</label>
      </node>
      <node id="69376">
        <label>utility</label>
      </node>
      <node id="69410">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69404" relation="include">
        </childnode>
        <childnode refid="69412" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69415" relation="include">
        </childnode>
        <childnode refid="69416" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69417" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
      </node>
      <node id="69492">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69415" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69427" relation="include">
        </childnode>
      </node>
      <node id="69374">
        <label>array</label>
      </node>
      <node id="69481">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
      </node>
      <node id="69379">
        <label>sstream</label>
      </node>
      <node id="69485">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69436" relation="include">
        </childnode>
        <childnode refid="69486" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69487" relation="include">
        </childnode>
        <childnode refid="69482" relation="include">
        </childnode>
        <childnode refid="69488" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
      </node>
      <node id="69391">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69392" relation="include">
        </childnode>
      </node>
      <node id="69466">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69459" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69401" relation="include">
        </childnode>
        <childnode refid="69463" relation="include">
        </childnode>
        <childnode refid="69467" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69468" relation="include">
        </childnode>
        <childnode refid="69469" relation="include">
        </childnode>
        <childnode refid="69460" relation="include">
        </childnode>
        <childnode refid="69473" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69448" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69465" relation="include">
        </childnode>
        <childnode refid="69439" relation="include">
        </childnode>
        <childnode refid="69404" relation="include">
        </childnode>
        <childnode refid="69419" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69476" relation="include">
        </childnode>
        <childnode refid="69477" relation="include">
        </childnode>
      </node>
      <node id="69476">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69470">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69471" relation="include">
        </childnode>
      </node>
      <node id="69498">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69494" relation="include">
        </childnode>
        <childnode refid="69496" relation="include">
        </childnode>
      </node>
      <node id="69411">
        <label>iosfwd</label>
      </node>
      <node id="69397">
        <label>cstdlib</label>
      </node>
      <node id="69456">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69475">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
      </node>
      <node id="69447">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69404" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69448" relation="include">
        </childnode>
        <childnode refid="69427" relation="include">
        </childnode>
        <childnode refid="69449" relation="include">
        </childnode>
        <childnode refid="69451" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69434" relation="include">
        </childnode>
        <childnode refid="69455" relation="include">
        </childnode>
        <childnode refid="69456" relation="include">
        </childnode>
        <childnode refid="69421" relation="include">
        </childnode>
        <childnode refid="69457" relation="include">
        </childnode>
        <childnode refid="69458" relation="include">
        </childnode>
        <childnode refid="69395" relation="include">
        </childnode>
        <childnode refid="69396" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69414" relation="include">
        </childnode>
        <childnode refid="69374" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69490" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
      </node>
      <node id="69517">
        <label>vtkDoubleArray.h</label>
      </node>
      <node id="69378">
        <label>iostream</label>
      </node>
      <node id="69373">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69374" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69379" relation="include">
        </childnode>
        <childnode refid="69380" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69404" relation="include">
        </childnode>
        <childnode refid="69405" relation="include">
        </childnode>
      </node>
      <node id="69419">
        <label>cstddef</label>
      </node>
      <node id="69472">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69401" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69391" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69417" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69396" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
      </node>
      <node id="69426">
        <label>unordered_map</label>
      </node>
      <node id="69368">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
        <childnode refid="69369" relation="include">
        </childnode>
        <childnode refid="69505" relation="include">
        </childnode>
        <childnode refid="69506" relation="include">
        </childnode>
        <childnode refid="69509" relation="include">
        </childnode>
        <childnode refid="69510" relation="include">
        </childnode>
        <childnode refid="69511" relation="include">
        </childnode>
        <childnode refid="69512" relation="include">
        </childnode>
        <childnode refid="69513" relation="include">
        </childnode>
        <childnode refid="69514" relation="include">
        </childnode>
        <childnode refid="69515" relation="include">
        </childnode>
        <childnode refid="69516" relation="include">
        </childnode>
        <childnode refid="69517" relation="include">
        </childnode>
        <childnode refid="69518" relation="include">
        </childnode>
        <childnode refid="69519" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69443" relation="include">
        </childnode>
        <childnode refid="69409" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69412" relation="include">
        </childnode>
        <childnode refid="69496" relation="include">
        </childnode>
        <childnode refid="69428" relation="include">
        </childnode>
        <childnode refid="69415" relation="include">
        </childnode>
        <childnode refid="69520" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69379" relation="include">
        </childnode>
        <childnode refid="69374" relation="include">
        </childnode>
      </node>
      <node id="69371">
        <label>DataAdaptor.h</label>
      </node>
      <node id="69414">
        <label>climits</label>
      </node>
      <node id="69413">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69391" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69405" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69395" relation="include">
        </childnode>
        <childnode refid="69411" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69396" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69414" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
      </node>
      <node id="69453">
        <label>mutex</label>
      </node>
      <node id="69487">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69466" relation="include">
        </childnode>
        <childnode refid="69482" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
      </node>
      <node id="69423">
        <label>chrono</label>
      </node>
      <node id="69437">
        <label>csignal</label>
      </node>
      <node id="69516">
        <label>vtkFloatArray.h</label>
      </node>
      <node id="69493">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69483" relation="include">
        </childnode>
        <childnode refid="69456" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
      </node>
      <node id="69460">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69465" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
        <childnode refid="69375" relation="include">
        </childnode>
      </node>
      <node id="69495">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
        <childnode refid="69483" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
      </node>
      <node id="69446">
        <label>AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69447" relation="include">
        </childnode>
        <childnode refid="69491" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69443" relation="include">
        </childnode>
      </node>
      <node id="69395">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
        <childnode refid="69396" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
      </node>
      <node id="69458">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69459" relation="include">
        </childnode>
        <childnode refid="69384" relation="include">
        </childnode>
        <childnode refid="69385" relation="include">
        </childnode>
        <childnode refid="69401" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69460" relation="include">
        </childnode>
        <childnode refid="69466" relation="include">
        </childnode>
        <childnode refid="69463" relation="include">
        </childnode>
        <childnode refid="69470" relation="include">
        </childnode>
        <childnode refid="69472" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69478" relation="include">
        </childnode>
        <childnode refid="69480" relation="include">
        </childnode>
        <childnode refid="69481" relation="include">
        </childnode>
        <childnode refid="69468" relation="include">
        </childnode>
        <childnode refid="69467" relation="include">
        </childnode>
        <childnode refid="69469" relation="include">
        </childnode>
        <childnode refid="69482" relation="include">
        </childnode>
        <childnode refid="69485" relation="include">
        </childnode>
        <childnode refid="69489" relation="include">
        </childnode>
      </node>
      <node id="69369">
        <label>AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69371" relation="include">
        </childnode>
        <childnode refid="69372" relation="include">
        </childnode>
        <childnode refid="69503" relation="include">
        </childnode>
      </node>
      <node id="69468">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69383" relation="include">
        </childnode>
        <childnode refid="69400" relation="include">
        </childnode>
        <childnode refid="69462" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69450" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
      </node>
      <node id="69412">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
      </node>
      <node id="69388">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69389" relation="include">
        </childnode>
      </node>
      <node id="69381">
        <label>type_traits</label>
      </node>
      <node id="69452">
        <label>set</label>
      </node>
      <node id="69444">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
      </node>
      <node id="69511">
        <label>vtkOverlappingAMR.h</label>
      </node>
      <node id="69491">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69378" relation="include">
        </childnode>
        <childnode refid="69420" relation="include">
        </childnode>
        <childnode refid="69407" relation="include">
        </childnode>
        <childnode refid="69422" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69399" relation="include">
        </childnode>
        <childnode refid="69406" relation="include">
        </childnode>
        <childnode refid="69452" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69373" relation="include">
        </childnode>
        <childnode refid="69408" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69425" relation="include">
        </childnode>
        <childnode refid="69492" relation="include">
        </childnode>
        <childnode refid="69493" relation="include">
        </childnode>
        <childnode refid="69428" relation="include">
        </childnode>
        <childnode refid="69443" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
        <childnode refid="69421" relation="include">
        </childnode>
        <childnode refid="69387" relation="include">
        </childnode>
        <childnode refid="69434" relation="include">
        </childnode>
        <childnode refid="69445" relation="include">
        </childnode>
        <childnode refid="69483" relation="include">
        </childnode>
        <childnode refid="69494" relation="include">
        </childnode>
        <childnode refid="69496" relation="include">
        </childnode>
        <childnode refid="69456" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
        <childnode refid="69498" relation="include">
        </childnode>
        <childnode refid="69499" relation="include">
        </childnode>
        <childnode refid="69458" relation="include">
        </childnode>
        <childnode refid="69500" relation="include">
        </childnode>
      </node>
      <node id="69406">
        <label>algorithm</label>
      </node>
      <node id="69441">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69377" relation="include">
        </childnode>
        <childnode refid="69442" relation="include">
        </childnode>
      </node>
      <node id="69510">
        <label>vtkObjectFactory.h</label>
      </node>
      <node id="69499">
        <label>AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69447" relation="include">
        </childnode>
        <childnode refid="69461" relation="include">
        </childnode>
      </node>
      <node id="69420">
        <label>cstring</label>
      </node>
      <node id="69489">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
      </node>
      <node id="69375">
        <label>memory</label>
      </node>
      <node id="69479">
        <label>initializer_list</label>
      </node>
      <node id="69392">
        <label>inttypes.h</label>
      </node>
      <node id="69461">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69381" relation="include">
        </childnode>
        <childnode refid="69390" relation="include">
        </childnode>
      </node>
      <node id="69514">
        <label>vtkDataSetAttributes.h</label>
      </node>
      <node id="69483">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69379" relation="include">
        </childnode>
        <childnode refid="69431" relation="include">
        </childnode>
        <childnode refid="69484" relation="include">
        </childnode>
        <childnode refid="69376" relation="include">
        </childnode>
        <childnode refid="69382" relation="include">
        </childnode>
        <childnode refid="69430" relation="include">
        </childnode>
        <childnode refid="69429" relation="include">
        </childnode>
      </node>
      <node id="69455">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="69370" relation="include">
        </childnode>
        <childnode refid="69397" relation="include">
        </childnode>
        <childnode refid="69402" relation="include">
        </childnode>
        <childnode refid="69410" relation="include">
        </childnode>
        <childnode refid="69393" relation="include">
        </childnode>
        <childnode refid="69403" relation="include">
        </childnode>
        <childnode refid="69413" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classamrex_1_1InSituUtils_1_1MeshStateMap" prot="public">amrex::InSituUtils::MeshStateMap</innerclass>
    <innerclass refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" prot="public">amrex::AmrMeshDataAdaptor::InternalsType</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1InSituUtils">amrex::InSituUtils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__AmrMeshDataAdaptor_8H" kindref="compound">AMReX_AmrMeshDataAdaptor.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Profiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Error_8h" kindref="compound">Error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VTKUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkObjectFactory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkOverlappingAMR.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkAMRBox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkUniformGrid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkDataSetAttributes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkUnsignedCharArray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkFloatArray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkDoubleArray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkCellData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vtkPointData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BoxArray_8H" kindref="compound">AMReX_BoxArray.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Geometry_8H" kindref="compound">AMReX_Geometry.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__RealBox_8H" kindref="compound">AMReX_RealBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Box_8H" kindref="compound">AMReX_Box.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ArrayLim_8H" kindref="compound">AMReX_ArrayLim.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MFIter_8H" kindref="compound">AMReX_MFIter.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__DistributionMapping_8H" kindref="compound">AMReX_DistributionMapping.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IndexType_8H" kindref="compound">AMReX_IndexType.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__InSituUtils_8H" kindref="compound">AMReX_InSituUtils.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">InSituUtils<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>to<sp/>track<sp/>names<sp/>and<sp/>centerings<sp/>of<sp/>the<sp/>avaliable<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classamrex_1_1InSituUtils_1_1MeshStateMap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1InSituUtils_1_1MeshStateMap" kindref="compound">MeshStateMap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituUtils_1_1StateMap" kindref="compound">amrex::InSituUtils::StateMap</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituUtils_1_1MeshStateMap_1a87102926ea47d50d8130018be1b0b7c9" kindref="member">Initialize</ref>(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector&lt;amrex::MultiFab&gt;</ref><sp/>*&gt;<sp/>&amp;states,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>&amp;names);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituUtils_1_1MeshStateMap_1a87102926ea47d50d8130018be1b0b7c9" kindref="member">MeshStateMap::Initialize</ref>(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector&lt;amrex::MultiFab&gt;</ref><sp/>*&gt;<sp/>&amp;states,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>&amp;names)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStates<sp/>=<sp/>states.size();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nStates;<sp/>++i)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state<sp/>=<sp/>states[i]-&gt;at(0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComp<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nComp;<sp/>++j)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;arrayName<sp/>=<sp/>names[i][j];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.<ref refid="classamrex_1_1FabArrayBase_1a60aa58517fd2a7d6976e114df171df25" kindref="member">is_cell_centered</ref>())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1InSituUtils_1_1StateMap_1a83596ee5f5aec04eecf65de835ca82fb" kindref="member">Map</ref>[vtkDataObject::CELL][arrayName]<sp/>=<sp/>std::make_pair(i,j);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.<ref refid="classamrex_1_1FabArrayBase_1a641ffe22574cc57f3544687b3e23d174" kindref="member">is_nodal</ref>())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1InSituUtils_1_1StateMap_1a83596ee5f5aec04eecf65de835ca82fb" kindref="member">Map</ref>[vtkDataObject::POINT][arrayName]<sp/>=<sp/>std::make_pair(i,j);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data<sp/>adaptor&apos;s<sp/>internal<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" kindref="compound">AmrMeshDataAdaptor::InternalsType</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" kindref="compound">InternalsType</ref>()<sp/>:<sp/>Mesh(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>PinMesh(0),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>States(),<sp/>StateMetadata()<sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AmrMesh" kindref="compound">amrex::AmrMesh</ref><sp/>*Mesh;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PinMesh;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;amrex::Vector&lt;amrex::MultiFab&gt;<sp/>*&gt;<sp/>States;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>Names;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1InSituUtils_1_1MeshStateMap" kindref="compound">amrex::InSituUtils::MeshStateMap</ref><sp/>StateMetadata;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SENSEI_VERSION_MAJOR<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vtkDataObject*&gt;<sp/>ManagedObjects;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="namespaceamrex_1a8d39fa37907313633609b0b404501b7d" kindref="member">senseiNewMacro</ref>(<ref refid="classamrex_1_1AmrMeshDataAdaptor" kindref="compound">AmrMeshDataAdaptor</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a2343c3cec45162fdd013661122a5ed0f" kindref="member">AmrMeshDataAdaptor::AmrMeshDataAdaptor</ref>()<sp/>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Internals(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1AmrMeshDataAdaptor_1_1InternalsType" kindref="compound">AmrMeshDataAdaptor::InternalsType</ref>())</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a128f2624255ef44bea08ba633f9abf99" kindref="member">AmrMeshDataAdaptor::~AmrMeshDataAdaptor</ref>()</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;Internals;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1af39f5254469c146a31e26a5978b052db" kindref="member">AmrMeshDataAdaptor::SetDataSource</ref>(<ref refid="classamrex_1_1AmrMesh" kindref="compound">amrex::AmrMesh</ref><sp/>*mesh,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector&lt;amrex::MultiFab&gt;</ref>*&gt;<sp/>&amp;states,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>&amp;names)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ReleaseData();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;Mesh<sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;States<sp/>=<sp/>states;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;Names<sp/>=<sp/>names;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;StateMetadata.Initialize(states,<sp/>names);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1af95203532e6b05769deed97d8015911b" kindref="member">AmrMeshDataAdaptor::SetPinMesh</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pinMesh)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;PinMesh<sp/>=<sp/>pinMesh;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a799e8484ecd0ce48d5a84dd634b01ee1" kindref="member">AmrMeshDataAdaptor::GetNumberOfMeshes</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;numMeshes)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>numMeshes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SENSEI_VERSION_MAJOR<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AmrMeshDataAdaptor::GetMeshMetadata(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>sensei::MeshMetadataPtr<sp/>&amp;metadata)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>sensei::TimeEvent&lt;64&gt;<sp/>event(</highlight><highlight class="stringliteral">&quot;AmrMeshDataAdaptor::GetMeshMetadata&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;invalid<sp/>mesh<sp/>id<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AMR<sp/>data<sp/>is<sp/>always<sp/>expected<sp/>to<sp/>be<sp/>a<sp/>global<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;GlobalView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;MeshName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;MeshType<sp/>=<sp/>VTK_OVERLAPPING_AMR;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;BlockType<sp/>=<sp/>VTK_UNIFORM_GRID;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumBlocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumCells<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumBlocksLocal<sp/>=<sp/>{-1};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;CoordinateType<sp/>=<sp/><ref refid="structamrex_1_1InSituUtils_1_1amrex__tt" kindref="compound">InSituUtils::amrex_tt&lt;amrex_real&gt;::vtk_type_enum</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;StaticMesh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>num<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumLevels<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;finestLevel()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>number<sp/>of<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>metadata-&gt;NumLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBlocks<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i).size();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;NumBlocks<sp/>+=<sp/>numBlocks;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>per<sp/>block<sp/>decomp<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockDecompSet())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockIds.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockOwner.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockLevel.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;RefRatio.resize(metadata-&gt;NumLevels);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlocksPerLevel.resize(metadata-&gt;NumLevels);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>per<sp/>block<sp/>size<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockSizeSet())</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;NumCells<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;NumPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockNumCells.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockNumPoints.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>per<sp/>block<sp/>bounds<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockBoundsSet())</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockBounds.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>per<sp/>block<sp/>extent<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockBoundsSet())</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockExtents.resize(metadata-&gt;NumBlocks);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealBox" kindref="compound">amrex::RealBox</ref>&amp;<sp/>pd<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(0).ProbDomain();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pdLo[3]<sp/>=<sp/>{AMREX_ARLIM(pd.<ref refid="classamrex_1_1RealBox_1aded9c5a0cac5cfd5a320c32a26144dcc" kindref="member">lo</ref>())};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pdHi[3]<sp/>=<sp/>{AMREX_ARLIM(pd.<ref refid="classamrex_1_1RealBox_1a819f29403d4806d7b13baffe25b5ceb8" kindref="member">hi</ref>())};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PinMesh<sp/>works<sp/>around<sp/>a<sp/>bug<sp/>in<sp/>VisIt<sp/>2.13.2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>the<sp/>origin<sp/>to<sp/>0,0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;PinMesh)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdHi[i]<sp/>=<sp/>pdHi[i]<sp/>-<sp/>pdLo[i];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdLo[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockBoundsSet())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;Bounds<sp/>=<sp/>std::array&lt;double,6&gt;(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pdLo[0],<sp/>pdHi[0],<sp/>pdLo[1],<sp/>pdHi[1],<sp/>pdLo[2],<sp/>pdHi[2]});</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>extent<sp/>(note:<sp/>VTK<sp/>uses<sp/>point<sp/>centered<sp/>indexing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref>&amp;<sp/>cdom<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(0).Domain();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>ndom<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">surroundingNodes</ref>(cdom);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0[3]<sp/>=<sp/>{AMREX_ARLIM(ndom.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>())};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1[3]<sp/>=<sp/>{AMREX_ARLIM(ndom.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>())};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockExtentsSet())</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;Extent<sp/>=<sp/>std::array&lt;int,6&gt;(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i0[0],<sp/>i1[0],<sp/>i0[1],<sp/>i1[1],<sp/>i0[2],<sp/>i1[2]});</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>num<sp/>ghosts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumGhostCells<sp/>=<sp/>this-&gt;Internals-&gt;States[0]-&gt;at(0).nGrow();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumGhostNodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per<sp/>array<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state0<sp/>=<sp/>this-&gt;Internals-&gt;States[id]-&gt;at(0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;NumArrays<sp/>=<sp/>state0.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>per<sp/>array<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;ArrayName.resize(metadata-&gt;NumArrays);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;ArrayComponents.resize(metadata-&gt;NumArrays);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;ArrayType.resize(metadata-&gt;NumArrays);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata-&gt;ArrayCentering.resize(metadata-&gt;NumArrays);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>metadata-&gt;NumArrays;<sp/>++j)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;ArrayName[j]<sp/>=<sp/>this-&gt;Internals-&gt;Names[id][j];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scalar,<sp/>vector,<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;ArrayComponents[j]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>POD<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;ArrayType[j]<sp/>=<sp/><ref refid="structamrex_1_1InSituUtils_1_1amrex__tt" kindref="compound">InSituUtils::amrex_tt&lt;amrex_real&gt;::vtk_type_enum</ref>();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh<sp/>centering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state0.<ref refid="classamrex_1_1FabArrayBase_1a60aa58517fd2a7d6976e114df171df25" kindref="member">is_cell_centered</ref>())</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;ArrayCentering[j]<sp/>=<sp/>vtkDataObject::CELL;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state0.<ref refid="classamrex_1_1FabArrayBase_1a641ffe22574cc57f3544687b3e23d174" kindref="member">is_nodal</ref>())</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;ArrayCentering[j]<sp/>=<sp/>vtkDataObject::POINT;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;ArrayCentering[j]<sp/>=<sp/>vtkDataObject::FIELD;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>--<sp/>port<sp/>code<sp/>from<sp/>AmrDataAdaptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockArrayRangeSet())</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Per-array<sp/>per-block<sp/>array<sp/>ranges<sp/>not<sp/>yet<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gather<sp/>per<sp/>block<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>metadata-&gt;NumLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>domain<sp/>decomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref><sp/>&amp;dmap<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;DistributionMap(i);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state<sp/>=<sp/>this-&gt;Internals-&gt;States[0]-&gt;at(i);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">amrex::Geometry</ref><sp/>&amp;geom<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(i);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing<sp/>[3]<sp/>=<sp/>{AMREX_ARLIM(geom.<ref refid="classamrex_1_1CoordSys_1ade9815d7413549b5bb09000f1c9ede76" kindref="member">CellSize</ref>())};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray&amp;<sp/>ba<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBoxes<sp/>=<sp/>ba.size();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockDecompSet())</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blocks<sp/>per<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlocksPerLevel[i]<sp/>=<sp/>nBoxes;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refinement<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>this-&gt;Internals-&gt;Mesh-&gt;maxLevel())</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;RefRatio[i]<sp/>=<sp/>std::array&lt;int,3&gt;(</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{AMREX_ARLIM(this-&gt;Internals-&gt;Mesh-&gt;refRatio(i))});</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;RefRatio[i]<sp/>=<sp/>std::array&lt;int,3&gt;({1,1,1});</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>boxes<sp/>this<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nBoxes;<sp/>++j,<sp/>++gid)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell<sp/>centered<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>cbox<sp/>=<sp/>ba[j];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>0;<sp/>q<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++q)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbox.<ref refid="classamrex_1_1Box_1ab6232053a39e1b010d0d9a1b269f53ff" kindref="member">grow</ref>(q,<sp/>ng);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>nbox<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">surroundingNodes</ref>(cbox);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxLo[3]<sp/>=<sp/>{AMREX_ARLIM(nbox.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>())};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxHi[3]<sp/>=<sp/>{AMREX_ARLIM(nbox.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>())};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>domain<sp/>decomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockDecompSet())</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockOwner[gid]<sp/>=<sp/>dmap[j];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockIds[gid]<sp/>=<sp/>gid;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockLevel[gid]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockSizeSet())</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nPts<sp/>=<sp/>nbox.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nCells<sp/>=<sp/>cbox.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;NumPoints<sp/>+=<sp/>nPts;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;NumCells<sp/>+=<sp/>nCells;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockNumPoints[gid]<sp/>=<sp/>nPts;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockNumCells[gid]<sp/>=<sp/>nCells;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockExtentsSet())</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockExtents[gid]<sp/>=<sp/>std::array&lt;int,6&gt;({</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nboxLo[0],<sp/>nboxHi[0],<sp/>nboxLo[1],<sp/>nboxHi[1],<sp/>nboxLo[2],<sp/>nboxHi[2]});</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata-&gt;Flags.BlockBoundsSet())</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata-&gt;BlockBounds[gid]<sp/>=<sp/>std::array&lt;double,6&gt;(</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pdLo[0]<sp/>+<sp/>spacing[0]*nboxLo[0],<sp/>pdHi[0]<sp/>+<sp/>spacing[0]*nboxHi[0],</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdLo[1]<sp/>+<sp/>spacing[1]*nboxLo[1],<sp/>pdHi[1]<sp/>+<sp/>spacing[1]*nboxHi[1],</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdLo[2]<sp/>+<sp/>spacing[2]*nboxLo[2],<sp/>pdHi[2]<sp/>+<sp/>spacing[2]*nboxHi[2]});</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1aed8264f802b43842e82fbe41a3ecb283" kindref="member">AmrMeshDataAdaptor::GetMeshName</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::string<sp/>&amp;meshName)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>meshName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a81e26add150ac206d12a042169b1f993" kindref="member">AmrMeshDataAdaptor::GetNumberOfArrays</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>association,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;numberOfArrays)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfArrays<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((association<sp/>!=<sp/>vtkDataObject::POINT)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(association<sp/>!=<sp/>vtkDataObject::CELL))</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>association<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>association)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;States.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>simualtion<sp/>data,<sp/>missing<sp/>call<sp/>to<sp/>SetDataSource?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfArrays<sp/>=<sp/>this-&gt;Internals-&gt;StateMetadata.Size(association);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a6134a52852c8b59d0377a1f255990f85" kindref="member">AmrMeshDataAdaptor::GetArrayName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>association,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>std::string<sp/>&amp;arrayName)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;StateMetadata.GetName(association,<sp/>index,<sp/>arrayName))</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>array<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>arrayName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>sensei::VTKUtils::GetAttributesName(association)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1af416516fa4c19ec1181034effe6bb4c6" kindref="member">AmrMeshDataAdaptor::GetMeshHasGhostNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;nLayers)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>nLayers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a141e4587c3c274deb75f5d04ae75f4d3" kindref="member">AmrMeshDataAdaptor::GetMeshHasGhostCells</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;nLayers)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>nLayers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;States.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>simualtion<sp/>data,<sp/>missing<sp/>call<sp/>to<sp/>SetDataSource?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>nLayers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a677d09b0fbaa9cbe7502ad61b201824f" kindref="member">AmrMeshDataAdaptor::GetMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>structureOnly,<sp/>vtkDataObject<sp/>*&amp;mesh)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;States.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>simualtion<sp/>data,<sp/>missing<sp/>call<sp/>to<sp/>SetDataSource?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="AMReX__ccse-mpi_8H_1ac57c1fc8484fb9b5c8359a559851107b" kindref="member">MPI_COMM_WORLD</ref>,<sp/>&amp;rank);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevels<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;finestLevel()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>new<sp/>vtk<sp/>datasets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkOverlappingAMR<sp/>*amrMesh<sp/>=<sp/>vtkOverlappingAMR::New();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SENSEI_VERSION_MAJOR<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>Internals-&gt;ManagedObjects.push_back(amrMesh);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>amrMesh;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>num<sp/>levels<sp/>and<sp/>blocks<sp/>per<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>nBlocks(nLevels);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBlocks[i]<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i).size();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>amrMesh-&gt;Initialize(nLevels,<sp/>nBlocks.data());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1RealBox" kindref="compound">amrex::RealBox</ref>&amp;<sp/>pd<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(0).ProbDomain();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>origin[3]<sp/>=<sp/>{AMREX_ARLIM(pd.<ref refid="classamrex_1_1RealBox_1aded9c5a0cac5cfd5a320c32a26144dcc" kindref="member">lo</ref>())};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PinMesh<sp/>works<sp/>around<sp/>a<sp/>bug<sp/>in<sp/>VisIt<sp/>2.13.2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>the<sp/>origin<sp/>to<sp/>0,0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;PinMesh)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>amrMesh-&gt;SetOrigin(origin);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>domain<sp/>decomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref><sp/>&amp;dmap<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;DistributionMap(i);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state<sp/>=<sp/>this-&gt;Internals-&gt;States[0]-&gt;at(i);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Geometry" kindref="compound">amrex::Geometry</ref><sp/>&amp;geom<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(i);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing<sp/>[3]<sp/>=<sp/>{AMREX_ARLIM(geom.<ref refid="classamrex_1_1CoordSys_1ade9815d7413549b5bb09000f1c9ede76" kindref="member">CellSize</ref>())};</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrMesh-&gt;SetSpacing(i,<sp/>spacing);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refinement<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>this-&gt;Internals-&gt;Mesh-&gt;maxLevel())</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;refRatio(i)[0];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrMesh-&gt;SetRefinementRatio(i,<sp/>rr);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray&amp;<sp/>ba<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBoxes<sp/>=<sp/>ba.size();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nBoxes;<sp/>++j)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell<sp/>centered<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>cbox<sp/>=<sp/>ba[j];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell<sp/>centered<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cboxLo[3]<sp/>=<sp/>{AMREX_ARLIM(cbox.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>())};</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cboxHi[3]<sp/>=<sp/>{AMREX_ARLIM(cbox.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>())};</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vtk&apos;s<sp/>representation<sp/>of<sp/>box<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkAMRBox<sp/>block(cboxLo,<sp/>cboxHi);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrMesh-&gt;SetAMRBox(i,<sp/>j,<sp/>block);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrMesh-&gt;SetAMRBlockSourceIndex(i,<sp/>j,<sp/>gid++);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>building<sp/>a<sp/>vtk<sp/>amrMesh<sp/>for<sp/>the<sp/>non<sp/>local<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmap[j]<sp/>!=<sp/>rank)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>0;<sp/>q<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++q)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbox.<ref refid="classamrex_1_1Box_1ab6232053a39e1b010d0d9a1b269f53ff" kindref="member">grow</ref>(q,<sp/>ng);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>nbox<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">surroundingNodes</ref>(cbox);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxLo[3]<sp/>=<sp/>{AMREX_ARLIM(nbox.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>())};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxHi[3]<sp/>=<sp/>{AMREX_ARLIM(nbox.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>())};</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>vtk<sp/>uniform<sp/>amrMesh,<sp/>node<sp/>centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkUniformGrid<sp/>*ug<sp/>=<sp/>vtkUniformGrid::New();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;SetOrigin(origin);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;SetSpacing(spacing);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;SetExtent(nboxLo[0],<sp/>nboxHi[0],</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nboxLo[1],<sp/>nboxHi[1],<sp/>nboxLo[2],<sp/>nboxHi[2]);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>the<sp/>block<sp/>into<sp/>vtk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrMesh-&gt;SetDataSet(i,<sp/>j,<sp/>ug);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;Delete();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1acc215f58a34a203a271a0ef08848b546" kindref="member">AmrMeshDataAdaptor::AddGhostNodesArray</ref>(vtkDataObject<sp/>*mesh,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a652520cdfc484470e71d3641b2c1b608" kindref="member">AmrMeshDataAdaptor::AddGhostCellsArray</ref>(vtkDataObject*<sp/>mesh,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkOverlappingAMR<sp/>*amrMesh<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">vtkOverlappingAMR*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mesh);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!amrMesh)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>mesh<sp/>type<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(mesh<sp/>?<sp/>mesh-&gt;GetClassName()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;nullptr&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;States.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>simualtion<sp/>data,<sp/>missing<sp/>call<sp/>to<sp/>SetDataSource?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="AMReX__ccse-mpi_8H_1ac57c1fc8484fb9b5c8359a559851107b" kindref="member">MPI_COMM_WORLD</ref>,<sp/>&amp;rank);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevels<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;finestLevel()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;unsigned<sp/>char*&gt;&gt;<sp/>masks(nLevels);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>mask<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray<sp/>&amp;boxes<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref><sp/>&amp;dmap<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;DistributionMap(i);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>&amp;pdom<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(i).Domain();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state<sp/>=<sp/>this-&gt;Internals-&gt;States[0]-&gt;at(i);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char*&gt;<sp/>mask;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InSituUtils::AllocateBoxArray&lt;unsigned<sp/>char&gt;(</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdom,<sp/>boxes,<sp/>dmap,<sp/>ng,<sp/>mask);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>ghost<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InSituUtils::MaskGhostCells&lt;unsigned<sp/>char&gt;(</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdom,<sp/>boxes,<sp/>dmap,<sp/>ng,<sp/>mask);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>mask<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>masks[i]<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>coarse<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCoarseLevels<sp/>=<sp/>nLevels<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nCoarseLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>regions<sp/>covered<sp/>by<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state<sp/>=<sp/>this-&gt;Internals-&gt;States[0]-&gt;at(i);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>&amp;pdom<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;Geom(i).Domain();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray<sp/>&amp;cBoxes<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref><sp/>&amp;cMap<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;DistributionMap(i);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray<sp/>&amp;fBoxes<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(ii);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">amrex::IntVect</ref><sp/>cRefRatio<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;refRatio(i);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InSituUtils::MaskCoveredCells&lt;unsigned<sp/>char&gt;(</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdom,<sp/>cBoxes,<sp/>cMap,<sp/>fBoxes,<sp/>cRefRatio,<sp/>ng,<sp/>masks[i]);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref><sp/>&amp;dmap<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;DistributionMap(i);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>arrays<sp/>for<sp/>this<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char*&gt;<sp/>&amp;mask<sp/>=<sp/>masks[i];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray&amp;<sp/>ba<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBoxes<sp/>=<sp/>ba.<ref refid="classamrex_1_1DistributionMapping_1a0eebc2b29efd96d23accd706ab5f6930" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nBoxes;<sp/>++j)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmap[j]<sp/>!=<sp/>rank)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkUniformGrid<sp/>*blockMesh<sp/>=<sp/>amrMesh-&gt;GetDataSet(i,<sp/>j);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blockMesh)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Empty<sp/>block<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nCells<sp/>=<sp/>blockMesh-&gt;GetNumberOfCells();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>mask<sp/>array<sp/>into<sp/>vtk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkUnsignedCharArray<sp/>*ga<sp/>=<sp/>vtkUnsignedCharArray::New();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga-&gt;SetName(</highlight><highlight class="stringliteral">&quot;vtkGhostType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga-&gt;SetArray(mask[j],<sp/>nCells,<sp/>0);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockMesh-&gt;GetCellData()-&gt;AddArray(ga);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga-&gt;Delete();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>debug<sp/>can<sp/>visualize<sp/>the<sp/>ghost<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>--<sp/>a<sp/>bug<sp/>in<sp/>Catalyst<sp/>ignores<sp/>internal<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>using<sp/>the<sp/>VTK<sp/>writrer.<sp/>Until<sp/>that<sp/>bug<sp/>gets<sp/>fixed,<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>manually<sp/>inject<sp/>this<sp/>copy<sp/>using<sp/>a<sp/>PV<sp/>Python<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga<sp/>=<sp/>vtkUnsignedCharArray::New();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga-&gt;SetName(</highlight><highlight class="stringliteral">&quot;GhostType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga-&gt;SetArray(mask[j],<sp/>nCells,<sp/>1);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockMesh-&gt;GetCellData()-&gt;AddArray(ga);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ga-&gt;Delete();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a220571102ab3593fd2fd50cc0a7f28cc" kindref="member">AmrMeshDataAdaptor::AddArray</ref>(vtkDataObject*<sp/>mesh,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;meshName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>association,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;arrayName)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="AMReX__ccse-mpi_8H_1ac57c1fc8484fb9b5c8359a559851107b" kindref="member">MPI_COMM_WORLD</ref>,<sp/>&amp;rank);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;no<sp/>mesh<sp/>named<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meshName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>vtkOverlappingAMR<sp/>*amrMesh<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">vtkOverlappingAMR*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mesh);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!amrMesh)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>mesh<sp/>type<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(mesh<sp/>?<sp/>mesh-&gt;GetClassName()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;nullptr&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;States.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>simualtion<sp/>data,<sp/>missing<sp/>call<sp/>to<sp/>SetDataSource?&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((association<sp/>!=<sp/>vtkDataObject::CELL)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(association<sp/>!=<sp/>vtkDataObject::CELL))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>association<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>association)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>indices<sp/>of<sp/>the<sp/>multifab<sp/>and<sp/>component<sp/>within<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>named<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fab<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Internals-&gt;StateMetadata.GetIndex(arrayName,<sp/>association,<sp/>fab,<sp/>comp))</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>locate<sp/>descriptor<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>sensei::VTKUtils::GetAttributesName(association)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data<sp/>array<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>arrayName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevels<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;finestLevel()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLevels;<sp/>++i)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>domain<sp/>decomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">amrex::DistributionMapping</ref><sp/>&amp;dmap<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;DistributionMap(i);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">amrex::MultiFab</ref>&amp;<sp/>state<sp/>=<sp/>this-&gt;Internals-&gt;States[fab]-&gt;at(i);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>centering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((association<sp/>==<sp/>vtkDataObject::CELL)<sp/>&amp;&amp;<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a60aa58517fd2a7d6976e114df171df25" kindref="member">is_cell_centered</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!((association<sp/>==<sp/>vtkDataObject::POINT)<sp/>&amp;&amp;<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1a641ffe22574cc57f3544687b3e23d174" kindref="member">is_nodal</ref>()))</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;association<sp/>does<sp/>not<sp/>match<sp/>MultiFab<sp/>centering&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>component<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComp<sp/>=<sp/>state.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>();</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&gt;=<sp/>nComp)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_ERROR(</highlight><highlight class="stringliteral">&quot;Component<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::BoxArray&amp;<sp/>ba<sp/>=<sp/>this-&gt;Internals-&gt;Mesh-&gt;boxArray(i);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBoxes<sp/>=<sp/>ba.size();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nBoxes;<sp/>++j)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell<sp/>centered<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>cbox<sp/>=<sp/>ba[j];</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>ghost<sp/>zones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>0;<sp/>q<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++q)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbox.<ref refid="classamrex_1_1Box_1ab6232053a39e1b010d0d9a1b269f53ff" kindref="member">grow</ref>(q,<sp/>ng);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell<sp/>centered<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cboxLo[3]<sp/>=<sp/>{AMREX_ARLIM(cbox.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>())};</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cboxHi[3]<sp/>=<sp/>{AMREX_ARLIM(cbox.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>())};</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>building<sp/>a<sp/>vtk<sp/>mesh<sp/>for<sp/>the<sp/>non<sp/>local<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dmap[j]<sp/>!=<sp/>rank)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref><sp/>nbox<sp/>=<sp/><ref refid="namespaceamrex_1a83ce813a4f22bd122dfa0d93671ecb4e" kindref="member">surroundingNodes</ref>(cbox);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxLo[3]<sp/>=<sp/>{AMREX_ARLIM(nbox.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>())};</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxHi[3]<sp/>=<sp/>{AMREX_ARLIM(nbox.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>())};</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>block<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkUniformGrid<sp/>*ug<sp/>=<sp/>amrMesh-&gt;GetDataSet(i,<sp/>j);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>centered<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nlen<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>3;<sp/>++p)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlen<sp/>*=<sp/>nboxHi[p]<sp/>-<sp/>nboxLo[p]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell<sp/>centered<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>clen<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>3;<sp/>++p)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clen<sp/>*=<sp/>cboxHi[p]<sp/>-<sp/>cboxLo[p]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref><sp/>*pcd<sp/>=<sp/>state[j].dataPtr(comp);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>vtk<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1InSituUtils_1_1amrex__tt" kindref="compound">InSituUtils::amrex_tt&lt;amrex_real&gt;::vtk_type</ref><sp/>*da<sp/>=</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1InSituUtils_1_1amrex__tt" kindref="compound">InSituUtils::amrex_tt&lt;amrex_real&gt;::vtk_type::New</ref>();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>component<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da-&gt;SetName(arrayName.c_str());</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state[j].box().<ref refid="classamrex_1_1FabArrayBase_1a682fdf86619f6028fea2805d9693ae22" kindref="member">ixType</ref>()<sp/>==<sp/><ref refid="classamrex_1_1IndexType_1a9f800856dcfdcc8175c7797403f213da" kindref="member">amrex::IndexType::TheCellType</ref>())</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>copy<sp/>cell<sp/>centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da-&gt;SetArray(pcd,<sp/>clen,<sp/>1);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;GetCellData()-&gt;AddArray(da);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state[j].box().ixType()<sp/>==<sp/><ref refid="classamrex_1_1IndexType_1a39cdf04824a6e8cc89b9d21e4d59316c" kindref="member">amrex::IndexType::TheNodeType</ref>())</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>copy<sp/>point<sp/>centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da-&gt;SetArray(pcd,<sp/>nlen,<sp/>1);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;GetPointData()-&gt;AddArray(da);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SENSEI_WARNING(</highlight><highlight class="stringliteral">&quot;Face<sp/>or<sp/>edge<sp/>centered<sp/>component<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>comp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>skipped&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da-&gt;Delete();</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SENSEI_DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>level<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkFloatArray<sp/>*la<sp/>=<sp/>vtkFloatArray::New();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>la-&gt;SetName(</highlight><highlight class="stringliteral">&quot;amrex_level_id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>la-&gt;SetNumberOfTuples(clen);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>la-&gt;Fill(i);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;GetCellData()-&gt;AddArray(la);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>la-&gt;Delete();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>mpi<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtkFloatArray<sp/>*ra<sp/>=<sp/>vtkFloatArray::New();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra-&gt;SetName(</highlight><highlight class="stringliteral">&quot;amrex_mpi_rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra-&gt;SetNumberOfTuples(clen);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra-&gt;Fill(rank);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ug-&gt;GetCellData()-&gt;AddArray(ra);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra-&gt;Delete();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1AmrMeshDataAdaptor_1a9aa101ee90b944010548ed7461cb7a8a" kindref="member">AmrMeshDataAdaptor::ReleaseData</ref>()</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;Mesh<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;States.clear();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;Names.clear();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;StateMetadata.Clear();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SENSEI_VERSION_MAJOR<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>up<sp/>mesh<sp/>objects<sp/>we<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>this-&gt;Internals-&gt;ManagedObjects.size();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;ManagedObjects[i]-&gt;Delete();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Internals-&gt;ManagedObjects.clear();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp"/>
  </compounddef>
</doxygen>
