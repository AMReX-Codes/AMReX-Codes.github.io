<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MCLinOp_8cpp" kind="file" language="C++">
    <compoundname>AMReX_MCLinOp.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">cstdlib</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__LO__BCTYPES_8H" local="no">AMReX_LO_BCTYPES.H</includes>
    <includes refid="AMReX__MCLO__F_8H" local="no">AMReX_MCLO_F.H</includes>
    <includes refid="AMReX__MCLinOp_8H" local="no">AMReX_MCLinOp.H</includes>
    <incdepgraph>
      <node id="53307">
        <label>list</label>
      </node>
      <node id="53319">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53320" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53312" relation="include">
        </childnode>
      </node>
      <node id="53392">
        <label>iomanip</label>
      </node>
      <node id="53315">
        <label>functional</label>
      </node>
      <node id="53351">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53353" relation="include">
        </childnode>
        <childnode refid="53354" relation="include">
        </childnode>
        <childnode refid="53343" relation="include">
        </childnode>
        <childnode refid="53355" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
      </node>
      <node id="53368">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
      </node>
      <node id="53341">
        <label>limits</label>
      </node>
      <node id="53329">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
      </node>
      <node id="53393">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="53347" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53390" relation="include">
        </childnode>
      </node>
      <node id="53335">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53336" relation="include">
        </childnode>
        <childnode refid="53338" relation="include">
        </childnode>
        <childnode refid="53312" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
        <childnode refid="53343" relation="include">
        </childnode>
        <childnode refid="53344" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53345" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
      </node>
      <node id="53384">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53381" relation="include">
        </childnode>
        <childnode refid="53331" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53345" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53340" relation="include">
        </childnode>
      </node>
      <node id="53357">
        <label>cstdint</label>
      </node>
      <node id="53404">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53351" relation="include">
        </childnode>
        <childnode refid="53375" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
        <childnode refid="53405" relation="include">
        </childnode>
        <childnode refid="53403" relation="include">
        </childnode>
        <childnode refid="53391" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
        <childnode refid="53376" relation="include">
        </childnode>
      </node>
      <node id="53375">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="53353" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
      </node>
      <node id="53339">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53340" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53342" relation="include">
        </childnode>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53312" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53337" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53331" relation="include">
        </childnode>
        <childnode refid="53311" relation="include">
        </childnode>
      </node>
      <node id="53310">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53312" relation="include">
        </childnode>
        <childnode refid="53313" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53315" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53316" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
      </node>
      <node id="53369">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="53383">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="53378">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="53370" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
      </node>
      <node id="53350">
        <label>AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53351" relation="include">
        </childnode>
        <childnode refid="53356" relation="include">
        </childnode>
        <childnode refid="53410" relation="include">
        </childnode>
      </node>
      <node id="53321">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
      </node>
      <node id="53391">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="53325" relation="include">
        </childnode>
        <childnode refid="53320" relation="include">
        </childnode>
        <childnode refid="53392" relation="include">
        </childnode>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53319" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
      </node>
      <node id="53340">
        <label>cmath</label>
      </node>
      <node id="53402">
        <label>cassert</label>
      </node>
      <node id="53314">
        <label>stdexcept</label>
      </node>
      <node id="53347">
        <label>numeric</label>
      </node>
      <node id="53355">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
        <childnode refid="53343" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
      </node>
      <node id="53359">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="53340" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53342" relation="include">
        </childnode>
        <childnode refid="53308" relation="include">
        </childnode>
        <childnode refid="53360" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53331" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53361" relation="include">
        </childnode>
        <childnode refid="53355" relation="include">
        </childnode>
        <childnode refid="53362" relation="include">
        </childnode>
        <childnode refid="53364" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53329" relation="include">
        </childnode>
        <childnode refid="53368" relation="include">
        </childnode>
        <childnode refid="53369" relation="include">
        </childnode>
        <childnode refid="53370" relation="include">
        </childnode>
        <childnode refid="53376" relation="include">
        </childnode>
      </node>
      <node id="53304">
        <label>string</label>
      </node>
      <node id="53390">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="53353" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53391" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
        <childnode refid="53381" relation="include">
        </childnode>
      </node>
      <node id="53361">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="53335" relation="include">
        </childnode>
      </node>
      <node id="53353">
        <label>map</label>
      </node>
      <node id="53356">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="53357" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53358" relation="include">
        </childnode>
        <childnode refid="53396" relation="include">
        </childnode>
        <childnode refid="53409" relation="include">
        </childnode>
        <childnode refid="53403" relation="include">
        </childnode>
      </node>
      <node id="53367">
        <label>unordered_set</label>
      </node>
      <node id="53410">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53351" relation="include">
        </childnode>
        <childnode refid="53358" relation="include">
        </childnode>
        <childnode refid="53344" relation="include">
        </childnode>
        <childnode refid="53411" relation="include">
        </childnode>
        <childnode refid="53413" relation="include">
        </childnode>
        <childnode refid="53415" relation="include">
        </childnode>
        <childnode refid="53398" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53407" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53353" relation="include">
        </childnode>
      </node>
      <node id="53408">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="53407">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="53404" relation="include">
        </childnode>
        <childnode refid="53406" relation="include">
        </childnode>
      </node>
      <node id="53320">
        <label>fstream</label>
      </node>
      <node id="53398">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53353" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53399" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
        <childnode refid="53400" relation="include">
        </childnode>
        <childnode refid="53403" relation="include">
        </childnode>
      </node>
      <node id="53406">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
        <childnode refid="53404" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
        <childnode refid="53358" relation="include">
        </childnode>
        <childnode refid="53400" relation="include">
        </childnode>
        <childnode refid="53376" relation="include">
        </childnode>
      </node>
      <node id="53415">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53311" relation="include">
        </childnode>
      </node>
      <node id="53338">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="53330" relation="include">
        </childnode>
      </node>
      <node id="53400">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53308" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53401" relation="include">
        </childnode>
      </node>
      <node id="53332">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="53308" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53324" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53325" relation="include">
        </childnode>
        <childnode refid="53316" relation="include">
        </childnode>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
      </node>
      <node id="53389">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53370" relation="include">
        </childnode>
      </node>
      <node id="53334">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="53405">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
        <childnode refid="53391" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53360" relation="include">
        </childnode>
      </node>
      <node id="53331">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="53377">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53378" relation="include">
        </childnode>
        <childnode refid="53379" relation="include">
        </childnode>
        <childnode refid="53381" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53361" relation="include">
        </childnode>
        <childnode refid="53331" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53380" relation="include">
        </childnode>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53382" relation="include">
        </childnode>
        <childnode refid="53383" relation="include">
        </childnode>
      </node>
      <node id="53349">
        <label>AMReX_MCLO_F.H</label>
        <link refid="AMReX__MCLO__F_8H"/>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53338" relation="include">
        </childnode>
      </node>
      <node id="53372">
        <label>sys/types.h</label>
      </node>
      <node id="53403">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="53339" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
      </node>
      <node id="53346">
        <label>typeinfo</label>
      </node>
      <node id="53316">
        <label>cstdio</label>
      </node>
      <node id="53380">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="53360" relation="include">
        </childnode>
        <childnode refid="53331" relation="include">
        </childnode>
      </node>
      <node id="53333">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
      </node>
      <node id="53412">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="53356" relation="include">
        </childnode>
        <childnode refid="53398" relation="include">
        </childnode>
      </node>
      <node id="53323">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="53303" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53324" relation="include">
        </childnode>
        <childnode refid="53325" relation="include">
        </childnode>
        <childnode refid="53316" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53326" relation="include">
        </childnode>
        <childnode refid="53327" relation="include">
        </childnode>
        <childnode refid="53328" relation="include">
        </childnode>
      </node>
      <node id="53373">
        <label>unistd.h</label>
      </node>
      <node id="53306">
        <label>vector</label>
      </node>
      <node id="53303">
        <label>stack</label>
      </node>
      <node id="53395">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53391" relation="include">
        </childnode>
        <childnode refid="53369" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
      </node>
      <node id="53309">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="53310" relation="include">
        </childnode>
      </node>
      <node id="53311">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="53324">
        <label>utility</label>
      </node>
      <node id="53308">
        <label>array</label>
      </node>
      <node id="53396">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53386" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53353" relation="include">
        </childnode>
        <childnode refid="53324" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53365" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53351" relation="include">
        </childnode>
        <childnode refid="53397" relation="include">
        </childnode>
        <childnode refid="53395" relation="include">
        </childnode>
        <childnode refid="53375" relation="include">
        </childnode>
        <childnode refid="53398" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
        <childnode refid="53370" relation="include">
        </childnode>
        <childnode refid="53312" relation="include">
        </childnode>
        <childnode refid="53329" relation="include">
        </childnode>
        <childnode refid="53403" relation="include">
        </childnode>
        <childnode refid="53391" relation="include">
        </childnode>
        <childnode refid="53404" relation="include">
        </childnode>
        <childnode refid="53406" relation="include">
        </childnode>
        <childnode refid="53369" relation="include">
        </childnode>
        <childnode refid="53380" relation="include">
        </childnode>
        <childnode refid="53407" relation="include">
        </childnode>
        <childnode refid="53359" relation="include">
        </childnode>
        <childnode refid="53376" relation="include">
        </childnode>
        <childnode refid="53408" relation="include">
        </childnode>
      </node>
      <node id="53358">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53359" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53395" relation="include">
        </childnode>
        <childnode refid="53340" relation="include">
        </childnode>
      </node>
      <node id="53325">
        <label>sstream</label>
      </node>
      <node id="53409">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="53396" relation="include">
        </childnode>
        <childnode refid="53407" relation="include">
        </childnode>
        <childnode refid="53391" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
      </node>
      <node id="53313">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="53314" relation="include">
        </childnode>
      </node>
      <node id="53336">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53331" relation="include">
        </childnode>
        <childnode refid="53337" relation="include">
        </childnode>
      </node>
      <node id="53379">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53378" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53380" relation="include">
        </childnode>
      </node>
      <node id="53318">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="53312" relation="include">
        </childnode>
        <childnode refid="53319" relation="include">
        </childnode>
        <childnode refid="53323" relation="include">
        </childnode>
        <childnode refid="53329" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53346" relation="include">
        </childnode>
        <childnode refid="53322" relation="include">
        </childnode>
        <childnode refid="53315" relation="include">
        </childnode>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53347" relation="include">
        </childnode>
      </node>
      <node id="53370">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53353" relation="include">
        </childnode>
        <childnode refid="53371" relation="include">
        </childnode>
        <childnode refid="53360" relation="include">
        </childnode>
        <childnode refid="53372" relation="include">
        </childnode>
        <childnode refid="53373" relation="include">
        </childnode>
        <childnode refid="53374" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53351" relation="include">
        </childnode>
        <childnode refid="53375" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
      </node>
      <node id="53363">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
      </node>
      <node id="53344">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53311" relation="include">
        </childnode>
      </node>
      <node id="53337">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
      </node>
      <node id="53374">
        <label>sys/wait.h</label>
      </node>
      <node id="53305">
        <label>iosfwd</label>
      </node>
      <node id="53301">
        <label>cstdlib</label>
      </node>
      <node id="53328">
        <label>cfenv</label>
      </node>
      <node id="53300">
        <label>iostream</label>
      </node>
      <node id="53343">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53312" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
      </node>
      <node id="53411">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="53351" relation="include">
        </childnode>
        <childnode refid="53412" relation="include">
        </childnode>
      </node>
      <node id="53345">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="53339" relation="include">
        </childnode>
      </node>
      <node id="53352">
        <label>cstddef</label>
      </node>
      <node id="53299">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.cpp</label>
        <link refid="AMReX_MCLinOp.cpp"/>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53302" relation="include">
        </childnode>
        <childnode refid="53318" relation="include">
        </childnode>
        <childnode refid="53348" relation="include">
        </childnode>
        <childnode refid="53349" relation="include">
        </childnode>
        <childnode refid="53350" relation="include">
        </childnode>
      </node>
      <node id="53354">
        <label>unordered_map</label>
      </node>
      <node id="53397">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53343" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
        <childnode refid="53355" relation="include">
        </childnode>
      </node>
      <node id="53376">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53377" relation="include">
        </childnode>
        <childnode refid="53378" relation="include">
        </childnode>
        <childnode refid="53384" relation="include">
        </childnode>
        <childnode refid="53381" relation="include">
        </childnode>
        <childnode refid="53385" relation="include">
        </childnode>
        <childnode refid="53387" relation="include">
        </childnode>
        <childnode refid="53388" relation="include">
        </childnode>
        <childnode refid="53379" relation="include">
        </childnode>
        <childnode refid="53389" relation="include">
        </childnode>
        <childnode refid="53390" relation="include">
        </childnode>
        <childnode refid="53393" relation="include">
        </childnode>
        <childnode refid="53394" relation="include">
        </childnode>
      </node>
      <node id="53342">
        <label>climits</label>
      </node>
      <node id="53394">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="53366">
        <label>mutex</label>
      </node>
      <node id="53371">
        <label>chrono</label>
      </node>
      <node id="53382">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="53327">
        <label>csignal</label>
      </node>
      <node id="53413">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="53414" relation="include">
        </childnode>
        <childnode refid="53396" relation="include">
        </childnode>
        <childnode refid="53398" relation="include">
        </childnode>
      </node>
      <node id="53414">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="53359" relation="include">
        </childnode>
        <childnode refid="53358" relation="include">
        </childnode>
      </node>
      <node id="53364">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53365" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53366" relation="include">
        </childnode>
        <childnode refid="53367" relation="include">
        </childnode>
        <childnode refid="53315" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
      </node>
      <node id="53360">
        <label>type_traits</label>
      </node>
      <node id="53365">
        <label>set</label>
      </node>
      <node id="53362">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="53363" relation="include">
        </childnode>
      </node>
      <node id="53312">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="53387">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="53363" relation="include">
        </childnode>
      </node>
      <node id="53302">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="53303" relation="include">
        </childnode>
        <childnode refid="53304" relation="include">
        </childnode>
        <childnode refid="53305" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53307" relation="include">
        </childnode>
        <childnode refid="53308" relation="include">
        </childnode>
        <childnode refid="53309" relation="include">
        </childnode>
      </node>
      <node id="53322">
        <label>algorithm</label>
      </node>
      <node id="53381">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53308" relation="include">
        </childnode>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53370" relation="include">
        </childnode>
        <childnode refid="53378" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
      </node>
      <node id="53348">
        <label>AMReX_LO_BCTYPES.H</label>
        <link refid="AMReX__LO__BCTYPES_8H"/>
      </node>
      <node id="53326">
        <label>execinfo.h</label>
      </node>
      <node id="53386">
        <label>cstring</label>
      </node>
      <node id="53401">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53386" relation="include">
        </childnode>
        <childnode refid="53300" relation="include">
        </childnode>
        <childnode refid="53340" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53334" relation="include">
        </childnode>
        <childnode refid="53306" relation="include">
        </childnode>
        <childnode refid="53402" relation="include">
        </childnode>
        <childnode refid="53339" relation="include">
        </childnode>
      </node>
      <node id="53399">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="53341" relation="include">
        </childnode>
        <childnode refid="53310" relation="include">
        </childnode>
        <childnode refid="53330" relation="include">
        </childnode>
        <childnode refid="53332" relation="include">
        </childnode>
        <childnode refid="53321" relation="include">
        </childnode>
        <childnode refid="53335" relation="include">
        </childnode>
      </node>
      <node id="53317">
        <label>memory</label>
      </node>
      <node id="53385">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="53352" relation="include">
        </childnode>
        <childnode refid="53386" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
        <childnode refid="53317" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
        <childnode refid="53380" relation="include">
        </childnode>
        <childnode refid="53381" relation="include">
        </childnode>
      </node>
      <node id="53388">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="53311" relation="include">
        </childnode>
        <childnode refid="53333" relation="include">
        </childnode>
        <childnode refid="53381" relation="include">
        </childnode>
        <childnode refid="53380" relation="include">
        </childnode>
        <childnode refid="53363" relation="include">
        </childnode>
        <childnode refid="53301" relation="include">
        </childnode>
      </node>
      <node id="53330">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="53331" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LO__BCTYPES_8H" kindref="compound">AMReX_LO_BCTYPES.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MCLO__F_8H" kindref="compound">AMReX_MCLO_F.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MCLinOp_8H" kindref="compound">AMReX_MCLinOp.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>values<sp/>for<sp/>these<sp/>in<sp/>Initialize()!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MCLinOp_1aff280cffee92580e171452431909b3ae" kindref="member">MCLinOp::def_harmavg</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MCLinOp_1a46a805edef342618ac1dbc55736a6c7e" kindref="member">MCLinOp::def_verbose</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MCLinOp_1ad2c3ac0adae28f6f0b678a4ca63cfe38" kindref="member">MCLinOp::def_maxorder</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MCLinOp_1a17752cff7eb15c5a2fc3ccee7660ad7a" kindref="member">MCLinOp::def_ncomp</ref><sp/>=<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MCLinOp::applyBC<sp/>fills<sp/>MCLinOp_grow<sp/>ghost<sp/>cells<sp/>with<sp/>data<sp/>expected<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MCLinOp::apply()<sp/>therefore,<sp/>the<sp/>incoming<sp/>MultiFab<sp/>to<sp/>MCLinOp::applyBC()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>better<sp/>have<sp/>this<sp/>many<sp/>ghost<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MCLinOp_grow<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classamrex_1_1MCLinOp_1a20ce8b97ab1c99080dd1cd36dc623200" kindref="member">MCLinOp::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>MCLinOp::def_harmavg<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>MCLinOp::def_verbose<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>MCLinOp::def_maxorder<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>ParmParse<sp/>pp(</highlight><highlight class="stringliteral">&quot;MCLp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;harmavg&quot;</highlight><highlight class="normal">,<sp/><ref refid="classamrex_1_1MCLinOp_1aff280cffee92580e171452431909b3ae" kindref="member">def_harmavg</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1a46a805edef342618ac1dbc55736a6c7e" kindref="member">def_verbose</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;maxorder&quot;</highlight><highlight class="normal">,<ref refid="classamrex_1_1MCLinOp_1ad2c3ac0adae28f6f0b678a4ca63cfe38" kindref="member">def_maxorder</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/><ref refid="classamrex_1_1MCLinOp_1a46a805edef342618ac1dbc55736a6c7e" kindref="member">def_verbose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_harmavg<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCLinOp_1aff280cffee92580e171452431909b3ae" kindref="member">def_harmavg</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref>(<ref refid="classamrex_1_1MCLinOp_1a94a289e1826ebbbf13494df7fe36ca61" kindref="member">MCLinOp::Finalize</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="classamrex_1_1MCLinOp_1a94a289e1826ebbbf13494df7fe36ca61" kindref="member">MCLinOp::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="classamrex_1_1MCLinOp_1a9cd70c9f66edfb68fac71aa32b5b5ae9" kindref="member">MCLinOp::MCLinOp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>_bgb,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nc)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1MCLinOp_1ac1fac71d0b49cd8f31c09cabb38430fc" kindref="member">numcomp</ref>(_nc),<sp/><ref refid="classamrex_1_1MCLinOp_1a548eebb264a5b3282d34eaaaf6c81048" kindref="member">bgb</ref>(_bgb)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref><sp/>(MCLinOp::bcComponentsNeeded(numcomp)<sp/>==<sp/>bgb.nComp());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>_hh[<ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hh[i]<sp/>=<sp/>_h;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>initConstruct(_hh);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">MCLinOp::MCLinOp<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>_bgb,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/>_h,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nc)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>numcomp(_nc),<sp/>bgb(_bgb)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref><sp/>(MCLinOp::bcComponentsNeeded(numcomp)<sp/>==<sp/>bgb.nComp());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>initConstruct(_h);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">MCLinOp::~MCLinOp<sp/>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">MCLinOp::initConstruct<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>_h)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>reserve()<sp/>space<sp/>to<sp/>cut<sp/>down<sp/>on<sp/>copying<sp/>during<sp/>resize()s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>h.reserve(N);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox.reserve(N);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>undrrelxr.reserve(N);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>tangderiv.reserve(N);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals.reserve(N);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>geomarray.reserve(N);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>harmavg<sp/>=<sp/>def_harmavg;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1system_1aba644ca5c4d0bf30d567a08a6dc0ebd1" kindref="member">verbose</ref><sp/>=<sp/>def_verbose;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox.resize(1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox[level]<sp/>=<sp/>bgb.boxes();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>geomarray.resize(1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>geomarray[level]<sp/>=<sp/>bgb.getGeom();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>h.resize(1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>maxorder<sp/>=<sp/>def_maxorder;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>h[level][i]<sp/>=<sp/>_h[i];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals.resize(1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals[0].resize(2*BL_SPACEDIM);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oitr;<sp/>oitr;<sp/>++oitr)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Orientation<sp/>face<sp/>=<sp/>oitr();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>m<sp/>=<sp/>bgb.bndryMasks(face);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals[0][face].define(m.boxArray(),<sp/>m.DistributionMap(),<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">MultiMask::Copy</ref>(maskvals[0][face],<sp/>m);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">MCLinOp::bcComponentsNeeded(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM==2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>nc<sp/>=<sp/>ncomp<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Tangential<sp/>derivatives<sp/>for<sp/>each<sp/>comp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>nc<sp/>=<sp/>ncomp<sp/>*<sp/>(1<sp/>+<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>);<sp/></highlight><highlight class="comment">//<sp/>D-1<sp/>tang<sp/>derivs<sp/>for<sp/>ea,<sp/>but<sp/>waste<sp/>one<sp/>slot<sp/>to<sp/>simplify<sp/>indexing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nc;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">MCLinOp::apply<sp/>(MultiFab&amp;<sp/>out,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>in,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>applyBC(in,level,bc_mode);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>Fapply(out,in,level);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">MCLinOp::applyBC<sp/>(MultiFab&amp;<sp/>inout,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>inout<sp/>MultiFab<sp/>must<sp/>have<sp/>at<sp/>least<sp/>MCLinOp_grow<sp/>ghost<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>applyBC()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(inout.nGrow()<sp/>&gt;=<sp/>MCLinOp_grow);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>inout<sp/>MultiFab<sp/>must<sp/>have<sp/>at<sp/>least<sp/>Periodic_BC_grow<sp/>cells<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>algorithms<sp/>taking<sp/>care<sp/>of<sp/>periodic<sp/>boundary<sp/>conditions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(inout.nGrow()<sp/>&gt;=<sp/>MCLinOp_grow);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>coarsened<sp/>boundary<sp/>values,<sp/>cannot<sp/>apply<sp/>inhomog<sp/>at<sp/>lev&gt;0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(!(level&gt;0<sp/>&amp;&amp;<sp/>bc_mode<sp/>==<sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7aea372bb314280acee54f7e683ec43bbc19" kindref="member">MCInhomogeneous_BC</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flagden<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>in<sp/>the<sp/>bndry<sp/>data<sp/>and<sp/>undrrelxr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flagbc<sp/><sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bc_mode<sp/>==<sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7aea690909eddef5100a075a6465dc94537f" kindref="member">MCHomogeneous_BC</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flagbc<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>nodata<sp/>if<sp/>homog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>inout.nComp();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(nc<sp/>==<sp/>numcomp<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>inout.setBndry(-1.e30);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>prepareForLevel(level);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>inout.FillBoundary(geomarray[level].periodicity());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>boundary<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(inout);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gn<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>iobx<sp/>=<sp/>inout.box(gn);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(gbox[level][gn]<sp/>==<sp/>inout.box(gn));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData::RealTuple&amp;<sp/><sp/><sp/><sp/><sp/><sp/>bdl<sp/>=<sp/>bgb.bndryLocs(gn);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;<sp/>Vector&lt;BoundCond&gt;<sp/>&gt;&amp;<sp/>bdc<sp/>=<sp/>bgb.bndryConds(gn);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oitr;<sp/>oitr;<sp/>++oitr)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Orientation<sp/>face<sp/>=<sp/>oitr();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FabSet&amp;<sp/>f<sp/><sp/>=<sp/>undrrelxr[level][face];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FabSet&amp;<sp/>td<sp/>=<sp/>tangderiv[level][face];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdr(face);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>fs<sp/>=<sp/>bgb.bndryValues(face);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>bcl<sp/>=<sp/>bdl[face];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;BoundCond&gt;&amp;<sp/>bc<sp/>=<sp/>bdc[face];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*bct<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>bc.dataPtr();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>fsfab<sp/>=<sp/>fs[gn];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>bcvalptr<sp/>=<sp/>fsfab.dataPtr();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Way<sp/>external<sp/>derivs<sp/>stored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>exttdptr<sp/>=<sp/>fsfab.dataPtr(numcomp);<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>fslo<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fsfab.loVect();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>fshi<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fsfab.hiVect();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>inoutfab<sp/><sp/>=<sp/>inout[gn];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>denfab<sp/><sp/><sp/><sp/>=<sp/>f[gn];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>tdfab<sp/><sp/><sp/><sp/><sp/>=<sp/>td[gn];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BL_SPACEDIM==2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdir<sp/>=<sp/>face.coordDir(),<sp/>perpdir<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdir<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpdir<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdir<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpdir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;MCLinOp::applyBC():<sp/>bad<sp/>logic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>m<sp/><sp/><sp/><sp/>=<sp/>maskvals[level][face][mfi];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>mphi<sp/>=<sp/>maskvals[level][Orientation(perpdir,Orientation::high)][mfi];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>mplo<sp/>=<sp/>maskvals[level][Orientation(perpdir,Orientation::low)<sp/>][mfi];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__DivVis__F_8H_1a2db3ce61a3611b0bd8fb432addcaa366" kindref="member">FORT_APPLYBC</ref>(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;flagden,<sp/>&amp;flagbc,<sp/>&amp;maxorder,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inoutfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(inoutfab.loVect()),<sp/>ARLIM(inoutfab.hiVect()),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cdr,<sp/>bct,<sp/>&amp;bcl,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcvalptr,<sp/>ARLIM(fslo),<sp/>ARLIM(fshi),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.dataPtr(),<sp/><sp/><sp/><sp/>ARLIM(m.loVect()),<sp/><sp/><sp/><sp/>ARLIM(m.hiVect()),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mphi.dataPtr(),<sp/>ARLIM(mphi.loVect()),<sp/>ARLIM(mphi.hiVect()),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mplo.dataPtr(),<sp/>ARLIM(mplo.loVect()),<sp/>ARLIM(mplo.hiVect()),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(denfab.loVect()),<sp/>ARLIM(denfab.hiVect()),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exttdptr,<sp/>ARLIM(fslo),<sp/>ARLIM(fshi),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdfab.dataPtr(),ARLIM(tdfab.loVect()),ARLIM(tdfab.hiVect()),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iobx.loVect(),<sp/>iobx.hiVect(),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>h[level].data());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BL_SPACEDIM==3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>mn<sp/>=<sp/>maskvals[level][Orientation(1,Orientation::high)][mfi];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>me<sp/>=<sp/>maskvals[level][Orientation(0,Orientation::high)][mfi];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>mw<sp/>=<sp/>maskvals[level][Orientation(0,Orientation::low)<sp/>][mfi];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>ms<sp/>=<sp/>maskvals[level][Orientation(1,Orientation::low)<sp/>][mfi];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>mt<sp/>=<sp/>maskvals[level][Orientation(2,Orientation::high)][mfi];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/>mb<sp/>=<sp/>maskvals[level][Orientation(2,Orientation::low)<sp/>][mfi];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__DivVis__F_8H_1a2db3ce61a3611b0bd8fb432addcaa366" kindref="member">FORT_APPLYBC</ref>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;flagden,<sp/>&amp;flagbc,<sp/>&amp;maxorder,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inoutfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(inoutfab.loVect()),<sp/>ARLIM(inoutfab.hiVect()),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cdr,<sp/>bct,<sp/>&amp;bcl,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcvalptr,<sp/>ARLIM(fslo),<sp/>ARLIM(fshi),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mn.dataPtr(),ARLIM(mn.loVect()),ARLIM(mn.hiVect()),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me.dataPtr(),ARLIM(me.loVect()),ARLIM(me.hiVect()),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mw.dataPtr(),ARLIM(mw.loVect()),ARLIM(mw.hiVect()),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms.dataPtr(),ARLIM(ms.loVect()),ARLIM(ms.hiVect()),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt.dataPtr(),ARLIM(mt.loVect()),ARLIM(mt.hiVect()),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mb.dataPtr(),ARLIM(mb.loVect()),ARLIM(mb.hiVect()),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(denfab.loVect()),<sp/>ARLIM(denfab.hiVect()),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exttdptr,<sp/>ARLIM(fslo),<sp/>ARLIM(fshi),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdfab.dataPtr(),ARLIM(tdfab.loVect()),ARLIM(tdfab.hiVect()),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iobx.loVect(),<sp/>iobx.hiVect(),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>h[level].data());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">MCLinOp::residual<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>residL,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc_mode)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>apply(residL,<sp/>solnL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab::Xpay(residL,<sp/>-1.0,<sp/>rhsL,<sp/>0,<sp/>0,<sp/>residL.nComp(),<sp/>0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">MCLinOp::smooth<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc_mode)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phaseflag<sp/>=<sp/>0;<sp/>phaseflag<sp/>&lt;<sp/>numphase;<sp/>phaseflag++)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>applyBC(solnL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>Fsmooth(solnL,<sp/>rhsL,<sp/>level,<sp/>phaseflag);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="310"><highlight class="normal">MCLinOp::norm<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>in,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="312"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nm<sp/>=<sp/>MultiFab::Dot(in,<sp/>0,<sp/>in,<sp/>0,<sp/>in.nComp(),<sp/>0);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nm;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">MCLinOp::clearToLevel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>level+1;<sp/>i<sp/>&lt;<sp/>numLevels();<sp/>++i)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox[i].clear();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>h.resize(level+1);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox.resize(level+1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>undrrelxr.resize(level+1);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>tangderiv.resize(level+1);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">MCLinOp::prepareForLevel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>MCLinOp::prepareForLevel(level-1);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h.size()<sp/>&gt;<sp/>level)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>from<sp/>here<sp/>down<sp/>that<sp/>this<sp/>is<sp/>a<sp/>new<sp/>level<sp/>one<sp/>coarser<sp/>than<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(h.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>h.resize(level+1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>h[level][i]<sp/>=<sp/>h[level-1][i]*2.0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>geomarray.resize(level+1);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>curdomain<sp/>=<sp/>Box(<sp/>geomarray[level-1].Domain()<sp/>).coarsen(2);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>geomarray[level].define(<sp/>curdomain<sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>box<sp/>to<sp/>the<sp/>new<sp/>coarser<sp/>level<sp/>(assign<sp/>removes<sp/>old<sp/>BoxArray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox.resize(level+1);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>gbox[level]<sp/>=<sp/>BoxArray(gbox[level-1]).coarsen(2);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>BndryRegister<sp/>of<sp/>relax<sp/>values<sp/>to<sp/>the<sp/>new<sp/>coarser<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(undrrelxr.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>undrrelxr.resize(level+1);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>undrrelxr[level].define(gbox[level],<sp/>DistributionMap(),<sp/>1,<sp/>0,<sp/>0,<sp/>numcomp);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>BndryRegister<sp/>to<sp/>hold<sp/>tagential<sp/>derivatives<sp/>to<sp/>the<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coarser<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(tangderiv.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>tangderiv.resize(level+1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Figure<sp/>out<sp/>how<sp/>many<sp/>components.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>samplefs<sp/>=<sp/>tangderiv[level-1][Orientation(0,Orientation::low)];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>tangderiv[level].define(gbox[level],<sp/>DistributionMap(),<sp/>0,1,0,samplefs.nComp());</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>Array<sp/>of<sp/>Array<sp/>of<sp/>maskvals<sp/>to<sp/>the<sp/>new<sp/>coarser<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>orientation,<sp/>build<sp/>NULL<sp/>masks,<sp/>then<sp/>use<sp/>distributed<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>masks<sp/>for<sp/>coarse<sp/>levels,<sp/>ignore<sp/>outside_domain<sp/>possibility<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>always<sp/>solve<sp/>homogeneous<sp/>equation<sp/>on<sp/>coarse<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(maskvals.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals.resize(level+1);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals[level].resize(2*BL_SPACEDIM);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>fi;<sp/>fi;<sp/>++fi)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Orientation<sp/>face<sp/>=<sp/>fi();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>maskvals[level][face].define(gbox[level],<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DistributionMap(),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geomarray[level],</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face,<sp/>0,<sp/>1,<sp/>1,<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">MCLinOp::makeCoefficients<sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cs,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>fn,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>fn.nComp();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>index<sp/>type<sp/>of<sp/>incoming<sp/>MultiFab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>iType(fn.boxArray().ixType());</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>cType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(IndexType::CELL,<sp/>IndexType::CELL,<sp/>IndexType::CELL));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>xType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(IndexType::NODE,<sp/>IndexType::CELL,<sp/>IndexType::CELL));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>yType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(IndexType::CELL,<sp/>IndexType::NODE,<sp/>IndexType::CELL));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>zType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(IndexType::CELL,<sp/>IndexType::CELL,<sp/>IndexType::NODE));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdir;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>cType)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>xType)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>yType)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>zType)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;MCLinOp::makeCoeffients():<sp/>Bad<sp/>index<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxArray<sp/>d(gbox[level]);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdir<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>d.surroundingNodes(cdir);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGrow=0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>cs.define(d,<sp/>DistributionMap(),<sp/>nc,<sp/>nGrow);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>cs.setVal(0.0);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>csmfi(cs,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>csmfi.isValid();<sp/>++csmfi)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/><sp/><sp/><sp/>=<sp/>csmfi.tilebox();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab<sp/>=<sp/>cs[csmfi];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>fnfab<sp/>=<sp/>fn[csmfi];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(cdir)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__MCLO__F_8H_1ad9f5606ba98ebd4c93c46b6966bebac2" kindref="member">FORT_AVERAGECC</ref>(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab.dataPtr(),</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(csfab.loVect()),<sp/>ARLIM(csfab.hiVect()),</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fnfab.dataPtr(),</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(fnfab.loVect()),<sp/>ARLIM(fnfab.hiVect()),</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.loVect(),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.hiVect(),<sp/>&amp;nc);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>harmavg<sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__MCLO__F_8H_1a8ba2e430c820bc738103113d15d14485" kindref="member">FORT_HARMONIC_AVERAGEEC</ref>(</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(csfab.loVect()),<sp/>ARLIM(csfab.hiVect()),</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fnfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(fnfab.loVect()),<sp/>ARLIM(fnfab.hiVect()),</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.loVect(),</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.hiVect(),<sp/>&amp;nc,<sp/>&amp;cdir);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__MCLO__F_8H_1aedad4aaa4f22937c8e0a2d9119346f93" kindref="member">FORT_AVERAGEEC</ref>(</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(csfab.loVect()),<sp/>ARLIM(csfab.hiVect()),</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fnfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARLIM(fnfab.loVect()),<sp/>ARLIM(fnfab.hiVect()),</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.loVect(),</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.hiVect(),<sp/>&amp;nc,<sp/>&amp;cdir);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;MCLinOp::makeCoeffients():<sp/>bad<sp/>coefficient<sp/>coarsening<sp/>direction!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><ref refid="namespaceamrex_1ae9a6e7245f5df7f22c353eede65db960" kindref="member">operator&lt;&lt; </ref>(std::ostream&amp;<sp/><sp/>os,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MCLinOp&amp;<sp/>lp)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCLinOp&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Grids:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>lp.h.size();<sp/>++level)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lp.gbox[level]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Grid<sp/>Spacing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>lp.h.size();<sp/>++level)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>dx<sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=0;<sp/>d<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++d)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>lp.h[level][d]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Harmonic<sp/>average?<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(lp.harmavg<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Verbosity:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lp.verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>Order:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lp.maxorder<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Masks:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>lp.h.size();<sp/>++level)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc<sp/>=<sp/>0;<sp/>nproc<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();<sp/>++nproc)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nproc<sp/>==<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>())</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Processor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nproc<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oitr;<sp/>oitr;<sp/>++oitr)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Orientation<sp/>face<sp/>=<sp/>oitr();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MultiMaskIter<sp/>mmi(lp.maskvals[level][face]);<sp/>mmi.isValid();<sp/>++mmi)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>lp.maskvals[level][face][mmi];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.cpp"/>
  </compounddef>
</doxygen>
