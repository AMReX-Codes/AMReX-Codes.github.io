<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1StructOfArrays" kind="struct" language="C++" prot="public">
    <compoundname>amrex::StructOfArrays</compoundname>
    <includes refid="AMReX__StructOfArrays_8H" local="no">AMReX_StructOfArrays.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NReal</declname>
        <defname>NReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NInt</declname>
        <defname>NInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1a179fafc569924202b166896b608cd5c2" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; ParticleReal, Allocator&lt; ParticleReal &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::RealVector =  amrex::PODVector&lt;ParticleReal, Allocator&lt;ParticleReal&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="17" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, Allocator&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::IntVector =  amrex::PODVector&lt;int, Allocator&lt;int&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a7db5f7869add58ecbebac952fc75e1ff" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_num_neighbor_particles</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_particles</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="208" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1aa9ae6d2054d75f3a9d34c3fb630e6804" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref>, NReal &gt;</type>
        <definition>std::array&lt;RealVector, NReal&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_rdata</definition>
        <argsstring></argsstring>
        <name>m_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="211" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a64d3bf6ebedba481365cd4a9d0072ce9" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref>, NInt &gt;</type>
        <definition>std::array&lt; IntVector, NInt&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="212" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1adefc562d67fd0e640e80a8ee068948a5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref> &gt;</type>
        <definition>std::vector&lt;RealVector&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_runtime_rdata</definition>
        <argsstring></argsstring>
        <name>m_runtime_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="214" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a7668bc0907c454a0959603288a2b9873" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref> &gt;</type>
        <definition>std::vector&lt;IntVector &gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_runtime_idata</definition>
        <argsstring></argsstring>
        <name>m_runtime_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="215" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a031f0da90c07aa74bbb399db39b378a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="217" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ab198677876af6342b7811a2dd6bbed6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int)</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="20" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a910364653d0aee372ea5d30dbd98e34c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::NumRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRealComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a812e8db38b02a923e33de9d31a4978ba" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::NumIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumIntComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aaa669dc405e332237db26feb68ffb257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref>, NReal &gt; &amp;</type>
        <definition>std::array&lt;RealVector, NReal&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>()</argsstring>
        <name>GetRealData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="31" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a0713765da8db746084c4b0d7d9e3230b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref>, NInt &gt; &amp;</type>
        <definition>std::array&lt; IntVector, NInt&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>()</argsstring>
        <name>GetIntData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="32" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a852422beff887d7d8d82cb21e7190dce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref>, NReal &gt; &amp;</type>
        <definition>const std::array&lt;RealVector, NReal&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>() const</argsstring>
        <name>GetRealData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the particle Real Arrays (only compile-time components) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="35" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a32f1b56e5d68299fc49813648903e884" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref>, NInt &gt; &amp;</type>
        <definition>const std::array&lt; IntVector, NInt&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>() const</argsstring>
        <name>GetIntData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the particle Int Arrays (only compile-time components) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="37" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a10c0a0dea4cddd7bfec98c2f14a2292e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref> &amp;</type>
        <definition>RealVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetRealData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Real component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NReal-1 compile-time and NReal... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="43" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="43" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a76f073678406c1191acd44dd1cf562d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref> &amp;</type>
        <definition>const RealVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>(const int index) const</argsstring>
        <name>GetRealData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Real component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NReal-1 compile-time and NReal... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="62" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="62" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1abf1c48c61fb3ccc48c3663e987b6aed3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref> &amp;</type>
        <definition>IntVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetIntData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Int component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NInt-1 compile-time and NInt... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="81" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="81" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1abbe15736b28057529d48ed51ff290b99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref> &amp;</type>
        <definition>const IntVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>(const int index) const</argsstring>
        <name>GetIntData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Int component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NInt-1 compile-time and NInt... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="101" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="101" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a480b74499d8a9eafa9c81d5404287c80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="120" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="120" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a9cd10b883dfbaa396d69935cf9783596" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Returns whether the SoA is empty (i.e. has <ref refid="structamrex_1_1StructOfArrays_1a480b74499d8a9eafa9c81d5404287c80" kindref="member">size()</ref> == 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="141" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aed3ffbe932f69885df6a16a067758eed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numParticles</definition>
        <argsstring>() const</argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="147" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ab35d588a41d6e7d2c14ae957ea8d5d99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const</argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="153" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a2dcab6a884a05d6548547b8359758611" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const</argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="159" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a9dab7a711b3b967a56646e6c30ae5904" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const</argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="165" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a6f04d6f94a8930f6be295a36603ca7d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="167" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a1dfdbf37585cc21bbdcdbd94145b7a09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="174" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1abe8cb769562c897b6ab86683cf0d716e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::resize</definition>
        <argsstring>(size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="176" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a04e229de2a830b849d1900050b383f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; ParticleReal *, NReal &gt;</type>
        <definition>GpuArray&lt;ParticleReal*, NReal&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::realarray</definition>
        <argsstring>()</argsstring>
        <name>realarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="188" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="188" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ae6c1e19e9551116263efb5381f3f6bb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, NInt &gt;</type>
        <definition>GpuArray&lt;int*, NInt&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::intarray</definition>
        <argsstring>()</argsstring>
        <name>intarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="198" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="198" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;</label>
        <link refid="structamrex_1_1StructOfArrays"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_idata</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_runtime_idata</edgelabel>
          <edgelabel>m_runtime_rdata</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_rdata</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="3">
        <label>amrex::PODVector&lt; T, Allocator &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::array&lt; amrex::PODVector, NReal &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::array&lt; amrex::PODVector, NInt &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; amrex::PODVector &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="15" bodyend="218"/>
    <listofallmembers>
      <member refid="structamrex_1_1StructOfArrays_1ab198677876af6342b7811a2dd6bbed6e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>define</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a9cd10b883dfbaa396d69935cf9783596" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>empty</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a0713765da8db746084c4b0d7d9e3230b" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a32f1b56e5d68299fc49813648903e884" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1abf1c48c61fb3ccc48c3663e987b6aed3" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1abbe15736b28057529d48ed51ff290b99" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a1dfdbf37585cc21bbdcdbd94145b7a09" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aaa669dc405e332237db26feb68ffb257" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a852422beff887d7d8d82cb21e7190dce" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a10c0a0dea4cddd7bfec98c2f14a2292e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a76f073678406c1191acd44dd1cf562d1" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ae6c1e19e9551116263efb5381f3f6bb7" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>intarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a031f0da90c07aa74bbb399db39b378a8" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a64d3bf6ebedba481365cd4a9d0072ce9" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a7db5f7869add58ecbebac952fc75e1ff" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_num_neighbor_particles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aa9ae6d2054d75f3a9d34c3fb630e6804" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_rdata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a7668bc0907c454a0959603288a2b9873" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_runtime_idata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1adefc562d67fd0e640e80a8ee068948a5" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_runtime_rdata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a812e8db38b02a923e33de9d31a4978ba" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>NumIntComps</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a2dcab6a884a05d6548547b8359758611" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aed3ffbe932f69885df6a16a067758eed" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a910364653d0aee372ea5d30dbd98e34c" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>NumRealComps</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ab35d588a41d6e7d2c14ae957ea8d5d99" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a9dab7a711b3b967a56646e6c30ae5904" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a04e229de2a830b849d1900050b383f8d" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>realarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1StructOfArrays_1abe8cb769562c897b6ab86683cf0d716e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>resize</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a6f04d6f94a8930f6be295a36603ca7d2" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a480b74499d8a9eafa9c81d5404287c80" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
