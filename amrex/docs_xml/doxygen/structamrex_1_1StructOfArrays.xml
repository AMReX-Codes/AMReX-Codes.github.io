<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1StructOfArrays" kind="struct" language="C++" prot="public">
    <compoundname>amrex::StructOfArrays</compoundname>
    <includes refid="AMReX__StructOfArrays_8H" local="no">AMReX_StructOfArrays.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NReal</declname>
        <defname>NReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NInt</declname>
        <defname>NInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1a179fafc569924202b166896b608cd5c2" kindref="member">DefaultAllocator</ref></defval>
      </param>
      <param>
        <type>bool</type>
        <declname>use64BitIdCpu</declname>
        <defname>use64BitIdCpu</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1af6874dec9cbf05e59a6bc7367c5d22f7" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; uint64_t, Allocator&lt; uint64_t &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::IdCPU =  amrex::PODVector&lt;uint64_t, Allocator&lt;uint64_t&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IdCPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; ParticleReal, Allocator&lt; ParticleReal &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::RealVector =  amrex::PODVector&lt;ParticleReal, Allocator&lt;ParticleReal&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="19" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, Allocator&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::IntVector =  amrex::PODVector&lt;int, Allocator&lt;int&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="20" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a8c77c12736c976f0848d534b810cdc34" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_num_neighbor_particles</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_particles</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="226" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a62679baf18972e398b3c6f5148fc9087" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1StructOfArrays_1af6874dec9cbf05e59a6bc7367c5d22f7" kindref="member">IdCPU</ref></type>
        <definition>IdCPU amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_idcpu</definition>
        <argsstring></argsstring>
        <name>m_idcpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="229" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1aaffa30601135a22b5e4f9ac283b06aa1" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" kindref="member">RealVector</ref>, NReal &gt;</type>
        <definition>std::array&lt;RealVector, NReal&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_rdata</definition>
        <argsstring></argsstring>
        <name>m_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="230" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a017be53b64346d557da975c2a473a5a3" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" kindref="member">IntVector</ref>, NInt &gt;</type>
        <definition>std::array&lt; IntVector, NInt&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="231" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a179e1b7074dc1c6f3fe55ee3222839de" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" kindref="member">RealVector</ref> &gt;</type>
        <definition>std::vector&lt;RealVector&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_runtime_rdata</definition>
        <argsstring></argsstring>
        <name>m_runtime_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="233" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a10ad5fb2e51e43137e1b26ce70119735" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" kindref="member">IntVector</ref> &gt;</type>
        <definition>std::vector&lt;IntVector &gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_runtime_idata</definition>
        <argsstring></argsstring>
        <name>m_runtime_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="234" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a27f4405dacee92bf69d837b35ca6d238" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="236" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aad692d209aa517fa028bd98aa14f0b96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int)</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="22" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="22" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a6b104504a3540a44182a1ad408d5cfa7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::NumRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRealComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1af8037383212b93e6a701d263167baa31" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::NumIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumIntComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="31" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a0dcfe0eee137e2a2d22126d2fbda1fcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1af6874dec9cbf05e59a6bc7367c5d22f7" kindref="member">IdCPU</ref> &amp;</type>
        <definition>IdCPU&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetIdCPUData</definition>
        <argsstring>()</argsstring>
        <name>GetIdCPUData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="33" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a44390e5c68da1d50f5536428bf7da802" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" kindref="member">RealVector</ref>, NReal &gt; &amp;</type>
        <definition>std::array&lt;RealVector, NReal&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetRealData</definition>
        <argsstring>()</argsstring>
        <name>GetRealData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="34" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a2086bc5faf11d372ebcbe728e46c19d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" kindref="member">IntVector</ref>, NInt &gt; &amp;</type>
        <definition>std::array&lt; IntVector, NInt&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetIntData</definition>
        <argsstring>()</argsstring>
        <name>GetIntData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="35" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aaf532986a54772ea640a2ab38b7cff9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1af6874dec9cbf05e59a6bc7367c5d22f7" kindref="member">IdCPU</ref> &amp;</type>
        <definition>const IdCPU&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetIdCPUData</definition>
        <argsstring>() const</argsstring>
        <name>GetIdCPUData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the particle id/cpu Arrays </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="38" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a86408aeae996a4c711dca10a4d7cbc4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" kindref="member">RealVector</ref>, NReal &gt; &amp;</type>
        <definition>const std::array&lt;RealVector, NReal&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetRealData</definition>
        <argsstring>() const</argsstring>
        <name>GetRealData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the particle Real Arrays (only compile-time components) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="40" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a296f7ff58cbcaa84b993ba66b8374e07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" kindref="member">IntVector</ref>, NInt &gt; &amp;</type>
        <definition>const std::array&lt; IntVector, NInt&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetIntData</definition>
        <argsstring>() const</argsstring>
        <name>GetIntData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the particle Int Arrays (only compile-time components) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="42" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ac2d7e9441c59e88b42978df7d9d1817c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" kindref="member">RealVector</ref> &amp;</type>
        <definition>RealVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetRealData</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetRealData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Real component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NReal-1 compile-time and NReal... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="48" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="48" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ac4a15a6ca35075933960a3c28f1d3581" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" kindref="member">RealVector</ref> &amp;</type>
        <definition>const RealVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetRealData</definition>
        <argsstring>(const int index) const</argsstring>
        <name>GetRealData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Real component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NReal-1 compile-time and NReal... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="67" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="67" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ab48f25cece8baf87dfe542bbdb53cf13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" kindref="member">IntVector</ref> &amp;</type>
        <definition>IntVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetIntData</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetIntData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Int component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NInt-1 compile-time and NInt... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="86" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="86" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a172af3e9e6cc7eeee5093772634020dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" kindref="member">IntVector</ref> &amp;</type>
        <definition>const IntVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::GetIntData</definition>
        <argsstring>(const int index) const</argsstring>
        <name>GetIntData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to a particle Int component Array (compile-time and runtime component)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>component with 0...NInt-1 compile-time and NInt... runtime arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="106" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="106" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ae0e85fbd1e4fa4bb5a42340a9f43f725" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="125" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="125" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a193e31f7db819b274b09730561007716" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Returns whether the SoA is empty (i.e. has <ref refid="structamrex_1_1StructOfArrays_1ae0e85fbd1e4fa4bb5a42340a9f43f725" kindref="member">size()</ref> == 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="148" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a82f411b26eab317ad15c998f4a72e863" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::numParticles</definition>
        <argsstring>() const</argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="154" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ac6d3cee84ea6fbae0bf95bcd36c536fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::numRealParticles</definition>
        <argsstring>() const</argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="160" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1afaecde6af6e4779bf8bb2d786dec40fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::numNeighborParticles</definition>
        <argsstring>() const</argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="166" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a15e05a661b50a2637a764ccadfb23f53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::numTotalParticles</definition>
        <argsstring>() const</argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="172" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a06cb98e187a840616cfd0c681f596ab2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="174" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="174" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a0c9d45bcfbc55a087faa7c61ecd5c3c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::getNumNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="181" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a4c13115f149d9491c7b58e8086d6d4b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::resize</definition>
        <argsstring>(size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="183" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="183" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a5f25acba9b5d155bac10a12a0facb168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t *</type>
        <definition>uint64_t* amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::idcpuarray</definition>
        <argsstring>()</argsstring>
        <name>idcpuarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="198" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a5f4ecbdbcb5f14edb160e4404b16c3e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; ParticleReal *, NReal &gt;</type>
        <definition>GpuArray&lt;ParticleReal*, NReal&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::realarray</definition>
        <argsstring>()</argsstring>
        <name>realarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="206" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="206" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aa458068c84a4240f72d3b1dd1fa59c9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, NInt &gt;</type>
        <definition>GpuArray&lt;int*, NInt&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;::intarray</definition>
        <argsstring>()</argsstring>
        <name>intarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="216" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="216" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>T</label>
      </node>
      <node id="3">
        <label>amrex::PODVector&lt; T, Allocator &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::StructOfArrays&lt; NReal, NInt, Allocator, use64BitIdCpu &gt;</label>
        <link refid="structamrex_1_1StructOfArrays"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_idata</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_runtime_idata</edgelabel>
          <edgelabel>m_runtime_rdata</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_rdata</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_idcpu</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::ArenaAllocatorBase&lt; T, ArenaWrapper &gt;</label>
        <link refid="structamrex_1_1ArenaAllocatorBase"/>
      </node>
      <node id="9">
        <label>DefaultAllocator&lt; uint64_t &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::array&lt; amrex::PODVector, NReal &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::array&lt; amrex::PODVector, NInt &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::PODVector&lt; uint64_t, DefaultAllocator&lt; uint64_t &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; amrex::PODVector &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="16" bodyend="237"/>
    <listofallmembers>
      <member refid="structamrex_1_1StructOfArrays_1aad692d209aa517fa028bd98aa14f0b96" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>define</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a193e31f7db819b274b09730561007716" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>empty</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a0dcfe0eee137e2a2d22126d2fbda1fcd" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIdCPUData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aaf532986a54772ea640a2ab38b7cff9e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIdCPUData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a2086bc5faf11d372ebcbe728e46c19d9" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a296f7ff58cbcaa84b993ba66b8374e07" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ab48f25cece8baf87dfe542bbdb53cf13" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a172af3e9e6cc7eeee5093772634020dd" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a0c9d45bcfbc55a087faa7c61ecd5c3c5" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a44390e5c68da1d50f5536428bf7da802" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a86408aeae996a4c711dca10a4d7cbc4e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ac2d7e9441c59e88b42978df7d9d1817c" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ac4a15a6ca35075933960a3c28f1d3581" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1af6874dec9cbf05e59a6bc7367c5d22f7" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>IdCPU</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a5f25acba9b5d155bac10a12a0facb168" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>idcpuarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aa458068c84a4240f72d3b1dd1fa59c9e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>intarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1af1be308a287422ae2a6580556249eb3d" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a27f4405dacee92bf69d837b35ca6d238" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a017be53b64346d557da975c2a473a5a3" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a62679baf18972e398b3c6f5148fc9087" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_idcpu</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a8c77c12736c976f0848d534b810cdc34" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_num_neighbor_particles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aaffa30601135a22b5e4f9ac283b06aa1" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_rdata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a10ad5fb2e51e43137e1b26ce70119735" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_runtime_idata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a179e1b7074dc1c6f3fe55ee3222839de" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_runtime_rdata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1af8037383212b93e6a701d263167baa31" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>NumIntComps</name></member>
      <member refid="structamrex_1_1StructOfArrays_1afaecde6af6e4779bf8bb2d786dec40fd" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a82f411b26eab317ad15c998f4a72e863" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a6b104504a3540a44182a1ad408d5cfa7" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>NumRealComps</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ac6d3cee84ea6fbae0bf95bcd36c536fa" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a15e05a661b50a2637a764ccadfb23f53" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a5f4ecbdbcb5f14edb160e4404b16c3e4" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>realarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a17a7383c365c4e4f4c6fd7eed23e8c59" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a4c13115f149d9491c7b58e8086d6d4b5" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>resize</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a06cb98e187a840616cfd0c681f596ab2" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ae0e85fbd1e4fa4bb5a42340a9f43f725" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
