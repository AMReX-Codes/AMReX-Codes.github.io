<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1StructOfArrays" kind="struct" language="C++" prot="public">
    <compoundname>amrex::StructOfArrays</compoundname>
    <includes refid="AMReX__StructOfArrays_8H" local="no">AMReX_StructOfArrays.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NReal</declname>
        <defname>NReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NInt</declname>
        <defname>NInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1aa2b9c07eea8f0178a1973357cf04ea62" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; ParticleReal, Allocator&lt; ParticleReal &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::RealVector =  amrex::PODVector&lt;ParticleReal, Allocator&lt;ParticleReal&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="16" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, Allocator&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>using amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::IntVector =  amrex::PODVector&lt;int, Allocator&lt;int&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a7db5f7869add58ecbebac952fc75e1ff" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_num_neighbor_particles</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="156" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1aa9ae6d2054d75f3a9d34c3fb630e6804" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref>, NReal &gt;</type>
        <definition>std::array&lt;RealVector, NReal&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_rdata</definition>
        <argsstring></argsstring>
        <name>m_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="159" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a64d3bf6ebedba481365cd4a9d0072ce9" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref>, NInt &gt;</type>
        <definition>std::array&lt; IntVector, NInt&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="160" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1adefc562d67fd0e640e80a8ee068948a5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref> &gt;</type>
        <definition>std::vector&lt;RealVector&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_runtime_rdata</definition>
        <argsstring></argsstring>
        <name>m_runtime_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="162" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a7668bc0907c454a0959603288a2b9873" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref> &gt;</type>
        <definition>std::vector&lt;IntVector &gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_runtime_idata</definition>
        <argsstring></argsstring>
        <name>m_runtime_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="163" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1StructOfArrays_1a031f0da90c07aa74bbb399db39b378a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="165" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a57df42616f65e9718d0ee6f0248b8e19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::StructOfArrays</definition>
        <argsstring>()</argsstring>
        <name>StructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ab198677876af6342b7811a2dd6bbed6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int)</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a910364653d0aee372ea5d30dbd98e34c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::NumRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRealComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="31" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a812e8db38b02a923e33de9d31a4978ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::NumIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumIntComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aaa669dc405e332237db26feb68ffb257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref>, NReal &gt; &amp;</type>
        <definition>std::array&lt;RealVector, NReal&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>()</argsstring>
        <name>GetRealData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a0713765da8db746084c4b0d7d9e3230b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref>, NInt &gt; &amp;</type>
        <definition>std::array&lt; IntVector, NInt&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>()</argsstring>
        <name>GetIntData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a391795227e28bea5a4444c7dfbe57f71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref>, NReal &gt; &amp;</type>
        <definition>const std::array&lt;RealVector, NReal&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>() const </argsstring>
        <name>GetRealData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a48907506a09b686bccf593713109c8e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref>, NInt &gt; &amp;</type>
        <definition>const std::array&lt; IntVector, NInt&gt;&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>() const </argsstring>
        <name>GetIntData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a10c0a0dea4cddd7bfec98c2f14a2292e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref> &amp;</type>
        <definition>RealVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetRealData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a86afe748736dca9eb7b2a80656ebb14f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">RealVector</ref> &amp;</type>
        <definition>const RealVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetRealData</definition>
        <argsstring>(const int index) const </argsstring>
        <name>GetRealData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1abf1c48c61fb3ccc48c3663e987b6aed3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref> &amp;</type>
        <definition>IntVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetIntData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="59" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1aede9e49b382b131fd1546f43c0611f66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">IntVector</ref> &amp;</type>
        <definition>const IntVector&amp; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::GetIntData</definition>
        <argsstring>(const int index) const </argsstring>
        <name>GetIntData</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="68" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1adc12bdbb65a04f727ff79e5109bcf430" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="81" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a392ad1bc14dbe357fbe4ec50925dc4f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numParticles</definition>
        <argsstring>() const </argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="99" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a945d942f2662e5408ffd83d93e1b4e46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const </argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="105" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a2d20aa84724ae536afc16ffedccb2fba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const </argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="111" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a4a6a9d0204fa1f71a8fa230d604167a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const </argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="117" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a6f04d6f94a8930f6be295a36603ca7d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="119" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ae3cc8d8bbcf1909fb45ae2a6f722d676" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="126" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1abe8cb769562c897b6ab86683cf0d716e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::resize</definition>
        <argsstring>(size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="128" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="128" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1a04e229de2a830b849d1900050b383f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; ParticleReal *, NReal &gt;</type>
        <definition>GpuArray&lt;ParticleReal*, NReal&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::realarray</definition>
        <argsstring>()</argsstring>
        <name>realarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="136" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="136" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1StructOfArrays_1ae6c1e19e9551116263efb5381f3f6bb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, NInt &gt;</type>
        <definition>GpuArray&lt;int*, NInt&gt; amrex::StructOfArrays&lt; NReal, NInt, Allocator &gt;::intarray</definition>
        <argsstring>()</argsstring>
        <name>intarray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="146" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="146" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" line="14" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_StructOfArrays.H" bodystart="14" bodyend="166"/>
    <listofallmembers>
      <member refid="structamrex_1_1StructOfArrays_1ab198677876af6342b7811a2dd6bbed6e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>define</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a0713765da8db746084c4b0d7d9e3230b" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a48907506a09b686bccf593713109c8e9" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1abf1c48c61fb3ccc48c3663e987b6aed3" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aede9e49b382b131fd1546f43c0611f66" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetIntData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ae3cc8d8bbcf1909fb45ae2a6f722d676" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aaa669dc405e332237db26feb68ffb257" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a391795227e28bea5a4444c7dfbe57f71" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a10c0a0dea4cddd7bfec98c2f14a2292e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a86afe748736dca9eb7b2a80656ebb14f" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>GetRealData</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ae6c1e19e9551116263efb5381f3f6bb7" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>intarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a031f0da90c07aa74bbb399db39b378a8" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a64d3bf6ebedba481365cd4a9d0072ce9" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a7db5f7869add58ecbebac952fc75e1ff" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_num_neighbor_particles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1aa9ae6d2054d75f3a9d34c3fb630e6804" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_rdata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a7668bc0907c454a0959603288a2b9873" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_runtime_idata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1adefc562d67fd0e640e80a8ee068948a5" prot="private" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>m_runtime_rdata</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a812e8db38b02a923e33de9d31a4978ba" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>NumIntComps</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a2d20aa84724ae536afc16ffedccb2fba" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a392ad1bc14dbe357fbe4ec50925dc4f5" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a910364653d0aee372ea5d30dbd98e34c" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>NumRealComps</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a945d942f2662e5408ffd83d93e1b4e46" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a4a6a9d0204fa1f71a8fa230d604167a0" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a04e229de2a830b849d1900050b383f8d" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>realarray</name></member>
      <member refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1StructOfArrays_1abe8cb769562c897b6ab86683cf0d716e" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>resize</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a6f04d6f94a8930f6be295a36603ca7d2" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1StructOfArrays_1adc12bdbb65a04f727ff79e5109bcf430" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>size</name></member>
      <member refid="structamrex_1_1StructOfArrays_1a57df42616f65e9718d0ee6f0248b8e19" prot="public" virt="non-virtual"><scope>amrex::StructOfArrays</scope><name>StructOfArrays</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
