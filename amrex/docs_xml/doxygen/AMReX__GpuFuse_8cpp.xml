<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__GpuFuse_8cpp" kind="file" language="C++">
    <compoundname>AMReX_GpuFuse.cpp</compoundname>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__BLProfiler_8H" local="no">AMReX_BLProfiler.H</includes>
    <includes refid="AMReX__OpenMP_8H" local="no">AMReX_OpenMP.H</includes>
    <incdepgraph>
      <node id="28769">
        <label>list</label>
      </node>
      <node id="28768">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28729" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28693" relation="include">
        </childnode>
        <childnode refid="28769" relation="include">
        </childnode>
        <childnode refid="28708" relation="include">
        </childnode>
      </node>
      <node id="28700">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28701" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28687" relation="include">
        </childnode>
        <childnode refid="28697" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
      </node>
      <node id="28668">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28740">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28706">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28762">
        <label>iomanip</label>
      </node>
      <node id="28691">
        <label>functional</label>
      </node>
      <node id="28702">
        <label>limits</label>
      </node>
      <node id="28730">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
      </node>
      <node id="28712">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28705" relation="include">
        </childnode>
        <childnode refid="28706" relation="include">
        </childnode>
      </node>
      <node id="28748">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
      </node>
      <node id="28721">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28695" relation="include">
        </childnode>
        <childnode refid="28718" relation="include">
        </childnode>
        <childnode refid="28722" relation="include">
        </childnode>
        <childnode refid="28712" relation="include">
        </childnode>
        <childnode refid="28723" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
      </node>
      <node id="28764">
        <label>iterator</label>
      </node>
      <node id="28686">
        <label>float.h</label>
      </node>
      <node id="28755">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28678">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
      </node>
      <node id="28671">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28672" relation="include">
        </childnode>
      </node>
      <node id="28736">
        <label>cstdint</label>
      </node>
      <node id="28717">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28710" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28718" relation="include">
        </childnode>
        <childnode refid="28719" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
        <childnode refid="28711" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28720" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28721" relation="include">
        </childnode>
        <childnode refid="28724" relation="include">
        </childnode>
        <childnode refid="28725" relation="include">
        </childnode>
        <childnode refid="28734" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28737" relation="include">
        </childnode>
      </node>
      <node id="28760">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28718" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
        <childnode refid="28761" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
      </node>
      <node id="28746">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28749" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
      </node>
      <node id="28750">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28708" relation="include">
        </childnode>
        <childnode refid="28751" relation="include">
        </childnode>
        <childnode refid="28691" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28752" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
      </node>
      <node id="28696">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28697" relation="include">
        </childnode>
        <childnode refid="28693" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
      </node>
      <node id="28728">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28729" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28710" relation="include">
        </childnode>
        <childnode refid="28670" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
      </node>
      <node id="28673">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
      </node>
      <node id="28688">
        <label>cmath</label>
      </node>
      <node id="28672">
        <label>cassert</label>
      </node>
      <node id="28685">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28686" relation="include">
        </childnode>
      </node>
      <node id="28682">
        <label>stdexcept</label>
      </node>
      <node id="28680">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28732">
        <label>numeric</label>
      </node>
      <node id="28664">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuFuse.cpp</label>
        <link refid="AMReX__GpuFuse_8cpp"/>
        <childnode refid="28665" relation="include">
        </childnode>
        <childnode refid="28768" relation="include">
        </childnode>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28692">
        <label>string</label>
      </node>
      <node id="28716">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28708" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
        <childnode refid="28717" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
      </node>
      <node id="28718">
        <label>map</label>
      </node>
      <node id="28677">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28695" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
      </node>
      <node id="28739">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28717" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
      </node>
      <node id="28667">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28720">
        <label>cfloat</label>
      </node>
      <node id="28701">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
      </node>
      <node id="28726">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28727" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
      </node>
      <node id="28727">
        <label>fstream</label>
      </node>
      <node id="28723">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28705" relation="include">
        </childnode>
        <childnode refid="28712" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
      </node>
      <node id="28744">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
      </node>
      <node id="28675">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
      </node>
      <node id="28756">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
        <childnode refid="28757" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
      </node>
      <node id="28679">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28669" relation="include">
        </childnode>
        <childnode refid="28671" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28681" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28687" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28691" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28670" relation="include">
        </childnode>
        <childnode refid="28693" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
      </node>
      <node id="28734">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28725" relation="include">
        </childnode>
        <childnode refid="28735" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28736" relation="include">
        </childnode>
      </node>
      <node id="28674">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28735">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
      </node>
      <node id="28738">
        <label>sys/types.h</label>
      </node>
      <node id="28758">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28695" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
      </node>
      <node id="28731">
        <label>typeinfo</label>
      </node>
      <node id="28669">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28670" relation="include">
        </childnode>
      </node>
      <node id="28666">
        <label>AMReX_Config.H</label>
      </node>
      <node id="28670">
        <label>cstdio</label>
      </node>
      <node id="28751">
        <label>tuple</label>
      </node>
      <node id="28724">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28718" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28695" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28725" relation="include">
        </childnode>
      </node>
      <node id="28714">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28705" relation="include">
        </childnode>
        <childnode refid="28669" relation="include">
        </childnode>
      </node>
      <node id="28725">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28726" relation="include">
        </childnode>
        <childnode refid="28728" relation="include">
        </childnode>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28693" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28731" relation="include">
        </childnode>
        <childnode refid="28697" relation="include">
        </childnode>
        <childnode refid="28691" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
      </node>
      <node id="28713">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28706" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
      </node>
      <node id="28741">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
      </node>
      <node id="28729">
        <label>stack</label>
      </node>
      <node id="28693">
        <label>vector</label>
      </node>
      <node id="28753">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
      </node>
      <node id="28766">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28665" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28736" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
      </node>
      <node id="28709">
        <label>utility</label>
      </node>
      <node id="28698">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28700" relation="include">
        </childnode>
        <childnode refid="28704" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28705" relation="include">
        </childnode>
        <childnode refid="28712" relation="include">
        </childnode>
        <childnode refid="28713" relation="include">
        </childnode>
        <childnode refid="28706" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28714" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
      </node>
      <node id="28708">
        <label>array</label>
      </node>
      <node id="28759">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
      </node>
      <node id="28710">
        <label>sstream</label>
      </node>
      <node id="28763">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28764" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28765" relation="include">
        </childnode>
        <childnode refid="28760" relation="include">
        </childnode>
        <childnode refid="28766" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
      </node>
      <node id="28683">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28684" relation="include">
        </childnode>
      </node>
      <node id="28743">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28668" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28676" relation="include">
        </childnode>
        <childnode refid="28750" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28753" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28741" relation="include">
        </childnode>
        <childnode refid="28735" relation="include">
        </childnode>
        <childnode refid="28700" relation="include">
        </childnode>
        <childnode refid="28695" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28697" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28754" relation="include">
        </childnode>
        <childnode refid="28755" relation="include">
        </childnode>
      </node>
      <node id="28754">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28747">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
      </node>
      <node id="28699">
        <label>iosfwd</label>
      </node>
      <node id="28689">
        <label>cstdlib</label>
      </node>
      <node id="28752">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
      </node>
      <node id="28690">
        <label>iostream</label>
      </node>
      <node id="28707">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28708" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28710" relation="include">
        </childnode>
        <childnode refid="28670" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28706" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28700" relation="include">
        </childnode>
        <childnode refid="28701" relation="include">
        </childnode>
      </node>
      <node id="28695">
        <label>cstddef</label>
      </node>
      <node id="28749">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28714" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28688" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
      </node>
      <node id="28722">
        <label>unordered_map</label>
      </node>
      <node id="28711">
        <label>climits</label>
      </node>
      <node id="28705">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28706" relation="include">
        </childnode>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28701" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28687" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
        <childnode refid="28688" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28711" relation="include">
        </childnode>
        <childnode refid="28697" relation="include">
        </childnode>
      </node>
      <node id="28765">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28665" relation="include">
        </childnode>
        <childnode refid="28760" relation="include">
        </childnode>
        <childnode refid="28763" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
      </node>
      <node id="28719">
        <label>chrono</label>
      </node>
      <node id="28733">
        <label>csignal</label>
      </node>
      <node id="28676">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28741" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
      </node>
      <node id="28687">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28688" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
      </node>
      <node id="28665">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28668" relation="include">
        </childnode>
        <childnode refid="28669" relation="include">
        </childnode>
        <childnode refid="28671" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28676" relation="include">
        </childnode>
        <childnode refid="28743" relation="include">
        </childnode>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28749" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28756" relation="include">
        </childnode>
        <childnode refid="28758" relation="include">
        </childnode>
        <childnode refid="28759" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28760" relation="include">
        </childnode>
        <childnode refid="28763" relation="include">
        </childnode>
        <childnode refid="28767" relation="include">
        </childnode>
      </node>
      <node id="28745">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28689" relation="include">
        </childnode>
      </node>
      <node id="28704">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
      </node>
      <node id="28681">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
      </node>
      <node id="28703">
        <label>type_traits</label>
      </node>
      <node id="28697">
        <label>algorithm</label>
      </node>
      <node id="28737">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28738" relation="include">
        </childnode>
      </node>
      <node id="28742">
        <label>cstring</label>
      </node>
      <node id="28767">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28694">
        <label>memory</label>
      </node>
      <node id="28757">
        <label>initializer_list</label>
      </node>
      <node id="28684">
        <label>inttypes.h</label>
      </node>
      <node id="28715">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
      </node>
      <node id="28761">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28710" relation="include">
        </childnode>
        <childnode refid="28727" relation="include">
        </childnode>
        <childnode refid="28762" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
        <childnode refid="28726" relation="include">
        </childnode>
        <childnode refid="28725" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Gpu">amrex::Gpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLProfiler_8H" kindref="compound">AMReX_BLProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__OpenMP_8H" kindref="compound">AMReX_OpenMP.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2a3432ca64f06615abf07ab44c10cada38" kindref="member">Gpu</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_in_fuse_region<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_in_fuse_reduction_region<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fusing<sp/>kernels<sp/>with<sp/>elements<sp/>greater<sp/>than<sp/>this<sp/>are<sp/>not<sp/>recommended<sp/>based<sp/>tests<sp/>on<sp/>v100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>s_fuse_size_threshold<sp/>=<sp/>257*257;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>number<sp/>of<sp/>kernels<sp/>is<sp/>less<sp/>than<sp/>this,<sp/>fusing<sp/>is<sp/>not<sp/>recommended<sp/>based<sp/>on<sp/>tests<sp/>on<sp/>v100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_fuse_numkernels_threshold<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">std::unique_ptr&lt;Fuser&gt;<sp/>Fuser::m_instance<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>(defined(AMREX_USE_HIP)<sp/>&amp;&amp;<sp/>defined(AMREX_HIP_INDIRECT_FUNCTION))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">Fuser::Fuser<sp/>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!<ref refid="namespaceamrex_1_1OpenMP_1ac4d826cf1b5dd7b16d2e1d54a73ff935" kindref="member">OpenMP::in_parallel</ref>());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lambda_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(m_nbytes_lambda_buf);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m_helper_buf<sp/>=<sp/>(FuseHelper*)<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(m_nhelpers_buf*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FuseHelper));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dtor_buf.reserve(1024);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">Fuser::~Fuser<sp/>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nlambdas<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Launch();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(m_lambda_buf);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(m_helper_buf);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Fuser::Launch<sp/>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Fuser::Launch()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlambdas<sp/>=<sp/>m_nlambdas;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nlambdas<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!<ref refid="namespaceamrex_1_1OpenMP_1ac4d826cf1b5dd7b16d2e1d54a73ff935" kindref="member">OpenMP::in_parallel</ref>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nwarps<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>((nlambdas+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntotwarps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlambdas;<sp/>++i)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwarps[i]<sp/>=<sp/>ntotwarps;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx<sp/>=<sp/>m_helper_buf[i].m_bx;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>m_helper_buf[i].m_N;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>bx.numPts();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntotwarps<sp/>+=<sp/>(N<sp/>+<sp/>Gpu::Device::warp_size-1)<sp/>/<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwarps[nlambdas]<sp/>=<sp/>ntotwarps;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(ntotwarps<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()/Gpu::Device::warp_size);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pack<sp/>nwarps,<sp/>lambda<sp/>helpers<sp/>and<sp/>lambda<sp/>objects<sp/>into<sp/>a<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>sizeof_nwarps<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>)<sp/>*<sp/>(nlambdas+1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>offset_helpers<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(sizeof_nwarps);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>sizeof_helpers<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FuseHelper)*nlambdas;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>offset_objects<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(offset_helpers+sizeof_helpers);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>sizeof_objects<sp/>=<sp/>m_nbytes_used_lambda_buf;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>total_buf_size<sp/>=<sp/>offset_objects<sp/>+<sp/>sizeof_objects;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>h_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(total_buf_size);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>d_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(total_buf_size);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(h_buffer,<sp/>nwarps,<sp/>sizeof_nwarps);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(h_buffer+offset_helpers,<sp/>m_helper_buf,<sp/>sizeof_helpers);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(h_buffer+offset_objects,<sp/>m_lambda_buf,<sp/>sizeof_objects);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::htod_memcpy_async(d_buffer,<sp/>h_buffer,<sp/>total_buf_size);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d_nwarps<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_buffer);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d_lambda_helper<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">FuseHelper*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_buffer+offset_helpers);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d_lambda_object<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_buffer+offset_objects);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthreads<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nwarps_per_block<sp/>=<sp/>nthreads/Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>(ntotwarps<sp/>+<sp/>nwarps_per_block-1)<sp/>/<sp/>nwarps_per_block;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_reduction<sp/>=<sp/>s_in_fuse_reduction_region;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(nblocks,<sp/>nthreads,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_tid<sp/>=<sp/>blockDim.x*blockIdx.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_wid<sp/>=<sp/>g_tid<sp/>/<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_wid<sp/>&gt;=<sp/>ntotwarps)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_reduction)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>reduction,<sp/>the<sp/>assumption<sp/>is<sp/>all<sp/>lambdas<sp/>have<sp/>function<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FuseHelper&amp;<sp/>helper<sp/>=<sp/>d_lambda_helper[0];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lambda_object<sp/>=<sp/>d_lambda_object<sp/>+<sp/>helper.m_offset;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(helper.m_bx.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L1D(lambda_object,-1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(helper.m_N<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L3D(lambda_object,<sp/>INT_MIN,<sp/>INT_MIN,<sp/>INT_MIN);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>helper.m_N;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L4D(lambda_object,<sp/>INT_MIN,<sp/>INT_MIN,<sp/>INT_MIN,<sp/>-1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilambda;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/>nlambdas;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lo<sp/>&lt;=<sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid<sp/>=<sp/>(lo+hi)/2;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_wid<sp/>&gt;=<sp/>d_nwarps[mid]<sp/>&amp;&amp;<sp/>g_wid<sp/>&lt;<sp/>d_nwarps[mid+1])<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ilambda<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_wid<sp/>&lt;<sp/>d_nwarps[mid])<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>mid-1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo<sp/>=<sp/>mid+1;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_wid<sp/>=<sp/>g_wid<sp/>-<sp/>d_nwarps[ilambda];<sp/></highlight><highlight class="comment">//<sp/>b_wid&apos;th<sp/>warp<sp/>on<sp/>this<sp/>lambda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lane<sp/>=<sp/>threadIdx.x<sp/>%<sp/>Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>b_wid*Gpu::Device::warp_size<sp/>+<sp/>lane;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FuseHelper&amp;<sp/>helper<sp/>=<sp/>d_lambda_helper[ilambda];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lambda_object<sp/>=<sp/>d_lambda_object<sp/>+<sp/>helper.m_offset;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx<sp/>=<sp/>helper.m_bx;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icell<sp/>&lt;<sp/>helper.m_N)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L1D(lambda_object,icell);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_reduction)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L1D(lambda_object,-1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>bx.numPts();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icell<sp/>&lt;<sp/>ncells)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(helper.m_N<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L3D(lambda_object,i,j,k);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>helper.m_N;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L4D(lambda_object,i,j,k,n);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_reduction)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(helper.m_N<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L3D(lambda_object,<sp/>INT_MIN,<sp/>INT_MIN,<sp/>INT_MIN);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>helper.m_N;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper.m_fp.L4D(lambda_object,<sp/>INT_MIN,<sp/>INT_MIN,<sp/>INT_MIN,<sp/>-1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a0040af3e7783b853140a6e13c755fc25" kindref="member">Gpu::synchronize</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(nwarps);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(h_buffer);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(d_buffer);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nlambdas;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>m_lambda_buf<sp/>+<sp/>m_helper_buf[i].m_offset;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dtor_buf[i](p);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_helper_buf[i].~FuseHelper();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dtor_buf.clear();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nbytes_used_lambda_buf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nlambdas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">Fuser::resize_lambda_buf<sp/>()</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbytes_lambda_buf<sp/>+=<sp/>m_nbytes_lambda_buf/2;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(m_nbytes_lambda_buf);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a90ff215e828e9192dbd196a78cacf083" kindref="member">std::memcpy</ref>(p,<sp/>m_lambda_buf,<sp/>m_nbytes_used_lambda_buf);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(m_lambda_buf);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lambda_buf<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">Fuser::resize_helper_buf<sp/>()</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nhelpers_buf<sp/>+=<sp/>m_nhelpers_buf/2;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>(FuseHelper*)<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(m_nhelpers_buf*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(FuseHelper));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nlambdas;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p+i)<sp/>FuseHelper(m_helper_buf[i]);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_helper_buf+i)-&gt;~FuseHelper();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(m_helper_buf);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>m_helper_buf<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">Fuser&amp;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">Fuser::getInstance<sp/>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_instance<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_instance.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Fuser());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_instance;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">Fuser::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>ParmParse<sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>(</highlight><highlight class="stringliteral">&quot;amrex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;gpu_fuse_size_threshold&quot;</highlight><highlight class="normal">,<sp/>s_fuse_size_threshold);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__HypreIJIface_8cpp_1a0f759ac05320ca5b06c49fd9501b9135" kindref="member">pp</ref>.<ref refid="classamrex_1_1ParmParse_1aa98ab18bc26692876f9590316af5b1fa" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;gpu_fuse_numkernels_threshold&quot;</highlight><highlight class="normal">,<sp/>s_fuse_numkernels_threshold);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref>(<ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">Fuser::Finalize</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">Fuser::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>m_instance.reset();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">Long<sp/>getFuseSizeThreshold<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_fuse_size_threshold;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">Long</highlight></codeline>
<codeline lineno="247"><highlight class="normal">setFuseSizeThreshold<sp/>(Long<sp/>new_threshold)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/>old<sp/>=<sp/>s_fuse_size_threshold;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>s_fuse_size_threshold<sp/>=<sp/>new_threshold;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getFuseNumKernelsThreshold<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_fuse_numkernels_threshold;<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setFuseNumKernelsThreshold<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_threshold)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>s_fuse_numkernels_threshold;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>s_fuse_numkernels_threshold<sp/>=<sp/>new_threshold;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inFuseRegion<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_in_fuse_region;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setFuseRegion<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>s_in_fuse_region;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>s_in_fuse_region<sp/>=<sp/>flag;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inFuseReductionRegion<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_in_fuse_reduction_region;<sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setFuseReductionRegion<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>s_in_fuse_reduction_region;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>s_in_fuse_reduction_region<sp/>=<sp/>flag;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuFuse.cpp"/>
  </compounddef>
</doxygen>
