<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EB2_1_1GeometryShop" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::GeometryShop</compoundname>
    <includes refid="AMReX__EB2__GeometryShop_8H" local="no">AMReX_EB2_GeometryShop.H</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>F</declname>
        <defname>F</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1EB2_1_1GeometryShop_1ace77fd9544f05b7e9026f7907a7e37ed" prot="public" static="no">
        <type>F</type>
        <definition>using amrex::EB2::GeometryShop&lt; F &gt;::FunctionType =  F</definition>
        <argsstring></argsstring>
        <name>FunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="183" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1aeef1a9882f9d9ae0fc5754c41cfbe045" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F &gt;::in_fluid</definition>
        <argsstring></argsstring>
        <name>in_fluid</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="175" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1abe16618c667f86c9cd4fa0a4c23b512a" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F &gt;::on_boundary</definition>
        <argsstring></argsstring>
        <name>on_boundary</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="176" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a2ccca64586ef1e72de9428a89cbec5c3" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F &gt;::in_body</definition>
        <argsstring></argsstring>
        <name>in_body</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="177" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a6c5e06b24c520ce426abd4d936b4cab5" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F &gt;::allregular</definition>
        <argsstring></argsstring>
        <name>allregular</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="179" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a9619112cbd6b83ba95c41b7f8785f0c9" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F &gt;::mixedcells</definition>
        <argsstring></argsstring>
        <name>mixedcells</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="180" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a61a81964ef63f4044f3b0083e9cefbea" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F &gt;::allcovered</definition>
        <argsstring></argsstring>
        <name>allcovered</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="181" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1acc1674a5e8c6ca14be7bd28405a36252" prot="private" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::EB2::GeometryShop&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="413" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="413" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a688aa705309acdd9c370153b87814fd3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F &gt;::GeometryShop</definition>
        <argsstring>(F const &amp;f)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="185" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a464e55c0a284587a8882f5df79f82b6d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F &gt;::GeometryShop</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="189" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a87586703c73141ced96bb6b80a5c8fb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F &gt;::~GeometryShop</definition>
        <argsstring>()</argsstring>
        <name>~GeometryShop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="193" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a2bd806c7ded7200033fbe80e7efaba0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F &gt;::GeometryShop</definition>
        <argsstring>(GeometryShop&lt; F &gt; const &amp;rhs)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; F &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="195" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afc71241175077f32ffe154c46462b6ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F &gt;::GeometryShop</definition>
        <argsstring>(GeometryShop&lt; F &gt; &amp;&amp;rhs)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="199" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ab03425c5351cd1fd24d5ca68cc5a4073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; F &gt; &amp;</type>
        <definition>GeometryShop&lt;F&gt;&amp; amrex::EB2::GeometryShop&lt; F &gt;::operator=</definition>
        <argsstring>(GeometryShop&lt; F &gt; const &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; F &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a2cfadbaec6bea265a12a6a011df3d668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; F &gt; &amp;</type>
        <definition>GeometryShop&lt;F&gt;&amp; amrex::EB2::GeometryShop&lt; F &gt;::operator=</definition>
        <argsstring>(GeometryShop&lt; F &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a4816bc8d7767bf1c5e9f49496ef3949f" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>F const  &amp;</type>
        <definition>F const&amp; amrex::EB2::GeometryShop&lt; F &gt;::GetImpFunc</definition>
        <argsstring>() const &amp;</argsstring>
        <name>GetImpFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="206" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a0b1b35b4e93485a3fc16b1895df6d183" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>F &amp;&amp;</type>
        <definition>F&amp;&amp; amrex::EB2::GeometryShop&lt; F &gt;::GetImpFunc</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>GetImpFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="207" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ab6ffff3e66fb40390b651e9302c07819" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F &gt;::getBoxType_Cpu</definition>
        <argsstring>(const Box &amp;bx, Geometry const &amp;geom) const noexcept</argsstring>
        <name>getBoxType_Cpu</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="209" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="209" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a24b21091f5de330829de133a7a13119f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F &gt;::getBoxType</definition>
        <argsstring>(const Box &amp;bx, const Geometry &amp;geom, RunOn run_on) const noexcept</argsstring>
        <name>getBoxType</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="245" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="245" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ac81f94fab8634f7b0111c9c5f2aa36f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F &gt;::getBoxType</definition>
        <argsstring>(const Box &amp;bx, const Geometry &amp;geom, RunOn) const noexcept</argsstring>
        <name>getBoxType</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="292" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ae3fa64ef035e3284edc861bcc491ba46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F &gt;::fillFab</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, RunOn run_on, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="304" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="304" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1aa6d18ef657b83f257bf5e79e0537a533" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F &gt;::fillFab</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, RunOn, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="323" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="323" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afd4d1733bfa798a2aa9105281eca5038" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F &gt;::getIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, AMREX_SPACEDIM &gt; const &amp;type_arr, Geometry const &amp;geom, RunOn run_on, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>getIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="341" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="341" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a994af8603bed08d9c5f320e5be4ec010" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F &gt;::getIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, AMREX_SPACEDIM &gt; const &amp;type_arr, Geometry const &amp;geom, RunOn, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>getIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="377" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="377" bodyend="409"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1af7b423b5c411c64fe2a45762f64fe139" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool amrex::EB2::GeometryShop&lt; F &gt;::isGPUable</definition>
        <argsstring>() noexcept</argsstring>
        <name>isGPUable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="298" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1af7b423b5c411c64fe2a45762f64fe139" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool amrex::EB2::GeometryShop&lt; F &gt;::isGPUable</definition>
        <argsstring>() noexcept</argsstring>
        <name>isGPUable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="301" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="301" bodyend="301"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="172" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="171" bodyend="415"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a61a81964ef63f4044f3b0083e9cefbea" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>allcovered</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a6c5e06b24c520ce426abd4d936b4cab5" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>allregular</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ae3fa64ef035e3284edc861bcc491ba46" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1aa6d18ef657b83f257bf5e79e0537a533" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ace77fd9544f05b7e9026f7907a7e37ed" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>FunctionType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a688aa705309acdd9c370153b87814fd3" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a464e55c0a284587a8882f5df79f82b6d" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a2bd806c7ded7200033fbe80e7efaba0f" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afc71241175077f32ffe154c46462b6ab" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a24b21091f5de330829de133a7a13119f" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ac81f94fab8634f7b0111c9c5f2aa36f6" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ab6ffff3e66fb40390b651e9302c07819" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType_Cpu</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a4816bc8d7767bf1c5e9f49496ef3949f" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GetImpFunc</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a0b1b35b4e93485a3fc16b1895df6d183" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GetImpFunc</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afd4d1733bfa798a2aa9105281eca5038" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a994af8603bed08d9c5f320e5be4ec010" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a2ccca64586ef1e72de9428a89cbec5c3" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>in_body</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1aeef1a9882f9d9ae0fc5754c41cfbe045" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>in_fluid</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1af7b423b5c411c64fe2a45762f64fe139" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>isGPUable</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1af7b423b5c411c64fe2a45762f64fe139" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>isGPUable</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1acc1674a5e8c6ca14be7bd28405a36252" prot="private" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a9619112cbd6b83ba95c41b7f8785f0c9" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>mixedcells</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1abe16618c667f86c9cd4fa0a4c23b512a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>on_boundary</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ab03425c5351cd1fd24d5ca68cc5a4073" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a2cfadbaec6bea265a12a6a011df3d668" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a87586703c73141ced96bb6b80a5c8fb3" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>~GeometryShop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
