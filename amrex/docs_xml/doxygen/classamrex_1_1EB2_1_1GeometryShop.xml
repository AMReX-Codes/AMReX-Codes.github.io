<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1GeometryShop" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::GeometryShop</compoundname>
    <includes refid="AMReX__EB2__GeometryShop_8H" local="no">AMReX_EB2_GeometryShop.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
      <param>
        <type>class R</type>
        <defval><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1EB2_1_1GeometryShop_1aa9d8c656e7a0aa9ce8efa32053f74f4a" prot="public" static="no">
        <type>F</type>
        <definition>using amrex::EB2::GeometryShop&lt; F, R &gt;::FunctionType =  F</definition>
        <argsstring></argsstring>
        <name>FunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="188" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a637784ea6d4098867d78ad901750937a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::in_fluid</definition>
        <argsstring></argsstring>
        <name>in_fluid</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="180" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1adacbc0ec9d750f6bbbcae77a23dbd127" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::on_boundary</definition>
        <argsstring></argsstring>
        <name>on_boundary</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="181" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a3e0822600d48fac2177a0b93671e868a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::in_body</definition>
        <argsstring></argsstring>
        <name>in_body</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="182" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1ad0c200b86624e027898eca991f5ded1c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::allregular</definition>
        <argsstring></argsstring>
        <name>allregular</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="184" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1abfd9f7b8c8225ddc6df0078ac4277ccd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::mixedcells</definition>
        <argsstring></argsstring>
        <name>mixedcells</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="185" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a4743c337de07fcbcad184ec6242ad0e1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::allcovered</definition>
        <argsstring></argsstring>
        <name>allcovered</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="186" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1afdb3f4220acfb2353d91feed84482169" prot="private" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::EB2::GeometryShop&lt; F, R &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="516" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a70005a334b1a0d87aa5a94c43ad7ce8a" prot="private" static="no" mutable="no">
        <type>R</type>
        <definition>R amrex::EB2::GeometryShop&lt; F, R &gt;::m_resource</definition>
        <argsstring></argsstring>
        <name>m_resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="517" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="517" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a5cd1275a72a0d42d7058bbb4da6f3e8d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(F f)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="190" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a3772b6627894ab939396feac8bc1c356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(F f, R r)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>R</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="194" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a99ffab25b96dcb5b2c642e65115d0d45" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>F const  &amp;</type>
        <definition>F const&amp; amrex::EB2::GeometryShop&lt; F, R &gt;::GetImpFunc</definition>
        <argsstring>() const &amp;</argsstring>
        <name>GetImpFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="198" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a1ae5ec19a6ac23d6aee924e0e628a5eb" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>F &amp;&amp;</type>
        <definition>F&amp;&amp; amrex::EB2::GeometryShop&lt; F, R &gt;::GetImpFunc</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>GetImpFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="199" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afd124435b24af7471483736f6607a11b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F, R &gt;::getBoxType_Cpu</definition>
        <argsstring>(const Box &amp;bx, Geometry const &amp;geom) const noexcept</argsstring>
        <name>getBoxType_Cpu</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="201" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="201" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afe2e9993f74d508cf7aeb7150b610fd5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F, R &gt;::getBoxType</definition>
        <argsstring>(const Box &amp;bx, const Geometry &amp;geom, RunOn run_on) const noexcept</argsstring>
        <name>getBoxType</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="238" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="238" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a510e90f5d3a5db5b5614d225a372529c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F, R &gt;::getBoxType</definition>
        <argsstring>(const Box &amp;bx, const Geometry &amp;geom, RunOn) const noexcept</argsstring>
        <name>getBoxType</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="285" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ab0feb076743b2a454e181404861c9ed9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::fillFab</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, RunOn run_on, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="297" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="297" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a21626bdeb656074c2e675969aec678bb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::fillFab</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, RunOn, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="316" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="316" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a99bd263dac37b6f756eced9182e49eb0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::fillFab_Cpu</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab_Cpu</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="335" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="335" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ae9474b98c5ee963422d44bfbefa0864f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::getIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, AMREX_SPACEDIM &gt; const &amp;type_arr, Array4&lt; Real const &gt; const &amp;, Geometry const &amp;geom, RunOn run_on, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>getIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const &gt; const &amp;</type>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="355" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="355" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a43abec2c9a7a8d648c282bcbb5ad27e0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::getIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, AMREX_SPACEDIM &gt; const &amp;type_arr, Array4&lt; Real const &gt; const &amp;, Geometry const &amp;geom, RunOn, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>getIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const &gt; const &amp;</type>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="391" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="391" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ad5e06559c1b3fdb35f13e48408eaedd3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::getIntercept_Cpu</definition>
        <argsstring>(Array4&lt; Real &gt; const &amp;inter, Array4&lt; Type_t const &gt; const &amp;type, Geometry const &amp;geom, Box const &amp;bounding_box, const int idim) const noexcept</argsstring>
        <name>getIntercept_Cpu</name>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt; const &amp;</type>
          <declname>inter</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt; const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>idim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="425" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="425" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a51c892bf2db0a77c6411432c0e3ee20a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::updateIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, AMREX_SPACEDIM &gt; const &amp;type_arr, Array4&lt; Real const &gt; const &amp;lst, Geometry const &amp;geom) const noexcept</argsstring>
        <name>updateIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const &gt; const &amp;</type>
          <declname>lst</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="458" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="458" bodyend="512"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool amrex::EB2::GeometryShop&lt; F, R &gt;::isGPUable</definition>
        <argsstring>() noexcept</argsstring>
        <name>isGPUable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="291" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt; *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool amrex::EB2::GeometryShop&lt; F, R &gt;::isGPUable</definition>
        <argsstring>() noexcept</argsstring>
        <name>isGPUable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="294" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="294" bodyend="294"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="176" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="177" bodyend="519"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a4743c337de07fcbcad184ec6242ad0e1" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>allcovered</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ad0c200b86624e027898eca991f5ded1c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>allregular</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ab0feb076743b2a454e181404861c9ed9" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a21626bdeb656074c2e675969aec678bb" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a99bd263dac37b6f756eced9182e49eb0" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab_Cpu</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1aa9d8c656e7a0aa9ce8efa32053f74f4a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>FunctionType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a5cd1275a72a0d42d7058bbb4da6f3e8d" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a3772b6627894ab939396feac8bc1c356" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afe2e9993f74d508cf7aeb7150b610fd5" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a510e90f5d3a5db5b5614d225a372529c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afd124435b24af7471483736f6607a11b" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType_Cpu</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a99ffab25b96dcb5b2c642e65115d0d45" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GetImpFunc</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a1ae5ec19a6ac23d6aee924e0e628a5eb" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GetImpFunc</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ae9474b98c5ee963422d44bfbefa0864f" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a43abec2c9a7a8d648c282bcbb5ad27e0" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ad5e06559c1b3fdb35f13e48408eaedd3" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept_Cpu</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a3e0822600d48fac2177a0b93671e868a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>in_body</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a637784ea6d4098867d78ad901750937a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>in_fluid</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>isGPUable</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>isGPUable</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afdb3f4220acfb2353d91feed84482169" prot="private" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a70005a334b1a0d87aa5a94c43ad7ce8a" prot="private" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>m_resource</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1abfd9f7b8c8225ddc6df0078ac4277ccd" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>mixedcells</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1adacbc0ec9d750f6bbbcae77a23dbd127" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>on_boundary</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a51c892bf2db0a77c6411432c0e3ee20a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>updateIntercept</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
