<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1EB2_1_1GeometryShop" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::GeometryShop</compoundname>
    <includes refid="AMReX__EB2__GeometryShop_8H" local="no">AMReX_EB2_GeometryShop.H</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></type>
      </param>
      <param>
        <type>class R</type>
        <defval><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1EB2_1_1GeometryShop_1aa9d8c656e7a0aa9ce8efa32053f74f4a" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></type>
        <definition>using amrex::EB2::GeometryShop&lt; F, R &gt;::FunctionType =  F</definition>
        <argsstring></argsstring>
        <name>FunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="183" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a637784ea6d4098867d78ad901750937a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::in_fluid</definition>
        <argsstring></argsstring>
        <name>in_fluid</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="175" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1adacbc0ec9d750f6bbbcae77a23dbd127" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::on_boundary</definition>
        <argsstring></argsstring>
        <name>on_boundary</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="176" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a3e0822600d48fac2177a0b93671e868a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::in_body</definition>
        <argsstring></argsstring>
        <name>in_body</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="177" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1ad0c200b86624e027898eca991f5ded1c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::allregular</definition>
        <argsstring></argsstring>
        <name>allregular</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="179" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1abfd9f7b8c8225ddc6df0078ac4277ccd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::mixedcells</definition>
        <argsstring></argsstring>
        <name>mixedcells</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="180" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a4743c337de07fcbcad184ec6242ad0e1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::EB2::GeometryShop&lt; F, R &gt;::allcovered</definition>
        <argsstring></argsstring>
        <name>allcovered</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="181" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1afdb3f4220acfb2353d91feed84482169" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></type>
        <definition>F amrex::EB2::GeometryShop&lt; F, R &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="421" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1GeometryShop_1a70005a334b1a0d87aa5a94c43ad7ce8a" prot="private" static="no" mutable="no">
        <type>R</type>
        <definition>R amrex::EB2::GeometryShop&lt; F, R &gt;::m_resource</definition>
        <argsstring></argsstring>
        <name>m_resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="422" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a8d0e98aa0055c316ec02df67ccf8ad14" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(F const &amp;f)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="185" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1aa3f7eaaa1fa10feca580f6dec09c4d93" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="189" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a5e2ab734fa419cf8bde187ac4c73aeb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(F const &amp;f, R const &amp;r)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>R const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="193" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a2e356da2badc30adacbc98d1e04cff97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(F &amp;&amp;f, R &amp;&amp;r)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>R &amp;&amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="197" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afdf3128bd79e6622dafc14a254d1b04a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::~GeometryShop</definition>
        <argsstring>()</argsstring>
        <name>~GeometryShop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="201" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a03f304ab9e8f7c75032d371b9074a046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(GeometryShop&lt; F &gt; const &amp;rhs)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="203" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a8417e1966d0d1c4c7400251e91b46d56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::GeometryShop&lt; F, R &gt;::GeometryShop</definition>
        <argsstring>(GeometryShop&lt; F &gt; &amp;&amp;rhs)</argsstring>
        <name>GeometryShop</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="207" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afcbc72c2e7366ca14073765433e29282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &gt; &amp;</type>
        <definition>GeometryShop&lt;F&gt;&amp; amrex::EB2::GeometryShop&lt; F, R &gt;::operator=</definition>
        <argsstring>(GeometryShop&lt; F &gt; const &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="211" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ae177340a3e2de66f2106af9b08ce2ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &gt; &amp;</type>
        <definition>GeometryShop&lt;F&gt;&amp; amrex::EB2::GeometryShop&lt; F, R &gt;::operator=</definition>
        <argsstring>(GeometryShop&lt; F &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">GeometryShop</ref>&lt; <ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="212" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a99ffab25b96dcb5b2c642e65115d0d45" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> const  &amp;</type>
        <definition>F const&amp; amrex::EB2::GeometryShop&lt; F, R &gt;::GetImpFunc</definition>
        <argsstring>() const &amp;</argsstring>
        <name>GetImpFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="214" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a1ae5ec19a6ac23d6aee924e0e628a5eb" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref> &amp;&amp;</type>
        <definition>F&amp;&amp; amrex::EB2::GeometryShop&lt; F, R &gt;::GetImpFunc</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>GetImpFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="215" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afd124435b24af7471483736f6607a11b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F, R &gt;::getBoxType_Cpu</definition>
        <argsstring>(const Box &amp;bx, Geometry const &amp;geom) const noexcept</argsstring>
        <name>getBoxType_Cpu</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="217" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="217" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1afe2e9993f74d508cf7aeb7150b610fd5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F, R &gt;::getBoxType</definition>
        <argsstring>(const Box &amp;bx, const Geometry &amp;geom, RunOn run_on) const noexcept</argsstring>
        <name>getBoxType</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="253" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="253" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a510e90f5d3a5db5b5614d225a372529c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EB2::GeometryShop&lt; F, R &gt;::getBoxType</definition>
        <argsstring>(const Box &amp;bx, const Geometry &amp;geom, RunOn) const noexcept</argsstring>
        <name>getBoxType</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="300" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ab0feb076743b2a454e181404861c9ed9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::fillFab</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, RunOn run_on, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="312" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="312" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a21626bdeb656074c2e675969aec678bb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::fillFab</definition>
        <argsstring>(BaseFab&lt; Real &gt; &amp;levelset, const Geometry &amp;geom, RunOn, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>fillFab</name>
        <param>
          <type><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; Real &gt; &amp;</type>
          <declname>levelset</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="331" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="331" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a4f0ec1939369d98bc8f8c34ee391e221" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::getIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, 3 &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, 3 &gt; const &amp;type_arr, Geometry const &amp;geom, RunOn run_on, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>getIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, 3 &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, 3 &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>run_on</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="349" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="349" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1ac48ef93772dcbf1705415bdc9915b9a6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::EB2::GeometryShop&lt; F, R &gt;::getIntercept</definition>
        <argsstring>(Array&lt; Array4&lt; Real &gt;, 3 &gt; const &amp;inter_arr, Array&lt; Array4&lt; Type_t const &gt;, 3 &gt; const &amp;type_arr, Geometry const &amp;geom, RunOn, Box const &amp;bounding_box) const noexcept</argsstring>
        <name>getIntercept</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;, 3 &gt; const &amp;</type>
          <declname>inter_arr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; <ref refid="namespaceamrex_1_1EB2_1ad5118c9d34449d5fcba10d141751b0d6" kindref="member">Type_t</ref> const &gt;, 3 &gt; const &amp;</type>
          <declname>type_arr</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="385" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="385" bodyend="417"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool amrex::EB2::GeometryShop&lt; F, R &gt;::isGPUable</definition>
        <argsstring>() noexcept</argsstring>
        <name>isGPUable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="306" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval><ref refid="namespaceamrex_1a926ac59546412d68022500242da6077a" kindref="member">F</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value &gt;::type *</type>
            <declname>BAR</declname>
            <defname>BAR</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool amrex::EB2::GeometryShop&lt; F, R &gt;::isGPUable</definition>
        <argsstring>() noexcept</argsstring>
        <name>isGPUable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="309" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="309" bodyend="309"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" line="172" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H" bodystart="171" bodyend="424"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a4743c337de07fcbcad184ec6242ad0e1" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>allcovered</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ad0c200b86624e027898eca991f5ded1c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>allregular</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ab0feb076743b2a454e181404861c9ed9" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a21626bdeb656074c2e675969aec678bb" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>fillFab</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1aa9d8c656e7a0aa9ce8efa32053f74f4a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>FunctionType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a8d0e98aa0055c316ec02df67ccf8ad14" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1aa3f7eaaa1fa10feca580f6dec09c4d93" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a5e2ab734fa419cf8bde187ac4c73aeb8" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a2e356da2badc30adacbc98d1e04cff97" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a03f304ab9e8f7c75032d371b9074a046" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a8417e1966d0d1c4c7400251e91b46d56" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GeometryShop</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afe2e9993f74d508cf7aeb7150b610fd5" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a510e90f5d3a5db5b5614d225a372529c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afd124435b24af7471483736f6607a11b" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getBoxType_Cpu</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a99ffab25b96dcb5b2c642e65115d0d45" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GetImpFunc</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a1ae5ec19a6ac23d6aee924e0e628a5eb" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>GetImpFunc</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a4f0ec1939369d98bc8f8c34ee391e221" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ac48ef93772dcbf1705415bdc9915b9a6" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>getIntercept</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a3e0822600d48fac2177a0b93671e868a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>in_body</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a637784ea6d4098867d78ad901750937a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>in_fluid</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>isGPUable</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a34a660820434819b33dffd4982dc2c0c" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>isGPUable</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afdb3f4220acfb2353d91feed84482169" prot="private" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1a70005a334b1a0d87aa5a94c43ad7ce8a" prot="private" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>m_resource</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1abfd9f7b8c8225ddc6df0078ac4277ccd" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>mixedcells</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1adacbc0ec9d750f6bbbcae77a23dbd127" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>on_boundary</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afcbc72c2e7366ca14073765433e29282" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1ae177340a3e2de66f2106af9b08ce2ee9" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1GeometryShop_1afdf3128bd79e6622dafc14a254d1b04a" prot="public" virt="non-virtual"><scope>amrex::EB2::GeometryShop</scope><name>~GeometryShop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
