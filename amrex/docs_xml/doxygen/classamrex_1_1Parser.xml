<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1Parser" kind="class" language="C++" prot="public">
    <compoundname>amrex::Parser</compoundname>
    <includes refid="AMReX__Parser_8H" local="no">AMReX_Parser.H</includes>
    <innerclass refid="structamrex_1_1Parser_1_1Data" prot="private">amrex::Parser::Data</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Parser_1a24953b8ef5ef372c2ca196d8592053e1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Data&gt; amrex::Parser::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="96" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Parser_1a9829ccc584238c1042b7c1ef25b69685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Parser</definition>
        <argsstring>(std::string const &amp;func_body)</argsstring>
        <name>Parser</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>func_body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="62" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a979ec2bb844542bdd274c04010282c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Parser</definition>
        <argsstring>()=default</argsstring>
        <name>Parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="63" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1abdb30b6438c497e1da632eef58c386bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::~Parser</definition>
        <argsstring>()</argsstring>
        <name>~Parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="64" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a47d09b414b7b5b8e369c3b58819676fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Parser::define</definition>
        <argsstring>(std::string const &amp;func_body)</argsstring>
        <name>define</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>func_body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="65" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="18" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a7b646848d23d8e9b8ecd6c5695a29bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Parser::setConstant</definition>
        <argsstring>(std::string const &amp;name, amrex::Real c)</argsstring>
        <name>setConstant</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="67" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1ac7f2281fb9a99b8c410d9cbc0b20b67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Parser::registerVariables</definition>
        <argsstring>(Vector&lt; std::string &gt; const &amp;vars)</argsstring>
        <name>registerVariables</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::string &gt; const &amp;</type>
          <declname>vars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="69" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a217d48dc80e0448899823a0d47460d8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Parser::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="71" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1ae8f69b337a650c2a73a3aa33dad35064" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Parser::depth</definition>
        <argsstring>() const</argsstring>
        <name>depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="73" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a27dc3946de52071f374c1a11e6182bad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Parser::maxStackSize</definition>
        <argsstring>() const</argsstring>
        <name>maxStackSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="74" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a0f04178345ce7a2b52355e44d8e28968" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const  &amp; amrex::Parser::expr</definition>
        <argsstring>() const</argsstring>
        <name>expr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="76" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a0dfb30d6386a630f676982f25fb24a06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt; std::string &gt; amrex::Parser::symbols</definition>
        <argsstring>() const</argsstring>
        <name>symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="78" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Parser_1a84c2f77f7586faf9e89ef87489297bfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structamrex_1_1ParserExecutor" kindref="compound">ParserExecutor</ref>&lt; N &gt;</type>
        <definition>ParserExecutor&lt; N &gt; amrex::Parser::compile</definition>
        <argsstring>() const</argsstring>
        <name>compile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="80" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="101" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="60" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="59" bodyend="97"/>
    <listofallmembers>
      <member refid="classamrex_1_1Parser_1a84c2f77f7586faf9e89ef87489297bfa" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>compile</name></member>
      <member refid="classamrex_1_1Parser_1a47d09b414b7b5b8e369c3b58819676fb" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>define</name></member>
      <member refid="classamrex_1_1Parser_1ae8f69b337a650c2a73a3aa33dad35064" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>depth</name></member>
      <member refid="classamrex_1_1Parser_1a0f04178345ce7a2b52355e44d8e28968" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>expr</name></member>
      <member refid="classamrex_1_1Parser_1a24953b8ef5ef372c2ca196d8592053e1" prot="private" virt="non-virtual"><scope>amrex::Parser</scope><name>m_data</name></member>
      <member refid="classamrex_1_1Parser_1a27dc3946de52071f374c1a11e6182bad" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>maxStackSize</name></member>
      <member refid="classamrex_1_1Parser_1a9829ccc584238c1042b7c1ef25b69685" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>Parser</name></member>
      <member refid="classamrex_1_1Parser_1a979ec2bb844542bdd274c04010282c19" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>Parser</name></member>
      <member refid="classamrex_1_1Parser_1a217d48dc80e0448899823a0d47460d8b" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>print</name></member>
      <member refid="classamrex_1_1Parser_1ac7f2281fb9a99b8c410d9cbc0b20b67b" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>registerVariables</name></member>
      <member refid="classamrex_1_1Parser_1a7b646848d23d8e9b8ecd6c5695a29bbf" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>setConstant</name></member>
      <member refid="classamrex_1_1Parser_1a0dfb30d6386a630f676982f25fb24a06" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>symbols</name></member>
      <member refid="classamrex_1_1Parser_1abdb30b6438c497e1da632eef58c386bc" prot="public" virt="non-virtual"><scope>amrex::Parser</scope><name>~Parser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
