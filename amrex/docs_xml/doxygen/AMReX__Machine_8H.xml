<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="AMReX__Machine_8H" kind="file" language="C++">
    <compoundname>AMReX_Machine.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes local="no">string</includes>
    <includedby refid="AMReX_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</includedby>
    <includedby refid="AMReX__GpuDevice_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuDevice.cpp</includedby>
    <includedby refid="AMReX__Machine_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_Machine.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Machine.H</label>
        <link refid="AMReX__Machine_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuDevice.cpp</label>
        <link refid="AMReX__GpuDevice_8cpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Machine.H</label>
        <link refid="AMReX__Machine_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Machine.cpp</label>
        <link refid="AMReX__Machine_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Machine">amrex::Machine</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_MACHINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_MACHINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Machine" kindref="compound">amrex::Machine</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Machine_1a53b6e7dc08c68e065f836d819e5231ff" kindref="member">Initialize</ref><sp/>();<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Machine_1a9502e811fea27e3d1e3af407834b04b1" kindref="member">Finalize</ref><sp/>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="namespaceamrex_1_1Machine_1a578c9b214c4e8dfa2f753181f21d5720" kindref="member">name</ref><sp/>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Machine.H"/>
  </compounddef>
</doxygen>
