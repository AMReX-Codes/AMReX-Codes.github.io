<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1BArena" kind="class" language="C++" prot="public">
    <compoundname>amrex::BArena</compoundname>
    <basecompoundref refid="classamrex_1_1Arena" prot="public" virt="non-virtual">amrex::Arena</basecompoundref>
    <includes refid="AMReX__BArena_8H" local="no">AMReX_BArena.H</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1BArena_1a3f5a8cc7a0cb8013fe3bc8ba6270c510" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * amrex::BArena::alloc</definition>
        <argsstring>(std::size_t sz) override</argsstring>
        <name>alloc</name>
        <reimplements refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e">alloc</reimplements>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Allocates a dynamic memory arena of size sz. Returns a pointer to this memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BArena.H" line="24" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BArena.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BArena_1a64267cbe47ae467eedfd819c6fc50cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::BArena::free</definition>
        <argsstring>(void *pt) override</argsstring>
        <name>free</name>
        <reimplements refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515">free</reimplements>
        <param>
          <type>void *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Deletes the arena pointed to by pt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BArena.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BArena.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A Concrete Class for Dynamic Memory Management This is the simplest dynamic memory management class derived from <ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>. Makes calls to std::malloc and std::free. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="499">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
      </node>
      <node id="498">
        <label>amrex::BArena</label>
        <link refid="classamrex_1_1BArena"/>
        <childnode refid="499" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="502">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="501">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="502" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="500">
        <label>amrex::BArena</label>
        <link refid="classamrex_1_1BArena"/>
        <childnode refid="501" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BArena.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BArena.H" bodystart="15" bodyend="29"/>
    <listofallmembers>
      <member refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" prot="public" virt="non-virtual"><scope>amrex::BArena</scope><name>align</name></member>
      <member refid="classamrex_1_1Arena_1a4b2f3b31e81e52426aef615cb2aaa7b7" prot="public" virt="non-virtual"><scope>amrex::BArena</scope><name>align_size</name></member>
      <member refid="classamrex_1_1BArena_1a3f5a8cc7a0cb8013fe3bc8ba6270c510" prot="public" virt="virtual"><scope>amrex::BArena</scope><name>alloc</name></member>
      <member refid="classamrex_1_1Arena_1afc721e195430f79b2d1b287c490ef0fb" prot="protected" virt="non-virtual"><scope>amrex::BArena</scope><name>allocate_system</name></member>
      <member refid="classamrex_1_1Arena_1aeb2158ba443c9b23ba0d12bcf38a66e1" prot="protected" virt="non-virtual"><scope>amrex::BArena</scope><name>arena_info</name></member>
      <member refid="classamrex_1_1Arena_1a1af72a36a13904de0715917915db1f6b" prot="public" virt="non-virtual"><scope>amrex::BArena</scope><name>arenaInfo</name></member>
      <member refid="classamrex_1_1Arena_1ac07ba8cda253cddee3cab1168ac65694" prot="protected" virt="non-virtual"><scope>amrex::BArena</scope><name>deallocate_system</name></member>
      <member refid="classamrex_1_1Arena_1a06dd6197d2081d7dd4c1bed308edd387" prot="public" virt="non-virtual"><scope>amrex::BArena</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1BArena_1a64267cbe47ae467eedfd819c6fc50cd2" prot="public" virt="virtual"><scope>amrex::BArena</scope><name>free</name></member>
      <member refid="classamrex_1_1Arena_1a9f40990a545f4d280e905117fc6a0786" prot="public" virt="non-virtual"><scope>amrex::BArena</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1Arena_1a506a68384da30629323d0839f13812c2" prot="public" virt="non-virtual"><scope>amrex::BArena</scope><name>PrintUsage</name></member>
      <member refid="classamrex_1_1Arena_1a515142557e6b630fbad746e3c33776e5" prot="public" virt="virtual"><scope>amrex::BArena</scope><name>~Arena</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
