<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1SparseBins" kind="class" language="C++" prot="public">
    <compoundname>amrex::SparseBins</compoundname>
    <includes refid="AMReX__SparseBins_8H" local="no">AMReX_SparseBins.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1SparseBins_1a015439d37e7fd4c3ded33837a8b502bc" prot="public" static="no">
        <type><ref refid="structamrex_1_1SparseBinIteratorFactory" kindref="compound">SparseBinIteratorFactory</ref>&lt; T &gt;</type>
        <definition>using amrex::SparseBins&lt; T &gt;::BinIteratorFactory =  SparseBinIteratorFactory&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>BinIteratorFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="88" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1SparseBins_1a3bea2b14d8950423ccd43ff1c81b8baf" prot="public" static="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>using amrex::SparseBins&lt; T &gt;::bin_type =  IntVect</definition>
        <argsstring></argsstring>
        <name>bin_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="89" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" prot="public" static="no">
        <type>unsigned <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>using amrex::SparseBins&lt; T &gt;::index_type =  unsigned int</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1SparseBins_1a898e7cfb013cd418f1155abb6b8e472d" prot="private" static="no" mutable="no">
        <type>const T *</type>
        <definition>const T* amrex::SparseBins&lt; T &gt;::m_items</definition>
        <argsstring></argsstring>
        <name>m_items</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="183" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1SparseBins_1afaba6cf4d3a98c920b0ba530d461c94f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;index_type&gt; amrex::SparseBins&lt; T &gt;::m_bins</definition>
        <argsstring></argsstring>
        <name>m_bins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="185" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1SparseBins_1a61877be196b17888cd8222578d4ddf02" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;index_type&gt; amrex::SparseBins&lt; T &gt;::m_offsets</definition>
        <argsstring></argsstring>
        <name>m_offsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="186" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1SparseBins_1a0c8ada8a50d63270eee76dd43195a8ff" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> &gt;</type>
        <definition>Gpu::DeviceVector&lt;index_type&gt; amrex::SparseBins&lt; T &gt;::m_perm</definition>
        <argsstring></argsstring>
        <name>m_perm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="187" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1SparseBins_1ac0aaa09ba1072de338218d95211970ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::SparseBins&lt; T &gt;::build</definition>
        <argsstring>(N nitems, T const *v, const Box &amp;bx, F &amp;&amp;f)</argsstring>
        <name>build</name>
        <param>
          <type>N</type>
          <declname>nitems</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Populate the bins with a set of items. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>the &apos;size&apos; type that can enumerate all the items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that maps items to <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> bins</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nitems</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of items to put in the bins </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the start of the items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bx</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> that defines the space over which the bins will be defined </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>a function object that maps items to bins </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="104" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="104" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a88234f341b867559fe25f8a25cc53ebb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Long</type>
        <definition>Long amrex::SparseBins&lt; T &gt;::numItems</definition>
        <argsstring>() const noexcept</argsstring>
        <name>numItems</name>
        <briefdescription>
<para>the number of items in the container </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="152" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1aacee8f0ffcd3fbd6c14e58c08460d232" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Long</type>
        <definition>Long amrex::SparseBins&lt; T &gt;::numBins</definition>
        <argsstring>() const noexcept</argsstring>
        <name>numBins</name>
        <briefdescription>
<para>the number of bins in the container </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="155" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a1366ec831cf538cf38da122f875fca27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> *</type>
        <definition>index_type* amrex::SparseBins&lt; T &gt;::permutationPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>permutationPtr</name>
        <briefdescription>
<para>returns the pointer to the permutation array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="158" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a9abeaeccc7e4edeec7e68b7676a406f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> *</type>
        <definition>index_type* amrex::SparseBins&lt; T &gt;::offsetsPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>offsetsPtr</name>
        <briefdescription>
<para>returns the pointer to the offsets array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="161" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a20ea0ea6dcb1b42a55b691060c1cffaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> *</type>
        <definition>index_type* amrex::SparseBins&lt; T &gt;::getNonZeroBinsPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>getNonZeroBinsPtr</name>
        <briefdescription>
<para>returns the pointer to the array of non-zero bins </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="164" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a2e0d5402d80dd9e9dfdd8478b0e6c2c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> *</type>
        <definition>const index_type* amrex::SparseBins&lt; T &gt;::permutationPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>permutationPtr</name>
        <briefdescription>
<para>returns const pointer to the permutation array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="167" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a810de8999d58ec01329e800c51179102" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> *</type>
        <definition>const index_type* amrex::SparseBins&lt; T &gt;::offsetsPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>offsetsPtr</name>
        <briefdescription>
<para>returns const pointer to the offsets array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="170" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a54c4ce654739bc4d76a7e8c4859a7be6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" kindref="member">index_type</ref> *</type>
        <definition>const index_type* amrex::SparseBins&lt; T &gt;::getNonZeroBinsPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNonZeroBinsPtr</name>
        <briefdescription>
<para>returns the pointer to the array of non-zero bins </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="173" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1SparseBins_1a475590b909390bc33d62c299008f46b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1SparseBinIteratorFactory" kindref="compound">SparseBinIteratorFactory</ref>&lt; T &gt;</type>
        <definition>SparseBinIteratorFactory&lt;T&gt; amrex::SparseBins&lt; T &gt;::getBinIteratorFactory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBinIteratorFactory</name>
        <briefdescription>
<para>returns a GPU-capable object that can create iterators over the items in a bin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="176" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="176" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A container for storing items in a set of bins using &quot;sparse&quot; storage. </para>    </briefdescription>
    <detaileddescription>
<para>The underlying data structure consists of three arrays. The first is a sorted array of bin numbers with a size equal to the number of non-zero bins. The second is an array of size nitems defining a permutation of the items in the container that puts them in bin-sorted order. Finally, there is an offsets array that stores, for each non-zero bin, the offsets into the permutation array where each bin starts.</para><para>The storage for the bins is &quot;sparse&quot; in the sense that users pass in a <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> that defines the space over which the bins will be defined, and empty bins will still take up space.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>type of items we hold </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="4513">
        <label>std::allocator&lt; index_type &gt;</label>
      </node>
      <node id="4511">
        <label>amrex::SparseBins&lt; T &gt;</label>
        <link refid="classamrex_1_1SparseBins"/>
        <childnode refid="4512" relation="usage">
          <edgelabel>m_perm</edgelabel>
          <edgelabel>m_offsets</edgelabel>
          <edgelabel>m_bins</edgelabel>
        </childnode>
      </node>
      <node id="4512">
        <label>amrex::PODVector&lt; index_type &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4513" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" line="85" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="84" bodyend="188"/>
    <listofallmembers>
      <member refid="classamrex_1_1SparseBins_1a3bea2b14d8950423ccd43ff1c81b8baf" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>bin_type</name></member>
      <member refid="classamrex_1_1SparseBins_1a015439d37e7fd4c3ded33837a8b502bc" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>BinIteratorFactory</name></member>
      <member refid="classamrex_1_1SparseBins_1ac0aaa09ba1072de338218d95211970ac" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>build</name></member>
      <member refid="classamrex_1_1SparseBins_1a475590b909390bc33d62c299008f46b0" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>getBinIteratorFactory</name></member>
      <member refid="classamrex_1_1SparseBins_1a20ea0ea6dcb1b42a55b691060c1cffaa" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>getNonZeroBinsPtr</name></member>
      <member refid="classamrex_1_1SparseBins_1a54c4ce654739bc4d76a7e8c4859a7be6" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>getNonZeroBinsPtr</name></member>
      <member refid="classamrex_1_1SparseBins_1acd6d4073c186417cb25f04de695363d0" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>index_type</name></member>
      <member refid="classamrex_1_1SparseBins_1afaba6cf4d3a98c920b0ba530d461c94f" prot="private" virt="non-virtual"><scope>amrex::SparseBins</scope><name>m_bins</name></member>
      <member refid="classamrex_1_1SparseBins_1a898e7cfb013cd418f1155abb6b8e472d" prot="private" virt="non-virtual"><scope>amrex::SparseBins</scope><name>m_items</name></member>
      <member refid="classamrex_1_1SparseBins_1a61877be196b17888cd8222578d4ddf02" prot="private" virt="non-virtual"><scope>amrex::SparseBins</scope><name>m_offsets</name></member>
      <member refid="classamrex_1_1SparseBins_1a0c8ada8a50d63270eee76dd43195a8ff" prot="private" virt="non-virtual"><scope>amrex::SparseBins</scope><name>m_perm</name></member>
      <member refid="classamrex_1_1SparseBins_1aacee8f0ffcd3fbd6c14e58c08460d232" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>numBins</name></member>
      <member refid="classamrex_1_1SparseBins_1a88234f341b867559fe25f8a25cc53ebb" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>numItems</name></member>
      <member refid="classamrex_1_1SparseBins_1a9abeaeccc7e4edeec7e68b7676a406f2" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>offsetsPtr</name></member>
      <member refid="classamrex_1_1SparseBins_1a810de8999d58ec01329e800c51179102" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>offsetsPtr</name></member>
      <member refid="classamrex_1_1SparseBins_1a1366ec831cf538cf38da122f875fca27" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>permutationPtr</name></member>
      <member refid="classamrex_1_1SparseBins_1a2e0d5402d80dd9e9dfdd8478b0e6c2c7" prot="public" virt="non-virtual"><scope>amrex::SparseBins</scope><name>permutationPtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
