<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1ParConstIter" kind="class" language="C++" prot="public">
    <compoundname>amrex::ParConstIter</compoundname>
    <basecompoundref refid="classamrex_1_1ParIterBase" prot="public" virt="non-virtual">amrex::ParIterBase&lt; true, NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</basecompoundref>
    <includes refid="AMReX__ParIter_8H" local="no">AMReX_ParIter.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1a81a21f5947e6c6c1fc00a6d7050d7aeb" prot="public" static="no">
        <type><ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ContainerType =  ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="124" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1affb89d2e182070293803f87d66e7f456" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1a1b6862ee9ee11751c42cd85d8cf91af3" kindref="member">ContainerType::ParticleTileType</ref></type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTileType =  typename ContainerType::ParticleTileType</definition>
        <argsstring></argsstring>
        <name>ParticleTileType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="125" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1a3c642a5677477afc83e93bf926eb578b" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1abadedf12da3e40c72b203c6fb4e3401d" kindref="member">ContainerType::AoS</ref></type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AoS =  typename ContainerType::AoS</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="126" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1aa2053d64fd68f8b24e1f640067c73dfa" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1a0f3255b06d423259a55c68a1eee71825" kindref="member">ContainerType::SoA</ref></type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SoA =  typename ContainerType::SoA</definition>
        <argsstring></argsstring>
        <name>SoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="127" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1a9abe03c552f863b54133275e00ee37d7" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1a820cf0ea51b535a1835f4f3f99b3c75d" kindref="member">ContainerType::ParticleType</ref></type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleType =  typename ContainerType::ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="128" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1a130289305ad39fd0f594342ec1d992d9" prot="public" static="no">
        <type>typename SoA::RealVector</type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::RealVector =  typename SoA::RealVector</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="129" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ParConstIter_1a491a005d14bed447575cd6478ab31558" prot="public" static="no">
        <type>typename SoA::IntVector</type>
        <definition>using amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::IntVector =  typename SoA::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="130" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ParConstIter_1afa4cf5a5d186a9cea1914bea554e75fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParConstIter</definition>
        <argsstring>(ContainerType const &amp;pc, int level)</argsstring>
        <name>ParConstIter</name>
        <param>
          <type><ref refid="classamrex_1_1ParConstIter_1a81a21f5947e6c6c1fc00a6d7050d7aeb" kindref="member">ContainerType</ref> const &amp;</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="132" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParConstIter_1aacb08e7573315855f117496c5a67edd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParConstIter</definition>
        <argsstring>(ContainerType const &amp;pc, int level, MFItInfo &amp;info)</argsstring>
        <name>ParConstIter</name>
        <param>
          <type><ref refid="classamrex_1_1ParConstIter_1a81a21f5947e6c6c1fc00a6d7050d7aeb" kindref="member">ContainerType</ref> const &amp;</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1MFItInfo" kindref="compound">MFItInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="136" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="136" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3974">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
      </node>
      <node id="3973">
        <label>amrex::ParIterBase&lt; true, NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1ParIterBase"/>
        <childnode refid="3974" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3972">
        <label>amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1ParConstIter"/>
        <childnode refid="3973" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3977">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
        <childnode refid="3978" relation="usage">
          <edgelabel>fabArray</edgelabel>
        </childnode>
        <childnode refid="3982" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="3984" relation="usage">
          <edgelabel>index_map</edgelabel>
          <edgelabel>local_index_map</edgelabel>
          <edgelabel>local_tile_index_map</edgelabel>
          <edgelabel>num_local_tiles</edgelabel>
        </childnode>
        <childnode refid="3989" relation="usage">
          <edgelabel>tile_array</edgelabel>
        </childnode>
        <childnode refid="3991" relation="usage">
          <edgelabel>typ</edgelabel>
        </childnode>
      </node>
      <node id="3979">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3980" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3983">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3990">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
      </node>
      <node id="3982">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3982" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3976">
        <label>amrex::ParIterBase&lt; true, NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1ParIterBase"/>
        <childnode refid="3977" relation="public-inheritance">
        </childnode>
        <childnode refid="3984" relation="usage">
          <edgelabel>m_valid_index</edgelabel>
        </childnode>
        <childnode refid="3992" relation="usage">
          <edgelabel>m_particle_tiles</edgelabel>
        </childnode>
      </node>
      <node id="3984">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3985" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3980">
        <label>string</label>
      </node>
      <node id="3975">
        <label>amrex::ParConstIter&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1ParConstIter"/>
        <childnode refid="3976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3985">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3987">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3988" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3991">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3988">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3984" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3981">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3986">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3987" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3992">
        <label>amrex::Vector&lt; ParticleTilePtr &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3993" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3989">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3993">
        <label>std::vector&lt; ParticleTilePtr, std::allocator&lt; ParticleTilePtr &gt; &gt;</label>
      </node>
      <node id="3978">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3979" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3981" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3982" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3983" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3984" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3986" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" line="121" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H" bodystart="119" bodyend="139"/>
    <listofallmembers>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a96650cf6d7f0f21d0f4b118ae897d008" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>AllBoxes</name></member>
      <member refid="classamrex_1_1ParConstIter_1a3c642a5677477afc83e93bf926eb578b" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>AoS</name></member>
      <member refid="classamrex_1_1MFIter_1a65b335b52bc54d9eaf7030a4fce20cf8" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>beginIndex</name></member>
      <member refid="classamrex_1_1ParConstIter_1a81a21f5947e6c6c1fc00a6d7050d7aeb" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ContainerType</name></member>
      <member refid="classamrex_1_1MFIter_1abfba09b9f27138141e9758d1a8ea2e4b" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>currentIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a46b0a938c3d5f41c379d0adc7bf19c0d" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>depth</name></member>
      <member refid="classamrex_1_1MFIter_1a8cc2207634fdad4304d0a46c1e0ea433" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>device_sync</name></member>
      <member refid="classamrex_1_1MFIter_1a47d2e159ed2d66cd78498ea5bea35a17" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MFIter_1a16fa2d144bcc71d665056de5938c4b32" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>dynamic</name></member>
      <member refid="classamrex_1_1MFIter_1a427faab13c7d1f9d72b476452df519e1" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>endIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a198baf9d7f4a208f217569a0c6f02183" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>fabArray</name></member>
      <member refid="classamrex_1_1MFIter_1a3290eb14472377e0118842344967a44c" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>fabbox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>Flags</name></member>
      <member refid="classamrex_1_1MFIter_1a1184620f493f560be355cf02e5a0e619" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>flags</name></member>
      <member refid="classamrex_1_1ParIterBase_1a9ab0cc0ab5276853a0f58e5645e408f9" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>Geom</name></member>
      <member refid="classamrex_1_1ParIterBase_1ac1d50160afdd2d9fdf893072ee26dbc0" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>GetArrayOfStructs</name></member>
      <member refid="classamrex_1_1ParIterBase_1a19dee97c086ba0f2be3fa4537022b32c" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>GetLevel</name></member>
      <member refid="classamrex_1_1ParIterBase_1a9ddb47b162aa20ce489190a54a2d676b" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>GetPairIndex</name></member>
      <member refid="classamrex_1_1ParIterBase_1a6cc13cb5db2d34c28633c3eaa59a4dca" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>GetParticleTile</name></member>
      <member refid="classamrex_1_1ParIterBase_1a9caa0f5e4b6de4dcc850c6298f0de50f" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>GetStructOfArrays</name></member>
      <member refid="classamrex_1_1MFIter_1ae59e3e67c7b94d6b15158d177dd8cdc8" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a972ba6223b0f4ccca81791b9510b3002" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a1e344ffd39d3dba95d582a7d93c1ad97" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1ac9653cce066f73c95c3ec89f46f38ba1" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aa69f73dbf7931e2d0a3889de2db4a42b" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>index</name></member>
      <member refid="classamrex_1_1MFIter_1ac482cbbf5ecee6f2593a3e4437623082" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>index_map</name></member>
      <member refid="classamrex_1_1MFIter_1addaa9305a4ee5dda972e835164b70e29" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1ParConstIter_1a491a005d14bed447575cd6478ab31558" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>IntVector</name></member>
      <member refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>isValid</name></member>
      <member refid="classamrex_1_1MFIter_1a3658deeec368fbc6be8f9555ac37bab5" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>length</name></member>
      <member refid="classamrex_1_1MFIter_1a8a8cdb1fbae0dace9fcc0dc622c3409d" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>local_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1a72828c9a333be0dfff3e89e350fd0e11" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>local_tile_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1ab9afc4ebb6b729bcecdba6b22a317e88" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>LocalIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a02c0b04b49bf0116bc21ee53e3593225" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>LocalTileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1ae0aa4364654842ee9aaba3d573fb6b01" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>m_fa</name></member>
      <member refid="classamrex_1_1ParIterBase_1a40fe7631d396c29d5c8e548ec2653f28" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>m_level</name></member>
      <member refid="classamrex_1_1ParIterBase_1ac631a494742ef6fe4f40a0e6de859aca" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>m_pariter_index</name></member>
      <member refid="classamrex_1_1ParIterBase_1a77b396884132898232c52b1395b82c2d" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>m_particle_tiles</name></member>
      <member refid="classamrex_1_1ParIterBase_1ae104c0082d9a4bf779f21bd6852351bc" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>m_pc</name></member>
      <member refid="classamrex_1_1ParIterBase_1aa1142b78c93b74d5773d8633f240735b" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>m_valid_index</name></member>
      <member refid="classamrex_1_1MFIter_1aac055187a5b4d7200fc77827dc28a76c" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ae7623281ac9e772db1fc5085a64aeeca" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a1d9668de99635aa50096d0f091d8b9b0" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a830e42aee76ec9fe8dae8bdd262e0b2d" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ad7a19e95ba128febb94b27d2a9d97ef1" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a970e636bf6a2d744068483806ddb7944" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a2c0a016e1d5d69073f2cab81e7c6a095" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1aecfd3f3ef12e8703caad5794968ff06a" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a66b92b6dbfbe1a498ba614df28817709" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a07296b12634219c4a15337435852a67b" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>nextDynamicIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a7a17b4a775ec84d2987cb480c38ed271" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>nodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38af1e51da50b24860035a3665786fe9d14" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>NoTeamBarrier</name></member>
      <member refid="classamrex_1_1MFIter_1a967c3c48ccb4f316911d06fcaccb29fa" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>num_local_tiles</name></member>
      <member refid="classamrex_1_1MFIter_1afbbd9093cd125af3cebbc8f8231bb142" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>numLocalTiles</name></member>
      <member refid="classamrex_1_1ParIterBase_1adbee8601443e0d80ff4838eee301f7a3" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>numNeighborParticles</name></member>
      <member refid="classamrex_1_1ParIterBase_1a2a679ea9a29ded7da9b10f5a4e11d274" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>numParticles</name></member>
      <member refid="classamrex_1_1ParIterBase_1afbda80a37bc89c9c99baa403a17d9c39" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>numRealParticles</name></member>
      <member refid="classamrex_1_1ParIterBase_1a9fcd918446a145382479f9abba7e8574" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1ParConstIter_1afa4cf5a5d186a9cea1914bea554e75fb" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParConstIter</name></member>
      <member refid="classamrex_1_1ParConstIter_1aacb08e7573315855f117496c5a67edd2" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParConstIter</name></member>
      <member refid="classamrex_1_1ParIterBase_1a770b67cf6df704d207a0ebe2b04e2864" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParIterBase</name></member>
      <member refid="classamrex_1_1ParIterBase_1a7d19fe25e8406e4377d4680a152eaa68" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParIterBase</name></member>
      <member refid="classamrex_1_1ParConstIter_1affb89d2e182070293803f87d66e7f456" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParticleTileType</name></member>
      <member refid="classamrex_1_1ParConstIter_1a9abe03c552f863b54133275e00ee37d7" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1ParIterBase_1af92956f9a9b358176780e69c54ec9303" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1ParConstIter_1a130289305ad39fd0f594342ec1d992d9" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>RealVector</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a30a84aa6392dc4536c6761c0cf72b097" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>SkipInit</name></member>
      <member refid="classamrex_1_1ParConstIter_1aa2053d64fd68f8b24e1f640067c73dfa" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>SoA</name></member>
      <member refid="classamrex_1_1MFIter_1a6387ff79e8fcfbfdcfbc7dd8d8e78621" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>streams</name></member>
      <member refid="classamrex_1_1MFIter_1a8a7f84508a19797af16e5f3f6b13523c" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>theFabArrayBase</name></member>
      <member refid="classamrex_1_1MFIter_1a10b2f0f6900d23295fe25fd526153f43" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>tile_array</name></member>
      <member refid="classamrex_1_1MFIter_1ae64d80e0b2d14e9209c426a0654e8a1f" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1MFIter_1a4633394eac1ff3355fe082b815ed7413" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aade25ad6c9b6b92a5dbe2e022fc77912" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3563f863ba15b874a9abd0dc338c0c72" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3d73098e8ef5205fc2bce58d5ed0f21b" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>tileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a1db74b1bbdeb756077e4bc33e25a2740" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>Tiling</name></member>
      <member refid="classamrex_1_1MFIter_1a1406cbb9152b357a39e877b78eb8ff0d" prot="protected" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>typ</name></member>
      <member refid="classamrex_1_1MFIter_1a77ae102619461dabde09c7801390b841" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>validbox</name></member>
      <member refid="classamrex_1_1MFIter_1aac3223d243bff8f86cbd227b8f1af866" prot="public" virt="non-virtual"><scope>amrex::ParConstIter</scope><name>~MFIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
