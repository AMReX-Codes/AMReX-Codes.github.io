<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1Table1D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Table1D</compoundname>
    <includes refid="AMReX__TableData_8H" local="no">AMReX_TableData.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename IDX</type>
        <defval>int</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Table1D_1aaf0cea7b29cabff40d598de8b40403f6" prot="public" static="no" mutable="no">
        <type>T *restrict</type>
        <definition>T* restrict amrex::Table1D&lt; T, IDX &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>amrex::Table1D::p</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="21" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table1D_1a06af5cf12031ffd738020537760de9c9" prot="public" static="no" mutable="no">
        <type>IDX</type>
        <definition>IDX amrex::Table1D&lt; T, IDX &gt;::begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <qualifiedname>amrex::Table1D::begin</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="22" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table1D_1accabc1f0f0d39d05a414c9bdc9edaf7f" prot="public" static="no" mutable="no">
        <type>IDX</type>
        <definition>IDX amrex::Table1D&lt; T, IDX &gt;::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>amrex::Table1D::end</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="23" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Table1D_1ad25b4232acfe98753043509f04b449ca" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::Table1D&lt; T, IDX &gt;::Table1D</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>Table1D</name>
        <qualifiedname>amrex::Table1D::Table1D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="25" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1af9ba3e22c0a0f3e650fe11562fe0871f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::Table1D&lt; T, IDX &gt;::Table1D</definition>
        <argsstring>(Table1D&lt; std::remove_const_t&lt; T &gt; &gt; const &amp;rhs) noexcept</argsstring>
        <name>Table1D</name>
        <qualifiedname>amrex::Table1D::Table1D</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Table1D" kindref="compound">Table1D</ref>&lt; std::remove_const_t&lt; T &gt; &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="29" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1ad2726ba74e1e15cf1d368e2b67f69eb1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::Table1D&lt; T, IDX &gt;::Table1D</definition>
        <argsstring>(T *a_p, IDX a_begin, IDX a_end) noexcept</argsstring>
        <name>Table1D</name>
        <qualifiedname>amrex::Table1D::Table1D</qualifiedname>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type>IDX</type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type>IDX</type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="36" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1a3a3703723a3a1a69d59b40b587335be2" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::Table1D&lt; T, IDX &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>amrex::Table1D::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="43" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1aeb46e3e94740ca99982d2e602ca01952" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_void_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ U &amp;</type>
        <definition>__host__ __device__ U &amp; amrex::Table1D&lt; T, IDX &gt;::operator()</definition>
        <argsstring>(IDX i) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::Table1D::operator()</qualifiedname>
        <param>
          <type>IDX</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="47" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="47" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="20" bodyend="89"/>
    <listofallmembers>
      <member refid="structamrex_1_1Table1D_1a06af5cf12031ffd738020537760de9c9" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>begin</name></member>
      <member refid="structamrex_1_1Table1D_1accabc1f0f0d39d05a414c9bdc9edaf7f" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>end</name></member>
      <member refid="structamrex_1_1Table1D_1a3a3703723a3a1a69d59b40b587335be2" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1Table1D_1aeb46e3e94740ca99982d2e602ca01952" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Table1D_1aaf0cea7b29cabff40d598de8b40403f6" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>p</name></member>
      <member refid="structamrex_1_1Table1D_1ad25b4232acfe98753043509f04b449ca" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>Table1D</name></member>
      <member refid="structamrex_1_1Table1D_1af9ba3e22c0a0f3e650fe11562fe0871f" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>Table1D</name></member>
      <member refid="structamrex_1_1Table1D_1ad2726ba74e1e15cf1d368e2b67f69eb1" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>Table1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
