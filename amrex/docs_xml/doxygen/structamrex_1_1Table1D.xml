<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1Table1D" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Table1D</compoundname>
    <includes refid="AMReX__TableData_8H" local="no">AMReX_TableData.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" prot="public" static="no" mutable="no">
        <type>T *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>T* AMREX_RESTRICT amrex::Table1D&lt; T &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="21" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Table1D&lt; T &gt;::begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="22" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Table1D&lt; T &gt;::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="23" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Table1D_1a260ebea755431c8426dbe9ce1cdaf975" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table1D&lt; T &gt;::Table1D</definition>
        <argsstring>() noexcept</argsstring>
        <name>Table1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="26" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1ad13f3cdf79a91ecd8cefb3984b2bd394" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_const&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table1D&lt; T &gt;::Table1D</definition>
        <argsstring>(Table1D&lt; typename std::remove_const&lt; T &gt;::type &gt; const &amp;rhs) noexcept</argsstring>
        <name>Table1D</name>
        <param>
          <type><ref refid="structamrex_1_1Table1D" kindref="compound">Table1D</ref>&lt; typename std::remove_const&lt; T &gt;::type &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="30" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1ad9e33e283ae88a75cf4b1d9cd99323a7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>constexpr AMREX_GPU_HOST_DEVICE amrex::Table1D&lt; T &gt;::Table1D</definition>
        <argsstring>(T *a_p, int a_begin, int a_end) noexcept</argsstring>
        <name>Table1D</name>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_begin</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="37" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1aeb5e426687a441d87eb00628cdcc2706" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::Table1D&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="44" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!std::is_void&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> U &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE U&amp; amrex::Table1D&lt; T &gt;::operator()</definition>
        <argsstring>(int i) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="48" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="48" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_TableData.H" bodystart="19" bodyend="73"/>
    <listofallmembers>
      <member refid="structamrex_1_1Table1D_1a1b493bd89c1d953f72b18dbfb82fc311" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>begin</name></member>
      <member refid="structamrex_1_1Table1D_1ac4fc4d78377e9818d74517d365f21113" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>end</name></member>
      <member refid="structamrex_1_1Table1D_1aeb5e426687a441d87eb00628cdcc2706" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1Table1D_1a4d8ba7fa9408d591083cf1c27205b2ef" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Table1D_1aeb3e8d430cfc35fd36cca7b37d5d6287" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>p</name></member>
      <member refid="structamrex_1_1Table1D_1a260ebea755431c8426dbe9ce1cdaf975" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>Table1D</name></member>
      <member refid="structamrex_1_1Table1D_1ad13f3cdf79a91ecd8cefb3984b2bd394" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>Table1D</name></member>
      <member refid="structamrex_1_1Table1D_1ad9e33e283ae88a75cf4b1d9cd99323a7" prot="public" virt="non-virtual"><scope>amrex::Table1D</scope><name>Table1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
