<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1DistributionMapping_1_1RefID" kind="struct" language="C++" prot="public">
    <compoundname>amrex::DistributionMapping::RefID</compoundname>
    <includes refid="AMReX__DistributionMapping_8H" local="no">AMReX_DistributionMapping.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1DistributionMapping_1_1RefID_1a83d7d3288a3b51ffca12886346794042" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1DistributionMapping_1_1Ref" kindref="compound">Ref</ref> *</type>
        <definition>Ref* amrex::DistributionMapping::RefID::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="371" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1a00f58999a2331cc59b9cf916b76cbc4d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::DistributionMapping::RefID::RefID</definition>
        <argsstring>() noexcept</argsstring>
        <name>RefID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="362" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1af498ab4c22436f6e5e6e530392dc74c8" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::RefID::RefID</definition>
        <argsstring>(Ref *data_) noexcept</argsstring>
        <name>RefID</name>
        <param>
          <type><ref refid="structamrex_1_1DistributionMapping_1_1Ref" kindref="compound">Ref</ref> *</type>
          <declname>data_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="363" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="363" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1acf88511a112b6bcc2cba29a585f5ac13" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::DistributionMapping::RefID::operator&lt;</definition>
        <argsstring>(const RefID &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="364" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1a4a4237a4808d5f1bbd7266cc847e4952" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::DistributionMapping::RefID::operator==</definition>
        <argsstring>(const RefID &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="365" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="365" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1ab120307e57dd47cc9d01ca636bf1f0df" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::DistributionMapping::RefID::operator!=</definition>
        <argsstring>(const RefID &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="366" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1a8866859d71db556f069c2a15af15afa3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1DistributionMapping_1_1Ref" kindref="compound">Ref</ref> *</type>
        <definition>const Ref* amrex::DistributionMapping::RefID::dataPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="367" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1a614a6f4d10ea61b0dc126aa932d1ab27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::DistributionMapping::RefID::PrintPtr</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>PrintPtr</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="368" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="368" bodyend="368"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1DistributionMapping_1_1RefID_1a27efe3d5f7340241a0b4d2e2df7814b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const RefID &amp;id)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="369" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp" bodystart="1981" bodyend="1985"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>T</label>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; bool &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" line="361" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="361" bodyend="372"/>
    <listofallmembers>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a83d7d3288a3b51ffca12886346794042" prot="private" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>data</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a8866859d71db556f069c2a15af15afa3" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1ab120307e57dd47cc9d01ca636bf1f0df" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1acf88511a112b6bcc2cba29a585f5ac13" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator&lt;</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a27efe3d5f7340241a0b4d2e2df7814b1" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator&lt;&lt;</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a4a4237a4808d5f1bbd7266cc847e4952" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator==</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a614a6f4d10ea61b0dc126aa932d1ab27" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>PrintPtr</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a00f58999a2331cc59b9cf916b76cbc4d" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>RefID</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1af498ab4c22436f6e5e6e530392dc74c8" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>RefID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
