<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1ErrorRec_1_1ErrorFunc" kind="class" language="C++" prot="public">
    <compoundname>amrex::ErrorRec::ErrorFunc</compoundname>
    <includes refid="AMReX__ErrorList_8H" local="no">AMReX_ErrorList.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a696ccaf269d8a90f242321b54dd2d4d0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1aac98769d649c4292b78b3df51eae68ec" kindref="member">ErrorFuncDefault</ref></type>
        <definition>ErrorFuncDefault amrex::ErrorRec::ErrorFunc::m_func</definition>
        <argsstring></argsstring>
        <name>m_func</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="219" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a598f453d141e3c4a494e3e66d0f6aa37" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ac3ef56858a7952a309061d5ddef6f86b" kindref="member">ErrorFunc3DDefault</ref></type>
        <definition>ErrorFunc3DDefault amrex::ErrorRec::ErrorFunc::m_func3D</definition>
        <argsstring></argsstring>
        <name>m_func3D</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="220" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a95fde6ed4cbd0d479c01ab85c85b05c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorFunc::ErrorFunc</definition>
        <argsstring>()</argsstring>
        <name>ErrorFunc</name>
        <briefdescription>
<para>Bogus constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="122" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a3f792e96b23993415bd7d9bba649aa31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorFunc::ErrorFunc</definition>
        <argsstring>(ErrorFuncDefault inFunc)</argsstring>
        <name>ErrorFunc</name>
        <param>
          <type><ref refid="namespaceamrex_1aac98769d649c4292b78b3df51eae68ec" kindref="member">ErrorFuncDefault</ref></type>
          <declname>inFunc</declname>
        </param>
        <briefdescription>
<para>A Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inFunc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="130" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a3f1699d51a9cf12c7d8e928687db32cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorFunc::ErrorFunc</definition>
        <argsstring>(ErrorFunc3DDefault inFunc)</argsstring>
        <name>ErrorFunc</name>
        <param>
          <type><ref refid="namespaceamrex_1ac3ef56858a7952a309061d5ddef6f86b" kindref="member">ErrorFunc3DDefault</ref></type>
          <declname>inFunc</declname>
        </param>
        <briefdescription>
<para>A Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inFunc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="138" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a13339314e8d87bdcbc26fbc4d74c270a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> *</type>
        <definition>ErrorRec::ErrorFunc * amrex::ErrorRec::ErrorFunc::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
<para>Return a ptr to a clone of this object. It is the responsibility of the caller to delete the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="144" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1af70f30880c5c75a565485bc4f588ac90" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual amrex::ErrorRec::ErrorFunc::~ErrorFunc</definition>
        <argsstring>()=default</argsstring>
        <name>~ErrorFunc</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="149" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a53f51625afac95ad21c2b44edf7fef76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorFunc::ErrorFunc</definition>
        <argsstring>(ErrorFunc const &amp;)=default</argsstring>
        <name>ErrorFunc</name>
        <param>
          <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="151" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a0038d07e8efa6df3c696f47cc8ae5d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorFunc::ErrorFunc</definition>
        <argsstring>(ErrorFunc &amp;&amp;)=delete</argsstring>
        <name>ErrorFunc</name>
        <param>
          <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="152" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1aa59001ba1d22901660c6b11236600175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> &amp;</type>
        <definition>ErrorFunc&amp; amrex::ErrorRec::ErrorFunc::operator=</definition>
        <argsstring>(ErrorFunc const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="153" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1adf129595f3f9954c26bf412aa0089ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> &amp;</type>
        <definition>ErrorFunc&amp; amrex::ErrorRec::ErrorFunc::operator=</definition>
        <argsstring>(ErrorFunc &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="154" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1a6248c805a2c4965a0db817e5a302f701" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::ErrorRec::ErrorFunc::operator()</definition>
        <argsstring>(int *tag, AMREX_ARLIM_P(tlo), AMREX_ARLIM_P(thi), const int *tagval, const int *clearval, Real *data, AMREX_ARLIM_P(data_lo), AMREX_ARLIM_P(data_hi), const int *lo, const int *hi, const int *nvar, const int *domain_lo, const int *domain_hi, const Real *dx, const Real *xlo, const Real *prob_lo, const Real *time, const int *level) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ArrayLim_8H_1af53c6334de4f960ca760f7ea802e1e98" kindref="member">AMREX_ARLIM_P</ref>(tlo)</type>
        </param>
        <param>
          <type><ref refid="AMReX__ArrayLim_8H_1af53c6334de4f960ca760f7ea802e1e98" kindref="member">AMREX_ARLIM_P</ref>(thi)</type>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>tagval</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>clearval</declname>
        </param>
        <param>
          <type>Real *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ArrayLim_8H_1af53c6334de4f960ca760f7ea802e1e98" kindref="member">AMREX_ARLIM_P</ref>(data_lo)</type>
        </param>
        <param>
          <type><ref refid="AMReX__ArrayLim_8H_1af53c6334de4f960ca760f7ea802e1e98" kindref="member">AMREX_ARLIM_P</ref>(data_hi)</type>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>nvar</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>domain_lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>domain_hi</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>xlo</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>prob_lo</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Tag cells using &quot;regular&quot; function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagval</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clearval</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_hi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nvar</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain_lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain_hi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xlo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prob_lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="178" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1_1ErrorFunc_1ae9e899a6e621a194470e4c30fdb2810b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::ErrorRec::ErrorFunc::operator()</definition>
        <argsstring>(int *tag, const int *tlo, const int *thi, const int *tagval, const int *clearval, Real *data, const int *dlo, const int *dhi, const int *lo, const int *hi, const int *nvar, const int *domain_lo, const int *domain_hi, const Real *dx, const Real *xlo, const Real *prob_lo, const Real *time, const int *level) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>tlo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>thi</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>tagval</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>clearval</declname>
        </param>
        <param>
          <type>Real *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>dlo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>dhi</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>nvar</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>domain_lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>domain_hi</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>xlo</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>prob_lo</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Tag cells using dimension-agnostic &quot;regular&quot; function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagval</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clearval</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_hi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nvar</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain_lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain_hi</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xlo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prob_lo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="209" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="115" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="116" bodyend="221"/>
    <listofallmembers>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a13339314e8d87bdcbc26fbc4d74c270a" prot="public" virt="virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>clone</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a95fde6ed4cbd0d479c01ab85c85b05c7" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>ErrorFunc</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a3f792e96b23993415bd7d9bba649aa31" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>ErrorFunc</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a3f1699d51a9cf12c7d8e928687db32cb" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>ErrorFunc</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a53f51625afac95ad21c2b44edf7fef76" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>ErrorFunc</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a0038d07e8efa6df3c696f47cc8ae5d09" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>ErrorFunc</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a696ccaf269d8a90f242321b54dd2d4d0" prot="protected" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>m_func</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a598f453d141e3c4a494e3e66d0f6aa37" prot="protected" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>m_func3D</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1a6248c805a2c4965a0db817e5a302f701" prot="public" virt="virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1ae9e899a6e621a194470e4c30fdb2810b" prot="public" virt="virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1aa59001ba1d22901660c6b11236600175" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1adf129595f3f9954c26bf412aa0089ec7" prot="public" virt="non-virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ErrorRec_1_1ErrorFunc_1af70f30880c5c75a565485bc4f588ac90" prot="public" virt="virtual"><scope>amrex::ErrorRec::ErrorFunc</scope><name>~ErrorFunc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
