<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1FabArrayCopyDescriptor" kind="class" language="C++" prot="public">
    <compoundname>amrex::FabArrayCopyDescriptor</compoundname>
    <includes refid="AMReX__FACopyDescriptor_8H" local="no">AMReX_FACopyDescriptor.H</includes>
    <templateparamlist>
      <param>
        <type>class FAB</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classamrex_1_1FabArrayCopyDescriptor_1ae36897cf35128c6ce6dc895169977b36" prot="private" static="no">
        <type>std::multimap&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="structamrex_1_1FabCopyDescriptor" kindref="compound">FabCopyDescriptor</ref>&lt; FAB &gt; * &gt;</type>
        <definition>using amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FCDMap =  std::multimap&lt;int,FabCopyDescriptor&lt;FAB&gt;*&gt;</definition>
        <argsstring></argsstring>
        <name>FCDMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="110" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1FabArrayCopyDescriptor_1adfc178b4cdb7043a1bb7aa04d2227e70" prot="private" static="no">
        <type>typename FCDMap::value_type</type>
        <definition>using amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FCDMapValueType =  typename FCDMap::value_type</definition>
        <argsstring></argsstring>
        <name>FCDMapValueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="112" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1FabArrayCopyDescriptor_1adb5c92352f55098956990fb48c94f1be" prot="private" static="no">
        <type>typename FCDMap::iterator</type>
        <definition>using amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FCDMapIter =  typename FCDMap::iterator</definition>
        <argsstring></argsstring>
        <name>FCDMapIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="113" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1FabArrayCopyDescriptor_1a42d2f4f819cd8620d0b8d48e9e04bf68" prot="private" static="no">
        <type>typename FCDMap::const_iterator</type>
        <definition>using amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FCDMapConstIter =  typename FCDMap::const_iterator</definition>
        <argsstring></argsstring>
        <name>FCDMapConstIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="114" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1FabArrayCopyDescriptor_1ac80112a4449d49139f4b5ac75d76b855" prot="private" static="no">
        <type>std::vector&lt; <ref refid="structamrex_1_1FabArrayBase_1_1FabComTag" kindref="compound">FabArrayBase::FabComTag</ref> &gt;</type>
        <definition>using amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FabComTagContainer =  std::vector&lt;FabArrayBase::FabComTag&gt;</definition>
        <argsstring></argsstring>
        <name>FabComTagContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Some useful typedefs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="190" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1FabArrayCopyDescriptor_1ae8514740cee3a9ec0f8a41701b6bee22" prot="private" static="no">
        <type>std::vector&lt; FabComTagContainer::const_iterator &gt;</type>
        <definition>using amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FabComTagIterContainer =  std::vector&lt;FabComTagContainer::const_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>FabComTagIterContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="192" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FabArrayCopyDescriptor_1a1764312fbade7558351c245b234605e2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; * &gt;</type>
        <definition>std::vector&lt;FabArray&lt;FAB&gt;*&gt; amrex::FabArrayCopyDescriptor&lt; FAB &gt;::fabArrays</definition>
        <argsstring></argsstring>
        <name>fabArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="196" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FabArrayCopyDescriptor_1ae628e55c37e496f7f857be3e3a4e85a1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classamrex_1_1FabArrayCopyDescriptor_1ae36897cf35128c6ce6dc895169977b36" kindref="member">FCDMap</ref> &gt;</type>
        <definition>std::vector&lt;FCDMap&gt; amrex::FabArrayCopyDescriptor&lt; FAB &gt;::fabCopyDescList</definition>
        <argsstring></argsstring>
        <name>fabCopyDescList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="197" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FabArrayCopyDescriptor_1a8159d923682cc455e9d626ec9d6031bf" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArrayCopyDescriptor_1ac80112a4449d49139f4b5ac75d76b855" kindref="member">FabComTagContainer</ref></type>
        <definition>FabComTagContainer amrex::FabArrayCopyDescriptor&lt; FAB &gt;::fabComTagList</definition>
        <argsstring></argsstring>
        <name>fabComTagList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="198" column="33" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FabArrayCopyDescriptor_1a57a30ba94f1d8f7e58eb686a5596e813" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FabArrayCopyDescriptor&lt; FAB &gt;::nextFillBoxId</definition>
        <argsstring></argsstring>
        <name>nextFillBoxId</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="199" column="33" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FabArrayCopyDescriptor_1a2d2eb7b8c3be20332e3836e80899f402" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FabArrayCopyDescriptor&lt; FAB &gt;::dataAvailable</definition>
        <argsstring></argsstring>
        <name>dataAvailable</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="200" column="33" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a5cbc1c7ed9921b2dd4dd5b14afafc2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FabArrayCopyDescriptor</definition>
        <argsstring>()=default</argsstring>
        <name>FabArrayCopyDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="118" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1aaa1a22a34f3f8034c6b4f85534e9331c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayCopyDescriptor&lt; FAB &gt;::~FabArrayCopyDescriptor</definition>
        <argsstring>()</argsstring>
        <name>~FabArrayCopyDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="120" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a2d4f2233adf01016002ca40538af6351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FabArrayCopyDescriptor</definition>
        <argsstring>(const FabArrayCopyDescriptor&lt; FAB &gt; &amp;)=delete</argsstring>
        <name>FabArrayCopyDescriptor</name>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayCopyDescriptor" kindref="compound">FabArrayCopyDescriptor</ref>&lt; FAB &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="122" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a3971659d71b3606119e2661d4a702a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FabArrayCopyDescriptor</definition>
        <argsstring>(FabArrayCopyDescriptor&lt; FAB &gt; &amp;&amp;)=delete</argsstring>
        <name>FabArrayCopyDescriptor</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayCopyDescriptor" kindref="compound">FabArrayCopyDescriptor</ref>&lt; FAB &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a9b2377f94bb99edec4a19623c51c545a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FabArrayCopyDescriptor" kindref="compound">FabArrayCopyDescriptor</ref>&lt; FAB &gt; &amp;</type>
        <definition>FabArrayCopyDescriptor&lt;FAB&gt;&amp; amrex::FabArrayCopyDescriptor&lt; FAB &gt;::operator=</definition>
        <argsstring>(const FabArrayCopyDescriptor&lt; FAB &gt; &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayCopyDescriptor" kindref="compound">FabArrayCopyDescriptor</ref>&lt; FAB &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="124" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a185b017430da5b0f87fb2941bf40d166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FabArrayCopyDescriptor" kindref="compound">FabArrayCopyDescriptor</ref>&lt; FAB &gt; &amp;</type>
        <definition>FabArrayCopyDescriptor&lt;FAB&gt;&amp; amrex::FabArrayCopyDescriptor&lt; FAB &gt;::operator=</definition>
        <argsstring>(FabArrayCopyDescriptor&lt; FAB &gt; &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayCopyDescriptor" kindref="compound">FabArrayCopyDescriptor</ref>&lt; FAB &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="125" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a827e469bbb8904deeca9a980b1340323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
        <definition>FabArrayId amrex::FabArrayCopyDescriptor&lt; FAB &gt;::RegisterFabArray</definition>
        <argsstring>(FabArray&lt; FAB &gt; *fabarray)</argsstring>
        <name>RegisterFabArray</name>
        <param>
          <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; *</type>
          <declname>fabarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="127" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="205" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a717aa6067b57f1b49967fcbe2d99e3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref></type>
        <definition>FillBoxId amrex::FabArrayCopyDescriptor&lt; FAB &gt;::AddBox</definition>
        <argsstring>(FabArrayId fabarrayid, const Box &amp;destFabBox, BoxList *unfilledBoxes)</argsstring>
        <name>AddBox</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
          <declname>fabarrayid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>destFabBox</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> *</type>
          <declname>unfilledBoxes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="129" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="392" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1aa4cf9c123c9f38db52bfb98fc7d9154b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref></type>
        <definition>FillBoxId amrex::FabArrayCopyDescriptor&lt; FAB &gt;::AddBox</definition>
        <argsstring>(FabArrayId fabarrayid, const Box &amp;destFabBox, BoxList *unfilledBoxes, int srccomp, int destcomp, int numcomp)</argsstring>
        <name>AddBox</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
          <declname>fabarrayid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>destFabBox</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> *</type>
          <declname>unfilledBoxes</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="133" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="313" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1ace38322e347f0be322920307e8a31a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref></type>
        <definition>FillBoxId amrex::FabArrayCopyDescriptor&lt; FAB &gt;::AddBox</definition>
        <argsstring>(FabArrayId fabarrayid, const Box &amp;destFabBox, BoxList *unfilledBoxes, int fabarrayindex, int srccomp, int destcomp, int numcomp, bool bUseValidBox=true)</argsstring>
        <name>AddBox</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
          <declname>fabarrayid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>destFabBox</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> *</type>
          <declname>unfilledBoxes</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fabarrayindex</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bUseValidBox</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a box but only from <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>[fabarrayindex]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="142" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="355" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a6702b3562050e933b50c54d55cfa4caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayCopyDescriptor&lt; FAB &gt;::CollectData</definition>
        <argsstring>()</argsstring>
        <name>CollectData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="151" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="435" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a3c4cf0ea9fb0abb0e0da7f20203031eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FillFab</definition>
        <argsstring>(FabArrayId faid, const FillBoxId &amp;fillboxid, FAB &amp;destFab)</argsstring>
        <name>FillFab</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
          <declname>faid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref> &amp;</type>
          <declname>fillboxid</declname>
        </param>
        <param>
          <type>FAB &amp;</type>
          <declname>destFab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="153" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="776" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1ae2fdca1e0b247e1a1c1f2b2c821c712f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayCopyDescriptor&lt; FAB &gt;::FillFab</definition>
        <argsstring>(FabArrayId faid, const FillBoxId &amp;fillboxid, FAB &amp;destFab, const Box &amp;destBox)</argsstring>
        <name>FillFab</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
          <declname>faid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref> &amp;</type>
          <declname>fillboxid</declname>
        </param>
        <param>
          <type>FAB &amp;</type>
          <declname>destFab</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>destBox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="157" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="802" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a088b72ffcf3394650148ea06f4cf87fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayCopyDescriptor&lt; FAB &gt;::PrintStats</definition>
        <argsstring>() const</argsstring>
        <name>PrintStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="162" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="831" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1aae1f0cface9be0243b35ef7b2fd98653" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayCopyDescriptor&lt; FAB &gt;::DataAvailable</definition>
        <argsstring>() const</argsstring>
        <name>DataAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="164" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a3c2f6e2dcbd913aa5ec7f4a9b0a037af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayCopyDescriptor&lt; FAB &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="166" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="413" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a962f0335521ec14c88c490fd2a434e2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FabArrayCopyDescriptor&lt; FAB &gt;::CurrentNFabArrays</definition>
        <argsstring>() const</argsstring>
        <name>CurrentNFabArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="168" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a3a7f7c535ed810165b197ab926d2e791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FabArrayCopyDescriptor&lt; FAB &gt;::nFabComTags</definition>
        <argsstring>() const</argsstring>
        <name>nFabComTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="170" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1a21d6de27c494e1f4b725020187ef6fe5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FabArrayCopyDescriptor&lt; FAB &gt;::nFabCopyDescs</definition>
        <argsstring>() const</argsstring>
        <name>nFabCopyDescs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="172" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="172" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FabArrayCopyDescriptor_1acb27c083406645181b403181cd3099d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FabArrayCopyDescriptor&lt; FAB &gt;::AddBoxDoIt</definition>
        <argsstring>(FabArrayId fabarrayid, const Box &amp;destFabBox, BoxList *returnedUnfilledBoxes, int faindex, int srccomp, int destcomp, int numcomp, bool bUseValidBox, BoxDomain &amp;unfilledBoxDomain)</argsstring>
        <name>AddBoxDoIt</name>
        <param>
          <type><ref refid="classamrex_1_1FabArrayId" kindref="compound">FabArrayId</ref></type>
          <declname>fabarrayid</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>destFabBox</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> *</type>
          <declname>returnedUnfilledBoxes</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>faindex</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bUseValidBox</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxDomain" kindref="compound">BoxDomain</ref> &amp;</type>
          <declname>unfilledBoxDomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function for <ref refid="classamrex_1_1FabArrayCopyDescriptor_1a717aa6067b57f1b49967fcbe2d99e3c9" kindref="member">AddBox()</ref> routines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="178" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="220" bodyend="309"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class orchestrates filling a destination fab of size destFabBox from fabarray on the local processor (myProc). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>K</label>
      </node>
      <node id="6">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="6" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>T</label>
      </node>
      <node id="2">
        <label>std::vector&lt; amrex::FabArray&lt; FAB &gt; * &gt;</label>
      </node>
      <node id="3">
        <label>std::vector&lt; FabArrayBase::FabComTag &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FabArrayCopyDescriptor&lt; FAB &gt;</label>
        <link refid="classamrex_1_1FabArrayCopyDescriptor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fabArrays</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fabComTagList</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>fabCopyDescList</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::FabArrayBase::FabComTag</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabComTag"/>
        <childnode refid="5" relation="usage">
          <edgelabel>box</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="6" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::vector&lt; FCDMap &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" line="108" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H" bodystart="109" bodyend="201"/>
    <listofallmembers>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a717aa6067b57f1b49967fcbe2d99e3c9" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>AddBox</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1aa4cf9c123c9f38db52bfb98fc7d9154b" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>AddBox</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1ace38322e347f0be322920307e8a31a22" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>AddBox</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1acb27c083406645181b403181cd3099d2" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>AddBoxDoIt</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a3c2f6e2dcbd913aa5ec7f4a9b0a037af" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>clear</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a6702b3562050e933b50c54d55cfa4caa" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>CollectData</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a962f0335521ec14c88c490fd2a434e2e" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>CurrentNFabArrays</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1aae1f0cface9be0243b35ef7b2fd98653" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>DataAvailable</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a2d2eb7b8c3be20332e3836e80899f402" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>dataAvailable</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a5cbc1c7ed9921b2dd4dd5b14afafc2d1" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FabArrayCopyDescriptor</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a2d4f2233adf01016002ca40538af6351" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FabArrayCopyDescriptor</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a3971659d71b3606119e2661d4a702a52" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FabArrayCopyDescriptor</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a1764312fbade7558351c245b234605e2" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>fabArrays</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1ac80112a4449d49139f4b5ac75d76b855" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FabComTagContainer</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1ae8514740cee3a9ec0f8a41701b6bee22" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FabComTagIterContainer</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a8159d923682cc455e9d626ec9d6031bf" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>fabComTagList</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1ae628e55c37e496f7f857be3e3a4e85a1" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>fabCopyDescList</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1ae36897cf35128c6ce6dc895169977b36" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FCDMap</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a42d2f4f819cd8620d0b8d48e9e04bf68" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FCDMapConstIter</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1adb5c92352f55098956990fb48c94f1be" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FCDMapIter</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1adfc178b4cdb7043a1bb7aa04d2227e70" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FCDMapValueType</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a3c4cf0ea9fb0abb0e0da7f20203031eb" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FillFab</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1ae2fdca1e0b247e1a1c1f2b2c821c712f" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>FillFab</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a57a30ba94f1d8f7e58eb686a5596e813" prot="private" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>nextFillBoxId</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a3a7f7c535ed810165b197ab926d2e791" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>nFabComTags</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a21d6de27c494e1f4b725020187ef6fe5" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>nFabCopyDescs</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a9b2377f94bb99edec4a19623c51c545a" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a185b017430da5b0f87fb2941bf40d166" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a088b72ffcf3394650148ea06f4cf87fa" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>PrintStats</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1a827e469bbb8904deeca9a980b1340323" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>RegisterFabArray</name></member>
      <member refid="classamrex_1_1FabArrayCopyDescriptor_1aaa1a22a34f3f8034c6b4f85534e9331c" prot="public" virt="non-virtual"><scope>amrex::FabArrayCopyDescriptor</scope><name>~FabArrayCopyDescriptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
