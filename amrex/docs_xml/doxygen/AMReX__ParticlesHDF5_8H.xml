<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="AMReX__ParticlesHDF5_8H" kind="file" language="C++">
    <compoundname>AMReX_ParticlesHDF5.H</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1af2d7896804f083e0e238894beed23c39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteParticleRealDataHDF5</definition>
        <argsstring>(void *data, size_t size, hid_t fid) const</argsstring>
        <name>WriteParticleRealDataHDF5</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>hid_t</type>
          <declname>fid</declname>
        </param>
        <briefdescription>
<para>Write a contiguous chunk of real particle data to an HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the start of the buffer to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The HDF5 file ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="12" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="12" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a69e0e55cc21aca6307c98626f3c5af6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadParticleRealDataHDF5</definition>
        <argsstring>(void *data, size_t size, hid_t fid)</argsstring>
        <name>ReadParticleRealDataHDF5</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>hid_t</type>
          <declname>fid</declname>
        </param>
        <briefdescription>
<para>Read a contiguous chunk of real particle data from HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the start of the buffer into which to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The istream from which to read the data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="21" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="21" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a23f9ebeb015ab566a0ce5a5275ed8732" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CheckpointHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const std::string &amp;compression=&quot;None@0&quot;) const</argsstring>
        <name>CheckpointHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
          <defval>&quot;None@0&quot;</defval>
        </param>
        <briefdescription>
<para>Writes a particle checkpoint to file, suitable for restarting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The HDF5 file ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compression</parametername>
</parameternamelist>
<parameterdescription>
<para>compression parameter (i.e. &quot;ZFP_ACCURACY@0.001&quot;, &quot;SZ@sz.config&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="31" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="31" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a01483f56b666d5a9ecccb69bdb933907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CheckpointHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, bool is_checkpoint, const Vector&lt; std::string &gt; &amp;real_comp_names=Vector&lt; std::string &gt;(), const Vector&lt; std::string &gt; &amp;int_comp_names=Vector&lt; std::string &gt;(), const std::string &amp;compression=&quot;None@0&quot;) const</argsstring>
        <name>CheckpointHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_checkpoint</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
          <defval>Vector&lt; std::string &gt;()</defval>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>int_comp_names</declname>
          <defval>Vector&lt; std::string &gt;()</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
          <defval>&quot;None@0&quot;</defval>
        </param>
        <briefdescription>
<para>Writes a particle checkpoint to file, suitable for restarting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="37" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="37" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1ae0852c35ea09bae39a25749b73aa881d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteHDF5ParticleData</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; int &gt; &amp;write_real_comp, const Vector&lt; int &gt; &amp;write_int_comp, const Vector&lt; std::string &gt; &amp;real_comp_names, const Vector&lt; std::string &gt; &amp;int_comp_names, const std::string &amp;compression, F &amp;&amp;f, bool is_checkpoint=false) const</argsstring>
        <name>WriteHDF5ParticleData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_real_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_int_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>int_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_checkpoint</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes particle data to disk in the HDF5 format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>function type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_real_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, whether or not we include that component in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_int_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, whether or not we include that component in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>callable that returns whether a given particle should be written or not </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_checkpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the particle id and cpu are included in the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compression</parametername>
</parameternamelist>
<parameterdescription>
<para>compression parameter (i.e. &quot;ZFP_ACCURACY@0.001&quot;, &quot;SZ@sz.config&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="58" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="58" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a538fea67623e9ea45e61df3b3293fb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CheckpointPreHDF5</definition>
        <argsstring>()</argsstring>
        <name>CheckpointPreHDF5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="68" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="68" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1ae596f242e9a476a0fed5359ac59d0111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CheckpointPostHDF5</definition>
        <argsstring>()</argsstring>
        <name>CheckpointPostHDF5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="70" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="70" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1ad215e5a3a39493b1e5600d87f0188b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RestartHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;file)</argsstring>
        <name>RestartHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Restart from checkpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="78" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="78" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a6318dda435dce89a0ef4a261cef6681d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RestartHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;file, bool is_checkpoint)</argsstring>
        <name>RestartHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_checkpoint</declname>
        </param>
        <briefdescription>
<para>Older version, for backwards compatibility. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_checkpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the particle id and cpu are included in the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="87" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="87" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const std::string &amp;compression) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile writes all components and assigns component names. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="95" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="95" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1afb19e6a2b78618c69515d3278bd25f6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>typename std::enable_if&lt;!std::is_same&lt; F, Vector&lt; std::string &gt;&gt;::value &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const std::string &amp;compression, F &amp;&amp;f) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile writes all components and assigns component names. </para>
        </briefdescription>
        <detaileddescription>
<para>This version also lets you pass in a functor to toggle whether each particle gets output.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>function type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>callable that returns whether or not to write each particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="109" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="109" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1aa26fae378d5652aa2a4e2c55f85a4bda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; std::string &gt; &amp;real_comp_names, const Vector&lt; std::string &gt; &amp;int_comp_names, const std::string &amp;compression) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>int_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile writes all components and allows the user to specify the names of the components. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="119" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="119" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a735b3ba3a2752fdeb29ea0a525d6a225" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; std::string &gt; &amp;real_comp_names, const Vector&lt; std::string &gt; &amp;int_comp_names, const std::string &amp;compression, F &amp;&amp;f) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>int_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile writes all components and allows the user to specify the names of the components. </para>
        </briefdescription>
        <detaileddescription>
<para>This version also lets you pass in a functor to toggle whether each particle gets output.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>function type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>callable that returns whether or not to write each particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="138" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="138" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1aa34c49ed39d7e6b75add4c4b13582646" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; std::string &gt; &amp;real_comp_names, const std::string &amp;compression) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile writes all components and allows the user to specify the names of the components. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="151" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="151" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1abc7bdab9df4e855ff8994599de50dd7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>typename std::enable_if&lt;!std::is_same&lt; F, Vector&lt; std::string &gt;&gt;::value &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; std::string &gt; &amp;real_comp_names, const std::string &amp;compression, F &amp;&amp;f) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile writes all components and allows the user to specify the names of the components. </para>
        </briefdescription>
        <detaileddescription>
<para>This version also lets you pass in a functor to toggle whether each particle gets output.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>function type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>callable that returns whether or not to write each particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="169" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="169" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a0a4fe1ae086d19e246f40271215a3c0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; int &gt; &amp;write_real_comp, const Vector&lt; int &gt; &amp;write_int_comp, const std::string &amp;compression) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_real_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_int_comp</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile assigns component names, but allows the user to pass in a vector of ints that toggle on / off the writing of specific components. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_real_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_int_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="182" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="182" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1ae4527823a3c82cbf0c68d66eb177094f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; int &gt; &amp;write_real_comp, const Vector&lt; int &gt; &amp;write_int_comp, const std::string &amp;compression, F &amp;&amp;f) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_real_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_int_comp</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>This version of WritePlotFile assigns component names, but allows the user to pass in a vector of ints that toggle on / off the writing of specific components. </para>
        </briefdescription>
        <detaileddescription>
<para>This version also lets you pass in a functor to toggle whether each particle gets output.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>function type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_real_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_int_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>callable that returns whether or not to write each particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="203" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="203" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a974912eb4bda1faa2215eb647cc98e07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; int &gt; &amp;write_real_comp, const Vector&lt; int &gt; &amp;write_int_comp, const Vector&lt; std::string &gt; &amp;real_comp_names, const Vector&lt; std::string &gt; &amp;int_comp_names, const std::string &amp;compression) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_real_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_int_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>int_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <briefdescription>
<para>This is the most general version of WritePlotFile, which takes component names and flags for whether to write each variable as components. Note that the user should pass in vectors containing names of all the components, whether they are written or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_real_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_int_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="222" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="222" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1aed5649bbee4f4f57a92ddfa4c416bcf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WritePlotFileHDF5</definition>
        <argsstring>(const std::string &amp;dir, const std::string &amp;name, const Vector&lt; int &gt; &amp;write_real_comp, const Vector&lt; int &gt; &amp;write_int_comp, const Vector&lt; std::string &gt; &amp;real_comp_names, const Vector&lt; std::string &gt; &amp;int_comp_names, const std::string &amp;compression, F &amp;&amp;f) const</argsstring>
        <name>WritePlotFileHDF5</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_real_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_int_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>real_comp_names</declname>
        </param>
        <param>
          <type>const Vector&lt; std::string &gt; &amp;</type>
          <declname>int_comp_names</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>This is the most general version of WritePlotFile, which takes component names and flags for whether to write each variable as components. Note that the user should pass in vectors containing names of all the components, whether they are written or not. </para>
        </briefdescription>
        <detaileddescription>
<para>This version also lets you pass in a functor to toggle whether each particle gets output.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>function type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory into which to write (i.e. &quot;plt00000&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the sub-directory for this particle type (i.e. &quot;Tracer&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_real_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_int_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, whether to include that comp in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>real_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each real component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_comp_names</parametername>
</parameternamelist>
<parameterdescription>
<para>for each integer component, a name to label the data with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>callable that returns whether or not to write each particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="249" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="249" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a2e6bcd377495fdf5589eebc60e2f20ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFilePreHDF5</definition>
        <argsstring>()</argsstring>
        <name>WritePlotFilePreHDF5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="258" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="258" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a62123365ed5b3ff068ec4dd495c137f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePlotFilePostHDF5</definition>
        <argsstring>()</argsstring>
        <name>WritePlotFilePostHDF5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="260" column="10" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="260" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1aac6d9e3eca44802c27e7f0f766379f36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteParticlesHDF5</definition>
        <argsstring>(int level, hid_t grp, Vector&lt; int &gt; &amp;which, Vector&lt; int &gt; &amp;count, Vector&lt; Long &gt; &amp;where, const Vector&lt; int &gt; &amp;write_real_comp, const Vector&lt; int &gt; &amp;write_int_comp, const std::string &amp;compression, const Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, IntVector &gt;&gt; &amp;particle_io_flags, bool is_checkpoint) const</argsstring>
        <name>WriteParticlesHDF5</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>hid_t</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Vector&lt; int &gt; &amp;</type>
          <declname>which</declname>
        </param>
        <param>
          <type>Vector&lt; int &gt; &amp;</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Vector&lt; Long &gt; &amp;</type>
          <declname>where</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_real_comp</declname>
        </param>
        <param>
          <type>const Vector&lt; int &gt; &amp;</type>
          <declname>write_int_comp</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression</declname>
        </param>
        <param>
          <type>const Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, IntVector &gt;&gt; &amp;</type>
          <declname>particle_io_flags</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_checkpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="263" column="5" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="263" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__ParticlesHDF5_8H_1a8c7ba0d4cc37b8af14a09f1b3be39242" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RTYPE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ReadParticlesHDF5</definition>
        <argsstring>(hsize_t offset, hsize_t count, int grd, int lev, hid_t int_dset, hid_t real_dset, int finest_level_in_file, bool convert_ids)</argsstring>
        <name>ReadParticlesHDF5</name>
        <param>
          <type>hsize_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>hsize_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>grd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <param>
          <type>hid_t</type>
          <declname>int_dset</declname>
        </param>
        <param>
          <type>hid_t</type>
          <declname>real_dset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>finest_level_in_file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>convert_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" line="272" column="6" declfile="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H" declline="272" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLES_HDF5_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLES_HDF5_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="AMReX__ParticlesHDF5_8H_1af2d7896804f083e0e238894beed23c39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1af2d7896804f083e0e238894beed23c39" kindref="member">WriteParticleRealDataHDF5</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>,<sp/>hid_t<sp/>fid)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="AMReX__ParticlesHDF5_8H_1a69e0e55cc21aca6307c98626f3c5af6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a69e0e55cc21aca6307c98626f3c5af6b" kindref="member">ReadParticleRealDataHDF5</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>,<sp/>hid_t<sp/>fid);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="AMReX__ParticlesHDF5_8H_1a23f9ebeb015ab566a0ce5a5275ed8732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a23f9ebeb015ab566a0ce5a5275ed8732" kindref="member">CheckpointHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None@0&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="AMReX__ParticlesHDF5_8H_1a01483f56b666d5a9ecccb69bdb933907" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a23f9ebeb015ab566a0ce5a5275ed8732" kindref="member">CheckpointHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_checkpoint,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names<sp/>=<sp/>Vector&lt;std::string&gt;(),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>int_comp_names<sp/>=<sp/>Vector&lt;std::string&gt;(),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None@0&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="58" refid="AMReX__ParticlesHDF5_8H_1ae0852c35ea09bae39a25749b73aa881d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1ae0852c35ea09bae39a25749b73aa881d" kindref="member">WriteHDF5ParticleData</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_real_comp,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_int_comp,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/><sp/>int_comp_names,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F&amp;&amp;<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1acc0c2cceab5a58cafa4ae6e68be50d24" kindref="member">f</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_checkpoint=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="AMReX__ParticlesHDF5_8H_1a538fea67623e9ea45e61df3b3293fb95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a538fea67623e9ea45e61df3b3293fb95" kindref="member">CheckpointPreHDF5</ref><sp/>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="AMReX__ParticlesHDF5_8H_1ae596f242e9a476a0fed5359ac59d0111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1ae596f242e9a476a0fed5359ac59d0111" kindref="member">CheckpointPostHDF5</ref><sp/>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="AMReX__ParticlesHDF5_8H_1ad215e5a3a39493b1e5600d87f0188b28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1ad215e5a3a39493b1e5600d87f0188b28" kindref="member">RestartHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="AMReX__ParticlesHDF5_8H_1a6318dda435dce89a0ef4a261cef6681d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1ad215e5a3a39493b1e5600d87f0188b28" kindref="member">RestartHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_checkpoint);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!std::is_same&lt;F,<sp/>Vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="109" refid="AMReX__ParticlesHDF5_8H_1afb19e6a2b78618c69515d3278bd25f6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,<sp/>F&amp;&amp;<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1acc0c2cceab5a58cafa4ae6e68be50d24" kindref="member">f</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="AMReX__ParticlesHDF5_8H_1aa26fae378d5652aa2a4e2c55f85a4bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/><sp/>int_comp_names,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="138" refid="AMReX__ParticlesHDF5_8H_1a735b3ba3a2752fdeb29ea0a525d6a225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/><sp/>int_comp_names,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,<sp/>F&amp;&amp;<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1acc0c2cceab5a58cafa4ae6e68be50d24" kindref="member">f</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="AMReX__ParticlesHDF5_8H_1aa34c49ed39d7e6b75add4c4b13582646" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!std::is_same&lt;F,<sp/>Vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="169" refid="AMReX__ParticlesHDF5_8H_1abc7bdab9df4e855ff8994599de50dd7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,<sp/>F&amp;&amp;<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1acc0c2cceab5a58cafa4ae6e68be50d24" kindref="member">f</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="AMReX__ParticlesHDF5_8H_1a0a4fe1ae086d19e246f40271215a3c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_real_comp,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_int_comp,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="203" refid="AMReX__ParticlesHDF5_8H_1ae4527823a3c82cbf0c68d66eb177094f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_real_comp,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_int_comp,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,<sp/>F&amp;&amp;<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1acc0c2cceab5a58cafa4ae6e68be50d24" kindref="member">f</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="AMReX__ParticlesHDF5_8H_1a974912eb4bda1faa2215eb647cc98e07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_real_comp,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_int_comp,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>int_comp_names,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="249" refid="AMReX__ParticlesHDF5_8H_1aed5649bbee4f4f57a92ddfa4c416bcf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a96116bf2f35b8cfe4962282557504f80" kindref="member">WritePlotFileHDF5</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_real_comp,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_int_comp,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/>real_comp_names,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::string&gt;&amp;<sp/><sp/>int_comp_names,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F&amp;&amp;<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1acc0c2cceab5a58cafa4ae6e68be50d24" kindref="member">f</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="AMReX__ParticlesHDF5_8H_1a2e6bcd377495fdf5589eebc60e2f20ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a2e6bcd377495fdf5589eebc60e2f20ad" kindref="member">WritePlotFilePreHDF5</ref><sp/>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="AMReX__ParticlesHDF5_8H_1a62123365ed5b3ff068ec4dd495c137f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a62123365ed5b3ff068ec4dd495c137f1" kindref="member">WritePlotFilePostHDF5</ref><sp/>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="AMReX__ParticlesHDF5_8H_1aac6d9e3eca44802c27e7f0f766379f36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ParticlesHDF5_8H_1aac6d9e3eca44802c27e7f0f766379f36" kindref="member">WriteParticlesHDF5</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>hid_t<sp/>grp,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;int&gt;&amp;<sp/>which,<sp/>Vector&lt;int&gt;&amp;<sp/>count,<sp/>Vector&lt;Long&gt;&amp;<sp/>where,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_real_comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;int&gt;&amp;<sp/>write_int_comp,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compression,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;std::map&lt;std::pair&lt;int,<sp/>int&gt;,IntVector&gt;&gt;&amp;<sp/>particle_io_flags,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_checkpoint)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RTYPE&gt;</highlight></codeline>
<codeline lineno="272" refid="AMReX__ParticlesHDF5_8H_1a8c7ba0d4cc37b8af14a09f1b3be39242" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__ParticlesHDF5_8H_1a8c7ba0d4cc37b8af14a09f1b3be39242" kindref="member">ReadParticlesHDF5</ref><sp/>(hsize_t<sp/>offset,<sp/>hsize_t<sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>hid_t<sp/>int_dset,<sp/>hid_t<sp/>real_dset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finest_level_in_file,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>convert_ids);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticlesHDF5.H"/>
  </compounddef>
</doxygen>
