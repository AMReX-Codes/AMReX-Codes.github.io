<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1ParmParse_1_1Frame" kind="class" language="C++" prot="public">
    <compoundname>amrex::ParmParse::Frame</compoundname>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ParmParse_1_1Frame_1a90653d1cfe6a0a170e03f3ee95b41a96" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref> *</type>
        <definition>ParmParse* amrex::ParmParse::Frame::m_pp</definition>
        <argsstring></argsstring>
        <name>m_pp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1120" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="1120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ParmParse_1_1Frame_1ac38675ae6a506924dba0181718e7c1da" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParmParse::Frame::m_np</definition>
        <argsstring></argsstring>
        <name>m_np</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1121" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="1121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a3bd98e00ac6bf8fb4670163a327f34e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::Frame::Frame</definition>
        <argsstring>(ParmParse &amp;pp, const std::string &amp;pfix)</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref> &amp;</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>pfix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1110" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="1138" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a1b690adb2a1e120cb892c3314dd1b9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::Frame::~Frame</definition>
        <argsstring>()</argsstring>
        <name>~Frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1111" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="1146" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1afc8dd457c4d4331a92200049a3f9f731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::Frame::Frame</definition>
        <argsstring>(Frame const &amp;)=default</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="classamrex_1_1ParmParse_1_1Frame" kindref="compound">Frame</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1112" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a4bfd8c151744bb505b43e0a292b00245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParmParse::Frame::Frame</definition>
        <argsstring>(Frame &amp;&amp;)=delete</argsstring>
        <name>Frame</name>
        <param>
          <type><ref refid="classamrex_1_1ParmParse_1_1Frame" kindref="compound">Frame</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1113" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a48da5a08c0a82f72d004f5075e8d2614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ParmParse_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
        <definition>Frame&amp; amrex::ParmParse::Frame::operator=</definition>
        <argsstring>(Frame const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1ParmParse_1_1Frame" kindref="compound">Frame</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1114" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a69b0caf6dd5e8cdddcb42e3e30620930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ParmParse_1_1Frame" kindref="compound">Frame</ref> &amp;</type>
        <definition>Frame&amp; amrex::ParmParse::Frame::operator=</definition>
        <argsstring>(Frame &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1ParmParse_1_1Frame" kindref="compound">Frame</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1115" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a2b5df366a9cc67f3ab6159ab5c924ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParmParse::Frame::push</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>push</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1116" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="1157" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1abae9fa2cf456b4c2074570274f252fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParmParse::Frame::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1117" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="1164" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ParmParse_1_1Frame_1a26a3b26872c977529917d0e647e9a30a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string amrex::ParmParse::Frame::getPrefix</definition>
        <argsstring>() const</argsstring>
        <name>getPrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1118" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp" bodystart="1172" bodyend="1175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>std::stack&lt; std::string &gt;</label>
      </node>
      <node id="2">
        <label>amrex::ParmParse</label>
        <link refid="classamrex_1_1ParmParse"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_table</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_pstack</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>FileKeyword</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::ParmParse::Frame</label>
        <link refid="classamrex_1_1ParmParse_1_1Frame"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_pp</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="7">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>std::list&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::string</label>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" line="1107" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H" bodystart="1108" bodyend="1122"/>
    <listofallmembers>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a3bd98e00ac6bf8fb4670163a327f34e2" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1afc8dd457c4d4331a92200049a3f9f731" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a4bfd8c151744bb505b43e0a292b00245" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>Frame</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a26a3b26872c977529917d0e647e9a30a" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>getPrefix</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1ac38675ae6a506924dba0181718e7c1da" prot="private" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>m_np</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a90653d1cfe6a0a170e03f3ee95b41a96" prot="private" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>m_pp</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a48da5a08c0a82f72d004f5075e8d2614" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a69b0caf6dd5e8cdddcb42e3e30620930" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1abae9fa2cf456b4c2074570274f252fe4" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>pop</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a2b5df366a9cc67f3ab6159ab5c924ec8" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>push</name></member>
      <member refid="classamrex_1_1ParmParse_1_1Frame_1a1b690adb2a1e120cb892c3314dd1b9df" prot="public" virt="non-virtual"><scope>amrex::ParmParse::Frame</scope><name>~Frame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
