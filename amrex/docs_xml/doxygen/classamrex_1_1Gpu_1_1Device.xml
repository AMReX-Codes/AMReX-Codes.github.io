<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Gpu_1_1Device" kind="class" language="C++" prot="public">
    <compoundname>amrex::Gpu::Device</compoundname>
    <includes refid="AMReX__GpuDevice_8H" local="no">AMReX_GpuDevice.H</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1Device_1adf89d2ef6829289ef4e4f9ea2bd6a648" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::Gpu::Device::device_id</definition>
        <argsstring></argsstring>
        <name>device_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="124" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1Device_1a725fb9c29db07764d1a95c03dedf3df5" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::Gpu::Device::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="125" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1aea19aa89a556ee88fe67f6067c0abacd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="29" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="50" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1a5bf574c7d8adff1fc0593e06d9007078" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="260" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1aabba82abbe1e452cf3b9e204e98952a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::setStreamIndex</definition>
        <argsstring>(const int idx) noexcept</argsstring>
        <name>setStreamIndex</name>
        <param>
          <type>const int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="369" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1aae61fa0d560ee3c25d7deca229a31f60" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::Gpu::Device::resetStreamIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>resetStreamIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1aa5bf7f476f4a8c0ed917932d2cbdf9a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::Gpu::Device::deviceId</definition>
        <argsstring>() noexcept</argsstring>
        <name>deviceId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="43" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1a5ccf8e9a40fdaa00878353c79867bd04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::synchronize</definition>
        <argsstring>() noexcept</argsstring>
        <name>synchronize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1a67c55a7d25eb5f5fdec62ffcc9c0dccf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::streamSynchronize</definition>
        <argsstring>() noexcept</argsstring>
        <name>streamSynchronize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="388" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1ae88f180144c332b3c64ce46584484b10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::mem_advise_set_preferred</definition>
        <argsstring>(void *p, const std::size_t sz, const int device)</argsstring>
        <name>mem_advise_set_preferred</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="90" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="594" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1aa2984b48d13a570d6987968741a04741" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::mem_advise_set_readonly</definition>
        <argsstring>(void *p, const std::size_t sz)</argsstring>
        <name>mem_advise_set_readonly</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="91" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="609" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1a92efa21af9b7ae2cb3ee5710922c8bac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::Gpu::Device::freeMemAvailable</definition>
        <argsstring>()</argsstring>
        <name>freeMemAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="110" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="859" bodyend="869"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1Device_1adccc576a72b545911c26ec7febfdd078" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::Device::initialize_gpu</definition>
        <argsstring>()</argsstring>
        <name>initialize_gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="122" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.cpp" bodystart="289" bodyend="360"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuDevice.H" bodystart="24" bodyend="140"/>
    <listofallmembers>
      <member refid="classamrex_1_1Gpu_1_1Device_1adf89d2ef6829289ef4e4f9ea2bd6a648" prot="private" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>device_id</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1aa5bf7f476f4a8c0ed917932d2cbdf9a4" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>deviceId</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1a5bf574c7d8adff1fc0593e06d9007078" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1a92efa21af9b7ae2cb3ee5710922c8bac" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>freeMemAvailable</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1aea19aa89a556ee88fe67f6067c0abacd" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1adccc576a72b545911c26ec7febfdd078" prot="private" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>initialize_gpu</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1ae88f180144c332b3c64ce46584484b10" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>mem_advise_set_preferred</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1aa2984b48d13a570d6987968741a04741" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>mem_advise_set_readonly</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1aae61fa0d560ee3c25d7deca229a31f60" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>resetStreamIndex</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1aabba82abbe1e452cf3b9e204e98952a6" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>setStreamIndex</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1a67c55a7d25eb5f5fdec62ffcc9c0dccf" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>streamSynchronize</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1a5ccf8e9a40fdaa00878353c79867bd04" prot="public" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>synchronize</name></member>
      <member refid="classamrex_1_1Gpu_1_1Device_1a725fb9c29db07764d1a95c03dedf3df5" prot="private" virt="non-virtual"><scope>amrex::Gpu::Device</scope><name>verbose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
