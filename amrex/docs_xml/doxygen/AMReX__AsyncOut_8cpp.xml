<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__AsyncOut_8cpp" kind="file" language="C++">
    <compoundname>AMReX_AsyncOut.cpp</compoundname>
    <includes refid="AMReX__AsyncOut_8H" local="no">AMReX_AsyncOut.H</includes>
    <includes refid="AMReX__BackgroundThread_8H" local="no">AMReX_BackgroundThread.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__Vector_8H" local="no">AMReX_Vector.H</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <incdepgraph>
      <node id="8217">
        <label>list</label>
      </node>
      <node id="8168">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8169" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
      </node>
      <node id="8158">
        <label>functional</label>
      </node>
      <node id="8164">
        <label>queue</label>
      </node>
      <node id="8222">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8223" relation="include">
        </childnode>
        <childnode refid="8219" relation="include">
        </childnode>
        <childnode refid="8224" relation="include">
        </childnode>
        <childnode refid="8210" relation="include">
        </childnode>
        <childnode refid="8225" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
      </node>
      <node id="8208">
        <label>limits</label>
      </node>
      <node id="8195">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
      </node>
      <node id="8204">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="8205" relation="include">
        </childnode>
        <childnode refid="8202" relation="include">
        </childnode>
        <childnode refid="8206" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8207" relation="include">
        </childnode>
        <childnode refid="8210" relation="include">
        </childnode>
        <childnode refid="8211" relation="include">
        </childnode>
        <childnode refid="8201" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8212" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8199" relation="include">
        </childnode>
      </node>
      <node id="8185">
        <label>float.h</label>
      </node>
      <node id="8226">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="8219" relation="include">
        </childnode>
        <childnode refid="8208" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8223" relation="include">
        </childnode>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8173" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8204" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8166" relation="include">
        </childnode>
      </node>
      <node id="8207">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="8181" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8201" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8203" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8186" relation="include">
        </childnode>
        <childnode refid="8205" relation="include">
        </childnode>
        <childnode refid="8188" relation="include">
        </childnode>
        <childnode refid="8187" relation="include">
        </childnode>
        <childnode refid="8208" relation="include">
        </childnode>
        <childnode refid="8209" relation="include">
        </childnode>
        <childnode refid="8160" relation="include">
        </childnode>
      </node>
      <node id="8159">
        <label>AMReX_BackgroundThread.H</label>
        <link refid="AMReX__BackgroundThread_8H"/>
        <childnode refid="8160" relation="include">
        </childnode>
        <childnode refid="8161" relation="include">
        </childnode>
        <childnode refid="8158" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8163" relation="include">
        </childnode>
        <childnode refid="8164" relation="include">
        </childnode>
        <childnode refid="8165" relation="include">
        </childnode>
      </node>
      <node id="8173">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8175" relation="include">
        </childnode>
        <childnode refid="8177" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8179" relation="include">
        </childnode>
        <childnode refid="8181" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8186" relation="include">
        </childnode>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8158" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8176" relation="include">
        </childnode>
        <childnode refid="8171" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
      <node id="8175">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="8176" relation="include">
        </childnode>
      </node>
      <node id="8170">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="8160" relation="include">
        </childnode>
        <childnode refid="8171" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8181" relation="include">
        </childnode>
      </node>
      <node id="8187">
        <label>cmath</label>
      </node>
      <node id="8178">
        <label>cassert</label>
      </node>
      <node id="8180">
        <label>stdexcept</label>
      </node>
      <node id="8214">
        <label>numeric</label>
      </node>
      <node id="8225">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="8205" relation="include">
        </childnode>
        <childnode refid="8207" relation="include">
        </childnode>
        <childnode refid="8210" relation="include">
        </childnode>
        <childnode refid="8204" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
      </node>
      <node id="8190">
        <label>string</label>
      </node>
      <node id="8219">
        <label>map</label>
      </node>
      <node id="8227">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8166" relation="include">
        </childnode>
      </node>
      <node id="8221">
        <label>cfloat</label>
      </node>
      <node id="8169">
        <label>fstream</label>
      </node>
      <node id="8206">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="8183" relation="include">
        </childnode>
      </node>
      <node id="8196">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="8197" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8193" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8194" relation="include">
        </childnode>
        <childnode refid="8176" relation="include">
        </childnode>
        <childnode refid="8198" relation="include">
        </childnode>
        <childnode refid="8173" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8199" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8201" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8202" relation="include">
        </childnode>
        <childnode refid="8203" relation="include">
        </childnode>
      </node>
      <node id="8201">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="8200">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="8184">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="8161">
        <label>condition_variable</label>
      </node>
      <node id="8229">
        <label>sys/types.h</label>
      </node>
      <node id="8157">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="8158" relation="include">
        </childnode>
      </node>
      <node id="8213">
        <label>typeinfo</label>
      </node>
      <node id="8176">
        <label>cstdio</label>
      </node>
      <node id="8199">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8200" relation="include">
        </childnode>
      </node>
      <node id="8191">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="8192" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8193" relation="include">
        </childnode>
        <childnode refid="8194" relation="include">
        </childnode>
        <childnode refid="8176" relation="include">
        </childnode>
        <childnode refid="8188" relation="include">
        </childnode>
      </node>
      <node id="8228">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8229" relation="include">
        </childnode>
      </node>
      <node id="8192">
        <label>stack</label>
      </node>
      <node id="8171">
        <label>vector</label>
      </node>
      <node id="8172">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="8173" relation="include">
        </childnode>
      </node>
      <node id="8186">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8187" relation="include">
        </childnode>
        <childnode refid="8188" relation="include">
        </childnode>
      </node>
      <node id="8174">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="8193">
        <label>utility</label>
      </node>
      <node id="8197">
        <label>array</label>
      </node>
      <node id="8194">
        <label>sstream</label>
      </node>
      <node id="8179">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="8180" relation="include">
        </childnode>
      </node>
      <node id="8202">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="8160" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8203" relation="include">
        </childnode>
      </node>
      <node id="8181">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="8182" relation="include">
        </childnode>
      </node>
      <node id="8156">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp</label>
        <link refid="AMReX_AsyncOut.cpp"/>
        <childnode refid="8157" relation="include">
        </childnode>
        <childnode refid="8159" relation="include">
        </childnode>
        <childnode refid="8166" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8216" relation="include">
        </childnode>
        <childnode refid="8218" relation="include">
        </childnode>
        <childnode refid="8173" relation="include">
        </childnode>
      </node>
      <node id="8166">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8168" relation="include">
        </childnode>
        <childnode refid="8191" relation="include">
        </childnode>
        <childnode refid="8195" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8181" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8204" relation="include">
        </childnode>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8171" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8213" relation="include">
        </childnode>
        <childnode refid="8160" relation="include">
        </childnode>
        <childnode refid="8158" relation="include">
        </childnode>
        <childnode refid="8208" relation="include">
        </childnode>
        <childnode refid="8214" relation="include">
        </childnode>
        <childnode refid="8215" relation="include">
        </childnode>
      </node>
      <node id="8218">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="8188" relation="include">
        </childnode>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8194" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8219" relation="include">
        </childnode>
        <childnode refid="8220" relation="include">
        </childnode>
        <childnode refid="8198" relation="include">
        </childnode>
        <childnode refid="8209" relation="include">
        </childnode>
        <childnode refid="8208" relation="include">
        </childnode>
        <childnode refid="8221" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8181" relation="include">
        </childnode>
        <childnode refid="8196" relation="include">
        </childnode>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8204" relation="include">
        </childnode>
        <childnode refid="8222" relation="include">
        </childnode>
        <childnode refid="8226" relation="include">
        </childnode>
        <childnode refid="8166" relation="include">
        </childnode>
        <childnode refid="8227" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8228" relation="include">
        </childnode>
      </node>
      <node id="8211">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="8205" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8201" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
      </node>
      <node id="8203">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="8189" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
      </node>
      <node id="8205">
        <label>iosfwd</label>
      </node>
      <node id="8188">
        <label>cstdlib</label>
      </node>
      <node id="8189">
        <label>iostream</label>
      </node>
      <node id="8210">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="8205" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8207" relation="include">
        </childnode>
        <childnode refid="8201" relation="include">
        </childnode>
      </node>
      <node id="8212">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="8207" relation="include">
        </childnode>
        <childnode refid="8175" relation="include">
        </childnode>
      </node>
      <node id="8223">
        <label>cstddef</label>
      </node>
      <node id="8224">
        <label>unordered_map</label>
      </node>
      <node id="8209">
        <label>climits</label>
      </node>
      <node id="8163">
        <label>mutex</label>
      </node>
      <node id="8220">
        <label>chrono</label>
      </node>
      <node id="8215">
        <label>csignal</label>
      </node>
      <node id="8165">
        <label>thread</label>
      </node>
      <node id="8198">
        <label>type_traits</label>
      </node>
      <node id="8167">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="8216">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="8192" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
        <childnode refid="8205" relation="include">
        </childnode>
        <childnode refid="8171" relation="include">
        </childnode>
        <childnode refid="8217" relation="include">
        </childnode>
        <childnode refid="8197" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
      </node>
      <node id="8160">
        <label>algorithm</label>
      </node>
      <node id="8177">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="8178" relation="include">
        </childnode>
      </node>
      <node id="8162">
        <label>memory</label>
      </node>
      <node id="8182">
        <label>inttypes.h</label>
      </node>
      <node id="8183">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8185" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1AsyncOut">amrex::AsyncOut</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__AsyncOut_8H" kindref="compound">AMReX_AsyncOut.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BackgroundThread_8H" kindref="compound">AMReX_BackgroundThread.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Vector_8H" kindref="compound">AMReX_Vector.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="10" refid="namespaceamrex_1_1AsyncOut" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">AsyncOut<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_asyncout<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_noutfiles<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>s_comm<sp/>=<sp/><ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::unique_ptr&lt;BackgroundThread&gt;<sp/>s_thread;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="structamrex_1_1AsyncOut_1_1WriteInfo" kindref="compound">WriteInfo</ref><sp/>s_info;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1ad322c4e7eab6b75bf9448b5b7d464ee1" kindref="member">Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(s_comm,s_info);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParmParse" kindref="compound">ParmParse</ref><sp/>pp(</highlight><highlight class="stringliteral">&quot;amrex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1a6d30fe0a4cd81ba121804385f40a65f5" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;async_out&quot;</highlight><highlight class="normal">,<sp/>s_asyncout);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.<ref refid="classamrex_1_1ParmParse_1a6d30fe0a4cd81ba121804385f40a65f5" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&quot;async_out_nfiles&quot;</highlight><highlight class="normal">,<sp/>s_noutfiles);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>s_noutfiles<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(s_noutfiles,<sp/>nprocs);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_asyncout<sp/>and<sp/>s_noutfiles<sp/>&lt;<sp/>nprocs)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_MPI_THREAD_MULTIPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_info<sp/>=<sp/><ref refid="namespaceamrex_1_1AsyncOut_1a2a9d5d76aba34e026f1d33404c6bfe00" kindref="member">GetWriteInfo</ref>(myproc);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm_split(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>(),<sp/>s_info.ifile,<sp/>myproc,<sp/>&amp;s_comm);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;AsyncOut<sp/>with<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(s_noutfiles)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+std::to_string(nprocs)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>processes<sp/>requires<sp/>MPI_THREAD_MULTIPLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_asyncout)<sp/>s_thread.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BackgroundThread" kindref="compound">BackgroundThread</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">ExecOnFinalize</ref>(<ref refid="namespaceamrex_1_1AsyncOut_1a2040a56976bffbbfac29f5e01800ea3c" kindref="member">Finalize</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1a2040a56976bffbbfac29f5e01800ea3c" kindref="member">Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_thread)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_thread.reset();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_comm<sp/>!=<sp/><ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref>)<sp/>MPI_Comm_free(&amp;s_comm);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>s_comm<sp/>=<sp/><ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1adbc79ec1aacd0106757683aea46b43ce" kindref="member">UseAsyncOut</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_asyncout;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="structamrex_1_1AsyncOut_1_1WriteInfo" kindref="compound">WriteInfo</ref><sp/><ref refid="namespaceamrex_1_1AsyncOut_1a2a9d5d76aba34e026f1d33404c6bfe00" kindref="member">GetWriteInfo</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfiles<sp/>=<sp/>s_noutfiles;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmaxspots<sp/>=<sp/>(nprocs<sp/>+<sp/>(nfiles-1))<sp/>/<sp/>nfiles;<sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>spots<sp/>per<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfull<sp/>=<sp/>nfiles<sp/>+<sp/>nprocs<sp/>-<sp/>nmaxspots*nfiles;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>nfull<sp/>files<sp/>are<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ifile,<sp/>ispot,<sp/>nspots;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank<sp/>&lt;<sp/>nfull*nmaxspots)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifile<sp/>=<sp/>rank<sp/>/<sp/>nmaxspots;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ispot<sp/>=<sp/>rank<sp/>-<sp/>ifile*nmaxspots;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nspots<sp/>=<sp/>nmaxspots;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmpproc<sp/>=<sp/>rank-nfull*nmaxspots;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifile<sp/>=<sp/>tmpproc/(nmaxspots-1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ispot<sp/>=<sp/>tmpproc<sp/>-<sp/>ifile*(nmaxspots-1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifile<sp/>+=<sp/>nfull;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nspots<sp/>=<sp/>nmaxspots<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1AsyncOut_1_1WriteInfo" kindref="compound">WriteInfo</ref>{ifile,<sp/>ispot,<sp/>nspots};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1aa1f51f051314b9228d4e287292937139" kindref="member">Submit</ref><sp/>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;&amp;&amp;<sp/>a_f)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>s_thread-&gt;Submit(std::move(a_f));</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1aa1f51f051314b9228d4e287292937139" kindref="member">Submit</ref><sp/>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a_f)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>s_thread-&gt;Submit(a_f);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1aee3a42cfdf4c23b913fe7b42f8a22185" kindref="member">Finish</ref><sp/>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>s_thread-&gt;Finish();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1a98b17038c0286de4668a2bed1102d3b6" kindref="member">Wait</ref><sp/>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>s_info.ispot;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Request&gt;</ref><sp/>reqs(N);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Status&gt;</ref><sp/>stats(N);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reqs[i]<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a38117de7f96b4cf7c923aea5dbc89da8" kindref="member">ParallelDescriptor::Abarrier</ref>(s_comm).<ref refid="classamrex_1_1ParallelDescriptor_1_1Message_1a57999afb8ef13d17fc24750bdae6cd00" kindref="member">req</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab581b8dba6006dbb3457d925c4b0f244" kindref="member">ParallelDescriptor::Waitall</ref>(reqs,<sp/>stats);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1AsyncOut_1a9b651e401d0a75620501243cc1171a63" kindref="member">Notify</ref><sp/>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>s_info.nspots<sp/>-<sp/>1<sp/>-<sp/>s_info.ispot;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Request&gt;</ref><sp/>reqs(N);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Status&gt;</ref><sp/>stats(N);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reqs[i]<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a38117de7f96b4cf7c923aea5dbc89da8" kindref="member">ParallelDescriptor::Abarrier</ref>(s_comm).<ref refid="classamrex_1_1ParallelDescriptor_1_1Message_1a57999afb8ef13d17fc24750bdae6cd00" kindref="member">req</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab581b8dba6006dbb3457d925c4b0f244" kindref="member">ParallelDescriptor::Waitall</ref>(reqs,<sp/>stats);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_AsyncOut.cpp"/>
  </compounddef>
</doxygen>
