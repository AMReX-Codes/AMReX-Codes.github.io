<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1ParticleTileData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleTileData</compoundname>
    <includes refid="AMReX__ParticleTile_8H" local="no">AMReX_ParticleTile.H</includes>
    <templateparamlist>
      <param>
        <type>typename T_ParticleType</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" prot="public" static="no">
        <type>T_ParticleType</type>
        <definition>using amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::ParticleType =  T_ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="33" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTileData_1a11bccd3938ed5beb19a29798dfc543cb" prot="public" static="no">
        <type>T_ParticleType &amp;</type>
        <definition>using amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::ParticleRefType =  T_ParticleType&amp;</definition>
        <argsstring></argsstring>
        <name>ParticleRefType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="34" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTileData_1a3db02853f88b6daab07d024e148538d3" prot="public" static="no">
        <type><ref refid="structamrex_1_1ParticleTileData" kindref="compound">ParticleTileData</ref>&lt; <ref refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" kindref="member">ParticleType</ref>, <ref refid="structamrex_1_1ParticleTileData_1a9338e60dfce599b67883d4fdc4ec69fa" kindref="member">NAR</ref>, <ref refid="structamrex_1_1ParticleTileData_1adfec304d600c86d3dc5fda841cd2aaff" kindref="member">NAI</ref> &gt;</type>
        <definition>using amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::Self =  ParticleTileData&lt;ParticleType, NAR, NAI&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="35" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTileData_1a98449dc53e1e083e33c2c4c377dbdefd" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; <ref refid="structamrex_1_1ParticleTileData_1af53dd2bb7ca0f780d4fbd86cbab4bee9" kindref="member">NStructReal</ref>+<ref refid="structamrex_1_1ParticleTileData_1a9338e60dfce599b67883d4fdc4ec69fa" kindref="member">NAR</ref>, <ref refid="structamrex_1_1ParticleTileData_1a509d7d346b709b39d1261144b7f1de26" kindref="member">NStructInt</ref>+<ref refid="structamrex_1_1ParticleTileData_1adfec304d600c86d3dc5fda841cd2aaff" kindref="member">NAI</ref> &gt;</type>
        <definition>using amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::SuperParticleType =  Particle&lt;NStructReal+NAR, NStructInt+NAI&gt;</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="40" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTileData_1a76b9a4d1c965d9f95449378167b60138" prot="public" static="no">
        <type>std::conditional_t&lt; T_ParticleType::is_soa_particle, void *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref>, <ref refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" kindref="member">ParticleType</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref> &gt;</type>
        <definition>using amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::AOS_PTR =  std::conditional_t&lt;T_ParticleType::is_soa_particle, void * AMREX_RESTRICT, ParticleType * AMREX_RESTRICT&gt;</definition>
        <argsstring></argsstring>
        <name>AOS_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="46" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a9338e60dfce599b67883d4fdc4ec69fa" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NAR</definition>
        <argsstring></argsstring>
        <name>NAR</name>
        <initializer>= NArrayReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="30" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1adfec304d600c86d3dc5fda841cd2aaff" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NAI</definition>
        <argsstring></argsstring>
        <name>NAI</name>
        <initializer>= NArrayInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="31" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1af53dd2bb7ca0f780d4fbd86cbab4bee9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NStructReal</definition>
        <argsstring></argsstring>
        <name>NStructReal</name>
        <initializer>= ParticleType::NReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="37" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a509d7d346b709b39d1261144b7f1de26" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NStructInt</definition>
        <argsstring></argsstring>
        <name>NStructInt</name>
        <initializer>= ParticleType::NInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="38" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1ab0b2ff729f671bc4b555c4ede47e595d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::is_particle_tile_data</definition>
        <argsstring></argsstring>
        <name>is_particle_tile_data</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="42" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a86862697cad81a5b2aeb56cfa052a507" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="44" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1ac5889cfb1119e1b3c19085e7bde68def" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTileData_1a76b9a4d1c965d9f95449378167b60138" kindref="member">AOS_PTR</ref></type>
        <definition>AOS_PTR amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_aos</definition>
        <argsstring></argsstring>
        <name>m_aos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="48" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a1f4aec471e58edd6d4c3bcbff0ff8182" prot="public" static="no" mutable="no">
        <type>uint64_t *</type>
        <definition>uint64_t* amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_idcpu</definition>
        <argsstring></argsstring>
        <name>m_idcpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="50" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a249e437162c17a56356c37d2d1a90306" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; ParticleReal *, <ref refid="structamrex_1_1ParticleTileData_1a9338e60dfce599b67883d4fdc4ec69fa" kindref="member">NAR</ref> &gt;</type>
        <definition>GpuArray&lt;ParticleReal*, NAR&gt; amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_rdata</definition>
        <argsstring></argsstring>
        <name>m_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="51" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a52de30978d928054ae27a5a62cbf7eab" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, <ref refid="structamrex_1_1ParticleTileData_1adfec304d600c86d3dc5fda841cd2aaff" kindref="member">NAI</ref> &gt;</type>
        <definition>GpuArray&lt;int*, NAI&gt; amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="52" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1aaaf158195e20f27b6f71e4f8c3cecdde" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_num_runtime_real</definition>
        <argsstring></argsstring>
        <name>m_num_runtime_real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="54" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a84c4da34c34c28aeeeaad3424ea4d95a" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_num_runtime_int</definition>
        <argsstring></argsstring>
        <name>m_num_runtime_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="55" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1a987d5cecf378f8b22100a4160856c42a" prot="public" static="no" mutable="no">
        <type>ParticleReal *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>ParticleReal* AMREX_RESTRICT* AMREX_RESTRICT amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_runtime_rdata</definition>
        <argsstring></argsstring>
        <name>m_runtime_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="56" column="49" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTileData_1ad2111767fb8cdbbc2a9f4f12c94f2e23" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>int* AMREX_RESTRICT* AMREX_RESTRICT amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_runtime_idata</definition>
        <argsstring></argsstring>
        <name>m_runtime_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="57" column="40" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a3905ca69e86570132f8d8b9a5b9d0f10" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> ParticleReal &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleReal&amp; amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::pos</definition>
        <argsstring>(const int dir, const int index) const &amp;</argsstring>
        <name>pos</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="60" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1afc9dd781b0f62f3334fb1b996edc8c61" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::id</definition>
        <argsstring>(const int index) const &amp;</argsstring>
        <name>id</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="70" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="70" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1ac2f6878e711406e63dd5ed3a51bf4433" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::cpu</definition>
        <argsstring>(const int index) const &amp;</argsstring>
        <name>cpu</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="80" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a28683f199083fef39cd0dde6aafb8859" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::idcpu</definition>
        <argsstring>(const int index) const &amp;</argsstring>
        <name>idcpu</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="90" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a3f4fb4909b54fed525e16352be0a63f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> ParticleReal *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleReal* amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::rdata</definition>
        <argsstring>(const int attribute_index) const</argsstring>
        <name>rdata</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>attribute_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="100" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1ade77baf3c33f93ef865c9eb7a8c3ff58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE int* amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::idata</definition>
        <argsstring>(const int attribute_index) const</argsstring>
        <name>idata</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>attribute_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="106" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1ac4cca97be972651406f245a8f627984c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::operator[]</definition>
        <argsstring>(const int index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="112" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="112" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1aa8fdd12dc11eea0caff3d1b267497edd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::packParticleData</definition>
        <argsstring>(char *buffer, int src_index, std::size_t dst_offset, const int *comm_real, const int *comm_int) const noexcept</argsstring>
        <name>packParticleData</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>src_index</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>dst_offset</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>comm_real</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>comm_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="122" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="122" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a04ff698794721724f295d18738c5436b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::unpackParticleData</definition>
        <argsstring>(const char *buffer, Long src_offset, int dst_index, const int *comm_real, const int *comm_int) const noexcept</argsstring>
        <name>unpackParticleData</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>src_offset</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dst_index</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>comm_real</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>comm_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="173" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="173" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a26340692c39099549a1fbba08b666ced" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleTileData_1a98449dc53e1e083e33c2c4c377dbdefd" kindref="member">SuperParticleType</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE SuperParticleType amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::getSuperParticle</definition>
        <argsstring>(int index) const noexcept</argsstring>
        <name>getSuperParticle</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="225" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="225" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a26340692c39099549a1fbba08b666ced" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleTileData_1a98449dc53e1e083e33c2c4c377dbdefd" kindref="member">SuperParticleType</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE SuperParticleType amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::getSuperParticle</definition>
        <argsstring>(int index) const noexcept</argsstring>
        <name>getSuperParticle</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="251" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="251" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a0af54ea0c3714956400e422787104bb4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::setSuperParticle</definition>
        <argsstring>(const SuperParticleType &amp;sp, int index) const noexcept</argsstring>
        <name>setSuperParticle</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTileData_1a98449dc53e1e083e33c2c4c377dbdefd" kindref="member">SuperParticleType</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="268" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="268" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTileData_1a0af54ea0c3714956400e422787104bb4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::setSuperParticle</definition>
        <argsstring>(const SuperParticleType &amp;sp, int index) const noexcept</argsstring>
        <name>setSuperParticle</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTileData_1a98449dc53e1e083e33c2c4c377dbdefd" kindref="member">SuperParticleType</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="291" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="291" bodyend="300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>amrex::ParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;</label>
        <link refid="structamrex_1_1ParticleTileData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_rdata</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_idata</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GpuArray&lt; ParticleReal *, NAR &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="3">
        <label>amrex::GpuArray&lt; int *, NAI &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="29" bodyend="301"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleTileData_1a76b9a4d1c965d9f95449378167b60138" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>AOS_PTR</name></member>
      <member refid="structamrex_1_1ParticleTileData_1ac2f6878e711406e63dd5ed3a51bf4433" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>cpu</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a26340692c39099549a1fbba08b666ced" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>getSuperParticle</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a26340692c39099549a1fbba08b666ced" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>getSuperParticle</name></member>
      <member refid="structamrex_1_1ParticleTileData_1afc9dd781b0f62f3334fb1b996edc8c61" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>id</name></member>
      <member refid="structamrex_1_1ParticleTileData_1ade77baf3c33f93ef865c9eb7a8c3ff58" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>idata</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a28683f199083fef39cd0dde6aafb8859" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>idcpu</name></member>
      <member refid="structamrex_1_1ParticleTileData_1ab0b2ff729f671bc4b555c4ede47e595d" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>is_particle_tile_data</name></member>
      <member refid="structamrex_1_1ParticleTileData_1ac5889cfb1119e1b3c19085e7bde68def" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_aos</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a52de30978d928054ae27a5a62cbf7eab" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a1f4aec471e58edd6d4c3bcbff0ff8182" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_idcpu</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a84c4da34c34c28aeeeaad3424ea4d95a" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_num_runtime_int</name></member>
      <member refid="structamrex_1_1ParticleTileData_1aaaf158195e20f27b6f71e4f8c3cecdde" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_num_runtime_real</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a249e437162c17a56356c37d2d1a90306" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_rdata</name></member>
      <member refid="structamrex_1_1ParticleTileData_1ad2111767fb8cdbbc2a9f4f12c94f2e23" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_runtime_idata</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a987d5cecf378f8b22100a4160856c42a" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_runtime_rdata</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a86862697cad81a5b2aeb56cfa052a507" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>m_size</name></member>
      <member refid="structamrex_1_1ParticleTileData_1adfec304d600c86d3dc5fda841cd2aaff" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>NAI</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a9338e60dfce599b67883d4fdc4ec69fa" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>NAR</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a509d7d346b709b39d1261144b7f1de26" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>NStructInt</name></member>
      <member refid="structamrex_1_1ParticleTileData_1af53dd2bb7ca0f780d4fbd86cbab4bee9" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>NStructReal</name></member>
      <member refid="structamrex_1_1ParticleTileData_1ac4cca97be972651406f245a8f627984c" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>operator[]</name></member>
      <member refid="structamrex_1_1ParticleTileData_1aa8fdd12dc11eea0caff3d1b267497edd" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>packParticleData</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a11bccd3938ed5beb19a29798dfc543cb" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>ParticleRefType</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a6732de69363d6c0c39ae2d462b1cc57e" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>ParticleType</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a3905ca69e86570132f8d8b9a5b9d0f10" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>pos</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a3f4fb4909b54fed525e16352be0a63f1" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>rdata</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a3db02853f88b6daab07d024e148538d3" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>Self</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a0af54ea0c3714956400e422787104bb4" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>setSuperParticle</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a0af54ea0c3714956400e422787104bb4" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>setSuperParticle</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a98449dc53e1e083e33c2c4c377dbdefd" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>SuperParticleType</name></member>
      <member refid="structamrex_1_1ParticleTileData_1a04ff698794721724f295d18738c5436b" prot="public" virt="non-virtual"><scope>amrex::ParticleTileData</scope><name>unpackParticleData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
