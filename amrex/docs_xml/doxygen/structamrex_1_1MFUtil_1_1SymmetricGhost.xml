<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1MFUtil_1_1SymmetricGhost" kind="struct" language="C++" prot="public">
    <compoundname>amrex::MFUtil::SymmetricGhost</compoundname>
    <includes refid="AMReX__MultiFabUtilI_8H" local="no">AMReX_MultiFabUtilI.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structamrex_1_1MFUtil_1_1SymmetricGhost_1aa8f8f59b8584105f5e5d317b6ac7efe9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::MFUtil::SymmetricGhost&lt; T &gt;::copy</definition>
        <argsstring>(T &amp;target, const T &amp;source, int nc, int ng)</argsstring>
        <name>copy</name>
        <qualifiedname>amrex::MFUtil::SymmetricGhost::copy</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtilI.H" line="13" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtilI.H" bodystart="13" bodyend="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>General collection of <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> utilities. </para>
    </briefdescription>
    <detaileddescription>
<para>Template class defining a copy operation where source and target are grown by ng. Template parameter T must be either <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> </para>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtilI.H" line="12" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtilI.H" bodystart="12" bodyend="16"/>
    <listofallmembers>
      <member refid="structamrex_1_1MFUtil_1_1SymmetricGhost_1aa8f8f59b8584105f5e5d317b6ac7efe9" prot="public" virt="non-virtual"><scope>amrex::MFUtil::SymmetricGhost</scope><name>copy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
