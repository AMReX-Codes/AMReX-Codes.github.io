<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1SIMDindex" kind="struct" language="C++" prot="public">
    <compoundname>amrex::SIMDindex</compoundname>
    <includes refid="AMReX__GpuLaunchFunctsC_8H" local="no">AMReX_GpuLaunchFunctsC.H</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>WIDTH</declname>
        <defname>WIDTH</defname>
      </param>
      <param>
        <type>class N</type>
        <defval>int</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1SIMDindex_1a95a073aef6d29dc3fc24c1fc7be5bbeb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::SIMDindex&lt; WIDTH, N &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>amrex::SIMDindex::width</qualifiedname>
        <initializer>= WIDTH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SIMD width in elements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H" line="19" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1SIMDindex_1ae16bbb82f5c9d524440b2499985cf894" prot="public" static="no" mutable="no">
        <type>N</type>
        <definition>N amrex::SIMDindex&lt; WIDTH, N &gt;::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>amrex::SIMDindex::index</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The linear loop index of ParallelFor(SIMD) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H" line="22" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper type to store/access the SIMD width in ParallelForSIMD lambdas</para>
<para>Use instead of int as the running index i. Used to pass the SIMD WIDTH as compile-time meta-data into a called function/method.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>WIDTH</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD width in elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>index type (integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunchFunctsC.H" bodystart="17" bodyend="23"/>
    <listofallmembers>
      <member refid="structamrex_1_1SIMDindex_1ae16bbb82f5c9d524440b2499985cf894" prot="public" virt="non-virtual"><scope>amrex::SIMDindex</scope><name>index</name></member>
      <member refid="structamrex_1_1SIMDindex_1a95a073aef6d29dc3fc24c1fc7be5bbeb" prot="public" virt="non-virtual"><scope>amrex::SIMDindex</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
