<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1FabFactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>amrex::FabFactory</compoundname>
    <derivedcompoundref refid="classamrex_1_1DefaultFabFactory" prot="public" virt="non-virtual">amrex::DefaultFabFactory&lt; FAB &gt;</derivedcompoundref>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>FAB</declname>
        <defname>FAB</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FabFactory_1af726b92f11c995d2a3225f3fa8a0754b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::FabFactory&lt; FAB &gt;::~FabFactory</definition>
        <argsstring>()</argsstring>
        <name>~FabFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="51" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabFactory_1aa4b55a312064a0753e8dc73e8ea28d7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>FAB *</type>
        <definition>virtual FAB* amrex::FabFactory&lt; FAB &gt;::create</definition>
        <argsstring>(const Box &amp;box, int ncomps, const FabInfo &amp;info, int box_index) const =0</argsstring>
        <name>create</name>
        <reimplementedby refid="classamrex_1_1EBFArrayBoxFactory_1af4895e37eae210a93ca7d2b0493a250e">create</reimplementedby>
        <reimplementedby refid="classamrex_1_1DefaultFabFactory_1a014f5ec07685d3cbf4cae50d1081d876">create</reimplementedby>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomps</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1FabInfo" kindref="compound">FabInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>box_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabFactory_1ad8975cc6131f042429ec321e6740b5f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>FAB *</type>
        <definition>virtual FAB* amrex::FabFactory&lt; FAB &gt;::create_alias</definition>
        <argsstring>(FAB const &amp;, int, int) const</argsstring>
        <name>create_alias</name>
        <reimplementedby refid="classamrex_1_1EBFArrayBoxFactory_1a99374626e050249afcdc541cf12aa53a">create_alias</reimplementedby>
        <reimplementedby refid="classamrex_1_1DefaultFabFactory_1a046e151123bc87b479ba622614c1d429">create_alias</reimplementedby>
        <param>
          <type>FAB const &amp;</type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabFactory_1a62e57972e3054a6f7ed1cdb9c0426c09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::FabFactory&lt; FAB &gt;::destroy</definition>
        <argsstring>(FAB *fab) const =0</argsstring>
        <name>destroy</name>
        <reimplementedby refid="classamrex_1_1EBFArrayBoxFactory_1a25f6eca7dc8d4f2269fec54f5d20f079">destroy</reimplementedby>
        <reimplementedby refid="classamrex_1_1DefaultFabFactory_1a1d92b6711d7c4908085808da6ac00f0d">destroy</reimplementedby>
        <param>
          <type>FAB *</type>
          <declname>fab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FabFactory_1a16e2317a8e500a4a1bc7ad6c64fcc892" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; FAB &gt; *</type>
        <definition>virtual FabFactory&lt;FAB&gt;* amrex::FabFactory&lt; FAB &gt;::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classamrex_1_1EBFArrayBoxFactory_1a2d942d0e7c5fa2e3dc6c4ef56d52f53d">clone</reimplementedby>
        <reimplementedby refid="classamrex_1_1DefaultFabFactory_1ac033082bbbb1e30c67704903223c955f">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabFactory.H" line="55" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1323">
        <label>amrex::FabFactory&lt; FAB &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="1324">
        <label>amrex::DefaultFabFactory&lt; FAB &gt;</label>
        <link refid="classamrex_1_1DefaultFabFactory"/>
        <childnode refid="1323" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="25" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="25" bodyend="-1"/>
    <listofallmembers>
      <member refid="classamrex_1_1FabFactory_1a16e2317a8e500a4a1bc7ad6c64fcc892" prot="public" virt="pure-virtual"><scope>amrex::FabFactory</scope><name>clone</name></member>
      <member refid="classamrex_1_1FabFactory_1aa4b55a312064a0753e8dc73e8ea28d7f" prot="public" virt="pure-virtual"><scope>amrex::FabFactory</scope><name>create</name></member>
      <member refid="classamrex_1_1FabFactory_1ad8975cc6131f042429ec321e6740b5f7" prot="public" virt="virtual"><scope>amrex::FabFactory</scope><name>create_alias</name></member>
      <member refid="classamrex_1_1FabFactory_1a62e57972e3054a6f7ed1cdb9c0426c09" prot="public" virt="pure-virtual"><scope>amrex::FabFactory</scope><name>destroy</name></member>
      <member refid="classamrex_1_1FabFactory_1af726b92f11c995d2a3225f3fa8a0754b" prot="public" virt="virtual"><scope>amrex::FabFactory</scope><name>~FabFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
