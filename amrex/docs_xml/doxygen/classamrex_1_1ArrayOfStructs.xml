<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1ArrayOfStructs" kind="class" language="C++" prot="public">
    <compoundname>amrex::ArrayOfStructs</compoundname>
    <includes refid="AMReX__ArrayOfStructs_8H" local="no">AMReX_ArrayOfStructs.H</includes>
    <templateparamlist>
      <param>
        <type>typename T_ParticleType</type>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1a179fafc569924202b166896b608cd5c2" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" prot="public" static="no">
        <type>T_ParticleType</type>
        <definition>using amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::ParticleType =  T_ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <qualifiedname>amrex::ArrayOfStructs::ParticleType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="15" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1a4bd47d382fa8b63c31eafb763d31194c" prot="public" static="no">
        <type>typename ParticleType::RealType</type>
        <definition>using amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::RealType =  typename ParticleType::RealType</definition>
        <argsstring></argsstring>
        <name>RealType</name>
        <qualifiedname>amrex::ArrayOfStructs::RealType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="16" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1aa361f73ebc2bf0a48753c69a277f4075" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref>, Allocator&lt; <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> &gt; &gt;</type>
        <definition>using amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::ParticleVector =  amrex::PODVector&lt;ParticleType, Allocator&lt;ParticleType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <qualifiedname>amrex::ArrayOfStructs::ParticleVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1ab633fb0409feac5e4f6630b0d307a116" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1PODVector_1a5895b3a2414fe5808db523612e438ab8" kindref="member">ParticleVector::iterator</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::Iterator =  typename ParticleVector::iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <qualifiedname>amrex::ArrayOfStructs::Iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="20" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1a022bf3d340c54c4014aa949c8942307a" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1PODVector_1ac32d9f644793a1c54fe9979e7307f7ba" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::ConstIterator =  typename ParticleVector::const_iterator</definition>
        <argsstring></argsstring>
        <name>ConstIterator</name>
        <qualifiedname>amrex::ArrayOfStructs::ConstIterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="21" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1a566da28aaf6d6cb87b9dc2b2fbf1c889" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::ArrayOfStructs&lt; ParticleType, Allocator &gt;::SizeInReal</definition>
        <argsstring></argsstring>
        <name>SizeInReal</name>
        <qualifiedname>amrex::ArrayOfStructs::SizeInReal</qualifiedname>
        <initializer>= sizeof(<ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref>) / sizeof(<ref refid="classamrex_1_1ArrayOfStructs_1a4bd47d382fa8b63c31eafb763d31194c" kindref="member">RealType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="23" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1a3306e52c6281fde864a8d33a9b53d72c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::m_num_neighbor_particles</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_particles</name>
        <qualifiedname>amrex::ArrayOfStructs::m_num_neighbor_particles</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="109" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="109" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1aa4b53535c25e645281539b7b5b4f9194" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1aa361f73ebc2bf0a48753c69a277f4075" kindref="member">ParticleVector</ref></type>
        <definition>ParticleVector amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <qualifiedname>amrex::ArrayOfStructs::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="112" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="112" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a6429e70ce5dc010326861a4bb343aef3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1aa361f73ebc2bf0a48753c69a277f4075" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>const ParticleVector &amp; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::operator()</definition>
        <argsstring>() const</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::ArrayOfStructs::operator()</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="25" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1adc18cb613214cb8f786a20672fc4f912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1aa361f73ebc2bf0a48753c69a277f4075" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>ParticleVector &amp; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::ArrayOfStructs::operator()</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="26" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1af332a589a51f1028800331fe10fc9985" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>amrex::ArrayOfStructs::size</qualifiedname>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="32" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a97dc58478a9add0babfd5503f5655876" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::numParticles</definition>
        <argsstring>() const</argsstring>
        <name>numParticles</name>
        <qualifiedname>amrex::ArrayOfStructs::numParticles</qualifiedname>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="38" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ab9d2ce3721f6d4039d09f4464683c5e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const</argsstring>
        <name>numRealParticles</name>
        <qualifiedname>amrex::ArrayOfStructs::numRealParticles</qualifiedname>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="44" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a2b17bacea66d302e68ec631032d97300" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const</argsstring>
        <name>numNeighborParticles</name>
        <qualifiedname>amrex::ArrayOfStructs::numNeighborParticles</qualifiedname>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="50" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a5a933c9ef33ad84f474f9c6b2b90b2a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const</argsstring>
        <name>numTotalParticles</name>
        <qualifiedname>amrex::ArrayOfStructs::numTotalParticles</qualifiedname>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="56" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a3b1f7c4d9324b6ce179d86299b1ba853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <qualifiedname>amrex::ArrayOfStructs::setNumNeighbors</qualifiedname>
        <param>
          <type>int</type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="58" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad331838c0859743a9a968d2d321db717" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>getNumNeighbors</name>
        <qualifiedname>amrex::ArrayOfStructs::getNumNeighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="65" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a356f63835bfba5626b9e6cd884d895d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>amrex::ArrayOfStructs::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="67" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a1937a6e7fc01a7b5c355346f9f01fd8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> *</type>
        <definition>const ParticleType * amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>amrex::ArrayOfStructs::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="69" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a13804a97ff2e974bb0afa6b35aac90e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> *</type>
        <definition>ParticleType * amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <qualifiedname>amrex::ArrayOfStructs::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="70" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a0388bfe405bc23bd8d9e4ff8e24f8e81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> *</type>
        <definition>const ParticleType * amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::dataPtr</definition>
        <argsstring>() const</argsstring>
        <name>dataPtr</name>
        <qualifiedname>amrex::ArrayOfStructs::dataPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="72" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a91c4662f167aaf43fab670bad92e8ad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> *</type>
        <definition>ParticleType * amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <qualifiedname>amrex::ArrayOfStructs::dataPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="73" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a793c4c91ccc7ea3f16bfd103676b7b54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt; int, int &gt; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::dataShape</definition>
        <argsstring>() const</argsstring>
        <name>dataShape</name>
        <qualifiedname>amrex::ArrayOfStructs::dataShape</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="75" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a58e47ec80be71f10f50fe234408ed886" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <qualifiedname>amrex::ArrayOfStructs::push_back</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="79" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa1831ea3b91c1a77740583f99542ee26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <qualifiedname>amrex::ArrayOfStructs::pop_back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="80" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a121a968277c299409b1b6e98fa2d8b08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <qualifiedname>amrex::ArrayOfStructs::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="81" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa2e4e0275afa1b02a7dea9f4635421eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> &amp;</type>
        <definition>const ParticleType &amp; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>amrex::ArrayOfStructs::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="83" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a8873ffaca67ccf9ff26a64dd03db11aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> &amp;</type>
        <definition>ParticleType &amp; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <qualifiedname>amrex::ArrayOfStructs::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="84" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a1e0e50dbc45c09a351a2a2d23fad747c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> &amp;</type>
        <definition>const ParticleType &amp; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>amrex::ArrayOfStructs::operator[]</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="86" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a95f28f29c97db594e07c3135f47812af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" kindref="member">ParticleType</ref> &amp;</type>
        <definition>ParticleType &amp; amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>amrex::ArrayOfStructs::operator[]</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="87" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1afa944ad759b866c71398b9d6e8e20cc8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::swap</definition>
        <argsstring>(ArrayOfStructs &amp;other) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>amrex::ArrayOfStructs::swap</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="89" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac161821048b627db36b021dc2671ede0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::resize</definition>
        <argsstring>(size_t count)</argsstring>
        <name>resize</name>
        <qualifiedname>amrex::ArrayOfStructs::resize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="94" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ae74cdb62144ce25c901b6df72013dc89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1ab633fb0409feac5e4f6630b0d307a116" kindref="member">Iterator</ref></type>
        <definition>Iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::erase</definition>
        <argsstring>(ConstIterator first, ConstIterator second)</argsstring>
        <name>erase</name>
        <qualifiedname>amrex::ArrayOfStructs::erase</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1a022bf3d340c54c4014aa949c8942307a" kindref="member">ConstIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1a022bf3d340c54c4014aa949c8942307a" kindref="member">ConstIterator</ref></type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="96" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa9a72f88e2cfb4bcbf98ef2f7ae5834a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIt</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::insert</definition>
        <argsstring>(Iterator pos, InputIt first, InputIt last)</argsstring>
        <name>insert</name>
        <qualifiedname>amrex::ArrayOfStructs::insert</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1ab633fb0409feac5e4f6630b0d307a116" kindref="member">Iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="99" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a62e4c34a0bea528c7e0a3e1c0023ea04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a5895b3a2414fe5808db523612e438ab8" kindref="member">ParticleVector::iterator</ref></type>
        <definition>ParticleVector::iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>amrex::ArrayOfStructs::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="101" column="40" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a075eae591eb5b0de619099aaa3e18119" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac32d9f644793a1c54fe9979e7307f7ba" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>amrex::ArrayOfStructs::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="102" column="46" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a36e94e3ffe5960cc40d35b5e9c23d072" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac32d9f644793a1c54fe9979e7307f7ba" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <qualifiedname>amrex::ArrayOfStructs::cbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="103" column="46" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a873f640763a9782db4c3b207c11e01ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a5895b3a2414fe5808db523612e438ab8" kindref="member">ParticleVector::iterator</ref></type>
        <definition>ParticleVector::iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>amrex::ArrayOfStructs::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="105" column="40" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa2a7d293afbee43a583574e79e025ef4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac32d9f644793a1c54fe9979e7307f7ba" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>amrex::ArrayOfStructs::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="106" column="46" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a87d91479ddcd7e9a311164a66c752a8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac32d9f644793a1c54fe9979e7307f7ba" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <qualifiedname>amrex::ArrayOfStructs::cend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="107" column="46" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="107" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>amrex::ArenaAllocatorBase&lt; T, ArenaWrapper &gt;</label>
        <link refid="structamrex_1_1ArenaAllocatorBase"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_ar</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>DefaultAllocator&lt; ParticleType &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::PODVector&lt; ParticleType, DefaultAllocator&lt; ParticleType &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>amrex::ArenaWrapper</label>
        <link refid="structamrex_1_1ArenaWrapper"/>
      </node>
      <node id="1">
        <label>amrex::ArrayOfStructs&lt; T_ParticleType, Allocator &gt;</label>
        <link refid="classamrex_1_1ArrayOfStructs"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="13" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="13" bodyend="113"/>
    <listofallmembers>
      <member refid="classamrex_1_1ArrayOfStructs_1aa2e4e0275afa1b02a7dea9f4635421eb" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a8873ffaca67ccf9ff26a64dd03db11aa" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a62e4c34a0bea528c7e0a3e1c0023ea04" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>begin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a075eae591eb5b0de619099aaa3e18119" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>begin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a36e94e3ffe5960cc40d35b5e9c23d072" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>cbegin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a87d91479ddcd7e9a311164a66c752a8e" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>cend</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a022bf3d340c54c4014aa949c8942307a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ConstIterator</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a1937a6e7fc01a7b5c355346f9f01fd8f" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a13804a97ff2e974bb0afa6b35aac90e6" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a0388bfe405bc23bd8d9e4ff8e24f8e81" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a91c4662f167aaf43fab670bad92e8ad2" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a793c4c91ccc7ea3f16bfd103676b7b54" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataShape</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a356f63835bfba5626b9e6cd884d895d0" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>empty</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a121a968277c299409b1b6e98fa2d8b08" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>empty</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a873f640763a9782db4c3b207c11e01ff" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>end</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa2a7d293afbee43a583574e79e025ef4" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>end</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ae74cdb62144ce25c901b6df72013dc89" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>erase</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad331838c0859743a9a968d2d321db717" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>getNumNeighbors</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa9a72f88e2cfb4bcbf98ef2f7ae5834a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>insert</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ab633fb0409feac5e4f6630b0d307a116" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>Iterator</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa4b53535c25e645281539b7b5b4f9194" prot="private" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>m_data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a3306e52c6281fde864a8d33a9b53d72c" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>m_num_neighbor_particles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a2b17bacea66d302e68ec631032d97300" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numNeighborParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a97dc58478a9add0babfd5503f5655876" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ab9d2ce3721f6d4039d09f4464683c5e7" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numRealParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a5a933c9ef33ad84f474f9c6b2b90b2a8" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numTotalParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a6429e70ce5dc010326861a4bb343aef3" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1adc18cb613214cb8f786a20672fc4f912" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a1e0e50dbc45c09a351a2a2d23fad747c" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a95f28f29c97db594e07c3135f47812af" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a4b5292eeb84fe912addcc353c568cbce" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa361f73ebc2bf0a48753c69a277f4075" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa1831ea3b91c1a77740583f99542ee26" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>pop_back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a58e47ec80be71f10f50fe234408ed886" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>push_back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a4bd47d382fa8b63c31eafb763d31194c" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac161821048b627db36b021dc2671ede0" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>resize</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a3b1f7c4d9324b6ce179d86299b1ba853" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>setNumNeighbors</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af332a589a51f1028800331fe10fc9985" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>size</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a566da28aaf6d6cb87b9dc2b2fbf1c889" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>SizeInReal</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1afa944ad759b866c71398b9d6e8e20cc8" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
