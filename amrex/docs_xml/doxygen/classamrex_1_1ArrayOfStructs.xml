<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1ArrayOfStructs" kind="class" language="C++" prot="public">
    <compoundname>amrex::ArrayOfStructs</compoundname>
    <includes refid="AMReX__ArrayOfStructs_8H" local="no">AMReX_ArrayOfStructs.H</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>NReal</declname>
        <defname>NReal</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NInt</declname>
        <defname>NInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1aa2b9c07eea8f0178a1973357cf04ea62" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; NReal, NInt &gt;</type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ParticleType =  Particle&lt;NReal, NInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="14" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1Particle_1a1741c5c21aaba8fd767c2f86e911ad26" kindref="member">ParticleType::RealType</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::RealType =  typename ParticleType::RealType</definition>
        <argsstring></argsstring>
        <name>RealType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" prot="public" static="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref>, Allocator&lt; <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &gt; &gt;</type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ParticleVector =  amrex::PODVector&lt;ParticleType, Allocator&lt;ParticleType&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">ParticleVector::iterator</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::Iterator =  typename ParticleVector::iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>using amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ConstIterator =  typename ParticleVector::const_iterator</definition>
        <argsstring></argsstring>
        <name>ConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1aed93f37a99ede3b5df705cce1e7ca92c" prot="public" static="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::SizeInReal</definition>
        <argsstring></argsstring>
        <name>SizeInReal</name>
        <initializer>= sizeof(<ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref>) / sizeof(<ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1a9ea585dd011f20723588e8161d0165a2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::m_num_neighbor_particles</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="111" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ArrayOfStructs_1abf026bb176af595118df03fd00e2bc13" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">ParticleVector</ref></type>
        <definition>ParticleVector amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="114" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1aa8125d6563f3d6b885d0fa95d5d4b0b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::ArrayOfStructs</definition>
        <argsstring>()</argsstring>
        <name>ArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1af3fbcf0e467a057ea1a9ea868b26c0f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>const ParticleVector&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator()</definition>
        <argsstring>() const </argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="27" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a81f3bcb36d422cd9639788892a72cf7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>ParticleVector&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="28" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a87ee54306a0761f4e5fb0e5535b79490" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="34" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a297f5c0102cad4ce842a9740ff118a47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numParticles</definition>
        <argsstring>() const </argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a24a1177abefa187e2fb53ba8d33eb03e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const </argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a9aa2139875630ced78817abbf59eecb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const </argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1af47b9febf28eadfb17e39b09f5b6a709" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const </argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ab6e880100a1eb14ff3e8947ed3ae3585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type>int</type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a65783d9bdd76147429b951340172a9aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="67" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a674443fc5325f5fa076be5bd212fb096" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="69" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac769243b8aa33e006f323a8c6245b30f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>const RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="71" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad9567338fa6475300215e4ec70dac80d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="72" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad329a9284d2509a72ac9f78730ad1457" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>const RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::dataPtr</definition>
        <argsstring>() const </argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="74" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a138bf451321239ddca61f471a3364b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" kindref="member">RealType</ref> *</type>
        <definition>RealType* amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="75" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1acb71d5b67385da0db9742a2c0b915cc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int,int&gt; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::dataShape</definition>
        <argsstring>() const </argsstring>
        <name>dataShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="77" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a92ed68fdf4560419b02707461df781d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="81" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a948130cfb396aec89aa8963f3d067b03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="82" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac814687e5fd72d77a18498ab1833fe33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="83" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a7bd7663b1c97d5daf55a9ad2d323ea6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>const ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::back</definition>
        <argsstring>() const </argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="85" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad36d2f8f9a2ad22b014bd31cdb9f4fed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="86" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a50b83ee0eea8599cec7219eee540d6f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>const ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator[]</definition>
        <argsstring>(int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="88" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a560039040383714fc329a465afa041c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" kindref="member">ParticleType</ref> &amp;</type>
        <definition>ParticleType&amp; amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="89" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a5dc0c88b0bd97c248ca177a5cce313ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::swap</definition>
        <argsstring>(ArrayOfStructs&lt; NReal, NInt &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref>&lt; NReal, NInt &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="91" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ac608a07a6864c8bfc21e33c7d74aee01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::resize</definition>
        <argsstring>(size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a63474a82cab53812bed4e70deba119d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" kindref="member">Iterator</ref></type>
        <definition>Iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::erase</definition>
        <argsstring>(ConstIterator first, ConstIterator second)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" kindref="member">ConstIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" kindref="member">ConstIterator</ref></type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="98" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1af03ace2eb869a046f8efdf546da14c7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIt</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::insert</definition>
        <argsstring>(Iterator pos, InputIt first, InputIt last)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" kindref="member">Iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1ad7d0aa7c4705b9bf580f66322d182d79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">ParticleVector::iterator</ref></type>
        <definition>ParticleVector::iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="103" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a67d16739ce123d7140fe67dcd0fdc963" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="104" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1acff37b9fae32fb4bce1ab145be9da84a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::cbegin</definition>
        <argsstring>() const </argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="105" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a0b633d8f82b827347151560f4441e7ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1ac6db97322538232bff8ba94dbecb0bcf" kindref="member">ParticleVector::iterator</ref></type>
        <definition>ParticleVector::iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="107" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1af858e5d6e31c764f134e94562854d4f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="108" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ArrayOfStructs_1a52041074d1a7933bf55ed127217e76b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PODVector_1a56a171f1a3aae0c9e557639027f8fbf5" kindref="member">ParticleVector::const_iterator</ref></type>
        <definition>ParticleVector::const_iterator amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;::cend</definition>
        <argsstring>() const </argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="109" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="672">
        <label>amrex::ArrayOfStructs&lt; NReal, NInt, Allocator &gt;</label>
        <link refid="classamrex_1_1ArrayOfStructs"/>
        <childnode refid="673" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="673">
        <label>amrex::PODVector&lt; ParticleType, Allocator&lt; ParticleType &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="674" relation="public-inheritance">
        </childnode>
        <childnode refid="675" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="677">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;::rm_t</label>
        <link refid="unionamrex_1_1Particle_1_1rm__t"/>
      </node>
      <node id="675">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1Particle"/>
        <childnode refid="676" relation="usage">
          <edgelabel>m_idata</edgelabel>
        </childnode>
        <childnode refid="677" relation="usage">
          <edgelabel>m_rdata</edgelabel>
        </childnode>
      </node>
      <node id="674">
        <label>Allocator&lt; ParticleType &gt;</label>
      </node>
      <node id="676">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;::im_t</label>
        <link refid="unionamrex_1_1Particle_1_1im__t"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" line="12" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H" bodystart="12" bodyend="115"/>
    <listofallmembers>
      <member refid="classamrex_1_1ArrayOfStructs_1aa8125d6563f3d6b885d0fa95d5d4b0b9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ArrayOfStructs</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a7bd7663b1c97d5daf55a9ad2d323ea6d" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad36d2f8f9a2ad22b014bd31cdb9f4fed" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad7d0aa7c4705b9bf580f66322d182d79" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>begin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a67d16739ce123d7140fe67dcd0fdc963" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>begin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1acff37b9fae32fb4bce1ab145be9da84a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>cbegin</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a52041074d1a7933bf55ed127217e76b9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>cend</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a7709dae637e7f685849f914eb85381d3" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ConstIterator</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac769243b8aa33e006f323a8c6245b30f" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad9567338fa6475300215e4ec70dac80d" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ad329a9284d2509a72ac9f78730ad1457" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a138bf451321239ddca61f471a3364b14" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1acb71d5b67385da0db9742a2c0b915cc0" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>dataShape</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a674443fc5325f5fa076be5bd212fb096" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>empty</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac814687e5fd72d77a18498ab1833fe33" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>empty</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a0b633d8f82b827347151560f4441e7ec" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>end</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af858e5d6e31c764f134e94562854d4f3" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>end</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a63474a82cab53812bed4e70deba119d9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>erase</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a65783d9bdd76147429b951340172a9aa" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>getNumNeighbors</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af03ace2eb869a046f8efdf546da14c7a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>insert</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac2741bc5f1b89ee198700f1cba670dd7" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>Iterator</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1abf026bb176af595118df03fd00e2bc13" prot="private" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>m_data</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a9ea585dd011f20723588e8161d0165a2" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>m_num_neighbor_particles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a9aa2139875630ced78817abbf59eecb4" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numNeighborParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a297f5c0102cad4ce842a9740ff118a47" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a24a1177abefa187e2fb53ba8d33eb03e" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numRealParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af47b9febf28eadfb17e39b09f5b6a709" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>numTotalParticles</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af3fbcf0e467a057ea1a9ea868b26c0f0" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a81f3bcb36d422cd9639788892a72cf7a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator()</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a50b83ee0eea8599cec7219eee540d6f4" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a560039040383714fc329a465afa041c9" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1abc588eb242c81ef9d492e7d9ec759b1a" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a948130cfb396aec89aa8963f3d067b03" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>pop_back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a92ed68fdf4560419b02707461df781d5" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>push_back</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aa1d5cf31ace27020a023285202c95d9e" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ac608a07a6864c8bfc21e33c7d74aee01" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>resize</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1ab6e880100a1eb14ff3e8947ed3ae3585" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>setNumNeighbors</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a87ee54306a0761f4e5fb0e5535b79490" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>size</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1aed93f37a99ede3b5df705cce1e7ca92c" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>SizeInReal</name></member>
      <member refid="classamrex_1_1ArrayOfStructs_1a5dc0c88b0bd97c248ca177a5cce313ee" prot="public" virt="non-virtual"><scope>amrex::ArrayOfStructs</scope><name>swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
