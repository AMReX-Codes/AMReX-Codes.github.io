<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1ManagedArenaAllocator" kind="class" language="C++" prot="public">
    <compoundname>amrex::ManagedArenaAllocator</compoundname>
    <basecompoundref refid="structamrex_1_1ArenaAllocatorTraits" prot="public" virt="non-virtual">amrex::ArenaAllocatorTraits</basecompoundref>
    <includes refid="AMReX__GpuAllocators_8H" local="no">AMReX_GpuAllocators.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1ManagedArenaAllocator_1a9833726cef563b59b1d494273c697be1" prot="public" static="no">
        <type>T</type>
        <definition>using amrex::ManagedArenaAllocator&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ManagedArenaAllocator_1a70abcf89cdc2c54a0b93f939a26fec14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1ManagedArenaAllocator_1a9833726cef563b59b1d494273c697be1" kindref="member">value_type</ref> *</type>
        <definition>value_type* amrex::ManagedArenaAllocator&lt; T &gt;::allocate</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>allocate</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" line="103" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ManagedArenaAllocator_1adb788f18c122780c2d29f125ed70d0aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ManagedArenaAllocator&lt; T &gt;::deallocate</definition>
        <argsstring>(value_type *ptr, std::size_t)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classamrex_1_1ManagedArenaAllocator_1a9833726cef563b59b1d494273c697be1" kindref="member">value_type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" line="110" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2574">
        <label>amrex::ManagedArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1ManagedArenaAllocator"/>
        <childnode refid="2575" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2575">
        <label>amrex::ArenaAllocatorTraits</label>
        <link refid="structamrex_1_1ArenaAllocatorTraits"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2576">
        <label>amrex::ManagedArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1ManagedArenaAllocator"/>
        <childnode refid="2577" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2577">
        <label>amrex::ArenaAllocatorTraits</label>
        <link refid="structamrex_1_1ArenaAllocatorTraits"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" line="98" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="96" bodyend="114"/>
    <listofallmembers>
      <member refid="classamrex_1_1ManagedArenaAllocator_1a70abcf89cdc2c54a0b93f939a26fec14" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>allocate</name></member>
      <member refid="classamrex_1_1ManagedArenaAllocator_1adb788f18c122780c2d29f125ed70d0aa" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>deallocate</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a087cedc0c534a729f06566c2787234c3" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>is_always_equal</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a877662d4bb47c6680edf92709420599b" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>propagate_on_container_copy_assignment</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a7c21ffe5ae786795e9792884b68c3c3d" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>propagate_on_container_move_assignment</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a9a6140da2b4714f332dd0f10d74e3ac0" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>propagate_on_container_swap</name></member>
      <member refid="classamrex_1_1ManagedArenaAllocator_1a9833726cef563b59b1d494273c697be1" prot="public" virt="non-virtual"><scope>amrex::ManagedArenaAllocator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
