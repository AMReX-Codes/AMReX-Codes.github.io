<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1Parser_1_1Data" kind="struct" language="C++" prot="private">
    <compoundname>amrex::Parser::Data</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1ac4c2abe9d502dbbdbebf5a60af138db5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::Parser::Data::m_expression</definition>
        <argsstring></argsstring>
        <name>m_expression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="99" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1abac6e2284d98331984ef3d8967877219" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref> *</type>
        <definition>struct amrex_parser* amrex::Parser::Data::m_parser</definition>
        <argsstring></argsstring>
        <name>m_parser</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="100" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1aaef798272fb28c2f79185f6be424a717" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Parser::Data::m_nvars</definition>
        <argsstring></argsstring>
        <name>m_nvars</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="101" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1ad41fcfcb360640fde45500a1580c522a" prot="public" static="no" mutable="yes">
        <type>char *</type>
        <definition>char* amrex::Parser::Data::m_host_executor</definition>
        <argsstring></argsstring>
        <name>m_host_executor</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="102" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1ad7b795cb104ac74095c7bbd71745e111" prot="public" static="no" mutable="yes">
        <type>char *</type>
        <definition>char* amrex::Parser::Data::m_device_executor</definition>
        <argsstring></argsstring>
        <name>m_device_executor</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="104" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1a863a707fe492216d36ff882e0fbee9e9" prot="public" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Parser::Data::m_max_stack_size</definition>
        <argsstring></argsstring>
        <name>m_max_stack_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="106" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1a952263602baabb188b5f915266b95dc0" prot="public" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Parser::Data::m_exe_size</definition>
        <argsstring></argsstring>
        <name>m_exe_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="107" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1aca1f9ad0544614004789f38c2ee3e659" prot="public" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char const  * &gt;</type>
        <definition>Vector&lt;char const*&gt; amrex::Parser::Data::m_locals</definition>
        <argsstring></argsstring>
        <name>m_locals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="108" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1ae5a515e4a0f7e957166b9740890d725f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::Data</definition>
        <argsstring>()=default</argsstring>
        <name>Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="109" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a05dbc0e8814cc41bd9f296b951ec8cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::~Data</definition>
        <argsstring>()</argsstring>
        <name>~Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="110" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1ac88392e0c4583be81220ff8349b20efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::Data</definition>
        <argsstring>(Data const &amp;)=delete</argsstring>
        <name>Data</name>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="111" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a94d23586af302f978d96c232930c18a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::Data</definition>
        <argsstring>(Data &amp;&amp;)=delete</argsstring>
        <name>Data</name>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="112" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1aa66c8c8b35c991bb5487665b509eecdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;</type>
        <definition>Data&amp; amrex::Parser::Data::operator=</definition>
        <argsstring>(Data const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="113" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a764ae667f297643c6647c23c4b66b08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;</type>
        <definition>Data&amp; amrex::Parser::Data::operator=</definition>
        <argsstring>(Data &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="114" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>T</label>
      </node>
      <node id="7">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>amrex::parser_node</label>
        <link refid="structamrex_1_1parser__node"/>
        <childnode refid="3" relation="usage">
          <edgelabel>l</edgelabel>
          <edgelabel>padding2</edgelabel>
          <edgelabel>r</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::Parser::Data</label>
        <link refid="structamrex_1_1Parser_1_1Data"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_parser</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_expression</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_locals</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::amrex_parser</label>
        <link refid="structamrex_1_1amrex__parser"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ast</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; char const * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="98" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="98" bodyend="115"/>
    <listofallmembers>
      <member refid="structamrex_1_1Parser_1_1Data_1ae5a515e4a0f7e957166b9740890d725f" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>Data</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ac88392e0c4583be81220ff8349b20efe" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>Data</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a94d23586af302f978d96c232930c18a6" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>Data</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ad7b795cb104ac74095c7bbd71745e111" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_device_executor</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a952263602baabb188b5f915266b95dc0" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_exe_size</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ac4c2abe9d502dbbdbebf5a60af138db5" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_expression</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ad41fcfcb360640fde45500a1580c522a" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_host_executor</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1aca1f9ad0544614004789f38c2ee3e659" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_locals</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a863a707fe492216d36ff882e0fbee9e9" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_max_stack_size</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1aaef798272fb28c2f79185f6be424a717" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_nvars</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1abac6e2284d98331984ef3d8967877219" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_parser</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1aa66c8c8b35c991bb5487665b509eecdc" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a764ae667f297643c6647c23c4b66b08a" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a05dbc0e8814cc41bd9f296b951ec8cb3" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>~Data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
