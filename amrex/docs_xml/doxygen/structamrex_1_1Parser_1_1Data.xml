<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1Parser_1_1Data" kind="struct" language="C++" prot="private">
    <compoundname>amrex::Parser::Data</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1ac4c2abe9d502dbbdbebf5a60af138db5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::Parser::Data::m_expression</definition>
        <argsstring></argsstring>
        <name>m_expression</name>
        <qualifiedname>amrex::Parser::Data::m_expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="116" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1abac6e2284d98331984ef3d8967877219" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref> *</type>
        <definition>struct amrex_parser* amrex::Parser::Data::m_parser</definition>
        <argsstring></argsstring>
        <name>m_parser</name>
        <qualifiedname>amrex::Parser::Data::m_parser</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="117" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1aaef798272fb28c2f79185f6be424a717" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Parser::Data::m_nvars</definition>
        <argsstring></argsstring>
        <name>m_nvars</name>
        <qualifiedname>amrex::Parser::Data::m_nvars</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="118" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1a87cc9ea24a8d3396671deb0139f50b12" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::Parser::Data::m_use_arena</definition>
        <argsstring></argsstring>
        <name>m_use_arena</name>
        <qualifiedname>amrex::Parser::Data::m_use_arena</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="119" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1ad41fcfcb360640fde45500a1580c522a" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::Parser::Data::m_host_executor</definition>
        <argsstring></argsstring>
        <name>m_host_executor</name>
        <qualifiedname>amrex::Parser::Data::m_host_executor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="120" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1ad7b795cb104ac74095c7bbd71745e111" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::Parser::Data::m_device_executor</definition>
        <argsstring></argsstring>
        <name>m_device_executor</name>
        <qualifiedname>amrex::Parser::Data::m_device_executor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="122" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1a863a707fe492216d36ff882e0fbee9e9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Parser::Data::m_max_stack_size</definition>
        <argsstring></argsstring>
        <name>m_max_stack_size</name>
        <qualifiedname>amrex::Parser::Data::m_max_stack_size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="124" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1a952263602baabb188b5f915266b95dc0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Parser::Data::m_exe_size</definition>
        <argsstring></argsstring>
        <name>m_exe_size</name>
        <qualifiedname>amrex::Parser::Data::m_exe_size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="125" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1Parser_1_1Data_1aca1f9ad0544614004789f38c2ee3e659" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char const  * &gt;</type>
        <definition>Vector&lt;char const*&gt; amrex::Parser::Data::m_locals</definition>
        <argsstring></argsstring>
        <name>m_locals</name>
        <qualifiedname>amrex::Parser::Data::m_locals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="126" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1ae5a515e4a0f7e957166b9740890d725f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::Data</definition>
        <argsstring>()=default</argsstring>
        <name>Data</name>
        <qualifiedname>amrex::Parser::Data::Data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="127" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a05dbc0e8814cc41bd9f296b951ec8cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::~Data</definition>
        <argsstring>()</argsstring>
        <name>~Data</name>
        <qualifiedname>amrex::Parser::Data::~Data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="128" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp" bodystart="44" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1ac88392e0c4583be81220ff8349b20efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::Data</definition>
        <argsstring>(Data const &amp;)=delete</argsstring>
        <name>Data</name>
        <qualifiedname>amrex::Parser::Data::Data</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="129" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a94d23586af302f978d96c232930c18a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Parser::Data::Data</definition>
        <argsstring>(Data &amp;&amp;)=delete</argsstring>
        <name>Data</name>
        <qualifiedname>amrex::Parser::Data::Data</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="130" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a961a54291b84f6c0c04383d9cc7887ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;</type>
        <definition>Data &amp; amrex::Parser::Data::operator=</definition>
        <argsstring>(Data const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::Parser::Data::operator=</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="131" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Parser_1_1Data_1a3e85befdeaf04955e548911d86e297c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;</type>
        <definition>Data &amp; amrex::Parser::Data::operator=</definition>
        <argsstring>(Data &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::Parser::Data::operator=</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Parser_1_1Data" kindref="compound">Data</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="132" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>T</label>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; char const * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::Parser::Data</label>
        <link refid="structamrex_1_1Parser_1_1Data"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_expression</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_parser</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_locals</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::amrex_parser</label>
        <link refid="structamrex_1_1amrex__parser"/>
        <childnode refid="5" relation="usage">
          <edgelabel>ast</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::parser_node</label>
        <link refid="structamrex_1_1parser__node"/>
        <childnode refid="5" relation="usage">
          <edgelabel>l</edgelabel>
          <edgelabel>padding2</edgelabel>
          <edgelabel>r</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" line="115" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H" bodystart="115" bodyend="133"/>
    <listofallmembers>
      <member refid="structamrex_1_1Parser_1_1Data_1ae5a515e4a0f7e957166b9740890d725f" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>Data</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ac88392e0c4583be81220ff8349b20efe" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>Data</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a94d23586af302f978d96c232930c18a6" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>Data</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ad7b795cb104ac74095c7bbd71745e111" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_device_executor</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a952263602baabb188b5f915266b95dc0" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_exe_size</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ac4c2abe9d502dbbdbebf5a60af138db5" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_expression</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1ad41fcfcb360640fde45500a1580c522a" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_host_executor</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1aca1f9ad0544614004789f38c2ee3e659" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_locals</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a863a707fe492216d36ff882e0fbee9e9" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_max_stack_size</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1aaef798272fb28c2f79185f6be424a717" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_nvars</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1abac6e2284d98331984ef3d8967877219" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_parser</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a87cc9ea24a8d3396671deb0139f50b12" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>m_use_arena</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a961a54291b84f6c0c04383d9cc7887ba" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a3e85befdeaf04955e548911d86e297c3" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Parser_1_1Data_1a05dbc0e8814cc41bd9f296b951ec8cb3" prot="public" virt="non-virtual"><scope>amrex::Parser::Data</scope><name>~Data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
